; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\gui_warn.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\gui_warn.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Core\GUI_Warn.c]
                          THUMB

                          AREA ||i.GUI_Warn||, CODE, READONLY, ALIGN=1

                  GUI_Warn PROC
;;;63     */
;;;64     void GUI_Warn(const char *s) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;65       GUI_X_Warn(s);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       GUI_X_Warn
;;;66     }
00000a  bd10              POP      {r4,pc}
;;;67     
                          ENDP


                          AREA ||i.GUI_Warn1||, CODE, READONLY, ALIGN=1

                  GUI_Warn1 PROC
;;;71     */
;;;72     void GUI_Warn1(const char *s, int p0) {
000000  b530              PUSH     {r4,r5,lr}
000002  b091              SUB      sp,sp,#0x44
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;73       char ac[MAXLEN + 10];
;;;74       char* sOut = ac;
000008  a802              ADD      r0,sp,#8
00000a  9001              STR      r0,[sp,#4]
;;;75       _CopyString(ac, s, MAXLEN);
00000c  2232              MOVS     r2,#0x32
00000e  4621              MOV      r1,r4
000010  f7fffffe          BL       _CopyString
;;;76       sOut += strlen(sOut);
000014  9801              LDR      r0,[sp,#4]
000016  f7fffffe          BL       strlen
00001a  9901              LDR      r1,[sp,#4]
00001c  4408              ADD      r0,r0,r1
00001e  9001              STR      r0,[sp,#4]
;;;77       GUI__AddSpaceHex(p0, 8, &sOut);
000020  aa01              ADD      r2,sp,#4
000022  2108              MOVS     r1,#8
000024  4628              MOV      r0,r5
000026  f7fffffe          BL       GUI__AddSpaceHex
;;;78       GUI_Warn(ac);
00002a  a802              ADD      r0,sp,#8
00002c  f7fffffe          BL       GUI_Warn
;;;79     }
000030  b011              ADD      sp,sp,#0x44
000032  bd30              POP      {r4,r5,pc}
;;;80     
                          ENDP


                          AREA ||i.GUI_Warn2||, CODE, READONLY, ALIGN=1

                  GUI_Warn2 PROC
;;;84     */
;;;85     void GUI_Warn2(const char *s, int p0, int p1) {
000000  b570              PUSH     {r4-r6,lr}
000002  b094              SUB      sp,sp,#0x50
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
;;;86       char ac[MAXLEN + 20];
;;;87       char* sOut = ac;
00000a  a802              ADD      r0,sp,#8
00000c  9001              STR      r0,[sp,#4]
;;;88       _CopyString(ac, s, MAXLEN);
00000e  2232              MOVS     r2,#0x32
000010  4621              MOV      r1,r4
000012  f7fffffe          BL       _CopyString
;;;89       sOut += strlen(sOut);
000016  9801              LDR      r0,[sp,#4]
000018  f7fffffe          BL       strlen
00001c  9901              LDR      r1,[sp,#4]
00001e  4408              ADD      r0,r0,r1
000020  9001              STR      r0,[sp,#4]
;;;90       GUI__AddSpaceHex(p0, 8, &sOut);
000022  aa01              ADD      r2,sp,#4
000024  2108              MOVS     r1,#8
000026  4628              MOV      r0,r5
000028  f7fffffe          BL       GUI__AddSpaceHex
;;;91       GUI__AddSpaceHex(p1, 8, &sOut);
00002c  aa01              ADD      r2,sp,#4
00002e  2108              MOVS     r1,#8
000030  4630              MOV      r0,r6
000032  f7fffffe          BL       GUI__AddSpaceHex
;;;92       GUI_Warn(ac);
000036  a802              ADD      r0,sp,#8
000038  f7fffffe          BL       GUI_Warn
;;;93     }
00003c  b014              ADD      sp,sp,#0x50
00003e  bd70              POP      {r4-r6,pc}
;;;94     
                          ENDP


                          AREA ||i.GUI_Warn3||, CODE, READONLY, ALIGN=1

                  GUI_Warn3 PROC
;;;98     */
;;;99     void GUI_Warn3(const char *s, int p0, int p1, int p2) {
000000  b5f0              PUSH     {r4-r7,lr}
000002  b095              SUB      sp,sp,#0x54
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
;;;100      char ac[MAXLEN + 30];
;;;101      char* sOut = ac;
00000c  a801              ADD      r0,sp,#4
00000e  9000              STR      r0,[sp,#0]
;;;102      _CopyString(ac, s, MAXLEN);
000010  2232              MOVS     r2,#0x32
000012  4621              MOV      r1,r4
000014  f7fffffe          BL       _CopyString
;;;103      sOut += strlen(sOut);
000018  9800              LDR      r0,[sp,#0]
00001a  f7fffffe          BL       strlen
00001e  9900              LDR      r1,[sp,#0]
000020  4408              ADD      r0,r0,r1
000022  9000              STR      r0,[sp,#0]
;;;104      GUI__AddSpaceHex(p0, 8, &sOut);
000024  466a              MOV      r2,sp
000026  2108              MOVS     r1,#8
000028  4628              MOV      r0,r5
00002a  f7fffffe          BL       GUI__AddSpaceHex
;;;105      GUI__AddSpaceHex(p1, 8, &sOut);
00002e  466a              MOV      r2,sp
000030  2108              MOVS     r1,#8
000032  4630              MOV      r0,r6
000034  f7fffffe          BL       GUI__AddSpaceHex
;;;106      GUI__AddSpaceHex(p2, 8, &sOut);
000038  466a              MOV      r2,sp
00003a  2108              MOVS     r1,#8
00003c  4638              MOV      r0,r7
00003e  f7fffffe          BL       GUI__AddSpaceHex
;;;107      GUI_Warn(ac);
000042  a801              ADD      r0,sp,#4
000044  f7fffffe          BL       GUI_Warn
;;;108    }
000048  b015              ADD      sp,sp,#0x54
00004a  bdf0              POP      {r4-r7,pc}
;;;109    
                          ENDP


                          AREA ||i.GUI_Warn4||, CODE, READONLY, ALIGN=1

                  GUI_Warn4 PROC
;;;113    */
;;;114    void GUI_Warn4(const char *s, int p0, int p1, int p2, int p3) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  b098              SUB      sp,sp,#0x60
000006  4604              MOV      r4,r0
000008  460d              MOV      r5,r1
00000a  4616              MOV      r6,r2
00000c  461f              MOV      r7,r3
00000e  f8dd8078          LDR      r8,[sp,#0x78]
;;;115      char ac[MAXLEN + 40];
;;;116      char* sOut = ac;
000012  a801              ADD      r0,sp,#4
000014  9000              STR      r0,[sp,#0]
;;;117      _CopyString(ac, s, MAXLEN);
000016  2232              MOVS     r2,#0x32
000018  4621              MOV      r1,r4
00001a  f7fffffe          BL       _CopyString
;;;118      sOut += strlen(sOut);
00001e  9800              LDR      r0,[sp,#0]
000020  f7fffffe          BL       strlen
000024  9900              LDR      r1,[sp,#0]
000026  4408              ADD      r0,r0,r1
000028  9000              STR      r0,[sp,#0]
;;;119      GUI__AddSpaceHex(p0, 8, &sOut);
00002a  466a              MOV      r2,sp
00002c  2108              MOVS     r1,#8
00002e  4628              MOV      r0,r5
000030  f7fffffe          BL       GUI__AddSpaceHex
;;;120      GUI__AddSpaceHex(p1, 8, &sOut);
000034  466a              MOV      r2,sp
000036  2108              MOVS     r1,#8
000038  4630              MOV      r0,r6
00003a  f7fffffe          BL       GUI__AddSpaceHex
;;;121      GUI__AddSpaceHex(p2, 8, &sOut);
00003e  466a              MOV      r2,sp
000040  2108              MOVS     r1,#8
000042  4638              MOV      r0,r7
000044  f7fffffe          BL       GUI__AddSpaceHex
;;;122      GUI__AddSpaceHex(p3, 8, &sOut);
000048  466a              MOV      r2,sp
00004a  2108              MOVS     r1,#8
00004c  4640              MOV      r0,r8
00004e  f7fffffe          BL       GUI__AddSpaceHex
;;;123      GUI_Warn(ac);
000052  a801              ADD      r0,sp,#4
000054  f7fffffe          BL       GUI_Warn
;;;124    }
000058  b018              ADD      sp,sp,#0x60
00005a  e8bd81f0          POP      {r4-r8,pc}
;;;125    
                          ENDP


                          AREA ||i._CopyString||, CODE, READONLY, ALIGN=1

                  _CopyString PROC
;;;43     */
;;;44     static void _CopyString(char*d, const char*s, int MaxLen) {
000000  e004              B        |L6.12|
                  |L6.2|
;;;45       while ((MaxLen > 0) && *s) {
;;;46         *d++ = *s++;
000002  f8113b01          LDRB     r3,[r1],#1
000006  f8003b01          STRB     r3,[r0],#1
;;;47         MaxLen--;
00000a  1e52              SUBS     r2,r2,#1
                  |L6.12|
00000c  2a00              CMP      r2,#0                 ;45
00000e  dd02              BLE      |L6.22|
000010  780b              LDRB     r3,[r1,#0]            ;45
000012  2b00              CMP      r3,#0                 ;45
000014  d1f5              BNE      |L6.2|
                  |L6.22|
;;;48       }
;;;49       *d = 0;
000016  2300              MOVS     r3,#0
000018  7003              STRB     r3,[r0,#0]
;;;50     }
00001a  4770              BX       lr
;;;51     
                          ENDP

