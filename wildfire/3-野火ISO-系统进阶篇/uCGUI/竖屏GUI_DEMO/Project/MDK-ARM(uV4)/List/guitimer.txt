; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\guitimer.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\guitimer.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Core\GUITimer.c]
                          THUMB

                          AREA ||i.GUI_TIMER_Create||, CODE, READONLY, ALIGN=2

                  GUI_TIMER_Create PROC
;;;177    */
;;;178    GUI_TIMER_HANDLE GUI_TIMER_Create(GUI_TIMER_CALLBACK* cb, int Time, U32 Context, int Flags) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
;;;179      GUI_TIMER_HANDLE hObj;
;;;180      GUI_TIMER_Obj* pObj;
;;;181      GUI_LOCK();
00000c  f7fffffe          BL       GUI_Lock
;;;182      GUI_USE_PARA(Flags);
000010  bf00              NOP      
;;;183      GUI_USE_PARA(Time);
000012  bf00              NOP      
;;;184      GUI_pfTimerExec = GUI_TIMER_Exec;
000014  480b              LDR      r0,|L1.68|
000016  490c              LDR      r1,|L1.72|
000018  6008              STR      r0,[r1,#0]  ; GUI_pfTimerExec
;;;185    	{
;;;186        /* Alloc memory for obj */
;;;187        hObj = GUI_ALLOC_AllocZero(sizeof(GUI_TIMER_Obj));
00001a  2018              MOVS     r0,#0x18
00001c  f7fffffe          BL       GUI_ALLOC_AllocZero
000020  4681              MOV      r9,r0
;;;188        pObj = GUI_TIMER_H2P(hObj);
000022  4648              MOV      r0,r9
000024  f7fffffe          BL       GUI_ALLOC_h2p
000028  4680              MOV      r8,r0
;;;189        /* init member variables */
;;;190        pObj->cb = cb;
00002a  f8c84000          STR      r4,[r8,#0]
;;;191    		pObj->Context = Context;
00002e  f8c8600c          STR      r6,[r8,#0xc]
;;;192        /* Link it */
;;;193    		_Link(hObj);
000032  4648              MOV      r0,r9
000034  f7fffffe          BL       _Link
;;;194    	} GUI_UNLOCK();
000038  f7fffffe          BL       GUI_Unlock
;;;195      return hObj;
00003c  4648              MOV      r0,r9
;;;196    }
00003e  e8bd87f0          POP      {r4-r10,pc}
;;;197    
                          ENDP

000042  0000              DCW      0x0000
                  |L1.68|
                          DCD      GUI_TIMER_Exec
                  |L1.72|
                          DCD      GUI_pfTimerExec

                          AREA ||i.GUI_TIMER_Delete||, CODE, READONLY, ALIGN=1

                  GUI_TIMER_Delete PROC
;;;201    */
;;;202    void GUI_TIMER_Delete(GUI_TIMER_HANDLE hObj) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;203    /* Unlink Timer */
;;;204      GUI_LOCK();
000004  f7fffffe          BL       GUI_Lock
;;;205      _Unlink(hObj);
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       _Unlink
;;;206      GUI_ALLOC_Free(hObj);
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       GUI_ALLOC_Free
;;;207      GUI_UNLOCK();
000014  f7fffffe          BL       GUI_Unlock
;;;208    }
000018  bd10              POP      {r4,pc}
;;;209    
                          ENDP


                          AREA ||i.GUI_TIMER_Exec||, CODE, READONLY, ALIGN=2

                  GUI_TIMER_Exec PROC
;;;148    */
;;;149    int GUI_TIMER_Exec(void) {
000000  b57c              PUSH     {r2-r6,lr}
;;;150      int r = 0;
000002  2600              MOVS     r6,#0
;;;151      GUI_TIMER_TIME t = GUI_GetTime();
000004  f7fffffe          BL       GUI_GetTime
000008  4605              MOV      r5,r0
;;;152      GUI_LOCK(); {
00000a  f7fffffe          BL       GUI_Lock
;;;153        while (hFirstTimer) {
00000e  e01b              B        |L3.72|
                  |L3.16|
;;;154         	GUI_TIMER_Obj* pTimer = GUI_TIMER_H2P(hFirstTimer);
000010  4812              LDR      r0,|L3.92|
000012  f9b00000          LDRSH    r0,[r0,#0]  ; hFirstTimer
000016  f7fffffe          BL       GUI_ALLOC_h2p
00001a  4604              MOV      r4,r0
;;;155          if ((pTimer->t0-t) <=0) {
00001c  6920              LDR      r0,[r4,#0x10]
00001e  1b40              SUBS     r0,r0,r5
000020  2800              CMP      r0,#0
000022  dc0f              BGT      |L3.68|
;;;156            GUI_TIMER_MESSAGE tm;
;;;157            tm.Time = t;
000024  9500              STR      r5,[sp,#0]
;;;158    				tm.Context = pTimer->Context;
000026  68e0              LDR      r0,[r4,#0xc]
000028  9001              STR      r0,[sp,#4]
;;;159            _hActiveTimer = hFirstTimer;
00002a  480c              LDR      r0,|L3.92|
00002c  f9b00000          LDRSH    r0,[r0,#0]  ; hFirstTimer
000030  490b              LDR      r1,|L3.96|
000032  8008              STRH     r0,[r1,#0]
;;;160            hFirstTimer = pTimer->hNext;
000034  88a0              LDRH     r0,[r4,#4]
000036  4909              LDR      r1,|L3.92|
000038  8008              STRH     r0,[r1,#0]
;;;161            pTimer->cb(&tm);
00003a  4668              MOV      r0,sp
00003c  6821              LDR      r1,[r4,#0]
00003e  4788              BLX      r1
;;;162            r = 1;
000040  2601              MOVS     r6,#1
;;;163    			} else
000042  e000              B        |L3.70|
                  |L3.68|
;;;164    			  break;
000044  e004              B        |L3.80|
                  |L3.70|
;;;165        }
000046  bf00              NOP      
                  |L3.72|
000048  4804              LDR      r0,|L3.92|
00004a  8800              LDRH     r0,[r0,#0]            ;153  ; hFirstTimer
00004c  2800              CMP      r0,#0                 ;153
00004e  d1df              BNE      |L3.16|
                  |L3.80|
000050  bf00              NOP                            ;164
;;;166        /*
;;;167    		GUI_TIMER_Obj* pObj = GUI_TIMER_H2P(hObj);
;;;168        pObj->t0 = Time;
;;;169        */
;;;170      } GUI_UNLOCK(); 
000052  f7fffffe          BL       GUI_Unlock
;;;171      return r;
000056  4630              MOV      r0,r6
;;;172    }
000058  bd7c              POP      {r2-r6,pc}
;;;173    
                          ENDP

00005a  0000              DCW      0x0000
                  |L3.92|
                          DCD      hFirstTimer
                  |L3.96|
                          DCD      _hActiveTimer

                          AREA ||i.GUI_TIMER_Restart||, CODE, READONLY, ALIGN=2

                  GUI_TIMER_Restart PROC
;;;248    */
;;;249    void GUI_TIMER_Restart(GUI_TIMER_HANDLE hObj) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
;;;250      GUI_TIMER_Obj* pObj;
;;;251      GUI_LOCK();
000004  f7fffffe          BL       GUI_Lock
;;;252      {
;;;253        if (hObj == 0) {
000008  b915              CBNZ     r5,|L4.16|
;;;254          hObj = _hActiveTimer;
00000a  480a              LDR      r0,|L4.52|
00000c  f9b05000          LDRSH    r5,[r0,#0]  ; _hActiveTimer
                  |L4.16|
;;;255        }
;;;256       	pObj = GUI_TIMER_H2P(hObj);
000010  4628              MOV      r0,r5
000012  f7fffffe          BL       GUI_ALLOC_h2p
000016  4604              MOV      r4,r0
;;;257        pObj->t0 = GUI_GetTime() +pObj->Period;
000018  f7fffffe          BL       GUI_GetTime
00001c  6961              LDR      r1,[r4,#0x14]
00001e  4408              ADD      r0,r0,r1
000020  6120              STR      r0,[r4,#0x10]
;;;258    		_Unlink(hObj);
000022  4628              MOV      r0,r5
000024  f7fffffe          BL       _Unlink
;;;259    		_Link(hObj);
000028  4628              MOV      r0,r5
00002a  f7fffffe          BL       _Link
;;;260      } GUI_UNLOCK(); 
00002e  f7fffffe          BL       GUI_Unlock
;;;261    }
000032  bd70              POP      {r4-r6,pc}
;;;262    
                          ENDP

                  |L4.52|
                          DCD      _hActiveTimer

                          AREA ||i.GUI_TIMER_SetDelay||, CODE, READONLY, ALIGN=1

                  GUI_TIMER_SetDelay PROC
;;;235    */
;;;236    void GUI_TIMER_SetDelay(GUI_TIMER_HANDLE hObj, GUI_TIMER_TIME Delay) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;237      GUI_LOCK(); {
000006  f7fffffe          BL       GUI_Lock
;;;238       	GUI_TIMER_Obj* pObj = GUI_TIMER_H2P(hObj);
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       GUI_ALLOC_h2p
000010  4606              MOV      r6,r0
;;;239        pObj->t0 = Delay;
000012  6134              STR      r4,[r6,#0x10]
;;;240    		_Unlink(hObj);
000014  4628              MOV      r0,r5
000016  f7fffffe          BL       _Unlink
;;;241    		_Link(hObj);
00001a  4628              MOV      r0,r5
00001c  f7fffffe          BL       _Link
;;;242      } GUI_UNLOCK(); 
000020  f7fffffe          BL       GUI_Unlock
;;;243    }
000024  bd70              POP      {r4-r6,pc}
;;;244    
                          ENDP


                          AREA ||i.GUI_TIMER_SetPeriod||, CODE, READONLY, ALIGN=1

                  GUI_TIMER_SetPeriod PROC
;;;213    */
;;;214    void GUI_TIMER_SetPeriod(GUI_TIMER_HANDLE hObj, GUI_TIMER_TIME Period) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;215      GUI_LOCK(); {
000006  f7fffffe          BL       GUI_Lock
;;;216        GUI_TIMER_Obj* pObj = GUI_TIMER_H2P(hObj);
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       GUI_ALLOC_h2p
000010  4606              MOV      r6,r0
;;;217        pObj->Period = Period;
000012  6174              STR      r4,[r6,#0x14]
;;;218      } GUI_UNLOCK(); 
000014  f7fffffe          BL       GUI_Unlock
;;;219    }
000018  bd70              POP      {r4-r6,pc}
;;;220    
                          ENDP


                          AREA ||i.GUI_TIMER_SetTime||, CODE, READONLY, ALIGN=1

                  GUI_TIMER_SetTime PROC
;;;224    */
;;;225    void GUI_TIMER_SetTime(GUI_TIMER_HANDLE hObj, GUI_TIMER_TIME Time) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;226      GUI_LOCK(); {
000006  f7fffffe          BL       GUI_Lock
;;;227       	GUI_TIMER_Obj* pObj = GUI_TIMER_H2P(hObj);
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       GUI_ALLOC_h2p
000010  4606              MOV      r6,r0
;;;228        pObj->t0 = Time;
000012  6134              STR      r4,[r6,#0x10]
;;;229      } GUI_UNLOCK(); 
000014  f7fffffe          BL       GUI_Unlock
;;;230    }
000018  bd70              POP      {r4-r6,pc}
;;;231    
                          ENDP


                          AREA ||i._Link||, CODE, READONLY, ALIGN=2

                  _Link PROC
;;;99     */
;;;100    static void _Link(GUI_TIMER_HANDLE hNew) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4605              MOV      r5,r0
;;;101      GUI_TIMER_Obj*   pNew        = GUI_TIMER_H2P(hNew);
000006  4628              MOV      r0,r5
000008  f7fffffe          BL       GUI_ALLOC_h2p
00000c  4604              MOV      r4,r0
;;;102      GUI_TIMER_Obj*   pTimer;
;;;103      GUI_TIMER_Obj*   pNext;
;;;104      GUI_TIMER_HANDLE hNext;
;;;105      if (hFirstTimer ==0) { /* List is empty, make it the only element */
00000e  481d              LDR      r0,|L8.132|
000010  8800              LDRH     r0,[r0,#0]  ; hFirstTimer
000012  b920              CBNZ     r0,|L8.30|
;;;106        hFirstTimer = hNew;
000014  481b              LDR      r0,|L8.132|
000016  8005              STRH     r5,[r0,#0]
;;;107    	  pNew->hNext = 0;
000018  2000              MOVS     r0,#0
00001a  80a0              STRH     r0,[r4,#4]
00001c  e030              B        |L8.128|
                  |L8.30|
;;;108      } else {
;;;109        GUI_TIMER_Obj* pFirstTimer      = GUI_TIMER_H2P(hFirstTimer);
00001e  4819              LDR      r0,|L8.132|
000020  f9b00000          LDRSH    r0,[r0,#0]  ; hFirstTimer
000024  f7fffffe          BL       GUI_ALLOC_h2p
000028  4681              MOV      r9,r0
;;;110    /* Check if we have to make it the first element */
;;;111        if ((pNew->t0 - pFirstTimer->t0) <=0) {
00002a  6920              LDR      r0,[r4,#0x10]
00002c  f8d91010          LDR      r1,[r9,#0x10]
000030  1a40              SUBS     r0,r0,r1
000032  2800              CMP      r0,#0
000034  dc07              BGT      |L8.70|
;;;112          pNew->hNext = hFirstTimer;
000036  4813              LDR      r0,|L8.132|
000038  f9b00000          LDRSH    r0,[r0,#0]  ; hFirstTimer
00003c  80a0              STRH     r0,[r4,#4]
;;;113          hFirstTimer = hNew;
00003e  4811              LDR      r0,|L8.132|
000040  8005              STRH     r5,[r0,#0]
                  |L8.66|
;;;114    			return;
;;;115    		} else {
;;;116          GUI_TIMER_HANDLE hTimer = hFirstTimer;
;;;117    /* Put it into the list */
;;;118          do {
;;;119            pTimer       = GUI_TIMER_H2P(hTimer);
;;;120            hNext        = pTimer->hNext;
;;;121            if (hNext ==0)
;;;122    					goto Append;
;;;123            pNext      = GUI_TIMER_H2P(hNext);
;;;124    				if ((pNew->t0 - pNext->t0) <=0) {
;;;125              pNew->hNext  = hNext;
;;;126              pTimer->hNext= hNew;
;;;127              return;
;;;128    				}
;;;129    			} while(1);
;;;130    /* Put it at the end of the list */
;;;131    Append:
;;;132          pNew->hNext  = hNext;
;;;133          pTimer->hNext= hNew;
;;;134          return;
;;;135    		}
;;;136      }
;;;137    }
000042  e8bd87f0          POP      {r4-r10,pc}
                  |L8.70|
000046  480f              LDR      r0,|L8.132|
000048  f9b0a000          LDRSH    r10,[r0,#0]           ;116  ; hFirstTimer
00004c  bf00              NOP                            ;118
                  |L8.78|
00004e  4650              MOV      r0,r10                ;119
000050  f7fffffe          BL       GUI_ALLOC_h2p
000054  4606              MOV      r6,r0                 ;119
000056  f9b67004          LDRSH    r7,[r6,#4]            ;120
00005a  b907              CBNZ     r7,|L8.94|
00005c  e00d              B        |L8.122|
                  |L8.94|
00005e  4638              MOV      r0,r7                 ;123
000060  f7fffffe          BL       GUI_ALLOC_h2p
000064  4680              MOV      r8,r0                 ;123
000066  6921              LDR      r1,[r4,#0x10]         ;124
000068  f8d80010          LDR      r0,[r8,#0x10]         ;124
00006c  1a08              SUBS     r0,r1,r0              ;124
00006e  2800              CMP      r0,#0                 ;124
000070  dc02              BGT      |L8.120|
000072  80a7              STRH     r7,[r4,#4]            ;125
000074  80b5              STRH     r5,[r6,#4]            ;126
000076  e7e4              B        |L8.66|
                  |L8.120|
000078  e7e9              B        |L8.78|
                  |L8.122|
00007a  80a7              STRH     r7,[r4,#4]            ;132
00007c  80b5              STRH     r5,[r6,#4]            ;133
00007e  e7e0              B        |L8.66|
                  |L8.128|
000080  bf00              NOP      
000082  e7de              B        |L8.66|
;;;138    
                          ENDP

                  |L8.132|
                          DCD      hFirstTimer

                          AREA ||i._Unlink||, CODE, READONLY, ALIGN=2

                  _Unlink PROC
;;;68     */
;;;69     static void _Unlink(GUI_TIMER_HANDLE hTimer) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4605              MOV      r5,r0
;;;70       GUI_TIMER_Obj* pTimer = GUI_TIMER_H2P(hTimer);
000006  4628              MOV      r0,r5
000008  f7fffffe          BL       GUI_ALLOC_h2p
00000c  4607              MOV      r7,r0
;;;71       GUI_TIMER_HANDLE hi;
;;;72       GUI_TIMER_Obj*   pi;
;;;73     /* Check if it is the first element */
;;;74       if (hFirstTimer == hTimer) {
00000e  4810              LDR      r0,|L9.80|
000010  f9b00000          LDRSH    r0,[r0,#0]  ; hFirstTimer
000014  42a8              CMP      r0,r5
000016  d104              BNE      |L9.34|
;;;75         hFirstTimer = pTimer->hNext;
000018  88b8              LDRH     r0,[r7,#4]
00001a  490d              LDR      r1,|L9.80|
00001c  8008              STRH     r0,[r1,#0]
                  |L9.30|
;;;76         return;
;;;77     	}
;;;78       hi = hFirstTimer;
;;;79     /* Try to find it in the list ... */
;;;80       while(hi) {
;;;81         /* GUI_ASSERT(hi<1000,0); */
;;;82         pi = GUI_TIMER_H2P(hi);
;;;83         if (pi->hNext == hTimer) {
;;;84           pi->hNext = pTimer->hNext;
;;;85           break;
;;;86     		}        
;;;87         hi = pi->hNext;
;;;88       }  
;;;89     }
00001e  e8bd81f0          POP      {r4-r8,pc}
                  |L9.34|
000022  480b              LDR      r0,|L9.80|
000024  f9b06000          LDRSH    r6,[r0,#0]            ;78  ; hFirstTimer
000028  e00c              B        |L9.68|
                  |L9.42|
00002a  4630              MOV      r0,r6                 ;82
00002c  f7fffffe          BL       GUI_ALLOC_h2p
000030  4604              MOV      r4,r0                 ;82
000032  f9b40004          LDRSH    r0,[r4,#4]            ;83
000036  42a8              CMP      r0,r5                 ;83
000038  d102              BNE      |L9.64|
00003a  88b8              LDRH     r0,[r7,#4]            ;84
00003c  80a0              STRH     r0,[r4,#4]            ;84
00003e  e003              B        |L9.72|
                  |L9.64|
000040  f9b46004          LDRSH    r6,[r4,#4]            ;87
                  |L9.68|
000044  2e00              CMP      r6,#0                 ;80
000046  d1f0              BNE      |L9.42|
                  |L9.72|
000048  bf00              NOP                            ;85
00004a  bf00              NOP      
00004c  e7e7              B        |L9.30|
;;;90     
                          ENDP

00004e  0000              DCW      0x0000
                  |L9.80|
                          DCD      hFirstTimer

                          AREA ||.data||, DATA, ALIGN=1

                  hFirstTimer
000000  0000              DCB      0x00,0x00
                  _hActiveTimer
000002  0000              DCB      0x00,0x00
