; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\app.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\app.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\User\app\app.c]
                          THUMB

                          AREA ||i.AppTaskCom||, CODE, READONLY, ALIGN=1

                  AppTaskCom PROC
;;;204    uint8_t flag=0;
;;;205    static void AppTaskCom(void *p_arg)
000000  e007              B        |L1.18|
                  |L1.2|
;;;206    {
;;;207    //	 INT8U err;	
;;;208    	(void)p_arg;
;;;209    		  
;;;210    
;;;211    	while(1){
;;;212    	
;;;213    	/* 外部中断的方式容易使的鼠标跳动 暂时不考虑 */
;;;214    	#if 0
;;;215    	   if(flag == 1)
;;;216    	   {   
;;;217    		   OSSemPend(AppTouchSemp, 0, &err);
;;;218    		   while(GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_6) == Bit_RESET)
;;;219    		   {
;;;220    		   	 bsp_LedToggle(3);
;;;221    	         GUI_TOUCH_Exec();
;;;222    			 OSTimeDlyHMSM(0, 0, 0, 5); 
;;;223    			 	 	
;;;224    		   }
;;;225    		   flag = 0;
;;;226    		   EXTI->IMR|= (1<<6);
;;;227    		   GUI_TOUCH_Exec();
;;;228    		   OSTimeDlyHMSM(0, 0, 0, 20);  		   
;;;229    		}
;;;230    	#endif
;;;231    
;;;232    	   GUI_TOUCH_Exec();	
000002  f7fffffe          BL       GUI_TOUCH_Exec
;;;233    	   OSTimeDlyHMSM(0, 0, 0, 20); 						  	 	       											  
000006  2314              MOVS     r3,#0x14
000008  2200              MOVS     r2,#0
00000a  4611              MOV      r1,r2
00000c  4610              MOV      r0,r2
00000e  f7fffffe          BL       OSTimeDlyHMSM
                  |L1.18|
000012  e7f6              B        |L1.2|
;;;234       } 
;;;235       
;;;236    }
;;;237    
                          ENDP


                          AREA ||i.AppTaskCreate||, CODE, READONLY, ALIGN=2

                  AppTaskCreate PROC
;;;245    */
;;;246    static void AppTaskCreate (void)
000000  b500              PUSH     {lr}
;;;247    {
000002  b087              SUB      sp,sp,#0x1c
;;;248    	INT8U      err;
;;;249    
;;;250    
;;;251    	/* 创建一个邮箱(MBOX), 用于Kbd任务和UserIF任务之间的通信 */
;;;252    	/* 创建一个邮箱(MBOX), RTC中断和GUI之间通讯  */
;;;253    	AppUserIFMbox = OSMboxCreate((void *)0);
000004  2000              MOVS     r0,#0
000006  f7fffffe          BL       OSMboxCreate
00000a  4932              LDR      r1,|L2.212|
00000c  6008              STR      r0,[r1,#0]  ; AppUserIFMbox
;;;254    	AppMsgMbox = OSMboxCreate((void *)0); 
00000e  2000              MOVS     r0,#0
000010  f7fffffe          BL       OSMboxCreate
000014  4930              LDR      r1,|L2.216|
000016  6008              STR      r0,[r1,#0]  ; AppMsgMbox
;;;255    	Semp      =	OSSemCreate(1);
000018  2001              MOVS     r0,#1
00001a  f7fffffe          BL       OSSemCreate
00001e  492f              LDR      r1,|L2.220|
000020  6008              STR      r0,[r1,#0]  ; Semp
;;;256    	AppTouchSemp = OSSemCreate(0);
000022  2000              MOVS     r0,#0
000024  f7fffffe          BL       OSSemCreate
000028  492d              LDR      r1,|L2.224|
00002a  6008              STR      r0,[r1,#0]  ; AppTouchSemp
;;;257    
;;;258    	
;;;259    	OSTaskCreateExt(AppTaskUserIF,
00002c  2003              MOVS     r0,#3
00002e  2100              MOVS     r1,#0
000030  2280              MOVS     r2,#0x80
000032  4b2c              LDR      r3,|L2.228|
000034  e9cd3201          STRD     r3,r2,[sp,#4]
000038  e9cd1003          STRD     r1,r0,[sp,#0xc]
00003c  2004              MOVS     r0,#4
00003e  4603              MOV      r3,r0
000040  4a29              LDR      r2,|L2.232|
000042  9000              STR      r0,[sp,#0]
000044  4829              LDR      r0,|L2.236|
000046  f7fffffe          BL       OSTaskCreateExt
;;;260                        (void *)0,
;;;261                        (OS_STK *)&AppTaskUserIFStk[APP_TASK_USER_IF_STK_SIZE - 1],
;;;262                        APP_TASK_USER_IF_PRIO,
;;;263                        APP_TASK_USER_IF_PRIO,
;;;264                        (OS_STK *)&AppTaskUserIFStk[0],
;;;265                        APP_TASK_USER_IF_STK_SIZE,
;;;266                        (void *)0,
;;;267                        OS_TASK_OPT_STK_CHK | OS_TASK_OPT_STK_CLR);
;;;268    
;;;269    	OSTaskNameSet(APP_TASK_USER_IF_PRIO, APP_TASK_USER_IF_NAME, &err);
00004a  aa06              ADD      r2,sp,#0x18
00004c  a128              ADR      r1,|L2.240|
00004e  2004              MOVS     r0,#4
000050  f7fffffe          BL       OSTaskNameSet
;;;270    
;;;271    	OSTaskCreateExt(AppTaskGUI,
000054  2003              MOVS     r0,#3
000056  2100              MOVS     r1,#0
000058  f44f6280          MOV      r2,#0x400
00005c  4b28              LDR      r3,|L2.256|
00005e  e9cd3201          STRD     r3,r2,[sp,#4]
000062  e9cd1003          STRD     r1,r0,[sp,#0xc]
000066  201c              MOVS     r0,#0x1c
000068  4603              MOV      r3,r0
00006a  4a26              LDR      r2,|L2.260|
00006c  9000              STR      r0,[sp,#0]
00006e  4826              LDR      r0,|L2.264|
000070  f7fffffe          BL       OSTaskCreateExt
;;;272                        (void *)0,
;;;273                        (OS_STK *)&AppTaskGUIStk[APP_TASK_GUI_STK_SIZE - 1],
;;;274                        APP_TASK_GUI_PRIO,
;;;275                        APP_TASK_GUI_PRIO,
;;;276                        (OS_STK *)&AppTaskGUIStk[0],
;;;277                        APP_TASK_GUI_STK_SIZE,
;;;278                        (void *)0,
;;;279                        OS_TASK_OPT_STK_CHK | OS_TASK_OPT_STK_CLR);
;;;280    
;;;281    	OSTaskNameSet(APP_TASK_GUI_PRIO, APP_TASK_GUI_NAME, &err);
000074  aa06              ADD      r2,sp,#0x18
000076  a125              ADR      r1,|L2.268|
000078  201c              MOVS     r0,#0x1c
00007a  f7fffffe          BL       OSTaskNameSet
;;;282    
;;;283    	OSTaskCreateExt(AppTaskCom,
00007e  2003              MOVS     r0,#3
000080  2100              MOVS     r1,#0
000082  2280              MOVS     r2,#0x80
000084  4b23              LDR      r3,|L2.276|
000086  e9cd1003          STRD     r1,r0,[sp,#0xc]
00008a  e9cd3201          STRD     r3,r2,[sp,#4]
00008e  9000              STR      r0,[sp,#0]
000090  4603              MOV      r3,r0
000092  4a21              LDR      r2,|L2.280|
000094  4821              LDR      r0,|L2.284|
000096  f7fffffe          BL       OSTaskCreateExt
;;;284                        (void *)0,
;;;285                        (OS_STK *)&AppTaskCOMStk[APP_TASK_COM_STK_SIZE-1],
;;;286                        APP_TASK_COM_PRIO,
;;;287                        APP_TASK_COM_PRIO,
;;;288                        (OS_STK *)&AppTaskCOMStk[0],
;;;289                        APP_TASK_COM_STK_SIZE,
;;;290                        (void *)0,
;;;291                        OS_TASK_OPT_STK_CHK | OS_TASK_OPT_STK_CLR);
;;;292    
;;;293    	OSTaskNameSet(APP_TASK_COM_PRIO, APP_TASK_COM_NAME, &err);
00009a  aa06              ADD      r2,sp,#0x18
00009c  a120              ADR      r1,|L2.288|
00009e  2003              MOVS     r0,#3
0000a0  f7fffffe          BL       OSTaskNameSet
;;;294    
;;;295    
;;;296    	OSTaskCreateExt(AppTaskGUIUpdate,
0000a4  2003              MOVS     r0,#3
0000a6  2100              MOVS     r1,#0
0000a8  f44f7200          MOV      r2,#0x200
0000ac  4b1d              LDR      r3,|L2.292|
0000ae  e9cd3201          STRD     r3,r2,[sp,#4]
0000b2  e9cd1003          STRD     r1,r0,[sp,#0xc]
0000b6  2002              MOVS     r0,#2
0000b8  4603              MOV      r3,r0
0000ba  4a1b              LDR      r2,|L2.296|
0000bc  9000              STR      r0,[sp,#0]
0000be  481b              LDR      r0,|L2.300|
0000c0  f7fffffe          BL       OSTaskCreateExt
;;;297                        (void *)0,
;;;298                        (OS_STK *)&AppTaskUpdateStk[APP_TASK_UPDATE_STK_SIZE-1],
;;;299                        APP_TASK_UPDATE_PRIO,
;;;300                        APP_TASK_UPDATE_PRIO,
;;;301                        (OS_STK *)&AppTaskUpdateStk[0],
;;;302                        APP_TASK_UPDATE_STK_SIZE,
;;;303                        (void *)0,
;;;304                        OS_TASK_OPT_STK_CHK | OS_TASK_OPT_STK_CLR);
;;;305    
;;;306    	OSTaskNameSet(APP_TASK_UPDATE_PRIO, APP_TASK_UPDATE_NAME, &err);
0000c4  aa06              ADD      r2,sp,#0x18
0000c6  a11a              ADR      r1,|L2.304|
0000c8  2002              MOVS     r0,#2
0000ca  f7fffffe          BL       OSTaskNameSet
;;;307    }
0000ce  b007              ADD      sp,sp,#0x1c
0000d0  bd00              POP      {pc}
;;;308    
                          ENDP

0000d2  0000              DCW      0x0000
                  |L2.212|
                          DCD      AppUserIFMbox
                  |L2.216|
                          DCD      AppMsgMbox
                  |L2.220|
                          DCD      Semp
                  |L2.224|
                          DCD      AppTouchSemp
                  |L2.228|
                          DCD      AppTaskUserIFStk
                  |L2.232|
                          DCD      AppTaskUserIFStk+0x1fc
                  |L2.236|
                          DCD      AppTaskUserIF
                  |L2.240|
0000f0  546f7563          DCB      "Touch.JoyStick",0
0000f4  682e4a6f
0000f8  79537469
0000fc  636b00  
0000ff  00                DCB      0
                  |L2.256|
                          DCD      AppTaskGUIStk
                  |L2.260|
                          DCD      AppTaskGUIStk+0xffc
                  |L2.264|
                          DCD      AppTaskGUI
                  |L2.268|
00010c  75634755          DCB      "ucGUI",0
000110  4900    
000112  00                DCB      0
000113  00                DCB      0
                  |L2.276|
                          DCD      AppTaskCOMStk
                  |L2.280|
                          DCD      AppTaskCOMStk+0x1fc
                  |L2.284|
                          DCD      AppTaskCom
                  |L2.288|
000120  4c454400          DCB      "LED",0
                  |L2.292|
                          DCD      AppTaskUpdateStk
                  |L2.296|
                          DCD      AppTaskUpdateStk+0x7fc
                  |L2.300|
                          DCD      AppTaskGUIUpdate
                  |L2.304|
000130  75634755          DCB      "ucGUI Update",0
000134  49205570
000138  64617465
00013c  00      
00013d  00                DCB      0
00013e  00                DCB      0
00013f  00                DCB      0

                          AREA ||i.AppTaskGUI||, CODE, READONLY, ALIGN=1

                  AppTaskGUI PROC
;;;166    
;;;167    static void AppTaskGUI(void *p_arg)
000000  e001              B        |L3.6|
                  |L3.2|
;;;168    {
;;;169        (void)p_arg;		/* 避免编译器告警 */
;;;170    		
;;;171    	while (1) 
;;;172    	{
;;;173    		MainTask();				 
000002  f7fffffe          BL       MainTask
                  |L3.6|
000006  e7fc              B        |L3.2|
;;;174    	}
;;;175    }
;;;176    /*
                          ENDP


                          AREA ||i.AppTaskGUIUpdate||, CODE, READONLY, ALIGN=1

                  AppTaskGUIUpdate PROC
;;;143    */
;;;144    static void AppTaskGUIUpdate(void *p_arg)
000000  e009              B        |L4.22|
                  |L4.2|
;;;145    {
;;;146    	
;;;147    	(void)p_arg;
;;;148    		  
;;;149    	while(1)
;;;150    	{
;;;151    		bsp_LedToggle(0);				
000002  2000              MOVS     r0,#0
000004  f7fffffe          BL       bsp_LedToggle
;;;152    		OSTimeDlyHMSM(0, 0, 0, 500); 						  	 	       											  
000008  f44f73fa          MOV      r3,#0x1f4
00000c  2200              MOVS     r2,#0
00000e  4611              MOV      r1,r2
000010  4610              MOV      r0,r2
000012  f7fffffe          BL       OSTimeDlyHMSM
                  |L4.22|
000016  e7f4              B        |L4.2|
;;;153    	}   
;;;154    }
;;;155    
                          ENDP


                          AREA ||i.AppTaskStart||, CODE, READONLY, ALIGN=1

                  AppTaskStart PROC
;;;112    */
;;;113    static void AppTaskStart(void *p_arg)
000000  f7fffffe          BL       BSP_Init
;;;114    {		
;;;115       (void)p_arg;   /* 仅用于避免编译器告警，编译器不会产生任何目标代码 */
;;;116    	 
;;;117    	/* BSP 初始化。 BSP = Board Support Package 板级支持包，可以理解为底层驱动。*/
;;;118    	BSP_Init();
;;;119    	/* 检测CPU能力，统计模块初始化。该函数将检测最低CPU占有率
;;;120    	注意：此函数会延迟100ms再返回 */
;;;121    	#if (OS_TASK_STAT_EN > 0)
;;;122    		OSStatInit();
000004  f7fffffe          BL       OSStatInit
;;;123    	#endif			   
;;;124    	/* 创建应用程序的任务 */
;;;125    	AppTaskCreate();
000008  f7fffffe          BL       AppTaskCreate
;;;126    	
;;;127    
;;;128    	/* 任务主体，必须是一个死循环 */
;;;129    	while (1)     
00000c  e005              B        |L5.26|
                  |L5.14|
;;;130    	{   
;;;131    		OSTimeDlyHMSM(0, 0, 1,0);										
00000e  2300              MOVS     r3,#0
000010  2201              MOVS     r2,#1
000012  4619              MOV      r1,r3
000014  4618              MOV      r0,r3
000016  f7fffffe          BL       OSTimeDlyHMSM
                  |L5.26|
00001a  e7f8              B        |L5.14|
;;;132    	}      
;;;133    }
;;;134    
                          ENDP


                          AREA ||i.AppTaskUserIF||, CODE, READONLY, ALIGN=1

                  AppTaskUserIF PROC
;;;184    */
;;;185    static void AppTaskUserIF(void *p_arg)
000000  e005              B        |L6.14|
                  |L6.2|
;;;186    {
;;;187       (void)p_arg;	             /* 避免编译器报警 */
;;;188      
;;;189    	while (1) 
;;;190    	{       		
;;;191    		OSTimeDlyHMSM(0, 0, 1, 5);   
000002  2305              MOVS     r3,#5
000004  2201              MOVS     r2,#1
000006  2100              MOVS     r1,#0
000008  4608              MOV      r0,r1
00000a  f7fffffe          BL       OSTimeDlyHMSM
                  |L6.14|
00000e  e7f8              B        |L6.2|
;;;192    	}
;;;193    }
;;;194    
                          ENDP


                          AREA ||i.App_TCBInitHook||, CODE, READONLY, ALIGN=1

                  App_TCBInitHook PROC
;;;441    #if OS_VERSION >= 204
;;;442    void  App_TCBInitHook (OS_TCB *ptcb)
000000  4770              BX       lr
;;;443    {
;;;444        (void)ptcb;
;;;445    }
;;;446    #endif
                          ENDP


                          AREA ||i.App_TaskCreateHook||, CODE, READONLY, ALIGN=1

                  App_TaskCreateHook PROC
;;;321    #if (OS_APP_HOOKS_EN > 0)
;;;322    void  App_TaskCreateHook (OS_TCB *ptcb)
000000  4770              BX       lr
;;;323    {
;;;324    #if (uC_PROBE_OS_PLUGIN > 0) && (OS_PROBE_HOOKS_EN > 0)
;;;325        //OSProbe_TaskCreateHook(ptcb);
;;;326    #else
;;;327        (void)ptcb;
;;;328    #endif
;;;329    }
;;;330    
                          ENDP


                          AREA ||i.App_TaskDelHook||, CODE, READONLY, ALIGN=1

                  App_TaskDelHook PROC
;;;342    
;;;343    void  App_TaskDelHook (OS_TCB *ptcb)
000000  4770              BX       lr
;;;344    {
;;;345        (void)ptcb;
;;;346    }
;;;347    
                          ENDP


                          AREA ||i.App_TaskIdleHook||, CODE, READONLY, ALIGN=1

                  App_TaskIdleHook PROC
;;;361    #if OS_VERSION >= 251
;;;362    void  App_TaskIdleHook (void)
000000  4770              BX       lr
;;;363    {
;;;364    }
;;;365    #endif
                          ENDP


                          AREA ||i.App_TaskReturnHook||, CODE, READONLY, ALIGN=1

                  App_TaskReturnHook PROC
;;;381    #if OS_VERSION >= 289
;;;382    void  App_TaskReturnHook (OS_TCB  *ptcb)
000000  4770              BX       lr
;;;383    {
;;;384        (void)ptcb;
;;;385    }
;;;386    #endif
                          ENDP


                          AREA ||i.App_TaskStatHook||, CODE, READONLY, ALIGN=1

                  App_TaskStatHook PROC
;;;399    
;;;400    void  App_TaskStatHook (void)
000000  4770              BX       lr
;;;401    {
;;;402    }
;;;403    
                          ENDP


                          AREA ||i.App_TaskSwHook||, CODE, READONLY, ALIGN=1

                  App_TaskSwHook PROC
;;;420    #if OS_TASK_SW_HOOK_EN > 0
;;;421    void  App_TaskSwHook (void)
000000  4770              BX       lr
;;;422    {
;;;423    #if (uC_PROBE_OS_PLUGIN > 0) && (OS_PROBE_HOOKS_EN > 0)
;;;424        //OSProbe_TaskSwHook();
;;;425    #endif
;;;426    }
;;;427    #endif
                          ENDP


                          AREA ||i.App_TimeTickHook||, CODE, READONLY, ALIGN=1

                  App_TimeTickHook PROC
;;;460    #if OS_TIME_TICK_HOOK_EN > 0
;;;461    void  App_TimeTickHook (void)
000000  4770              BX       lr
;;;462    {
;;;463    #if (uC_PROBE_OS_PLUGIN > 0) && (OS_PROBE_HOOKS_EN > 0)
;;;464        // OSProbe_TickHook();
;;;465    #endif
;;;466    }
;;;467    #endif
                          ENDP


                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;71     */
;;;72     int main(void)
000000  b500              PUSH     {lr}
;;;73     {
000002  b087              SUB      sp,sp,#0x1c
;;;74     	INT8U  err;
;;;75     
;;;76     	/* 初始化"uC/OS-II"内核 */
;;;77     	OSInit();
000004  f7fffffe          BL       OSInit
;;;78       
;;;79     	/* 创建一个启动任务（也就是主任务）。启动任务会创建所有的应用程序任务 */
;;;80     	OSTaskCreateExt(AppTaskStart,	/* 启动任务函数指针 */
000008  2003              MOVS     r0,#3
00000a  2100              MOVS     r1,#0
00000c  f44f7280          MOV      r2,#0x100
000010  4b0c              LDR      r3,|L15.68|
000012  e9cd3201          STRD     r3,r2,[sp,#4]
000016  e9cd1003          STRD     r1,r0,[sp,#0xc]
00001a  2001              MOVS     r0,#1
00001c  4603              MOV      r3,r0
00001e  4a0a              LDR      r2,|L15.72|
000020  9000              STR      r0,[sp,#0]
000022  480a              LDR      r0,|L15.76|
000024  f7fffffe          BL       OSTaskCreateExt
;;;81                         (void *)0,		/* 传递给任务的参数 */
;;;82                         (OS_STK *)&AppTaskStartStk[APP_TASK_START_STK_SIZE - 1], /* 指向任务栈栈顶的指针 */
;;;83                         APP_TASK_START_PRIO,	/* 任务的优先级，必须唯一，数字越低优先级越高 */
;;;84                         APP_TASK_START_PRIO,	/* 任务ID，一般和任务优先级相同 */
;;;85                         (OS_STK *)&AppTaskStartStk[0],/* 指向任务栈栈底的指针。OS_STK_GROWTH 决定堆栈增长方向 */
;;;86                         APP_TASK_START_STK_SIZE, /* 任务栈大小 */
;;;87                         (void *)0,	/* 一块用户内存区的指针，用于任务控制块TCB的扩展功能
;;;88                            （如任务切换时保存CPU浮点寄存器的数据）。一般不用，填0即可 */
;;;89                         OS_TASK_OPT_STK_CHK | OS_TASK_OPT_STK_CLR); /* 任务选项字 */
;;;90     					/*  定义如下：
;;;91     						OS_TASK_OPT_STK_CHK      使能检测任务栈，统计任务栈已用的和未用的
;;;92     						OS_TASK_OPT_STK_CLR      在创建任务时，清零任务栈
;;;93     						OS_TASK_OPT_SAVE_FP      如果CPU有浮点寄存器，则在任务切换时保存浮点寄存器的内容
;;;94     					*/                  
;;;95     
;;;96     	/* 指定任务的名称，用于调试。这个函数是可选的 */
;;;97     	OSTaskNameSet(APP_TASK_START_PRIO, APP_TASK_START_NAME, &err);
000028  aa06              ADD      r2,sp,#0x18
00002a  a109              ADR      r1,|L15.80|
00002c  2001              MOVS     r0,#1
00002e  f7fffffe          BL       OSTaskNameSet
;;;98     	/*ucosII的节拍计数器清0    节拍计数器是0-4294967295*/ 
;;;99     	OSTimeSet(0);			 
000032  2000              MOVS     r0,#0
000034  f7fffffe          BL       OSTimeSet
;;;100    	/* 启动多任务系统，控制权交给uC/OS-II */
;;;101    	OSStart();
000038  f7fffffe          BL       OSStart
;;;102    }
00003c  2000              MOVS     r0,#0
00003e  b007              ADD      sp,sp,#0x1c
000040  bd00              POP      {pc}
;;;103    
                          ENDP

000042  0000              DCW      0x0000
                  |L15.68|
                          DCD      AppTaskStartStk
                  |L15.72|
                          DCD      AppTaskStartStk+0x3fc
                  |L15.76|
                          DCD      AppTaskStart
                  |L15.80|
000050  53746172          DCB      "Start Task",0
000054  74205461
000058  736b00  
00005b  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  AppTaskStartStk
                          %        1024
                  AppTaskUserIFStk
                          %        512
                  AppTaskGUIStk
                          %        4096
                  AppTaskCOMStk
                          %        512
                  AppTaskUpdateStk
                          %        2048

                          AREA ||.data||, DATA, ALIGN=2

                  flag
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  AppUserIFMbox
                          DCD      0x00000000
                  AppMsgMbox
                          DCD      0x00000000
                  Semp
                          DCD      0x00000000
                  AppTouchSemp
                          DCD      0x00000000
                  CommMem
                          DCD      0x00000000

                  __ARM_use_no_argv EQU 0
