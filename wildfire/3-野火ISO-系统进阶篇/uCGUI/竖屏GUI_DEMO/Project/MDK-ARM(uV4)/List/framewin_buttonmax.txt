; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\framewin_buttonmax.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\framewin_buttonmax.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Widget\FRAMEWIN_ButtonMax.c]
                          THUMB

                          AREA ||i.FRAMEWIN_AddMaxButton||, CODE, READONLY, ALIGN=2

                  FRAMEWIN_AddMaxButton PROC
;;;131    */
;;;132    WM_HWIN FRAMEWIN_AddMaxButton(FRAMEWIN_Handle hObj, int Flags, int Off) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
;;;133      WM_HWIN hButton;
;;;134      hButton = FRAMEWIN_AddButton(hObj, Flags, Off, GUI_ID_MAXIMIZE);
00000a  2307              MOVS     r3,#7
00000c  4632              MOV      r2,r6
00000e  4629              MOV      r1,r5
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       FRAMEWIN_AddButton
000016  4607              MOV      r7,r0
;;;135      BUTTON_SetSelfDraw(hButton, 0, &_Draw);
000018  4a05              LDR      r2,|L1.48|
00001a  2100              MOVS     r1,#0
00001c  4638              MOV      r0,r7
00001e  f7fffffe          BL       BUTTON_SetSelfDraw
;;;136      WM_SetCallback(hButton, _cbMax);
000022  4904              LDR      r1,|L1.52|
000024  4638              MOV      r0,r7
000026  f7fffffe          BL       WM_SetCallback
;;;137      return hButton;
00002a  4638              MOV      r0,r7
;;;138    }
00002c  e8bd81f0          POP      {r4-r8,pc}
;;;139    
                          ENDP

                  |L1.48|
                          DCD      _Draw
                  |L1.52|
                          DCD      _cbMax

                          AREA ||i._Draw||, CODE, READONLY, ALIGN=1

                  _Draw PROC
;;;108    */
;;;109    static void _Draw(void) {
000000  b570              PUSH     {r4-r6,lr}
;;;110      FRAMEWIN_Obj* pObj;
;;;111      WM_HWIN hWin;
;;;112      hWin = WM_GetActiveWindow();
000002  f7fffffe          BL       WM_GetActiveWindow
000006  4605              MOV      r5,r0
;;;113      hWin = WM_GetParent(hWin);
000008  4628              MOV      r0,r5
00000a  f7fffffe          BL       WM_GetParent
00000e  4605              MOV      r5,r0
;;;114      pObj = FRAMEWIN_H2P(hWin);
000010  4628              MOV      r0,r5
000012  f7fffffe          BL       GUI_ALLOC_h2p
000016  4604              MOV      r4,r0
;;;115      if (pObj->Flags & FRAMEWIN_SF_MAXIMIZED) {
000018  f894005a          LDRB     r0,[r4,#0x5a]
00001c  f0100f80          TST      r0,#0x80
000020  d002              BEQ      |L2.40|
;;;116        _DrawRestore();
000022  f7fffffe          BL       _DrawRestore
000026  e001              B        |L2.44|
                  |L2.40|
;;;117      } else {
;;;118        _DrawMax();
000028  f7fffffe          BL       _DrawMax
                  |L2.44|
;;;119      }
;;;120    }
00002c  bd70              POP      {r4-r6,pc}
;;;121    
                          ENDP


                          AREA ||i._DrawMax||, CODE, READONLY, ALIGN=2

                  _DrawMax PROC
;;;65     */
;;;66     static void _DrawMax(void) {
000000  b51c              PUSH     {r2-r4,lr}
;;;67       GUI_RECT r;
;;;68       WM_GetInsideRect(&r);
000002  4668              MOV      r0,sp
000004  f7fffffe          BL       WM_GetInsideRect
;;;69       WM_ADDORG(r.x0, r.y0);
000008  f8bd0000          LDRH     r0,[sp,#0]
00000c  4931              LDR      r1,|L3.212|
00000e  f8b11044          LDRH     r1,[r1,#0x44]  ; GUI_Context
000012  4408              ADD      r0,r0,r1
000014  b200              SXTH     r0,r0
000016  f8ad0000          STRH     r0,[sp,#0]
00001a  f8bd0002          LDRH     r0,[sp,#2]
00001e  492d              LDR      r1,|L3.212|
000020  f8b11048          LDRH     r1,[r1,#0x48]  ; GUI_Context
000024  4408              ADD      r0,r0,r1
000026  b200              SXTH     r0,r0
000028  f8ad0002          STRH     r0,[sp,#2]
;;;70       WM_ADDORG(r.x1, r.y1);
00002c  f8bd0004          LDRH     r0,[sp,#4]
000030  4928              LDR      r1,|L3.212|
000032  f8b11044          LDRH     r1,[r1,#0x44]  ; GUI_Context
000036  4408              ADD      r0,r0,r1
000038  b200              SXTH     r0,r0
00003a  f8ad0004          STRH     r0,[sp,#4]
00003e  f8bd0006          LDRH     r0,[sp,#6]
000042  4924              LDR      r1,|L3.212|
000044  f8b11048          LDRH     r1,[r1,#0x48]  ; GUI_Context
000048  4408              ADD      r0,r0,r1
00004a  b200              SXTH     r0,r0
00004c  f8ad0006          STRH     r0,[sp,#6]
;;;71       WM_ITERATE_START(&r); {
000050  4668              MOV      r0,sp
000052  f7fffffe          BL       WM__InitIVRSearch
000056  2800              CMP      r0,#0
000058  d03b              BEQ      |L3.210|
00005a  bf00              NOP      
                  |L3.92|
;;;72         LCD_DrawHLine(r.x0 + 1, r.y0 + 1, r.x1 - 1);
00005c  f9bd3004          LDRSH    r3,[sp,#4]
000060  1e5a              SUBS     r2,r3,#1
000062  f9bd3002          LDRSH    r3,[sp,#2]
000066  1c59              ADDS     r1,r3,#1
000068  f9bd3000          LDRSH    r3,[sp,#0]
00006c  1c58              ADDS     r0,r3,#1
00006e  f7fffffe          BL       LCD_DrawHLine
;;;73         LCD_DrawHLine(r.x0 + 1, r.y0 + 2, r.x1 - 1);
000072  f9bd3004          LDRSH    r3,[sp,#4]
000076  1e5a              SUBS     r2,r3,#1
000078  f9bd3002          LDRSH    r3,[sp,#2]
00007c  1c99              ADDS     r1,r3,#2
00007e  f9bd3000          LDRSH    r3,[sp,#0]
000082  1c58              ADDS     r0,r3,#1
000084  f7fffffe          BL       LCD_DrawHLine
;;;74         LCD_DrawHLine(r.x0 + 1, r.y1 - 1, r.x1 - 1);
000088  f9bd3004          LDRSH    r3,[sp,#4]
00008c  1e5a              SUBS     r2,r3,#1
00008e  f9bd3006          LDRSH    r3,[sp,#6]
000092  1e59              SUBS     r1,r3,#1
000094  f9bd3000          LDRSH    r3,[sp,#0]
000098  1c58              ADDS     r0,r3,#1
00009a  f7fffffe          BL       LCD_DrawHLine
;;;75         LCD_DrawVLine(r.x0 + 1, r.y0 + 1, r.y1 - 1);
00009e  f9bd3006          LDRSH    r3,[sp,#6]
0000a2  1e5a              SUBS     r2,r3,#1
0000a4  f9bd3002          LDRSH    r3,[sp,#2]
0000a8  1c59              ADDS     r1,r3,#1
0000aa  f9bd3000          LDRSH    r3,[sp,#0]
0000ae  1c58              ADDS     r0,r3,#1
0000b0  f7fffffe          BL       LCD_DrawVLine
;;;76         LCD_DrawVLine(r.x1 - 1, r.y0 + 1, r.y1 - 1);
0000b4  f9bd3006          LDRSH    r3,[sp,#6]
0000b8  1e5a              SUBS     r2,r3,#1
0000ba  f9bd3002          LDRSH    r3,[sp,#2]
0000be  1c59              ADDS     r1,r3,#1
0000c0  f9bd3004          LDRSH    r3,[sp,#4]
0000c4  1e58              SUBS     r0,r3,#1
0000c6  f7fffffe          BL       LCD_DrawVLine
;;;77       } WM_ITERATE_END();
0000ca  f7fffffe          BL       WM__GetNextIVR
0000ce  2800              CMP      r0,#0
0000d0  d1c4              BNE      |L3.92|
                  |L3.210|
;;;78     }
0000d2  bd1c              POP      {r2-r4,pc}
;;;79     
                          ENDP

                  |L3.212|
                          DCD      GUI_Context

                          AREA ||i._DrawRestore||, CODE, READONLY, ALIGN=2

                  _DrawRestore PROC
;;;83     */
;;;84     static void _DrawRestore(void) {
000000  b51c              PUSH     {r2-r4,lr}
;;;85       GUI_RECT r;
;;;86       int Size;
;;;87       WM_GetInsideRect(&r);
000002  4668              MOV      r0,sp
000004  f7fffffe          BL       WM_GetInsideRect
;;;88       WM_ADDORG(r.x0, r.y0);
000008  f8bd0000          LDRH     r0,[sp,#0]
00000c  494f              LDR      r1,|L4.332|
00000e  f8b11044          LDRH     r1,[r1,#0x44]  ; GUI_Context
000012  4408              ADD      r0,r0,r1
000014  b200              SXTH     r0,r0
000016  f8ad0000          STRH     r0,[sp,#0]
00001a  f8bd0002          LDRH     r0,[sp,#2]
00001e  494b              LDR      r1,|L4.332|
000020  f8b11048          LDRH     r1,[r1,#0x48]  ; GUI_Context
000024  4408              ADD      r0,r0,r1
000026  b200              SXTH     r0,r0
000028  f8ad0002          STRH     r0,[sp,#2]
;;;89       WM_ADDORG(r.x1, r.y1);
00002c  f8bd0004          LDRH     r0,[sp,#4]
000030  4946              LDR      r1,|L4.332|
000032  f8b11044          LDRH     r1,[r1,#0x44]  ; GUI_Context
000036  4408              ADD      r0,r0,r1
000038  b200              SXTH     r0,r0
00003a  f8ad0004          STRH     r0,[sp,#4]
00003e  f8bd0006          LDRH     r0,[sp,#6]
000042  4942              LDR      r1,|L4.332|
000044  f8b11048          LDRH     r1,[r1,#0x48]  ; GUI_Context
000048  4408              ADD      r0,r0,r1
00004a  b200              SXTH     r0,r0
00004c  f8ad0006          STRH     r0,[sp,#6]
;;;90       Size = ((r.x1 - r.x0 + 1) << 1) / 3;
000050  f9bd0004          LDRSH    r0,[sp,#4]
000054  f9bd1000          LDRSH    r1,[sp,#0]
000058  1a40              SUBS     r0,r0,r1
00005a  1c40              ADDS     r0,r0,#1
00005c  0040              LSLS     r0,r0,#1
00005e  2103              MOVS     r1,#3
000060  fb90f4f1          SDIV     r4,r0,r1
;;;91       WM_ITERATE_START(&r); {
000064  4668              MOV      r0,sp
000066  f7fffffe          BL       WM__InitIVRSearch
00006a  2800              CMP      r0,#0
00006c  d06d              BEQ      |L4.330|
00006e  bf00              NOP      
                  |L4.112|
;;;92         LCD_DrawHLine(r.x1 - Size, r.y0 + 1,        r.x1 - 1);
000070  f9bd3004          LDRSH    r3,[sp,#4]
000074  1e5a              SUBS     r2,r3,#1
000076  f9bd3002          LDRSH    r3,[sp,#2]
00007a  1c59              ADDS     r1,r3,#1
00007c  f9bd3004          LDRSH    r3,[sp,#4]
000080  1b18              SUBS     r0,r3,r4
000082  f7fffffe          BL       LCD_DrawHLine
;;;93         LCD_DrawHLine(r.x1 - Size, r.y0 + 2,        r.x1 - 1);
000086  f9bd3004          LDRSH    r3,[sp,#4]
00008a  1e5a              SUBS     r2,r3,#1
00008c  f9bd3002          LDRSH    r3,[sp,#2]
000090  1c99              ADDS     r1,r3,#2
000092  f9bd3004          LDRSH    r3,[sp,#4]
000096  1b18              SUBS     r0,r3,r4
000098  f7fffffe          BL       LCD_DrawHLine
;;;94         LCD_DrawHLine(r.x0 + Size, r.y0 + Size,     r.x1 - 1);
00009c  f9bd3004          LDRSH    r3,[sp,#4]
0000a0  1e5a              SUBS     r2,r3,#1
0000a2  f9bd3002          LDRSH    r3,[sp,#2]
0000a6  1919              ADDS     r1,r3,r4
0000a8  f9bd3000          LDRSH    r3,[sp,#0]
0000ac  1918              ADDS     r0,r3,r4
0000ae  f7fffffe          BL       LCD_DrawHLine
;;;95         LCD_DrawVLine(r.x1 - Size, r.y0 + 1,        r.y1 - Size);
0000b2  f9bd3006          LDRSH    r3,[sp,#6]
0000b6  1b1a              SUBS     r2,r3,r4
0000b8  f9bd3002          LDRSH    r3,[sp,#2]
0000bc  1c59              ADDS     r1,r3,#1
0000be  f9bd3004          LDRSH    r3,[sp,#4]
0000c2  1b18              SUBS     r0,r3,r4
0000c4  f7fffffe          BL       LCD_DrawVLine
;;;96         LCD_DrawVLine(r.x1 - 1,    r.y0 + 1,        r.y0 + Size);
0000c8  f9bd3002          LDRSH    r3,[sp,#2]
0000cc  191a              ADDS     r2,r3,r4
0000ce  1c59              ADDS     r1,r3,#1
0000d0  f9bd3004          LDRSH    r3,[sp,#4]
0000d4  1e58              SUBS     r0,r3,#1
0000d6  f7fffffe          BL       LCD_DrawVLine
;;;97         LCD_DrawHLine(r.x0 + 1,    r.y1 - Size,     r.x0 + Size);
0000da  f9bd3000          LDRSH    r3,[sp,#0]
0000de  191a              ADDS     r2,r3,r4
0000e0  f9bd3006          LDRSH    r3,[sp,#6]
0000e4  1b19              SUBS     r1,r3,r4
0000e6  f9bd3000          LDRSH    r3,[sp,#0]
0000ea  1c58              ADDS     r0,r3,#1
0000ec  f7fffffe          BL       LCD_DrawHLine
;;;98         LCD_DrawHLine(r.x0 + 1,    r.y1 - Size + 1, r.x0 + Size);
0000f0  f9bd3000          LDRSH    r3,[sp,#0]
0000f4  191a              ADDS     r2,r3,r4
0000f6  f9bd3006          LDRSH    r3,[sp,#6]
0000fa  1b1b              SUBS     r3,r3,r4
0000fc  1c59              ADDS     r1,r3,#1
0000fe  f9bd3000          LDRSH    r3,[sp,#0]
000102  1c58              ADDS     r0,r3,#1
000104  f7fffffe          BL       LCD_DrawHLine
;;;99         LCD_DrawHLine(r.x0 + 1,    r.y1 - 1,        r.x0 + Size);
000108  f9bd3000          LDRSH    r3,[sp,#0]
00010c  191a              ADDS     r2,r3,r4
00010e  f9bd3006          LDRSH    r3,[sp,#6]
000112  1e59              SUBS     r1,r3,#1
000114  f9bd3000          LDRSH    r3,[sp,#0]
000118  1c58              ADDS     r0,r3,#1
00011a  f7fffffe          BL       LCD_DrawHLine
;;;100        LCD_DrawVLine(r.x0 + 1,    r.y1 - Size,     r.y1 - 1);
00011e  f9bd3006          LDRSH    r3,[sp,#6]
000122  1e5a              SUBS     r2,r3,#1
000124  1b19              SUBS     r1,r3,r4
000126  f9bd3000          LDRSH    r3,[sp,#0]
00012a  1c58              ADDS     r0,r3,#1
00012c  f7fffffe          BL       LCD_DrawVLine
;;;101        LCD_DrawVLine(r.x0 + Size, r.y1 - Size,     r.y1 - 1);
000130  f9bd3006          LDRSH    r3,[sp,#6]
000134  1e5a              SUBS     r2,r3,#1
000136  1b19              SUBS     r1,r3,r4
000138  f9bd3000          LDRSH    r3,[sp,#0]
00013c  1918              ADDS     r0,r3,r4
00013e  f7fffffe          BL       LCD_DrawVLine
;;;102      } WM_ITERATE_END();
000142  f7fffffe          BL       WM__GetNextIVR
000146  2800              CMP      r0,#0
000148  d192              BNE      |L4.112|
                  |L4.330|
;;;103    }
00014a  bd1c              POP      {r2-r4,pc}
;;;104    
                          ENDP

                  |L4.332|
                          DCD      GUI_Context

                          AREA ||i._cbMax||, CODE, READONLY, ALIGN=1

                  _cbMax PROC
;;;47     */
;;;48     static void _cbMax(WM_MESSAGE* pMsg) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;49       if (pMsg->MsgId == WM_NOTIFY_PARENT_REFLECTION) {
000004  6820              LDR      r0,[r4,#0]
000006  2827              CMP      r0,#0x27
000008  d112              BNE      |L5.48|
;;;50         WM_HWIN hWin = pMsg->hWinSrc;
00000a  f9b45006          LDRSH    r5,[r4,#6]
;;;51         FRAMEWIN_Obj* pObj = FRAMEWIN_H2P(hWin);
00000e  4628              MOV      r0,r5
000010  f7fffffe          BL       GUI_ALLOC_h2p
000014  4606              MOV      r6,r0
;;;52         if (pObj->Flags & FRAMEWIN_SF_MAXIMIZED) {
000016  f896005a          LDRB     r0,[r6,#0x5a]
00001a  f0100f80          TST      r0,#0x80
00001e  d003              BEQ      |L5.40|
;;;53           FRAMEWIN_Restore(hWin);
000020  4628              MOV      r0,r5
000022  f7fffffe          BL       FRAMEWIN_Restore
000026  e002              B        |L5.46|
                  |L5.40|
;;;54         } else {
;;;55           FRAMEWIN_Maximize(hWin);
000028  4628              MOV      r0,r5
00002a  f7fffffe          BL       FRAMEWIN_Maximize
                  |L5.46|
;;;56         }
;;;57         return;                                       /* We are done ! */
;;;58       }
;;;59       BUTTON_Callback(pMsg);
;;;60     }
00002e  bd70              POP      {r4-r6,pc}
                  |L5.48|
000030  4620              MOV      r0,r4                 ;59
000032  f7fffffe          BL       BUTTON_Callback
000036  bf00              NOP      
000038  e7f9              B        |L5.46|
;;;61     
                          ENDP

