; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\progbar.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\progbar.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Widget\PROGBAR.c]
                          THUMB

                          AREA ||i.PROGBAR_Callback||, CODE, READONLY, ALIGN=1

                  PROGBAR_Callback PROC
;;;249    */
;;;250    void PROGBAR_Callback(WM_MESSAGE * pMsg) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;251      PROGBAR_Handle hObj;
;;;252      PROGBAR_Obj * pObj;
;;;253      hObj = pMsg->hWin;
000004  f9b45004          LDRSH    r5,[r4,#4]
;;;254      pObj = (PROGBAR_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000008  4628              MOV      r0,r5
00000a  f7fffffe          BL       GUI_ALLOC_h2p
00000e  4606              MOV      r6,r0
;;;255      /* Let widget handle the standard messages */
;;;256      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
000010  4621              MOV      r1,r4
000012  4628              MOV      r0,r5
000014  f7fffffe          BL       WIDGET_HandleActive
000018  b900              CBNZ     r0,|L1.28|
                  |L1.26|
;;;257        return;
;;;258      }
;;;259      switch (pMsg->MsgId) {
;;;260      case WM_PAINT:
;;;261        _Paint(pObj);
;;;262        return;
;;;263      case WM_DELETE:
;;;264        _Delete(hObj);
;;;265        break;
;;;266      }
;;;267      WM_DefaultProc(pMsg);
;;;268    }
00001a  bd70              POP      {r4-r6,pc}
                  |L1.28|
00001c  6820              LDR      r0,[r4,#0]            ;259
00001e  280b              CMP      r0,#0xb               ;259
000020  d005              BEQ      |L1.46|
000022  280f              CMP      r0,#0xf               ;259
000024  d107              BNE      |L1.54|
000026  4630              MOV      r0,r6                 ;261
000028  f7fffffe          BL       _Paint
00002c  e7f5              B        |L1.26|
                  |L1.46|
00002e  4628              MOV      r0,r5                 ;264
000030  f7fffffe          BL       _Delete
000034  bf00              NOP                            ;265
                  |L1.54|
000036  bf00              NOP                            ;265
000038  4620              MOV      r0,r4                 ;267
00003a  f7fffffe          BL       WM_DefaultProc
00003e  bf00              NOP      
000040  e7eb              B        |L1.26|
;;;269    
                          ENDP


                          AREA ||i.PROGBAR_CreateEx||, CODE, READONLY, ALIGN=2

                  PROGBAR_CreateEx PROC
;;;279    */
;;;280    PROGBAR_Handle PROGBAR_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;281                                    int WinFlags, int ExFlags, int Id)
;;;282    {
000004  b085              SUB      sp,sp,#0x14
000006  4606              MOV      r6,r0
000008  460f              MOV      r7,r1
00000a  4690              MOV      r8,r2
00000c  e9ddab13          LDRD     r10,r11,[sp,#0x4c]
000010  f8dd9048          LDR      r9,[sp,#0x48]
;;;283      PROGBAR_Handle hObj;
;;;284      WM_LOCK();
000014  f7fffffe          BL       GUI_Lock
;;;285      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, PROGBAR_Callback,
000018  2134              MOVS     r1,#0x34
00001a  4a18              LDR      r2,|L2.124|
00001c  fa1ff08a          UXTH     r0,r10
000020  e9cd9000          STRD     r9,r0,[sp,#0]
000024  e9cd2102          STRD     r2,r1,[sp,#8]
000028  4642              MOV      r2,r8
00002a  4639              MOV      r1,r7
00002c  4630              MOV      r0,r6
00002e  9b08              LDR      r3,[sp,#0x20]
000030  f7fffffe          BL       WM_CreateWindowAsChild
000034  4605              MOV      r5,r0
;;;286                                    sizeof(PROGBAR_Obj) - sizeof(WM_Obj));
;;;287      if (hObj) {
000036  b1dd              CBZ      r5,|L2.112|
;;;288        PROGBAR_Obj* pObj;
;;;289        pObj = (PROGBAR_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000038  4628              MOV      r0,r5
00003a  f7fffffe          BL       GUI_ALLOC_h2p
00003e  4604              MOV      r4,r0
;;;290        /* init widget specific variables */
;;;291        WIDGET__Init(&pObj->Widget, Id, 0);
000040  2200              MOVS     r2,#0
000042  4620              MOV      r0,r4
000044  9915              LDR      r1,[sp,#0x54]
000046  f7fffffe          BL       WIDGET__Init
;;;292        WIDGET_SetEffect(hObj, &WIDGET_Effect_None); /* Standard effect for progbar: None */
00004a  490d              LDR      r1,|L2.128|
00004c  4628              MOV      r0,r5
00004e  f7fffffe          BL       WIDGET_SetEffect
;;;293        PROGBAR_INIT_ID(pObj);
;;;294        /* init member variables */
;;;295        pObj->Props        = PROGBAR_DefaultProps;
000052  2214              MOVS     r2,#0x14
000054  490b              LDR      r1,|L2.132|
000056  f104003c          ADD      r0,r4,#0x3c
00005a  f7fffffe          BL       __aeabi_memcpy4
;;;296        pObj->TextAlign    = GUI_TA_CENTER;
00005e  2002              MOVS     r0,#2
000060  8660              STRH     r0,[r4,#0x32]
;;;297        pObj->Max          = 100;
000062  2064              MOVS     r0,#0x64
000064  63a0              STR      r0,[r4,#0x38]
;;;298        pObj->Min          = 0;
000066  2000              MOVS     r0,#0
000068  6360              STR      r0,[r4,#0x34]
;;;299        pObj->Flags        = ExFlags;
00006a  f884b050          STRB     r11,[r4,#0x50]
;;;300      }
00006e  bf00              NOP      
                  |L2.112|
;;;301      WM_UNLOCK();
000070  f7fffffe          BL       GUI_Unlock
;;;302      return hObj;
000074  4628              MOV      r0,r5
;;;303    }
000076  b009              ADD      sp,sp,#0x24
000078  e8bd8ff0          POP      {r4-r11,pc}
;;;304    
                          ENDP

                  |L2.124|
                          DCD      PROGBAR_Callback
                  |L2.128|
                          DCD      WIDGET_Effect_None
                  |L2.132|
                          DCD      PROGBAR_DefaultProps

                          AREA ||i.PROGBAR_SetValue||, CODE, READONLY, ALIGN=1

                  PROGBAR_SetValue PROC
;;;314    */
;;;315    void PROGBAR_SetValue(PROGBAR_Handle hObj, int v) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  b086              SUB      sp,sp,#0x18
000006  4606              MOV      r6,r0
000008  460d              MOV      r5,r1
;;;316      if (hObj) {
00000a  2e00              CMP      r6,#0
00000c  d07e              BEQ      |L3.268|
;;;317        PROGBAR_Obj* pObj;
;;;318        WM_LOCK();
00000e  f7fffffe          BL       GUI_Lock
;;;319        pObj= PROGBAR_H2P(hObj);
000012  4630              MOV      r0,r6
000014  f7fffffe          BL       GUI_ALLOC_h2p
000018  4604              MOV      r4,r0
;;;320        /* Put v into legal range */
;;;321        if (v < pObj->Min) {
00001a  6b60              LDR      r0,[r4,#0x34]
00001c  42a8              CMP      r0,r5
00001e  dd00              BLE      |L3.34|
;;;322    	    v = pObj->Min;
000020  6b65              LDR      r5,[r4,#0x34]
                  |L3.34|
;;;323        }
;;;324        if (v > pObj->Max) {
000022  6ba0              LDR      r0,[r4,#0x38]
000024  42a8              CMP      r0,r5
000026  da00              BGE      |L3.42|
;;;325    	    v = pObj->Max;
000028  6ba5              LDR      r5,[r4,#0x38]
                  |L3.42|
;;;326        }
;;;327        if (pObj->v != v) {
00002a  6aa0              LDR      r0,[r4,#0x28]
00002c  42a8              CMP      r0,r5
00002e  d06e              BEQ      |L3.270|
;;;328          GUI_RECT r;
;;;329          if (pObj->Flags & PROGBAR_CF_VERTICAL) {
000030  f8940050          LDRB     r0,[r4,#0x50]
000034  f0100f01          TST      r0,#1
000038  d028              BEQ      |L3.140|
;;;330            /* Get y values */
;;;331            if (v < pObj->v) {
00003a  6aa0              LDR      r0,[r4,#0x28]
00003c  42a8              CMP      r0,r5
00003e  dd0e              BLE      |L3.94|
;;;332              r.y1 = _Value2Pos(pObj, v);
000040  4629              MOV      r1,r5
000042  4620              MOV      r0,r4
000044  f7fffffe          BL       _Value2Pos
000048  b200              SXTH     r0,r0
00004a  f8ad0016          STRH     r0,[sp,#0x16]
;;;333              r.y0 = _Value2Pos(pObj, pObj->v);
00004e  4620              MOV      r0,r4
000050  6aa1              LDR      r1,[r4,#0x28]
000052  f7fffffe          BL       _Value2Pos
000056  b200              SXTH     r0,r0
000058  f8ad0012          STRH     r0,[sp,#0x12]
00005c  e00d              B        |L3.122|
                  |L3.94|
;;;334            } else {
;;;335              r.y1 = _Value2Pos(pObj, pObj->v);
00005e  4620              MOV      r0,r4
000060  6aa1              LDR      r1,[r4,#0x28]
000062  f7fffffe          BL       _Value2Pos
000066  b200              SXTH     r0,r0
000068  f8ad0016          STRH     r0,[sp,#0x16]
;;;336              r.y0 = _Value2Pos(pObj, v);
00006c  4629              MOV      r1,r5
00006e  4620              MOV      r0,r4
000070  f7fffffe          BL       _Value2Pos
000074  b200              SXTH     r0,r0
000076  f8ad0012          STRH     r0,[sp,#0x12]
                  |L3.122|
;;;337            }
;;;338    		    r.x0    = 0;
00007a  2000              MOVS     r0,#0
00007c  f8ad0010          STRH     r0,[sp,#0x10]
;;;339    		    r.x1    = 4095;
000080  f64070ff          MOV      r0,#0xfff
000084  f8ad0014          STRH     r0,[sp,#0x14]
;;;340            pObj->v = v;
000088  62a5              STR      r5,[r4,#0x28]
00008a  e053              B        |L3.308|
                  |L3.140|
;;;341          } else {
;;;342            /* Get x values */
;;;343            if (v < pObj->v) {
00008c  6aa0              LDR      r0,[r4,#0x28]
00008e  42a8              CMP      r0,r5
000090  dd0e              BLE      |L3.176|
;;;344              r.x0 = _Value2Pos(pObj, v);
000092  4629              MOV      r1,r5
000094  4620              MOV      r0,r4
000096  f7fffffe          BL       _Value2Pos
00009a  b200              SXTH     r0,r0
00009c  f8ad0010          STRH     r0,[sp,#0x10]
;;;345              r.x1 = _Value2Pos(pObj, pObj->v);
0000a0  4620              MOV      r0,r4
0000a2  6aa1              LDR      r1,[r4,#0x28]
0000a4  f7fffffe          BL       _Value2Pos
0000a8  b200              SXTH     r0,r0
0000aa  f8ad0014          STRH     r0,[sp,#0x14]
0000ae  e00d              B        |L3.204|
                  |L3.176|
;;;346            } else {
;;;347              r.x0 = _Value2Pos(pObj, pObj->v);
0000b0  4620              MOV      r0,r4
0000b2  6aa1              LDR      r1,[r4,#0x28]
0000b4  f7fffffe          BL       _Value2Pos
0000b8  b200              SXTH     r0,r0
0000ba  f8ad0010          STRH     r0,[sp,#0x10]
;;;348              r.x1 = _Value2Pos(pObj, v);
0000be  4629              MOV      r1,r5
0000c0  4620              MOV      r0,r4
0000c2  f7fffffe          BL       _Value2Pos
0000c6  b200              SXTH     r0,r0
0000c8  f8ad0014          STRH     r0,[sp,#0x14]
                  |L3.204|
;;;349            }
;;;350    		    r.y0    = 0;
0000cc  2000              MOVS     r0,#0
0000ce  f8ad0012          STRH     r0,[sp,#0x12]
;;;351    		    r.y1    = 4095;
0000d2  f64070ff          MOV      r0,#0xfff
0000d6  f8ad0016          STRH     r0,[sp,#0x16]
;;;352            if (pObj->hpText == 0) {
0000da  8da0              LDRH     r0,[r4,#0x2c]
0000dc  bb48              CBNZ     r0,|L3.306|
;;;353              const GUI_FONT GUI_UNI_PTR * pOldFont;
;;;354              char acBuffer[5];
;;;355              GUI_RECT rText;
;;;356              pOldFont = GUI_SetFont(pObj->Props.pFont);
0000de  6be0              LDR      r0,[r4,#0x3c]
0000e0  f7fffffe          BL       GUI_SetFont
0000e4  4607              MOV      r7,r0
;;;357              PROGBAR__GetTextRect(pObj, &rText, PROGBAR__GetText(pObj, acBuffer));
0000e6  a902              ADD      r1,sp,#8
0000e8  4620              MOV      r0,r4
0000ea  f7fffffe          BL       PROGBAR__GetText
0000ee  4680              MOV      r8,r0
0000f0  4642              MOV      r2,r8
0000f2  4669              MOV      r1,sp
0000f4  4620              MOV      r0,r4
0000f6  f7fffffe          BL       PROGBAR__GetTextRect
;;;358              GUI_MergeRect(&r, &r, &rText);
0000fa  466a              MOV      r2,sp
0000fc  a904              ADD      r1,sp,#0x10
0000fe  a804              ADD      r0,sp,#0x10
000100  f7fffffe          BL       GUI_MergeRect
;;;359              pObj->v = v;
000104  62a5              STR      r5,[r4,#0x28]
;;;360              PROGBAR__GetTextRect(pObj, &rText, PROGBAR__GetText(pObj, acBuffer));
000106  a902              ADD      r1,sp,#8
000108  4620              MOV      r0,r4
00010a  e001              B        |L3.272|
                  |L3.268|
00010c  e01a              B        |L3.324|
                  |L3.270|
00010e  e016              B        |L3.318|
                  |L3.272|
000110  f7fffffe          BL       PROGBAR__GetText
000114  4680              MOV      r8,r0
000116  4642              MOV      r2,r8
000118  4669              MOV      r1,sp
00011a  4620              MOV      r0,r4
00011c  f7fffffe          BL       PROGBAR__GetTextRect
;;;361              GUI_MergeRect(&r, &r, &rText);
000120  466a              MOV      r2,sp
000122  a904              ADD      r1,sp,#0x10
000124  a804              ADD      r0,sp,#0x10
000126  f7fffffe          BL       GUI_MergeRect
;;;362              GUI_SetFont(pOldFont);
00012a  4638              MOV      r0,r7
00012c  f7fffffe          BL       GUI_SetFont
;;;363            } else {
000130  e000              B        |L3.308|
                  |L3.306|
;;;364              pObj->v = v;
000132  62a5              STR      r5,[r4,#0x28]
                  |L3.308|
;;;365            }
;;;366          }
;;;367          WM_InvalidateRect(hObj, &r);
000134  a904              ADD      r1,sp,#0x10
000136  4630              MOV      r0,r6
000138  f7fffffe          BL       WM_InvalidateRect
;;;368        }
00013c  bf00              NOP      
                  |L3.318|
;;;369        WM_UNLOCK();
00013e  f7fffffe          BL       GUI_Unlock
;;;370      }
000142  bf00              NOP      
                  |L3.324|
;;;371    }
000144  b006              ADD      sp,sp,#0x18
000146  e8bd81f0          POP      {r4-r8,pc}
;;;372    
                          ENDP


                          AREA ||i.PROGBAR__FreeText||, CODE, READONLY, ALIGN=1

                  PROGBAR__FreeText PROC
;;;190    */
;;;191    void PROGBAR__FreeText(PROGBAR_Handle hObj) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;192      PROGBAR_Obj* pObj = PROGBAR_H2P(hObj);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       GUI_ALLOC_h2p
00000a  4605              MOV      r5,r0
;;;193      GUI_ALLOC_FreePtr(&pObj->hpText);
00000c  f105002c          ADD      r0,r5,#0x2c
000010  f7fffffe          BL       GUI_ALLOC_FreePtr
;;;194    }
000014  bd70              POP      {r4-r6,pc}
;;;195    
                          ENDP


                          AREA ||i.PROGBAR__GetText||, CODE, READONLY, ALIGN=1

                  PROGBAR__GetText PROC
;;;199    */
;;;200    const char * PROGBAR__GetText(const PROGBAR_Obj* pObj, char* pBuffer) {
000000  b573              PUSH     {r0,r1,r4-r6,lr}
000002  4604              MOV      r4,r0
;;;201      char* pText;
;;;202      if (pObj->hpText) {
000004  8da0              LDRH     r0,[r4,#0x2c]
000006  b128              CBZ      r0,|L5.20|
;;;203        pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
000008  f9b4002c          LDRSH    r0,[r4,#0x2c]
00000c  f7fffffe          BL       GUI_ALLOC_h2p
000010  4605              MOV      r5,r0
000012  e017              B        |L5.68|
                  |L5.20|
;;;204      } else {
;;;205        pText = pBuffer;
000014  9d01              LDR      r5,[sp,#4]
;;;206        GUI_AddDecMin((100 * (I32)(pObj->v - pObj->Min)) / (pObj->Max - pObj->Min), &pBuffer);
000016  6b61              LDR      r1,[r4,#0x34]
000018  6aa0              LDR      r0,[r4,#0x28]
00001a  1a40              SUBS     r0,r0,r1
00001c  2164              MOVS     r1,#0x64
00001e  4348              MULS     r0,r1,r0
000020  e9d4210d          LDRD     r2,r1,[r4,#0x34]
000024  1a89              SUBS     r1,r1,r2
000026  fb90f6f1          SDIV     r6,r0,r1
00002a  a901              ADD      r1,sp,#4
00002c  4630              MOV      r0,r6
00002e  f7fffffe          BL       GUI_AddDecMin
;;;207        *pBuffer++ = '%';
000032  2025              MOVS     r0,#0x25
000034  9901              LDR      r1,[sp,#4]
000036  7008              STRB     r0,[r1,#0]
000038  9801              LDR      r0,[sp,#4]
00003a  1c40              ADDS     r0,r0,#1
00003c  9001              STR      r0,[sp,#4]
;;;208    		*pBuffer   = 0;
00003e  2000              MOVS     r0,#0
000040  9901              LDR      r1,[sp,#4]
000042  7008              STRB     r0,[r1,#0]
                  |L5.68|
;;;209    	}
;;;210      return (const char*)pText;
000044  4628              MOV      r0,r5
;;;211    }
000046  bd7c              POP      {r2-r6,pc}
;;;212    
                          ENDP


                          AREA ||i.PROGBAR__GetTextRect||, CODE, READONLY, ALIGN=1

                  PROGBAR__GetTextRect PROC
;;;216    */
;;;217    void PROGBAR__GetTextRect(const PROGBAR_Obj* pObj, GUI_RECT* pRect, const char* pText) {
000000  e92d5ff0          PUSH     {r4-r12,lr}
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
000008  4617              MOV      r7,r2
;;;218      int xSize      = pObj->Widget.Win.Rect.x1 - pObj->Widget.Win.Rect.x0 + 1;
00000a  f9b50004          LDRSH    r0,[r5,#4]
00000e  f9b51000          LDRSH    r1,[r5,#0]
000012  1a40              SUBS     r0,r0,r1
000014  f1000801          ADD      r8,r0,#1
;;;219      int ySize      = pObj->Widget.Win.Rect.y1 - pObj->Widget.Win.Rect.y0 + 1;
000018  f9b50006          LDRSH    r0,[r5,#6]
00001c  f9b51002          LDRSH    r1,[r5,#2]
000020  1a40              SUBS     r0,r0,r1
000022  f1000b01          ADD      r11,r0,#1
;;;220      int TextWidth  = GUI_GetStringDistX(pText);
000026  4638              MOV      r0,r7
000028  f7fffffe          BL       GUI_GetStringDistX
00002c  4606              MOV      r6,r0
;;;221      int TextHeight = GUI_GetFontSizeY();
00002e  f7fffffe          BL       GUI_GetFontSizeY
000032  4681              MOV      r9,r0
;;;222      int EffectSize = pObj->Widget.pEffect->EffectSize;
000034  6a28              LDR      r0,[r5,#0x20]
000036  f8d0a014          LDR      r10,[r0,#0x14]
;;;223      switch (pObj->TextAlign & GUI_TA_HORIZONTAL) {
00003a  f8950032          LDRB     r0,[r5,#0x32]
00003e  f0000003          AND      r0,r0,#3
000042  2801              CMP      r0,#1
000044  d009              BEQ      |L6.90|
000046  2802              CMP      r0,#2
000048  d10f              BNE      |L6.106|
;;;224      case GUI_TA_CENTER:
;;;225        pRect->x0 = (xSize - TextWidth) / 2;
00004a  eba80006          SUB      r0,r8,r6
00004e  eb0071d0          ADD      r1,r0,r0,LSR #31
000052  1049              ASRS     r1,r1,#1
000054  b209              SXTH     r1,r1
000056  8021              STRH     r1,[r4,#0]
;;;226    		break;
000058  e00b              B        |L6.114|
                  |L6.90|
;;;227      case GUI_TA_RIGHT:
;;;228        pRect->x0 = xSize - TextWidth - 1 - EffectSize;
00005a  eba80006          SUB      r0,r8,r6
00005e  1e40              SUBS     r0,r0,#1
000060  eba0000a          SUB      r0,r0,r10
000064  b200              SXTH     r0,r0
000066  8020              STRH     r0,[r4,#0]
;;;229    		break;
000068  e003              B        |L6.114|
                  |L6.106|
;;;230      default:
;;;231        pRect->x0 = EffectSize;
00006a  fa0ff08a          SXTH     r0,r10
00006e  8020              STRH     r0,[r4,#0]
000070  bf00              NOP                            ;223
                  |L6.114|
000072  bf00              NOP                            ;226
;;;232    	}
;;;233      pRect->y0  = (ySize - TextHeight) / 2;
000074  ebab0009          SUB      r0,r11,r9
000078  eb0071d0          ADD      r1,r0,r0,LSR #31
00007c  1049              ASRS     r1,r1,#1
00007e  b209              SXTH     r1,r1
000080  8061              STRH     r1,[r4,#2]
;;;234      pRect->x0 += pObj->XOff;
000082  8820              LDRH     r0,[r4,#0]
000084  8de9              LDRH     r1,[r5,#0x2e]
000086  4408              ADD      r0,r0,r1
000088  b200              SXTH     r0,r0
00008a  8020              STRH     r0,[r4,#0]
;;;235      pRect->y0 += pObj->YOff;
00008c  8860              LDRH     r0,[r4,#2]
00008e  8e29              LDRH     r1,[r5,#0x30]
000090  4408              ADD      r0,r0,r1
000092  b200              SXTH     r0,r0
000094  8060              STRH     r0,[r4,#2]
;;;236      pRect->x1  = pRect->x0 + TextWidth  - 1;
000096  8820              LDRH     r0,[r4,#0]
000098  4430              ADD      r0,r0,r6
00009a  1e40              SUBS     r0,r0,#1
00009c  b200              SXTH     r0,r0
00009e  80a0              STRH     r0,[r4,#4]
;;;237      pRect->y1  = pRect->y0 + TextHeight - 1;
0000a0  8860              LDRH     r0,[r4,#2]
0000a2  4448              ADD      r0,r0,r9
0000a4  1e40              SUBS     r0,r0,#1
0000a6  b200              SXTH     r0,r0
0000a8  80e0              STRH     r0,[r4,#6]
;;;238    }
0000aa  e8bd9ff0          POP      {r4-r12,pc}
;;;239    
                          ENDP


                          AREA ||i._Delete||, CODE, READONLY, ALIGN=1

                  _Delete PROC
;;;159    */
;;;160    static void _Delete(PROGBAR_Handle hObj) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;161      PROGBAR__FreeText(hObj);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       PROGBAR__FreeText
;;;162    }
00000a  bd10              POP      {r4,pc}
;;;163    
                          ENDP


                          AREA ||i._DrawPart||, CODE, READONLY, ALIGN=1

                  _DrawPart PROC
;;;100    */
;;;101    static void _DrawPart(const PROGBAR_Obj* pObj, int Index,
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;102    										  int xText, int yText, const char* pText) {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
00000c  f8dd8018          LDR      r8,[sp,#0x18]
;;;103      LCD_SetBkColor(pObj->Props.aBarColor[Index]);
000010  f1040140          ADD      r1,r4,#0x40
000014  f8510025          LDR      r0,[r1,r5,LSL #2]
000018  f7fffffe          BL       LCD_SetBkColor
;;;104      LCD_SetColor(pObj->Props.aTextColor[Index]);
00001c  f1040148          ADD      r1,r4,#0x48
000020  f8510025          LDR      r0,[r1,r5,LSL #2]
000024  f7fffffe          BL       LCD_SetColor
;;;105      GUI_Clear();
000028  f7fffffe          BL       GUI_Clear
;;;106      if (pText) {
00002c  f1b80f00          CMP      r8,#0
000030  d006              BEQ      |L8.64|
;;;107        GUI_GotoXY(xText, yText);
000032  4639              MOV      r1,r7
000034  4630              MOV      r0,r6
000036  f7fffffe          BL       GUI_GotoXY
;;;108        GUI_DispString(pText);
00003a  4640              MOV      r0,r8
00003c  f7fffffe          BL       GUI_DispString
                  |L8.64|
;;;109      }
;;;110    }
000040  e8bd81f0          POP      {r4-r8,pc}
;;;111    
                          ENDP


                          AREA ||i._Paint||, CODE, READONLY, ALIGN=1

                  _Paint PROC
;;;115    */
;;;116    static void _Paint(PROGBAR_Obj * pObj) {
000000  b5f0              PUSH     {r4-r7,lr}
000002  b08b              SUB      sp,sp,#0x2c
000004  4604              MOV      r4,r0
;;;117      GUI_RECT r, rInside, rClient, rText;
;;;118      const char* pText;
;;;119      char ac[5];
;;;120      int tm, Pos;
;;;121      WM_GetClientRect(&rClient);
000006  a805              ADD      r0,sp,#0x14
000008  f7fffffe          BL       WM_GetClientRect
;;;122      GUI__ReduceRect(&rInside, &rClient, pObj->Widget.pEffect->EffectSize);
00000c  6a20              LDR      r0,[r4,#0x20]
00000e  a905              ADD      r1,sp,#0x14
000010  6942              LDR      r2,[r0,#0x14]
000012  a807              ADD      r0,sp,#0x1c
000014  f7fffffe          BL       GUI__ReduceRect
;;;123      Pos  = _Value2Pos(pObj, pObj->v);
000018  4620              MOV      r0,r4
00001a  6aa1              LDR      r1,[r4,#0x28]
00001c  f7fffffe          BL       _Value2Pos
000020  4606              MOV      r6,r0
;;;124      if (pObj->Flags & PROGBAR_CF_VERTICAL) {
000022  f8940050          LDRB     r0,[r4,#0x50]
000026  f0100f01          TST      r0,#1
00002a  d025              BEQ      |L9.120|
;;;125        /* Draw lower part */
;;;126        r    = rInside;
00002c  e9dd0107          LDRD     r0,r1,[sp,#0x1c]
000030  e9cd0109          STRD     r0,r1,[sp,#0x24]
;;;127        r.y0 = Pos;
000034  b230              SXTH     r0,r6
000036  f8ad0026          STRH     r0,[sp,#0x26]
;;;128        WM_SetUserClipArea(&r);
00003a  a809              ADD      r0,sp,#0x24
00003c  f7fffffe          BL       WM_SetUserClipRect
;;;129        _DrawPart(pObj, 0, 0, 0, 0);
000040  2000              MOVS     r0,#0
000042  4603              MOV      r3,r0
000044  4602              MOV      r2,r0
000046  4601              MOV      r1,r0
000048  9000              STR      r0,[sp,#0]
00004a  4620              MOV      r0,r4
00004c  f7fffffe          BL       _DrawPart
;;;130        /* Draw upper part */
;;;131        r    = rInside;
000050  e9dd0107          LDRD     r0,r1,[sp,#0x1c]
000054  e9cd0109          STRD     r0,r1,[sp,#0x24]
;;;132        r.y1 = Pos - 1;
000058  1e70              SUBS     r0,r6,#1
00005a  b200              SXTH     r0,r0
00005c  f8ad002a          STRH     r0,[sp,#0x2a]
;;;133        WM_SetUserClipArea(&r);
000060  a809              ADD      r0,sp,#0x24
000062  f7fffffe          BL       WM_SetUserClipRect
;;;134        _DrawPart(pObj, 1, 0, 0, 0);
000066  2000              MOVS     r0,#0
000068  4603              MOV      r3,r0
00006a  4602              MOV      r2,r0
00006c  2101              MOVS     r1,#1
00006e  9000              STR      r0,[sp,#0]
000070  4620              MOV      r0,r4
000072  f7fffffe          BL       _DrawPart
000076  e037              B        |L9.232|
                  |L9.120|
;;;135      } else {
;;;136        pText = PROGBAR__GetText(pObj, ac);
000078  a901              ADD      r1,sp,#4
00007a  4620              MOV      r0,r4
00007c  f7fffffe          BL       PROGBAR__GetText
000080  4605              MOV      r5,r0
;;;137        GUI_SetFont(pObj->Props.pFont);
000082  6be0              LDR      r0,[r4,#0x3c]
000084  f7fffffe          BL       GUI_SetFont
;;;138        PROGBAR__GetTextRect(pObj, &rText, pText);
000088  462a              MOV      r2,r5
00008a  a903              ADD      r1,sp,#0xc
00008c  4620              MOV      r0,r4
00008e  f7fffffe          BL       PROGBAR__GetTextRect
;;;139        tm = GUI_SetTextMode(GUI_TM_TRANS);
000092  2002              MOVS     r0,#2
000094  f7fffffe          BL       GUI_SetTextMode
000098  4607              MOV      r7,r0
;;;140        /* Draw left bar */
;;;141        r    = rInside;
00009a  e9dd0107          LDRD     r0,r1,[sp,#0x1c]
00009e  e9cd0109          STRD     r0,r1,[sp,#0x24]
;;;142        r.x1 = Pos - 1;
0000a2  1e70              SUBS     r0,r6,#1
0000a4  b200              SXTH     r0,r0
0000a6  f8ad0028          STRH     r0,[sp,#0x28]
;;;143        WM_SetUserClipArea(&r);
0000aa  a809              ADD      r0,sp,#0x24
0000ac  f7fffffe          BL       WM_SetUserClipRect
;;;144        _DrawPart(pObj, 0, rText.x0, rText.y0, pText);
0000b0  9500              STR      r5,[sp,#0]
0000b2  f9bd300e          LDRSH    r3,[sp,#0xe]
0000b6  f9bd200c          LDRSH    r2,[sp,#0xc]
0000ba  2100              MOVS     r1,#0
0000bc  4620              MOV      r0,r4
0000be  f7fffffe          BL       _DrawPart
;;;145        /* Draw right bar */
;;;146        r    = rInside;
0000c2  e9dd0107          LDRD     r0,r1,[sp,#0x1c]
0000c6  e9cd0109          STRD     r0,r1,[sp,#0x24]
;;;147        r.x0 = Pos;
0000ca  b230              SXTH     r0,r6
0000cc  f8ad0024          STRH     r0,[sp,#0x24]
;;;148        WM_SetUserClipArea(&r);
0000d0  a809              ADD      r0,sp,#0x24
0000d2  f7fffffe          BL       WM_SetUserClipRect
;;;149        _DrawPart(pObj, 1, rText.x0, rText.y0, pText);
0000d6  9500              STR      r5,[sp,#0]
0000d8  f9bd300e          LDRSH    r3,[sp,#0xe]
0000dc  f9bd200c          LDRSH    r2,[sp,#0xc]
0000e0  2101              MOVS     r1,#1
0000e2  4620              MOV      r0,r4
0000e4  f7fffffe          BL       _DrawPart
                  |L9.232|
;;;150      }
;;;151      WM_SetUserClipArea(NULL);
0000e8  2000              MOVS     r0,#0
0000ea  f7fffffe          BL       WM_SetUserClipRect
;;;152      GUI_SetTextMode(tm);
0000ee  4638              MOV      r0,r7
0000f0  f7fffffe          BL       GUI_SetTextMode
;;;153      WIDGET__EFFECT_DrawDownRect(&pObj->Widget, &rClient);
0000f4  a905              ADD      r1,sp,#0x14
0000f6  4620              MOV      r0,r4
0000f8  f7fffffe          BL       WIDGET__EFFECT_DrawDownRect
;;;154    }
0000fc  b00b              ADD      sp,sp,#0x2c
0000fe  bdf0              POP      {r4-r7,pc}
;;;155    
                          ENDP


                          AREA ||i._Value2Pos||, CODE, READONLY, ALIGN=1

                  _Value2Pos PROC
;;;81     */
;;;82     static int _Value2Pos(const PROGBAR_Obj* pObj, int v) {
000000  b5f0              PUSH     {r4-r7,lr}
000002  4602              MOV      r2,r0
;;;83       int IsVertical = pObj->Flags & PROGBAR_CF_VERTICAL;
000004  f8920050          LDRB     r0,[r2,#0x50]
000008  f0000501          AND      r5,r0,#1
;;;84       int EffectSize = pObj->Widget.pEffect->EffectSize;
00000c  6a10              LDR      r0,[r2,#0x20]
00000e  6946              LDR      r6,[r0,#0x14]
;;;85       int Size  = IsVertical ? pObj->Widget.Win.Rect.y1 - pObj->Widget.Win.Rect.y0 + 1 : pObj->Widget.Win.Rect.x1 - pObj->Widget.Win.Rect.x0 + 1;
000010  b13d              CBZ      r5,|L10.34|
000012  f9b20006          LDRSH    r0,[r2,#6]
000016  f9b2c002          LDRSH    r12,[r2,#2]
00001a  eba0000c          SUB      r0,r0,r12
00001e  1c40              ADDS     r0,r0,#1
000020  e006              B        |L10.48|
                  |L10.34|
000022  f9b20004          LDRSH    r0,[r2,#4]
000026  f9b2c000          LDRSH    r12,[r2,#0]
00002a  eba0000c          SUB      r0,r0,r12
00002e  1c40              ADDS     r0,r0,#1
                  |L10.48|
000030  4607              MOV      r7,r0
;;;86       int Min   = pObj->Min;
000032  6b53              LDR      r3,[r2,#0x34]
;;;87       int Max   = pObj->Max;
000034  6b94              LDR      r4,[r2,#0x38]
;;;88       if (v < Min) {
000036  4299              CMP      r1,r3
000038  da00              BGE      |L10.60|
;;;89     	  v = Min;
00003a  4619              MOV      r1,r3
                  |L10.60|
;;;90       }
;;;91       if (v > Max) {
00003c  42a1              CMP      r1,r4
00003e  dd00              BLE      |L10.66|
;;;92     	  v = Max;
000040  4621              MOV      r1,r4
                  |L10.66|
;;;93       }
;;;94       return EffectSize + ((Size - 2 * EffectSize) * (I32)(IsVertical ? Max - v : v - Min)) / (Max - Min);
000042  2002              MOVS     r0,#2
000044  fb007c16          MLS      r12,r0,r6,r7
000048  b10d              CBZ      r5,|L10.78|
00004a  1a60              SUBS     r0,r4,r1
00004c  e000              B        |L10.80|
                  |L10.78|
00004e  1ac8              SUBS     r0,r1,r3
                  |L10.80|
000050  fb0cfc00          MUL      r12,r12,r0
000054  1ae0              SUBS     r0,r4,r3
000056  fb9cf0f0          SDIV     r0,r12,r0
00005a  4430              ADD      r0,r0,r6
;;;95     }
00005c  bdf0              POP      {r4-r7,pc}
;;;96     
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  PROGBAR_DefaultProps
                          DCD      GUI_Font6x8
                          DCD      0x00555555
                          DCD      0x00aaaaaa
                          DCD      0x00ffffff
                          DCD      0x00000000
