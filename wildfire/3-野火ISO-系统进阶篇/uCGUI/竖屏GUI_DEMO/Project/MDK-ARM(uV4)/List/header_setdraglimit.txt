; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\header_setdraglimit.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\header_setdraglimit.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Widget\HEADER_SetDragLimit.c]
                          THUMB

                          AREA ||i.HEADER_SetDragLimit||, CODE, READONLY, ALIGN=1

                  HEADER_SetDragLimit PROC
;;;34     */
;;;35     void HEADER_SetDragLimit(HEADER_Handle hObj, unsigned OnOff) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;36       if (hObj) {
000006  b184              CBZ      r4,|L1.42|
;;;37         HEADER_Obj * pObj;
;;;38         WM_LOCK();
000008  f7fffffe          BL       GUI_Lock
;;;39         pObj = HEADER_H2P(hObj);
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       GUI_ALLOC_h2p
000012  4606              MOV      r6,r0
;;;40         if (OnOff) {
000014  b11d              CBZ      r5,|L1.30|
;;;41           pObj->DragLimit = 1;
000016  2001              MOVS     r0,#1
000018  f8860050          STRB     r0,[r6,#0x50]
00001c  e002              B        |L1.36|
                  |L1.30|
;;;42         } else {
;;;43           pObj->DragLimit = 0;
00001e  2000              MOVS     r0,#0
000020  f8860050          STRB     r0,[r6,#0x50]
                  |L1.36|
;;;44         }
;;;45         WM_UNLOCK();
000024  f7fffffe          BL       GUI_Unlock
;;;46       }
000028  bf00              NOP      
                  |L1.42|
;;;47     }
00002a  bd70              POP      {r4-r6,pc}
;;;48     
                          ENDP

