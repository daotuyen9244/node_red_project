; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\jdapistd.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\jdapistd.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\JPEG\jdapistd.c]
                          THUMB

                          AREA ||i.jpeg_finish_output||, CODE, READONLY, ALIGN=1

                  jpeg_finish_output PROC
;;;252    GLOBAL(boolean)
;;;253    jpeg_finish_output (j_decompress_ptr cinfo)
000000  b510              PUSH     {r4,lr}
;;;254    {
000002  4604              MOV      r4,r0
;;;255      if ((cinfo->global_state == DSTATE_SCANNING ||
000004  6960              LDR      r0,[r4,#0x14]
000006  28cd              CMP      r0,#0xcd
000008  d002              BEQ      |L1.16|
;;;256           cinfo->global_state == DSTATE_RAW_OK) && cinfo->buffered_image) {
00000a  6960              LDR      r0,[r4,#0x14]
00000c  28ce              CMP      r0,#0xce
00000e  d109              BNE      |L1.36|
                  |L1.16|
000010  6c20              LDR      r0,[r4,#0x40]
000012  b138              CBZ      r0,|L1.36|
;;;257        /* Terminate this pass. */
;;;258        /* We do not require the whole pass to have been completed. */
;;;259        (*cinfo->master->finish_output_pass) (cinfo);
000014  f8d401a4          LDR      r0,[r4,#0x1a4]
000018  6841              LDR      r1,[r0,#4]
00001a  4620              MOV      r0,r4
00001c  4788              BLX      r1
;;;260        cinfo->global_state = DSTATE_BUFPOST;
00001e  20d0              MOVS     r0,#0xd0
000020  6160              STR      r0,[r4,#0x14]
000022  e00c              B        |L1.62|
                  |L1.36|
;;;261      } else if (cinfo->global_state != DSTATE_BUFPOST) {
000024  6960              LDR      r0,[r4,#0x14]
000026  28d0              CMP      r0,#0xd0
000028  d009              BEQ      |L1.62|
;;;262        /* BUFPOST = repeat call after a suspension, anything else is error */
;;;263        ERREXIT1(cinfo, JERR_BAD_STATE, cinfo->global_state);
00002a  2014              MOVS     r0,#0x14
00002c  6821              LDR      r1,[r4,#0]
00002e  6148              STR      r0,[r1,#0x14]
000030  6821              LDR      r1,[r4,#0]
000032  6960              LDR      r0,[r4,#0x14]
000034  6188              STR      r0,[r1,#0x18]
000036  6820              LDR      r0,[r4,#0]
000038  6801              LDR      r1,[r0,#0]
00003a  4620              MOV      r0,r4
00003c  4788              BLX      r1
                  |L1.62|
;;;264      }
;;;265      /* Read markers looking for SOS or EOI */
;;;266      while (cinfo->input_scan_number <= cinfo->output_scan_number &&
00003e  e007              B        |L1.80|
                  |L1.64|
;;;267    	 ! cinfo->inputctl->eoi_reached) {
;;;268        if ((*cinfo->inputctl->consume_input) (cinfo) == JPEG_SUSPENDED)
000040  f8d401b4          LDR      r0,[r4,#0x1b4]
000044  6801              LDR      r1,[r0,#0]
000046  4620              MOV      r0,r4
000048  4788              BLX      r1
00004a  b908              CBNZ     r0,|L1.80|
;;;269          return FALSE;		/* Suspend, come back later */
00004c  2000              MOVS     r0,#0
                  |L1.78|
;;;270      }
;;;271      cinfo->global_state = DSTATE_BUFIMAGE;
;;;272      return TRUE;
;;;273    }
00004e  bd10              POP      {r4,pc}
                  |L1.80|
000050  f8d41098          LDR      r1,[r4,#0x98]         ;266
000054  f8d40090          LDR      r0,[r4,#0x90]         ;266
000058  4288              CMP      r0,r1                 ;266
00005a  dc04              BGT      |L1.102|
00005c  f8d401b4          LDR      r0,[r4,#0x1b4]        ;267
000060  6940              LDR      r0,[r0,#0x14]         ;267
000062  2800              CMP      r0,#0                 ;267
000064  d0ec              BEQ      |L1.64|
                  |L1.102|
000066  20cf              MOVS     r0,#0xcf              ;271
000068  6160              STR      r0,[r4,#0x14]         ;271
00006a  2001              MOVS     r0,#1                 ;272
00006c  e7ef              B        |L1.78|
;;;274    
                          ENDP


                          AREA ||i.jpeg_read_raw_data||, CODE, READONLY, ALIGN=1

                  jpeg_read_raw_data PROC
;;;184    GLOBAL(JDIMENSION)
;;;185    jpeg_read_raw_data (j_decompress_ptr cinfo, JSAMPIMAGE data,
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;186    		    JDIMENSION max_lines)
;;;187    {
000004  4604              MOV      r4,r0
000006  460f              MOV      r7,r1
000008  4616              MOV      r6,r2
;;;188      JDIMENSION lines_per_iMCU_row;
;;;189    
;;;190      if (cinfo->global_state != DSTATE_RAW_OK)
00000a  6960              LDR      r0,[r4,#0x14]
00000c  28ce              CMP      r0,#0xce
00000e  d009              BEQ      |L2.36|
;;;191        ERREXIT1(cinfo, JERR_BAD_STATE, cinfo->global_state);
000010  2014              MOVS     r0,#0x14
000012  6821              LDR      r1,[r4,#0]
000014  6148              STR      r0,[r1,#0x14]
000016  6821              LDR      r1,[r4,#0]
000018  6960              LDR      r0,[r4,#0x14]
00001a  6188              STR      r0,[r1,#0x18]
00001c  6820              LDR      r0,[r4,#0]
00001e  6801              LDR      r1,[r0,#0]
000020  4620              MOV      r0,r4
000022  4788              BLX      r1
                  |L2.36|
;;;192      if (cinfo->output_scanline >= cinfo->output_height) {
000024  6f61              LDR      r1,[r4,#0x74]
000026  f8d4008c          LDR      r0,[r4,#0x8c]
00002a  4288              CMP      r0,r1
00002c  d30b              BCC      |L2.70|
;;;193        WARNMS(cinfo, JWRN_TOO_MUCH_DATA);
00002e  207b              MOVS     r0,#0x7b
000030  6821              LDR      r1,[r4,#0]
000032  6148              STR      r0,[r1,#0x14]
000034  6820              LDR      r0,[r4,#0]
000036  f04f31ff          MOV      r1,#0xffffffff
00003a  6842              LDR      r2,[r0,#4]
00003c  4620              MOV      r0,r4
00003e  4790              BLX      r2
;;;194        return 0;
000040  2000              MOVS     r0,#0
                  |L2.66|
;;;195      }
;;;196    
;;;197      /* Call progress monitor hook if present */
;;;198      if (cinfo->progress != NULL) {
;;;199        cinfo->progress->pass_counter = (long) cinfo->output_scanline;
;;;200        cinfo->progress->pass_limit = (long) cinfo->output_height;
;;;201        (*cinfo->progress->progress_monitor) ((j_common_ptr) cinfo);
;;;202      }
;;;203    
;;;204      /* Verify that at least one iMCU row can be returned. */
;;;205      lines_per_iMCU_row = cinfo->max_v_samp_factor * cinfo->min_DCT_scaled_size;
;;;206      if (max_lines < lines_per_iMCU_row)
;;;207        ERREXIT(cinfo, JERR_BUFFER_SIZE);
;;;208    
;;;209      /* Decompress directly into user's buffer. */
;;;210      if (! (*cinfo->coef->decompress_data) (cinfo, data))
;;;211        return 0;			/* suspension forced, can do nothing more */
;;;212    
;;;213      /* OK, we processed one iMCU row. */
;;;214      cinfo->output_scanline += lines_per_iMCU_row;
;;;215      return lines_per_iMCU_row;
;;;216    }
000042  e8bd81f0          POP      {r4-r8,pc}
                  |L2.70|
000046  68a0              LDR      r0,[r4,#8]            ;198
000048  b150              CBZ      r0,|L2.96|
00004a  68a1              LDR      r1,[r4,#8]            ;199
00004c  f8d4008c          LDR      r0,[r4,#0x8c]         ;199
000050  6048              STR      r0,[r1,#4]            ;199
000052  68a1              LDR      r1,[r4,#8]            ;200
000054  6f60              LDR      r0,[r4,#0x74]         ;200
000056  6088              STR      r0,[r1,#8]            ;200
000058  68a0              LDR      r0,[r4,#8]            ;201
00005a  6801              LDR      r1,[r0,#0]            ;201
00005c  4620              MOV      r0,r4                 ;201
00005e  4788              BLX      r1                    ;201
                  |L2.96|
000060  f504709c          ADD      r0,r4,#0x138          ;205
000064  c803              LDM      r0,{r0,r1}            ;205
000066  fb00f501          MUL      r5,r0,r1              ;205
00006a  42ae              CMP      r6,r5                 ;206
00006c  d206              BCS      |L2.124|
00006e  2017              MOVS     r0,#0x17              ;207
000070  6821              LDR      r1,[r4,#0]            ;207
000072  6148              STR      r0,[r1,#0x14]         ;207
000074  6820              LDR      r0,[r4,#0]            ;207
000076  6801              LDR      r1,[r0,#0]            ;207
000078  4620              MOV      r0,r4                 ;207
00007a  4788              BLX      r1                    ;207
                  |L2.124|
00007c  f8d401ac          LDR      r0,[r4,#0x1ac]        ;210
000080  4639              MOV      r1,r7                 ;210
000082  68c2              LDR      r2,[r0,#0xc]          ;210
000084  4620              MOV      r0,r4                 ;210
000086  4790              BLX      r2                    ;210
000088  b908              CBNZ     r0,|L2.142|
00008a  2000              MOVS     r0,#0                 ;211
00008c  e7d9              B        |L2.66|
                  |L2.142|
00008e  f8d4008c          LDR      r0,[r4,#0x8c]         ;214
000092  4428              ADD      r0,r0,r5              ;214
000094  f8c4008c          STR      r0,[r4,#0x8c]         ;214
000098  4628              MOV      r0,r5                 ;215
00009a  e7d2              B        |L2.66|
;;;217    
                          ENDP


                          AREA ||i.jpeg_read_scanlines||, CODE, READONLY, ALIGN=1

                  jpeg_read_scanlines PROC
;;;151    GLOBAL(JDIMENSION)
;;;152    jpeg_read_scanlines (j_decompress_ptr cinfo, JSAMPARRAY scanlines,
000000  b5f8              PUSH     {r3-r7,lr}
;;;153    		     JDIMENSION max_lines)
;;;154    {
000002  4604              MOV      r4,r0
000004  460e              MOV      r6,r1
000006  4615              MOV      r5,r2
;;;155      JDIMENSION row_ctr;
;;;156    
;;;157      if (cinfo->global_state != DSTATE_SCANNING)
000008  6960              LDR      r0,[r4,#0x14]
00000a  28cd              CMP      r0,#0xcd
00000c  d009              BEQ      |L3.34|
;;;158        ERREXIT1(cinfo, JERR_BAD_STATE, cinfo->global_state);
00000e  2014              MOVS     r0,#0x14
000010  6821              LDR      r1,[r4,#0]
000012  6148              STR      r0,[r1,#0x14]
000014  6821              LDR      r1,[r4,#0]
000016  6960              LDR      r0,[r4,#0x14]
000018  6188              STR      r0,[r1,#0x18]
00001a  6820              LDR      r0,[r4,#0]
00001c  6801              LDR      r1,[r0,#0]
00001e  4620              MOV      r0,r4
000020  4788              BLX      r1
                  |L3.34|
;;;159      if (cinfo->output_scanline >= cinfo->output_height) {
000022  6f61              LDR      r1,[r4,#0x74]
000024  f8d4008c          LDR      r0,[r4,#0x8c]
000028  4288              CMP      r0,r1
00002a  d30a              BCC      |L3.66|
;;;160        WARNMS(cinfo, JWRN_TOO_MUCH_DATA);
00002c  207b              MOVS     r0,#0x7b
00002e  6821              LDR      r1,[r4,#0]
000030  6148              STR      r0,[r1,#0x14]
000032  6820              LDR      r0,[r4,#0]
000034  f04f31ff          MOV      r1,#0xffffffff
000038  6842              LDR      r2,[r0,#4]
00003a  4620              MOV      r0,r4
00003c  4790              BLX      r2
;;;161        return 0;
00003e  2000              MOVS     r0,#0
                  |L3.64|
;;;162      }
;;;163    
;;;164      /* Call progress monitor hook if present */
;;;165      if (cinfo->progress != NULL) {
;;;166        cinfo->progress->pass_counter = (long) cinfo->output_scanline;
;;;167        cinfo->progress->pass_limit = (long) cinfo->output_height;
;;;168        (*cinfo->progress->progress_monitor) ((j_common_ptr) cinfo);
;;;169      }
;;;170    
;;;171      /* Process some data */
;;;172      row_ctr = 0;
;;;173      (*cinfo->main->process_data) (cinfo, scanlines, &row_ctr, max_lines);
;;;174      cinfo->output_scanline += row_ctr;
;;;175      return row_ctr;
;;;176    }
000040  bdf8              POP      {r3-r7,pc}
                  |L3.66|
000042  68a0              LDR      r0,[r4,#8]            ;165
000044  b150              CBZ      r0,|L3.92|
000046  68a1              LDR      r1,[r4,#8]            ;166
000048  f8d4008c          LDR      r0,[r4,#0x8c]         ;166
00004c  6048              STR      r0,[r1,#4]            ;166
00004e  68a1              LDR      r1,[r4,#8]            ;167
000050  6f60              LDR      r0,[r4,#0x74]         ;167
000052  6088              STR      r0,[r1,#8]            ;167
000054  68a0              LDR      r0,[r4,#8]            ;168
000056  6801              LDR      r1,[r0,#0]            ;168
000058  4620              MOV      r0,r4                 ;168
00005a  4788              BLX      r1                    ;168
                  |L3.92|
00005c  2000              MOVS     r0,#0                 ;172
00005e  9000              STR      r0,[sp,#0]            ;172
000060  f8d401a8          LDR      r0,[r4,#0x1a8]        ;173
000064  462b              MOV      r3,r5                 ;173
000066  466a              MOV      r2,sp                 ;173
000068  4631              MOV      r1,r6                 ;173
00006a  6847              LDR      r7,[r0,#4]            ;173
00006c  4620              MOV      r0,r4                 ;173
00006e  47b8              BLX      r7                    ;173
000070  f8d4008c          LDR      r0,[r4,#0x8c]         ;174
000074  9900              LDR      r1,[sp,#0]            ;174
000076  4408              ADD      r0,r0,r1              ;174
000078  f8c4008c          STR      r0,[r4,#0x8c]         ;174
00007c  9800              LDR      r0,[sp,#0]            ;175
00007e  e7df              B        |L3.64|
;;;177    
                          ENDP


                          AREA ||i.jpeg_start_decompress||, CODE, READONLY, ALIGN=1

                  jpeg_start_decompress PROC
;;;37     GLOBAL(boolean)
;;;38     jpeg_start_decompress (j_decompress_ptr cinfo)
000000  b570              PUSH     {r4-r6,lr}
;;;39     {
000002  4604              MOV      r4,r0
;;;40       if (cinfo->global_state == DSTATE_READY) {
000004  6960              LDR      r0,[r4,#0x14]
000006  28ca              CMP      r0,#0xca
000008  d10a              BNE      |L4.32|
;;;41         /* First call: initialize master control, select active modules */
;;;42         jinit_master_decompress(cinfo);
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       jinit_master_decompress
;;;43         if (cinfo->buffered_image) {
000010  6c20              LDR      r0,[r4,#0x40]
000012  b118              CBZ      r0,|L4.28|
;;;44           /* No more work here; expecting jpeg_start_output next */
;;;45           cinfo->global_state = DSTATE_BUFIMAGE;
000014  20cf              MOVS     r0,#0xcf
000016  6160              STR      r0,[r4,#0x14]
;;;46           return TRUE;
000018  2001              MOVS     r0,#1
                  |L4.26|
;;;47         }
;;;48         cinfo->global_state = DSTATE_PRELOAD;
;;;49       }
;;;50       if (cinfo->global_state == DSTATE_PRELOAD) {
;;;51         /* If file has multiple scans, absorb them all into the coef buffer */
;;;52         if (cinfo->inputctl->has_multiple_scans) {
;;;53     #ifdef D_MULTISCAN_FILES_SUPPORTED
;;;54           while (1) {
;;;55     	int retcode;
;;;56     	/* Call progress monitor hook if present */
;;;57     	if (cinfo->progress != NULL)
;;;58     	  (*cinfo->progress->progress_monitor) ((j_common_ptr) cinfo);
;;;59     	/* Absorb some more input */
;;;60     	retcode = (*cinfo->inputctl->consume_input) (cinfo);
;;;61     	if (retcode == JPEG_SUSPENDED)
;;;62     	  return FALSE;
;;;63     	if (retcode == JPEG_REACHED_EOI)
;;;64     	  break;
;;;65     	/* Advance progress counter if appropriate */
;;;66     	if (cinfo->progress != NULL &&
;;;67     	    (retcode == JPEG_ROW_COMPLETED || retcode == JPEG_REACHED_SOS)) {
;;;68     	  if (++cinfo->progress->pass_counter >= cinfo->progress->pass_limit) {
;;;69     	    /* jdmaster underestimated number of scans; ratchet up one scan */
;;;70     	    cinfo->progress->pass_limit += (long) cinfo->total_iMCU_rows;
;;;71     	  }
;;;72     	}
;;;73           }
;;;74     #else
;;;75           ERREXIT(cinfo, JERR_NOT_COMPILED);
;;;76     #endif /* D_MULTISCAN_FILES_SUPPORTED */
;;;77         }
;;;78         cinfo->output_scan_number = cinfo->input_scan_number;
;;;79       } else if (cinfo->global_state != DSTATE_PRESCAN)
;;;80         ERREXIT1(cinfo, JERR_BAD_STATE, cinfo->global_state);
;;;81       /* Perform any dummy output passes, and set up for the final pass */
;;;82       return output_pass_setup(cinfo);
;;;83     }
00001a  bd70              POP      {r4-r6,pc}
                  |L4.28|
00001c  20cb              MOVS     r0,#0xcb              ;48
00001e  6160              STR      r0,[r4,#0x14]         ;48
                  |L4.32|
000020  6960              LDR      r0,[r4,#0x14]         ;50
000022  28cb              CMP      r0,#0xcb              ;50
000024  d134              BNE      |L4.144|
000026  f8d401b4          LDR      r0,[r4,#0x1b4]        ;52
00002a  6900              LDR      r0,[r0,#0x10]         ;52
00002c  b358              CBZ      r0,|L4.134|
00002e  e028              B        |L4.130|
                  |L4.48|
000030  68a0              LDR      r0,[r4,#8]            ;57
000032  b118              CBZ      r0,|L4.60|
000034  68a0              LDR      r0,[r4,#8]            ;58
000036  6801              LDR      r1,[r0,#0]            ;58
000038  4620              MOV      r0,r4                 ;58
00003a  4788              BLX      r1                    ;58
                  |L4.60|
00003c  f8d401b4          LDR      r0,[r4,#0x1b4]        ;60
000040  6801              LDR      r1,[r0,#0]            ;60
000042  4620              MOV      r0,r4                 ;60
000044  4788              BLX      r1                    ;60
000046  4605              MOV      r5,r0                 ;60
000048  b90d              CBNZ     r5,|L4.78|
00004a  2000              MOVS     r0,#0                 ;62
00004c  e7e5              B        |L4.26|
                  |L4.78|
00004e  2d02              CMP      r5,#2                 ;63
000050  d100              BNE      |L4.84|
000052  e017              B        |L4.132|
                  |L4.84|
000054  68a0              LDR      r0,[r4,#8]            ;66
000056  b198              CBZ      r0,|L4.128|
000058  2d03              CMP      r5,#3                 ;67
00005a  d001              BEQ      |L4.96|
00005c  2d01              CMP      r5,#1                 ;67
00005e  d10f              BNE      |L4.128|
                  |L4.96|
000060  68a0              LDR      r0,[r4,#8]            ;68
000062  6840              LDR      r0,[r0,#4]            ;68
000064  1c40              ADDS     r0,r0,#1              ;68
000066  68a1              LDR      r1,[r4,#8]            ;68
000068  6048              STR      r0,[r1,#4]            ;68
00006a  68a1              LDR      r1,[r4,#8]            ;68
00006c  6889              LDR      r1,[r1,#8]            ;68
00006e  4288              CMP      r0,r1                 ;68
000070  db06              BLT      |L4.128|
000072  68a0              LDR      r0,[r4,#8]            ;70
000074  6880              LDR      r0,[r0,#8]            ;70
000076  f8d41140          LDR      r1,[r4,#0x140]        ;70
00007a  4408              ADD      r0,r0,r1              ;70
00007c  68a1              LDR      r1,[r4,#8]            ;70
00007e  6088              STR      r0,[r1,#8]            ;70
                  |L4.128|
000080  bf00              NOP                            ;73
                  |L4.130|
000082  e7d5              B        |L4.48|
                  |L4.132|
000084  bf00              NOP                            ;64
                  |L4.134|
000086  f8d40090          LDR      r0,[r4,#0x90]         ;78
00008a  f8c40098          STR      r0,[r4,#0x98]         ;78
00008e  e00c              B        |L4.170|
                  |L4.144|
000090  6960              LDR      r0,[r4,#0x14]         ;79
000092  28cc              CMP      r0,#0xcc              ;79
000094  d009              BEQ      |L4.170|
000096  2014              MOVS     r0,#0x14              ;80
000098  6821              LDR      r1,[r4,#0]            ;80
00009a  6148              STR      r0,[r1,#0x14]         ;80
00009c  6821              LDR      r1,[r4,#0]            ;80
00009e  6960              LDR      r0,[r4,#0x14]         ;80
0000a0  6188              STR      r0,[r1,#0x18]         ;80
0000a2  6820              LDR      r0,[r4,#0]            ;80
0000a4  6801              LDR      r1,[r0,#0]            ;80
0000a6  4620              MOV      r0,r4                 ;80
0000a8  4788              BLX      r1                    ;80
                  |L4.170|
0000aa  4620              MOV      r0,r4                 ;82
0000ac  f7fffffe          BL       output_pass_setup
0000b0  e7b3              B        |L4.26|
;;;84     
                          ENDP


                          AREA ||i.jpeg_start_output||, CODE, READONLY, ALIGN=1

                  jpeg_start_output PROC
;;;227    GLOBAL(boolean)
;;;228    jpeg_start_output (j_decompress_ptr cinfo, int scan_number)
000000  b570              PUSH     {r4-r6,lr}
;;;229    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;230      if (cinfo->global_state != DSTATE_BUFIMAGE &&
000006  6960              LDR      r0,[r4,#0x14]
000008  28cf              CMP      r0,#0xcf
00000a  d00c              BEQ      |L5.38|
;;;231          cinfo->global_state != DSTATE_PRESCAN)
00000c  6960              LDR      r0,[r4,#0x14]
00000e  28cc              CMP      r0,#0xcc
000010  d009              BEQ      |L5.38|
;;;232        ERREXIT1(cinfo, JERR_BAD_STATE, cinfo->global_state);
000012  2014              MOVS     r0,#0x14
000014  6821              LDR      r1,[r4,#0]
000016  6148              STR      r0,[r1,#0x14]
000018  6821              LDR      r1,[r4,#0]
00001a  6960              LDR      r0,[r4,#0x14]
00001c  6188              STR      r0,[r1,#0x18]
00001e  6820              LDR      r0,[r4,#0]
000020  6801              LDR      r1,[r0,#0]
000022  4620              MOV      r0,r4
000024  4788              BLX      r1
                  |L5.38|
;;;233      /* Limit scan number to valid range */
;;;234      if (scan_number <= 0)
000026  2d00              CMP      r5,#0
000028  dc00              BGT      |L5.44|
;;;235        scan_number = 1;
00002a  2501              MOVS     r5,#1
                  |L5.44|
;;;236      if (cinfo->inputctl->eoi_reached &&
00002c  f8d401b4          LDR      r0,[r4,#0x1b4]
000030  6940              LDR      r0,[r0,#0x14]
000032  b128              CBZ      r0,|L5.64|
;;;237          scan_number > cinfo->input_scan_number)
000034  f8d40090          LDR      r0,[r4,#0x90]
000038  42a8              CMP      r0,r5
00003a  da01              BGE      |L5.64|
;;;238        scan_number = cinfo->input_scan_number;
00003c  f8d45090          LDR      r5,[r4,#0x90]
                  |L5.64|
;;;239      cinfo->output_scan_number = scan_number;
000040  f8c45098          STR      r5,[r4,#0x98]
;;;240      /* Perform any dummy output passes, and set up for the real pass */
;;;241      return output_pass_setup(cinfo);
000044  4620              MOV      r0,r4
000046  f7fffffe          BL       output_pass_setup
;;;242    }
00004a  bd70              POP      {r4-r6,pc}
;;;243    
                          ENDP


                          AREA ||i.output_pass_setup||, CODE, READONLY, ALIGN=1

                  output_pass_setup PROC
;;;94     LOCAL(boolean)
;;;95     output_pass_setup (j_decompress_ptr cinfo)
000000  b570              PUSH     {r4-r6,lr}
;;;96     {
000002  4604              MOV      r4,r0
;;;97       if (cinfo->global_state != DSTATE_PRESCAN) {
000004  6960              LDR      r0,[r4,#0x14]
000006  28cc              CMP      r0,#0xcc
000008  d009              BEQ      |L6.30|
;;;98         /* First call: do pass setup */
;;;99         (*cinfo->master->prepare_for_output_pass) (cinfo);
00000a  f8d401a4          LDR      r0,[r4,#0x1a4]
00000e  6801              LDR      r1,[r0,#0]
000010  4620              MOV      r0,r4
000012  4788              BLX      r1
;;;100        cinfo->output_scanline = 0;
000014  2000              MOVS     r0,#0
000016  f8c4008c          STR      r0,[r4,#0x8c]
;;;101        cinfo->global_state = DSTATE_PRESCAN;
00001a  20cc              MOVS     r0,#0xcc
00001c  6160              STR      r0,[r4,#0x14]
                  |L6.30|
;;;102      }
;;;103      /* Loop over any required dummy passes */
;;;104      while (cinfo->master->is_dummy_pass) {
00001e  e031              B        |L6.132|
                  |L6.32|
;;;105    #ifdef QUANT_2PASS_SUPPORTED
;;;106        /* Crank through the dummy pass */
;;;107        while (cinfo->output_scanline < cinfo->output_height) {
000020  e01e              B        |L6.96|
                  |L6.34|
;;;108          JDIMENSION last_scanline;
;;;109          /* Call progress monitor hook if present */
;;;110          if (cinfo->progress != NULL) {
000022  68a0              LDR      r0,[r4,#8]
000024  b150              CBZ      r0,|L6.60|
;;;111    	cinfo->progress->pass_counter = (long) cinfo->output_scanline;
000026  68a1              LDR      r1,[r4,#8]
000028  f8d4008c          LDR      r0,[r4,#0x8c]
00002c  6048              STR      r0,[r1,#4]
;;;112    	cinfo->progress->pass_limit = (long) cinfo->output_height;
00002e  68a1              LDR      r1,[r4,#8]
000030  6f60              LDR      r0,[r4,#0x74]
000032  6088              STR      r0,[r1,#8]
;;;113    	(*cinfo->progress->progress_monitor) ((j_common_ptr) cinfo);
000034  68a0              LDR      r0,[r4,#8]
000036  6801              LDR      r1,[r0,#0]
000038  4620              MOV      r0,r4
00003a  4788              BLX      r1
                  |L6.60|
;;;114          }
;;;115          /* Process some data */
;;;116          last_scanline = cinfo->output_scanline;
00003c  f8d4508c          LDR      r5,[r4,#0x8c]
;;;117          (*cinfo->main->process_data) (cinfo, (JSAMPARRAY) NULL,
000040  f8d401a8          LDR      r0,[r4,#0x1a8]
000044  2300              MOVS     r3,#0
000046  f104028c          ADD      r2,r4,#0x8c
00004a  4619              MOV      r1,r3
00004c  6846              LDR      r6,[r0,#4]
00004e  4620              MOV      r0,r4
000050  47b0              BLX      r6
;;;118    				    &cinfo->output_scanline, (JDIMENSION) 0);
;;;119          if (cinfo->output_scanline == last_scanline)
000052  f8d4008c          LDR      r0,[r4,#0x8c]
000056  42a8              CMP      r0,r5
000058  d101              BNE      |L6.94|
;;;120    	return FALSE;		/* No progress made, must suspend */
00005a  2000              MOVS     r0,#0
                  |L6.92|
;;;121        }
;;;122        /* Finish up dummy pass, and set up for another one */
;;;123        (*cinfo->master->finish_output_pass) (cinfo);
;;;124        (*cinfo->master->prepare_for_output_pass) (cinfo);
;;;125        cinfo->output_scanline = 0;
;;;126    #else
;;;127        ERREXIT(cinfo, JERR_NOT_COMPILED);
;;;128    #endif /* QUANT_2PASS_SUPPORTED */
;;;129      }
;;;130      /* Ready for application to drive output pass through
;;;131       * jpeg_read_scanlines or jpeg_read_raw_data.
;;;132       */
;;;133      cinfo->global_state = cinfo->raw_data_out ? DSTATE_RAW_OK : DSTATE_SCANNING;
;;;134      return TRUE;
;;;135    }
00005c  bd70              POP      {r4-r6,pc}
                  |L6.94|
00005e  bf00              NOP                            ;121
                  |L6.96|
000060  6f61              LDR      r1,[r4,#0x74]         ;107
000062  f8d4008c          LDR      r0,[r4,#0x8c]         ;107
000066  4288              CMP      r0,r1                 ;107
000068  d3db              BCC      |L6.34|
00006a  f8d401a4          LDR      r0,[r4,#0x1a4]        ;123
00006e  6841              LDR      r1,[r0,#4]            ;123
000070  4620              MOV      r0,r4                 ;123
000072  4788              BLX      r1                    ;123
000074  f8d401a4          LDR      r0,[r4,#0x1a4]        ;124
000078  6801              LDR      r1,[r0,#0]            ;124
00007a  4620              MOV      r0,r4                 ;124
00007c  4788              BLX      r1                    ;124
00007e  2000              MOVS     r0,#0                 ;125
000080  f8c4008c          STR      r0,[r4,#0x8c]         ;125
                  |L6.132|
000084  f8d401a4          LDR      r0,[r4,#0x1a4]        ;104
000088  6880              LDR      r0,[r0,#8]            ;104
00008a  2800              CMP      r0,#0                 ;104
00008c  d1c8              BNE      |L6.32|
00008e  6c60              LDR      r0,[r4,#0x44]         ;133
000090  b108              CBZ      r0,|L6.150|
000092  20ce              MOVS     r0,#0xce              ;133
000094  e000              B        |L6.152|
                  |L6.150|
000096  20cd              MOVS     r0,#0xcd              ;133
                  |L6.152|
000098  6160              STR      r0,[r4,#0x14]         ;133
00009a  2001              MOVS     r0,#1                 ;134
00009c  e7de              B        |L6.92|
;;;136    
                          ENDP

