; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\guidemo_polygon.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\guidemo_polygon.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\uCGUIDemo\GUIDEMO_Polygon.c]
                          THUMB

                          AREA ||i.GUIDEMO_DemoPolygon||, CODE, READONLY, ALIGN=2

                  GUIDEMO_DemoPolygon PROC
;;;86     */
;;;87     void GUIDEMO_DemoPolygon(void) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b089              SUB      sp,sp,#0x24
;;;88       GUI_COLOR Color;
;;;89       int XMid  = (LCD_XSIZE >> 1);
000006  2478              MOVS     r4,#0x78
;;;90       int YMid  = (LCD_YSIZE >> 1);
000008  25a0              MOVS     r5,#0xa0
;;;91       GUIDEMO_ShowIntro("Arbitrary Polygons", 
00000a  a14c              ADR      r1,|L1.316|
00000c  a052              ADR      r0,|L1.344|
00000e  f7fffffe          BL       GUIDEMO_ShowIntro
;;;92                         "\nStandard and antialiased");
;;;93       GUI_SetColor(GUI_WHITE);
000012  f06f407f          MVN      r0,#0xff000000
000016  f7fffffe          BL       GUI_SetColor
;;;94       #if GUIDEMO_LARGE
;;;95         GUI_SetFont(&GUI_FontComic18B_ASCII);
00001a  4854              LDR      r0,|L1.364|
00001c  f7fffffe          BL       GUI_SetFont
;;;96         GUI_DispStringAt("Arbitrary\nPolygons", 0, 0);
000020  2200              MOVS     r2,#0
000022  4611              MOV      r1,r2
000024  a052              ADR      r0,|L1.368|
000026  f7fffffe          BL       GUI_DispStringAt
;;;97         YMid += 10;
00002a  350a              ADDS     r5,r5,#0xa
;;;98       #endif
;;;99       #if ((LCD_XSIZE != 320) || (LCD_YSIZE != 240))
;;;100        {
;;;101          GUI_POINT aPolygon[8];
;;;102          float Factor;
;;;103          #if ((LCD_XSIZE / 320) < (LCD_YSIZE / 240))
;;;104            Factor = LCD_XSIZE / 320.f;
00002c  f04f567d          MOV      r6,#0x3f400000
;;;105          #else
;;;106            Factor = LCD_YSIZE / 240.f;
;;;107          #endif
;;;108          #if !(GUIDEMO_LARGE)
;;;109            Factor *= 1.2f;
;;;110          #endif
;;;111          /* Draw arrows */
;;;112          _MagnifyPolygon(aPolygon, _aArrow, COUNTOF(_aArrow), Factor);
000030  4633              MOV      r3,r6
000032  2207              MOVS     r2,#7
000034  4953              LDR      r1,|L1.388|
000036  a801              ADD      r0,sp,#4
000038  f7fffffe          BL       _MagnifyPolygon
;;;113          GUI_FillPolygon(aPolygon, 7, XMid - (50 * Factor), YMid);
00003c  4631              MOV      r1,r6
00003e  4852              LDR      r0,|L1.392|
000040  f7fffffe          BL       __aeabi_fmul
000044  4682              MOV      r10,r0
000046  4620              MOV      r0,r4
000048  f7fffffe          BL       __aeabi_i2f
00004c  4683              MOV      r11,r0
00004e  4651              MOV      r1,r10
000050  f7fffffe          BL       __aeabi_fsub
000054  4681              MOV      r9,r0
000056  f7fffffe          BL       __aeabi_f2iz
00005a  4680              MOV      r8,r0
00005c  462b              MOV      r3,r5
00005e  4642              MOV      r2,r8
000060  2107              MOVS     r1,#7
000062  a801              ADD      r0,sp,#4
000064  f7fffffe          BL       GUI_FillPolygon
;;;114          GUI_FillPolygon(aPolygon, 7, XMid + (50 * Factor), YMid);
000068  4631              MOV      r1,r6
00006a  4847              LDR      r0,|L1.392|
00006c  f7fffffe          BL       __aeabi_fmul
000070  4682              MOV      r10,r0
000072  4620              MOV      r0,r4
000074  f7fffffe          BL       __aeabi_i2f
000078  4683              MOV      r11,r0
00007a  4651              MOV      r1,r10
00007c  f7fffffe          BL       __aeabi_fadd
000080  4681              MOV      r9,r0
000082  f7fffffe          BL       __aeabi_f2iz
000086  4680              MOV      r8,r0
000088  462b              MOV      r3,r5
00008a  4642              MOV      r2,r8
00008c  2107              MOVS     r1,#7
00008e  a801              ADD      r0,sp,#4
000090  f7fffffe          BL       GUI_FillPolygon
;;;115          /* Draw triangle */
;;;116          _MagnifyPolygon(aPolygon, _aTriangle, COUNTOF(_aTriangle), Factor);
000094  4633              MOV      r3,r6
000096  2203              MOVS     r2,#3
000098  493c              LDR      r1,|L1.396|
00009a  a801              ADD      r0,sp,#4
00009c  f7fffffe          BL       _MagnifyPolygon
;;;117          Color = GUIDEMO_SetColor(GUI_GREEN);
0000a0  f44f407f          MOV      r0,#0xff00
0000a4  f7fffffe          BL       GUIDEMO_SetColor
0000a8  4607              MOV      r7,r0
;;;118          if (Color != GUI_GREEN) {
0000aa  f5b74f7f          CMP      r7,#0xff00
0000ae  d003              BEQ      |L1.184|
;;;119            GUI_SetColor(GUI_YELLOW);
0000b0  f64f70ff          MOV      r0,#0xffff
0000b4  f7fffffe          BL       GUI_SetColor
                  |L1.184|
;;;120          }
;;;121          GUI_FillPolygon(aPolygon, 3, XMid, YMid + (10 * Factor));
0000b8  4631              MOV      r1,r6
0000ba  4835              LDR      r0,|L1.400|
0000bc  f7fffffe          BL       __aeabi_fmul
0000c0  4682              MOV      r10,r0
0000c2  4628              MOV      r0,r5
0000c4  f7fffffe          BL       __aeabi_i2f
0000c8  4683              MOV      r11,r0
0000ca  4651              MOV      r1,r10
0000cc  f7fffffe          BL       __aeabi_fadd
0000d0  4680              MOV      r8,r0
0000d2  f7fffffe          BL       __aeabi_f2iz
0000d6  4681              MOV      r9,r0
0000d8  464b              MOV      r3,r9
0000da  4622              MOV      r2,r4
0000dc  2103              MOVS     r1,#3
0000de  a801              ADD      r0,sp,#4
0000e0  f7fffffe          BL       GUI_FillPolygon
;;;122          /* Draw cursor */
;;;123          #if GUI_SUPPORT_AA
;;;124            GUI_SetColor(GUI_WHITE);
0000e4  f06f407f          MVN      r0,#0xff000000
0000e8  f7fffffe          BL       GUI_SetColor
;;;125            GUI_AA_EnableHiRes();
0000ec  f7fffffe          BL       GUI_AA_EnableHiRes
;;;126            _MagnifyPolygon(aPolygon, _aiCursor, COUNTOF(_aiCursor), Factor);
0000f0  4633              MOV      r3,r6
0000f2  2204              MOVS     r2,#4
0000f4  4927              LDR      r1,|L1.404|
0000f6  a801              ADD      r0,sp,#4
0000f8  f7fffffe          BL       _MagnifyPolygon
;;;127            GUI_AA_FillPolygon(aPolygon, 4, XMid * 3, (YMid - (10 * Factor)) * 3);
0000fc  4631              MOV      r1,r6
0000fe  4824              LDR      r0,|L1.400|
000100  f7fffffe          BL       __aeabi_fmul
000104  4683              MOV      r11,r0
000106  4628              MOV      r0,r5
000108  f7fffffe          BL       __aeabi_i2f
00010c  4659              MOV      r1,r11
00010e  9000              STR      r0,[sp,#0]
000110  f7fffffe          BL       __aeabi_fsub
000114  4682              MOV      r10,r0
000116  4920              LDR      r1,|L1.408|
000118  f7fffffe          BL       __aeabi_fmul
00011c  4681              MOV      r9,r0
00011e  f7fffffe          BL       __aeabi_f2iz
000122  4680              MOV      r8,r0
000124  eb040244          ADD      r2,r4,r4,LSL #1
000128  4643              MOV      r3,r8
00012a  2104              MOVS     r1,#4
00012c  a801              ADD      r0,sp,#4
00012e  f7fffffe          BL       GUI_AA_FillPolygon
;;;128          #endif
;;;129        }
;;;130      #else
;;;131        GUI_FillPolygon(_aArrow, 7, XMid - 50, YMid);
;;;132        GUI_FillPolygon(_aArrow, 7, XMid + 50, YMid);
;;;133        /* Draw triangle */
;;;134        Color = GUIDEMO_SetColor(GUI_GREEN);
;;;135        if (Color != GUI_GREEN) {
;;;136          GUI_SetColor(GUI_YELLOW);
;;;137        }
;;;138        GUI_FillPolygon(_aTriangle, 3, XMid, YMid + 10);
;;;139        /* Draw cursor */
;;;140        #if GUI_SUPPORT_AA
;;;141          GUI_SetColor(GUI_WHITE);
;;;142          GUI_AA_EnableHiRes();
;;;143          GUI_AA_FillPolygon((GUI_POINT*)_aiCursor, 4, XMid * 3, (YMid - 10) * 3);
;;;144        #endif
;;;145      #endif
;;;146      GUIDEMO_Wait();
000132  f7fffffe          BL       GUIDEMO_Wait
;;;147    }
000136  b009              ADD      sp,sp,#0x24
000138  e8bd8ff0          POP      {r4-r11,pc}
                          ENDP

                  |L1.316|
00013c  0a537461          DCB      "\nStandard and antialiased",0
000140  6e646172
000144  6420616e
000148  6420616e
00014c  7469616c
000150  69617365
000154  6400    
000156  00                DCB      0
000157  00                DCB      0
                  |L1.344|
000158  41726269          DCB      "Arbitrary Polygons",0
00015c  74726172
000160  7920506f
000164  6c79676f
000168  6e7300  
00016b  00                DCB      0
                  |L1.364|
                          DCD      GUI_FontComic18B_ASCII
                  |L1.368|
000170  41726269          DCB      "Arbitrary\nPolygons",0
000174  74726172
000178  790a506f
00017c  6c79676f
000180  6e7300  
000183  00                DCB      0
                  |L1.388|
                          DCD      _aArrow
                  |L1.392|
                          DCD      0x42480000
                  |L1.396|
                          DCD      _aTriangle
                  |L1.400|
                          DCD      0x41200000
                  |L1.404|
                          DCD      _aiCursor
                  |L1.408|
                          DCD      0x40400000

                          AREA ||i._MagnifyPolygon||, CODE, READONLY, ALIGN=1

                  _MagnifyPolygon PROC
;;;67     #if ((LCD_XSIZE != 320) || (LCD_YSIZE != 240))
;;;68     static void _MagnifyPolygon(GUI_POINT* pDest, const GUI_POINT* pSrc, int NumPoints, float Mag) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
00000a  4698              MOV      r8,r3
;;;69       int j;
;;;70       for (j = 0; j < NumPoints; j++) {
00000c  2400              MOVS     r4,#0
00000e  e01f              B        |L2.80|
                  |L2.16|
;;;71         (pDest + j)->x = (pSrc + j)->x * Mag;
000010  f9360024          LDRSH    r0,[r6,r4,LSL #2]
000014  f7fffffe          BL       __aeabi_i2f
000018  4682              MOV      r10,r0
00001a  4641              MOV      r1,r8
00001c  f7fffffe          BL       __aeabi_fmul
000020  4681              MOV      r9,r0
000022  f7fffffe          BL       __aeabi_f2iz
000026  b200              SXTH     r0,r0
000028  f8250024          STRH     r0,[r5,r4,LSL #2]
;;;72         (pDest + j)->y = (pSrc + j)->y * Mag;
00002c  eb060184          ADD      r1,r6,r4,LSL #2
000030  f9b10002          LDRSH    r0,[r1,#2]
000034  f7fffffe          BL       __aeabi_i2f
000038  4682              MOV      r10,r0
00003a  4641              MOV      r1,r8
00003c  f7fffffe          BL       __aeabi_fmul
000040  4681              MOV      r9,r0
000042  f7fffffe          BL       __aeabi_f2iz
000046  b200              SXTH     r0,r0
000048  eb050184          ADD      r1,r5,r4,LSL #2
00004c  8048              STRH     r0,[r1,#2]
00004e  1c64              ADDS     r4,r4,#1              ;70
                  |L2.80|
000050  42bc              CMP      r4,r7                 ;70
000052  dbdd              BLT      |L2.16|
;;;73       }
;;;74     }
000054  e8bd87f0          POP      {r4-r10,pc}
;;;75     #endif
                          ENDP


                          AREA ||.constdata||, DATA, READONLY, ALIGN=1

                  _aArrow
000000  0000001e          DCW      0x0000,0x001e
000004  ffd80000          DCW      0xffd8,0x0000
000008  fff6000a          DCW      0xfff6,0x000a
00000c  fff6ffce          DCW      0xfff6,0xffce
000010  000affce          DCW      0x000a,0xffce
000014  000a000a          DCW      0x000a,0x000a
000018  00280000          DCW      0x0028,0x0000
                  _aTriangle
00001c  00000000          DCW      0x0000,0x0000
000020  ffe2001e          DCW      0xffe2,0x001e
000024  001e001e          DCW      0x001e,0x001e
                  _aiCursor
000028  0000fff6          DCW      0x0000,0xfff6
00002c  00320000          DCW      0x0032,0x0000
000030  0000ff9c          DCW      0x0000,0xff9c
000034  ffce0000          DCW      0xffce,0x0000
