; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\wm_checkscrollpos.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\wm_checkscrollpos.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\WM\WM_CheckScrollPos.c]
                          THUMB

                          AREA ||i.WM_CheckScrollBounds||, CODE, READONLY, ALIGN=1

                  WM_CheckScrollBounds PROC
;;;37     */
;;;38     void WM_CheckScrollBounds(WM_SCROLL_STATE* pScrollState) {
000000  6883              LDR      r3,[r0,#8]
;;;39       int Max;
;;;40       Max = pScrollState->NumItems - pScrollState->PageSize;
000002  6802              LDR      r2,[r0,#0]
000004  1ad1              SUBS     r1,r2,r3
;;;41       if (Max < 0) {
000006  2900              CMP      r1,#0
000008  da00              BGE      |L1.12|
;;;42         Max = 0;
00000a  2100              MOVS     r1,#0
                  |L1.12|
;;;43       }
;;;44       /* Make sure scroll pos is in bounds */
;;;45       if (pScrollState->v < 0) {
00000c  6842              LDR      r2,[r0,#4]
00000e  2a00              CMP      r2,#0
000010  da01              BGE      |L1.22|
;;;46         pScrollState->v = 0;
000012  2200              MOVS     r2,#0
000014  6042              STR      r2,[r0,#4]
                  |L1.22|
;;;47       }
;;;48       if (pScrollState->v > Max) {
000016  6842              LDR      r2,[r0,#4]
000018  428a              CMP      r2,r1
00001a  dd00              BLE      |L1.30|
;;;49         pScrollState->v = Max;
00001c  6041              STR      r1,[r0,#4]
                  |L1.30|
;;;50       }
;;;51     }
00001e  4770              BX       lr
;;;52     
                          ENDP


                          AREA ||i.WM_CheckScrollPos||, CODE, READONLY, ALIGN=1

                  WM_CheckScrollPos PROC
;;;60     */
;;;61     int  WM_CheckScrollPos(WM_SCROLL_STATE* pScrollState, int Pos, int LowerDist, int UpperDist) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
;;;62       int vOld;
;;;63       vOld = pScrollState->v;
00000c  f8d48004          LDR      r8,[r4,#4]
;;;64       /* Check upper limit */
;;;65       if (Pos > pScrollState->v + pScrollState->PageSize - 1) {
000010  e9d40101          LDRD     r0,r1,[r4,#4]
000014  4408              ADD      r0,r0,r1
000016  1e40              SUBS     r0,r0,#1
000018  42a8              CMP      r0,r5
00001a  da04              BGE      |L2.38|
;;;66         pScrollState->v = Pos - (pScrollState->PageSize - 1) + UpperDist;
00001c  68a0              LDR      r0,[r4,#8]
00001e  1e40              SUBS     r0,r0,#1
000020  1a28              SUBS     r0,r5,r0
000022  4438              ADD      r0,r0,r7
000024  6060              STR      r0,[r4,#4]
                  |L2.38|
;;;67       }
;;;68       /* Check lower limit */
;;;69       if (Pos < pScrollState->v) {
000026  6860              LDR      r0,[r4,#4]
000028  42a8              CMP      r0,r5
00002a  dd01              BLE      |L2.48|
;;;70         pScrollState->v = Pos - LowerDist;
00002c  1ba8              SUBS     r0,r5,r6
00002e  6060              STR      r0,[r4,#4]
                  |L2.48|
;;;71       }
;;;72       WM_CheckScrollBounds(pScrollState);
000030  4620              MOV      r0,r4
000032  f7fffffe          BL       WM_CheckScrollBounds
;;;73       return pScrollState->v - vOld;
000036  6860              LDR      r0,[r4,#4]
000038  eba00008          SUB      r0,r0,r8
;;;74     }
00003c  e8bd81f0          POP      {r4-r8,pc}
;;;75     
                          ENDP


                          AREA ||i.WM_SetScrollValue||, CODE, READONLY, ALIGN=1

                  WM_SetScrollValue PROC
;;;82     */
;;;83     int  WM_SetScrollValue(WM_SCROLL_STATE* pScrollState, int v) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;84       int vOld;
;;;85       vOld = pScrollState->v;
000006  6866              LDR      r6,[r4,#4]
;;;86       pScrollState->v = v;
000008  6065              STR      r5,[r4,#4]
;;;87       WM_CheckScrollBounds(pScrollState);
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       WM_CheckScrollBounds
;;;88       return pScrollState->v - vOld;
000010  6860              LDR      r0,[r4,#4]
000012  1b80              SUBS     r0,r0,r6
;;;89     }
000014  bd70              POP      {r4-r6,pc}
;;;90     
                          ENDP

