; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\gui_onkey.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\gui_onkey.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Core\GUI_OnKey.c]
                          THUMB

                          AREA ||i.GUI_ClearKeyBuffer||, CODE, READONLY, ALIGN=1

                  GUI_ClearKeyBuffer PROC
;;;84     */
;;;85     void GUI_ClearKeyBuffer(void) {
000000  b500              PUSH     {lr}
;;;86       while (GUI_GetKey());
000002  bf00              NOP      
                  |L1.4|
000004  f7fffffe          BL       GUI_GetKey
000008  2800              CMP      r0,#0
00000a  d1fb              BNE      |L1.4|
;;;87     }
00000c  bd00              POP      {pc}
;;;88     
                          ENDP


                          AREA ||i.GUI_GetKey||, CODE, READONLY, ALIGN=2

                  GUI_GetKey PROC
;;;63     */
;;;64     int GUI_GetKey(void) {
000000  4902              LDR      r1,|L2.12|
;;;65       int r = _Key;
000002  6808              LDR      r0,[r1,#0]  ; _Key
;;;66       _Key = 0;
000004  2100              MOVS     r1,#0
000006  4a01              LDR      r2,|L2.12|
000008  6011              STR      r1,[r2,#0]  ; _Key
;;;67       return r;
;;;68     }
00000a  4770              BX       lr
;;;69     
                          ENDP

                  |L2.12|
                          DCD      _Key

                          AREA ||i.GUI_PollKeyMsg||, CODE, READONLY, ALIGN=2

                  GUI_PollKeyMsg PROC
;;;120    #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
;;;121    int GUI_PollKeyMsg(void) {
000000  b570              PUSH     {r4-r6,lr}
;;;122      int r = 0;
000002  2400              MOVS     r4,#0
;;;123      GUI_LOCK();
000004  f7fffffe          BL       GUI_Lock
;;;124      if (_KeyMsgCnt) {
000008  480d              LDR      r0,|L3.64|
00000a  6800              LDR      r0,[r0,#0]  ; _KeyMsgCnt
00000c  b198              CBZ      r0,|L3.54|
;;;125        int Key;
;;;126        _KeyMsgCnt--;
00000e  480c              LDR      r0,|L3.64|
000010  6800              LDR      r0,[r0,#0]  ; _KeyMsgCnt
000012  1e40              SUBS     r0,r0,#1
000014  490a              LDR      r1,|L3.64|
000016  6008              STR      r0,[r1,#0]  ; _KeyMsgCnt
;;;127        Key = _KeyMsg.Key;
000018  480a              LDR      r0,|L3.68|
00001a  6805              LDR      r5,[r0,#0]  ; _KeyMsg
;;;128        if (!WM_OnKey(Key, _KeyMsg.PressedCnt)) {
00001c  6841              LDR      r1,[r0,#4]  ; _KeyMsg
00001e  4628              MOV      r0,r5
000020  f7fffffe          BL       WM_OnKey
;;;129          #ifdef GUI_X_ON_UNPROCESSED_KEY
;;;130            GUI_X_ON_UNPROCESSED_KEY(Key, _KeyMsg.PressedCnt);
;;;131          #endif
;;;132        }
;;;133        if (_KeyMsg.PressedCnt == 1) {
000024  4807              LDR      r0,|L3.68|
000026  6840              LDR      r0,[r0,#4]  ; _KeyMsg
000028  2801              CMP      r0,#1
00002a  d102              BNE      |L3.50|
;;;134          GUI_StoreKey(Key);
00002c  4628              MOV      r0,r5
00002e  f7fffffe          BL       GUI_StoreKey
                  |L3.50|
;;;135        }
;;;136        r = 1;              /* We have done something */
000032  2401              MOVS     r4,#1
;;;137      }
000034  bf00              NOP      
                  |L3.54|
;;;138      GUI_UNLOCK();
000036  f7fffffe          BL       GUI_Unlock
;;;139      return r;
00003a  4620              MOV      r0,r4
;;;140    }
00003c  bd70              POP      {r4-r6,pc}
;;;141    #endif
                          ENDP

00003e  0000              DCW      0x0000
                  |L3.64|
                          DCD      _KeyMsgCnt
                  |L3.68|
                          DCD      _KeyMsg

                          AREA ||i.GUI_SendKeyMsg||, CODE, READONLY, ALIGN=1

                  GUI_SendKeyMsg PROC
;;;151    */
;;;152    void GUI_SendKeyMsg(int Key, int PressedCnt) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;153      #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
;;;154        if (!WM_OnKey(Key, PressedCnt)) {
000006  4629              MOV      r1,r5
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       WM_OnKey
00000e  b918              CBNZ     r0,|L4.24|
;;;155          #ifdef GUI_X_ON_UNPROCESSED_KEY
;;;156            GUI_X_ON_UNPROCESSED_KEY(Key, PressedCnt);
;;;157          #endif
;;;158          GUI_StoreKeyMsg(Key, PressedCnt);
000010  4629              MOV      r1,r5
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       GUI_StoreKeyMsg
                  |L4.24|
;;;159        }
;;;160      #else
;;;161        GUI_StoreKeyMsg(Key, PressedCnt);
;;;162      #endif
;;;163    }
000018  bd70              POP      {r4-r6,pc}
;;;164    
                          ENDP


                          AREA ||i.GUI_StoreKey||, CODE, READONLY, ALIGN=2

                  GUI_StoreKey PROC
;;;73     */
;;;74     void GUI_StoreKey(int Key) {
000000  4902              LDR      r1,|L5.12|
;;;75       if (!_Key) {
000002  6809              LDR      r1,[r1,#0]  ; _Key
000004  b909              CBNZ     r1,|L5.10|
;;;76         _Key = Key;
000006  4901              LDR      r1,|L5.12|
000008  6008              STR      r0,[r1,#0]  ; _Key
                  |L5.10|
;;;77       }
;;;78       GUI_X_SIGNAL_EVENT();
;;;79     }
00000a  4770              BX       lr
;;;80     
                          ENDP

                  |L5.12|
                          DCD      _Key

                          AREA ||i.GUI_StoreKeyMsg||, CODE, READONLY, ALIGN=2

                  GUI_StoreKeyMsg PROC
;;;92     */
;;;93     void GUI_StoreKeyMsg(int Key, int PressedCnt) {
000000  4a03              LDR      r2,|L6.16|
;;;94       #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
;;;95       _KeyMsg.Key = Key;
000002  6010              STR      r0,[r2,#0]  ; _KeyMsg
;;;96       _KeyMsg.PressedCnt = PressedCnt;
000004  6051              STR      r1,[r2,#4]  ; _KeyMsg
;;;97       _KeyMsgCnt = 1;
000006  2201              MOVS     r2,#1
000008  4b02              LDR      r3,|L6.20|
00000a  601a              STR      r2,[r3,#0]  ; _KeyMsgCnt
;;;98       #ifdef GUI_X_ON_UNPROCESSED_KEY
;;;99         if (!WM_IsActive) {
;;;100          /* If the WM is deactivated, key messages are not polled by the WM.
;;;101             So call the macro in this case here.
;;;102          */
;;;103          GUI_X_ON_UNPROCESSED_KEY(Key, PressedCnt);
;;;104        }
;;;105      #endif
;;;106      GUI_X_SIGNAL_EVENT();
;;;107      #else
;;;108        GUI_USE_PARA(PressedCnt);
;;;109        GUI_StoreKey(Key);
;;;110        #ifdef GUI_X_ON_UNPROCESSED_KEY
;;;111          GUI_X_ON_UNPROCESSED_KEY(Key, PressedCnt);
;;;112        #endif
;;;113      #endif
;;;114    }
00000c  4770              BX       lr
;;;115    
                          ENDP

00000e  0000              DCW      0x0000
                  |L6.16|
                          DCD      _KeyMsg
                  |L6.20|
                          DCD      _KeyMsgCnt

                          AREA ||.data||, DATA, ALIGN=2

                  _KeyMsgCnt
                          DCD      0x00000000
                  _KeyMsg
                          %        8
                  _Key
                          DCD      0x00000000
                  GUI_pfKeyMsgHook
                          DCD      0x00000000
