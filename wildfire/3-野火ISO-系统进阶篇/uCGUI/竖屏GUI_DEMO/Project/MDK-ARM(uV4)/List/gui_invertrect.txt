; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\gui_invertrect.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\gui_invertrect.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Core\GUI_InvertRect.c]
                          THUMB

                          AREA ||i.GUI_InvertRect||, CODE, READONLY, ALIGN=2

                  GUI_InvertRect PROC
;;;31     */
;;;32     void GUI_InvertRect(int x0, int y0, int x1, int y1) {
000000  e92d41fc          PUSH     {r2-r8,lr}
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
;;;33       GUI_DRAWMODE PrevDraw;
;;;34       #if (GUI_WINSUPPORT)
;;;35         GUI_RECT r;
;;;36       #endif
;;;37       GUI_LOCK();
00000c  f7fffffe          BL       GUI_Lock
;;;38       PrevDraw = GUI_SetDrawMode(GUI_DRAWMODE_XOR);
000010  2001              MOVS     r0,#1
000012  f7fffffe          BL       GUI_SetDrawMode
000016  4680              MOV      r8,r0
;;;39       #if (GUI_WINSUPPORT)
;;;40         WM_ADDORG(x0, y0);
000018  4816              LDR      r0,|L1.116|
00001a  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
00001c  4404              ADD      r4,r4,r0
00001e  4815              LDR      r0,|L1.116|
000020  6c80              LDR      r0,[r0,#0x48]  ; GUI_Context
000022  4405              ADD      r5,r5,r0
;;;41         WM_ADDORG(x1, y1);
000024  4813              LDR      r0,|L1.116|
000026  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
000028  4406              ADD      r6,r6,r0
00002a  4812              LDR      r0,|L1.116|
00002c  6c80              LDR      r0,[r0,#0x48]  ; GUI_Context
00002e  4407              ADD      r7,r7,r0
;;;42         r.x0 = x0;
000030  b220              SXTH     r0,r4
000032  f8ad0000          STRH     r0,[sp,#0]
;;;43         r.x1 = x1;
000036  b230              SXTH     r0,r6
000038  f8ad0004          STRH     r0,[sp,#4]
;;;44         r.y0 = y0;
00003c  b228              SXTH     r0,r5
00003e  f8ad0002          STRH     r0,[sp,#2]
;;;45         r.y1 = y1;
000042  b238              SXTH     r0,r7
000044  f8ad0006          STRH     r0,[sp,#6]
;;;46         WM_ITERATE_START(&r); {
000048  4668              MOV      r0,sp
00004a  f7fffffe          BL       WM__InitIVRSearch
00004e  b150              CBZ      r0,|L1.102|
000050  bf00              NOP      
                  |L1.82|
;;;47       #endif
;;;48       LCD_FillRect(x0, y0, x1, y1);
000052  463b              MOV      r3,r7
000054  4632              MOV      r2,r6
000056  4629              MOV      r1,r5
000058  4620              MOV      r0,r4
00005a  f7fffffe          BL       LCD_FillRect
;;;49       #if (GUI_WINSUPPORT)
;;;50         } WM_ITERATE_END();
00005e  f7fffffe          BL       WM__GetNextIVR
000062  2800              CMP      r0,#0
000064  d1f5              BNE      |L1.82|
                  |L1.102|
;;;51       #endif
;;;52       GUI_SetDrawMode(PrevDraw);
000066  4640              MOV      r0,r8
000068  f7fffffe          BL       GUI_SetDrawMode
;;;53       GUI_UNLOCK();
00006c  f7fffffe          BL       GUI_Unlock
;;;54     }
000070  e8bd81fc          POP      {r2-r8,pc}
;;;55     
                          ENDP

                  |L1.116|
                          DCD      GUI_Context
