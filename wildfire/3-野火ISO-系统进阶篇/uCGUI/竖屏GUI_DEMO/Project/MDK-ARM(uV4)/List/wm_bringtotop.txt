; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\wm_bringtotop.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\wm_bringtotop.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\WM\WM_BringToTop.c]
                          THUMB

                          AREA ||i.WM_BringToTop||, CODE, READONLY, ALIGN=1

                  WM_BringToTop PROC
;;;97     */
;;;98     void WM_BringToTop(WM_HWIN hWin) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;99       WM_LOCK();
000004  f7fffffe          BL       GUI_Lock
;;;100      _BringToTop(hWin);
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       _BringToTop
;;;101      WM_UNLOCK();
00000e  f7fffffe          BL       GUI_Unlock
;;;102    }
000012  bd10              POP      {r4,pc}
;;;103    
                          ENDP


                          AREA ||i._BringToTop||, CODE, READONLY, ALIGN=1

                  _BringToTop PROC
;;;63     */
;;;64     static void _BringToTop(WM_HWIN hWin) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4607              MOV      r7,r0
;;;65       WM_HWIN hNext, hParent;
;;;66       WM_Obj * pWin, * pNext;
;;;67       if (hWin) {
000006  b30f              CBZ      r7,|L2.76|
;;;68         pWin = WM_H2P(hWin);
000008  4638              MOV      r0,r7
00000a  f7fffffe          BL       GUI_ALLOC_h2p
00000e  4604              MOV      r4,r0
;;;69         hNext = pWin->hNext;
000010  f9b4501a          LDRSH    r5,[r4,#0x1a]
;;;70         /* Is window alread on top ? If so, we are done. (Not required, just an optimization) */
;;;71         if (hNext == 0) {
000014  b90d              CBNZ     r5,|L2.26|
                  |L2.22|
;;;72           return;
;;;73         }
;;;74         /* For non-top windows, it is good enough if the next one is a stay-on-top-window (Not required, just an optimization) */
;;;75         if ((pWin->Status & WM_SF_STAYONTOP) == 0) {
;;;76           pNext = WM_H2P(hNext);
;;;77           if (pNext->Status & WM_SF_STAYONTOP) {
;;;78             return;
;;;79           }
;;;80         }
;;;81         hParent = pWin->hParent;
;;;82         WM__RemoveWindowFromList(hWin);
;;;83         WM__InsertWindowIntoList(hWin, hParent);
;;;84         _InvalidateWindowAndDescs(hWin);
;;;85       }
;;;86     }
000016  e8bd81f0          POP      {r4-r8,pc}
                  |L2.26|
00001a  7f20              LDRB     r0,[r4,#0x1c]         ;75
00001c  f0100f08          TST      r0,#8                 ;75
000020  d108              BNE      |L2.52|
000022  4628              MOV      r0,r5                 ;76
000024  f7fffffe          BL       GUI_ALLOC_h2p
000028  4606              MOV      r6,r0                 ;76
00002a  7f30              LDRB     r0,[r6,#0x1c]         ;77
00002c  f0100f08          TST      r0,#8                 ;77
000030  d000              BEQ      |L2.52|
000032  e7f0              B        |L2.22|
                  |L2.52|
000034  f9b48016          LDRSH    r8,[r4,#0x16]         ;81
000038  4638              MOV      r0,r7                 ;82
00003a  f7fffffe          BL       WM__RemoveWindowFromList
00003e  4641              MOV      r1,r8                 ;83
000040  4638              MOV      r0,r7                 ;83
000042  f7fffffe          BL       WM__InsertWindowIntoList
000046  4638              MOV      r0,r7                 ;84
000048  f7fffffe          BL       _InvalidateWindowAndDescs
                  |L2.76|
00004c  bf00              NOP      
00004e  e7e2              B        |L2.22|
;;;87     
                          ENDP


                          AREA ||i._InvalidateWindowAndDescs||, CODE, READONLY, ALIGN=2

                  _InvalidateWindowAndDescs PROC
;;;54     */
;;;55     static void _InvalidateWindowAndDescs(WM_HWIN hWin) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;56       WM_InvalidateWindow(hWin);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       WM_InvalidateWindow
;;;57       WM_ForEachDesc(hWin, _cbInvalidateOne, 0);
00000a  2200              MOVS     r2,#0
00000c  4902              LDR      r1,|L3.24|
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       WM_ForEachDesc
;;;58     }
000014  bd10              POP      {r4,pc}
;;;59     
                          ENDP

000016  0000              DCW      0x0000
                  |L3.24|
                          DCD      _cbInvalidateOne

                          AREA ||i._cbInvalidateOne||, CODE, READONLY, ALIGN=1

                  _cbInvalidateOne PROC
;;;45     */
;;;46     static void _cbInvalidateOne(WM_HWIN hWin, void * p) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;47       GUI_USE_PARA(p);
000006  bf00              NOP      
;;;48       WM_InvalidateWindow(hWin);
000008  4628              MOV      r0,r5
00000a  f7fffffe          BL       WM_InvalidateWindow
;;;49     }
00000e  bd70              POP      {r4-r6,pc}
;;;50     
                          ENDP

