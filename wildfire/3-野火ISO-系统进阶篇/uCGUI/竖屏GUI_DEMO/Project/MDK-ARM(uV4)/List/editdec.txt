; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\editdec.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\editdec.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Widget\EDITDec.c]
                          THUMB

                          AREA ||i.EDIT_SetDecMode||, CODE, READONLY, ALIGN=2

                  EDIT_SetDecMode PROC
;;;282    */
;;;283    void EDIT_SetDecMode(EDIT_Handle hEdit, I32 Value, I32 Min, I32 Max, int Shift, U8 Flags) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
00000a  4698              MOV      r8,r3
00000c  e9dd9a08          LDRD     r9,r10,[sp,#0x20]
;;;284      EDIT_Obj* pObj;
;;;285      WM_LOCK();
000010  f7fffffe          BL       GUI_Lock
;;;286      if (hEdit) {
000014  b325              CBZ      r5,|L1.96|
;;;287        pObj = EDIT_H2P(hEdit);
000016  4628              MOV      r0,r5
000018  f7fffffe          BL       GUI_ALLOC_h2p
00001c  4604              MOV      r4,r0
;;;288        pObj->pfAddKeyEx    = _AddKeyDec;
00001e  4812              LDR      r0,|L1.104|
000020  64e0              STR      r0,[r4,#0x4c]
;;;289        pObj->pfUpdateBuffer= _UpdateBuffer;
000022  4812              LDR      r0,|L1.108|
000024  6520              STR      r0,[r4,#0x50]
;;;290        pObj->CurrentValue  = Value;
000026  63e6              STR      r6,[r4,#0x3c]
;;;291        pObj->CursorPos     = 0;
000028  2000              MOVS     r0,#0
00002a  6420              STR      r0,[r4,#0x40]
;;;292        pObj->Min           = Min;
00002c  6327              STR      r7,[r4,#0x30]
;;;293        pObj->Max           = Max;
00002e  f8c48034          STR      r8,[r4,#0x34]
;;;294        pObj->NumDecs       = Shift;
000032  f8849038          STRB     r9,[r4,#0x38]
;;;295        pObj->Flags         = Flags;
000036  f884a04a          STRB     r10,[r4,#0x4a]
;;;296        pObj->EditMode      = GUI_EDIT_MODE_OVERWRITE;
00003a  2001              MOVS     r0,#1
00003c  f8840048          STRB     r0,[r4,#0x48]
;;;297        _UpdateBuffer(hEdit);
000040  4628              MOV      r0,r5
000042  f7fffffe          BL       _UpdateBuffer
;;;298        if (EDIT__GetCurrentChar(pObj) == '.') {
000046  4620              MOV      r0,r4
000048  f7fffffe          BL       EDIT__GetCurrentChar
00004c  282e              CMP      r0,#0x2e
00004e  d104              BNE      |L1.90|
;;;299          EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
000050  6c20              LDR      r0,[r4,#0x40]
000052  1c41              ADDS     r1,r0,#1
000054  4620              MOV      r0,r4
000056  f7fffffe          BL       EDIT__SetCursorPos
                  |L1.90|
;;;300        }
;;;301        WM_Invalidate(hEdit);
00005a  4628              MOV      r0,r5
00005c  f7fffffe          BL       WM_InvalidateWindow
                  |L1.96|
;;;302      }
;;;303      WM_UNLOCK();
000060  f7fffffe          BL       GUI_Unlock
;;;304    }
000064  e8bd87f0          POP      {r4-r10,pc}
;;;305    
                          ENDP

                  |L1.104|
                          DCD      _AddKeyDec
                  |L1.108|
                          DCD      _UpdateBuffer

                          AREA ||i._AddKeyDec||, CODE, READONLY, ALIGN=1

                  _AddKeyDec PROC
;;;183    */
;;;184    static void _AddKeyDec(EDIT_Handle hObj, int Key) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
;;;185      char c;
;;;186      EDIT_Obj * pObj;
;;;187      pObj = EDIT_H2P(hObj); /* The GUI needs not to be locked here. This function is called only from EDIT_AddKey which has already locked the GUI */
000008  4630              MOV      r0,r6
00000a  f7fffffe          BL       GUI_ALLOC_h2p
00000e  4604              MOV      r4,r0
;;;188      if (pObj) {
000010  2c00              CMP      r4,#0
000012  d07c              BEQ      |L2.270|
;;;189        switch (Key) {
000014  2f13              CMP      r7,#0x13
000016  d033              BEQ      |L2.128|
000018  dc06              BGT      |L2.40|
00001a  2f10              CMP      r7,#0x10
00001c  d048              BEQ      |L2.176|
00001e  2f11              CMP      r7,#0x11
000020  d01b              BEQ      |L2.90|
000022  2f12              CMP      r7,#0x12
000024  d15d              BNE      |L2.226|
000026  e03f              B        |L2.168|
                  |L2.40|
000028  2f2b              CMP      r7,#0x2b
00002a  d002              BEQ      |L2.50|
00002c  2f2d              CMP      r7,#0x2d
00002e  d158              BNE      |L2.226|
000030  e009              B        |L2.70|
                  |L2.50|
;;;190          case '+':
;;;191            if (pObj->CursorPos == 0) {
000032  6c20              LDR      r0,[r4,#0x40]
000034  b930              CBNZ     r0,|L2.68|
;;;192              _MakePositive(pObj, hObj);
000036  4631              MOV      r1,r6
000038  4620              MOV      r0,r4
00003a  f7fffffe          BL       _MakePositive
;;;193              _IncrementCursor(pObj);
00003e  4620              MOV      r0,r4
000040  f7fffffe          BL       _IncrementCursor
                  |L2.68|
;;;194            }
;;;195            break;
000044  e06b              B        |L2.286|
                  |L2.70|
;;;196          case '-':
;;;197            if (pObj->CursorPos == 0) {
000046  6c20              LDR      r0,[r4,#0x40]
000048  b930              CBNZ     r0,|L2.88|
;;;198              _MakeNegative(pObj, hObj);
00004a  4631              MOV      r1,r6
00004c  4620              MOV      r0,r4
00004e  f7fffffe          BL       _MakeNegative
;;;199              _IncrementCursor(pObj);
000052  4620              MOV      r0,r4
000054  f7fffffe          BL       _IncrementCursor
                  |L2.88|
;;;200            }
;;;201            break;
000058  e061              B        |L2.286|
                  |L2.90|
;;;202          #if EDIT_DEC_DIGITONLY
;;;203            case GUI_KEY_UP:
;;;204              c = EDIT__GetCurrentChar(pObj);
;;;205              if ((c == '-') || (c == '+')) {
;;;206                _SwapSign(pObj, hObj);
;;;207              } else {
;;;208                int Digit = GetCurrentDigit(pObj) + 1;
;;;209                if (Digit > 9)
;;;210                  Digit = 0;
;;;211                _EditDec(Digit, pObj, hObj);
;;;212              }
;;;213              break;
;;;214            case GUI_KEY_DOWN:
;;;215              c = EDIT__GetCurrentChar(pObj);
;;;216              if ((c == '-') || (c == '+')) {
;;;217                _SwapSign(pObj, hObj);
;;;218              } else {
;;;219                int Digit = GetCurrentDigit(pObj) - 1;
;;;220                if (Digit < 0)
;;;221                  Digit = 9;
;;;222                _EditDec(Digit, pObj, hObj);
;;;223              }
;;;224              break;
;;;225          #else
;;;226            case GUI_KEY_UP:
;;;227              c = EDIT__GetCurrentChar(pObj);
00005a  4620              MOV      r0,r4
00005c  f7fffffe          BL       EDIT__GetCurrentChar
000060  b2c5              UXTB     r5,r0
;;;228              if ((c == '-') || (c == '+')) {
000062  2d2d              CMP      r5,#0x2d
000064  d001              BEQ      |L2.106|
000066  2d2b              CMP      r5,#0x2b
000068  d104              BNE      |L2.116|
                  |L2.106|
;;;229                _SwapSign(pObj, hObj);
00006a  4631              MOV      r1,r6
00006c  4620              MOV      r0,r4
00006e  f7fffffe          BL       _SwapSign
000072  e004              B        |L2.126|
                  |L2.116|
;;;230              } else {
;;;231                _AddPosition(pObj, hObj, 1);
000074  2201              MOVS     r2,#1
000076  4631              MOV      r1,r6
000078  4620              MOV      r0,r4
00007a  f7fffffe          BL       _AddPosition
                  |L2.126|
;;;232              }
;;;233              break;
00007e  e04e              B        |L2.286|
                  |L2.128|
;;;234            case GUI_KEY_DOWN:
;;;235              c = EDIT__GetCurrentChar(pObj);
000080  4620              MOV      r0,r4
000082  f7fffffe          BL       EDIT__GetCurrentChar
000086  b2c5              UXTB     r5,r0
;;;236              if ((c == '-') || (c == '+')) {
000088  2d2d              CMP      r5,#0x2d
00008a  d001              BEQ      |L2.144|
00008c  2d2b              CMP      r5,#0x2b
00008e  d104              BNE      |L2.154|
                  |L2.144|
;;;237                _SwapSign(pObj, hObj);
000090  4631              MOV      r1,r6
000092  4620              MOV      r0,r4
000094  f7fffffe          BL       _SwapSign
000098  e005              B        |L2.166|
                  |L2.154|
;;;238              } else {
;;;239                _AddPosition(pObj, hObj, -1);
00009a  f04f32ff          MOV      r2,#0xffffffff
00009e  4631              MOV      r1,r6
0000a0  4620              MOV      r0,r4
0000a2  f7fffffe          BL       _AddPosition
                  |L2.166|
;;;240              }
;;;241              break;
0000a6  e03a              B        |L2.286|
                  |L2.168|
;;;242          #endif
;;;243          case GUI_KEY_RIGHT:
;;;244            _IncrementCursor(pObj);
0000a8  4620              MOV      r0,r4
0000aa  f7fffffe          BL       _IncrementCursor
;;;245            break;
0000ae  e036              B        |L2.286|
                  |L2.176|
;;;246          case GUI_KEY_LEFT:
;;;247            EDIT__SetCursorPos(pObj, pObj->CursorPos - 1);
0000b0  6c20              LDR      r0,[r4,#0x40]
0000b2  1e41              SUBS     r1,r0,#1
0000b4  4620              MOV      r0,r4
0000b6  f7fffffe          BL       EDIT__SetCursorPos
;;;248            if (EDIT__GetCurrentChar(pObj) == '.') {
0000ba  4620              MOV      r0,r4
0000bc  f7fffffe          BL       EDIT__GetCurrentChar
0000c0  282e              CMP      r0,#0x2e
0000c2  d10d              BNE      |L2.224|
;;;249              if (pObj->CursorPos > 0) {
0000c4  6c20              LDR      r0,[r4,#0x40]
0000c6  2800              CMP      r0,#0
0000c8  dd05              BLE      |L2.214|
;;;250                EDIT__SetCursorPos(pObj, pObj->CursorPos - 1);
0000ca  6c20              LDR      r0,[r4,#0x40]
0000cc  1e41              SUBS     r1,r0,#1
0000ce  4620              MOV      r0,r4
0000d0  f7fffffe          BL       EDIT__SetCursorPos
0000d4  e004              B        |L2.224|
                  |L2.214|
;;;251              } else {
;;;252                EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
0000d6  6c20              LDR      r0,[r4,#0x40]
0000d8  1c41              ADDS     r1,r0,#1
0000da  4620              MOV      r0,r4
0000dc  f7fffffe          BL       EDIT__SetCursorPos
                  |L2.224|
;;;253              }
;;;254            }
;;;255            break;
0000e0  e01d              B        |L2.286|
                  |L2.226|
;;;256          default:
;;;257            {
;;;258              char c = EDIT__GetCurrentChar(pObj);
0000e2  4620              MOV      r0,r4
0000e4  f7fffffe          BL       EDIT__GetCurrentChar
0000e8  f00008ff          AND      r8,r0,#0xff
;;;259              if ((c != '-') && (c != '+')) {
0000ec  f1b80f2d          CMP      r8,#0x2d
0000f0  d014              BEQ      |L2.284|
0000f2  f1b80f2b          CMP      r8,#0x2b
0000f6  d011              BEQ      |L2.284|
;;;260                int Digit = _DecChar2Int(Key);
0000f8  4638              MOV      r0,r7
0000fa  f7fffffe          BL       _DecChar2Int
0000fe  4681              MOV      r9,r0
;;;261                if (Digit >= 0) {
000100  f1b90f00          CMP      r9,#0
000104  db09              BLT      |L2.282|
;;;262                  _EditDec(Digit, pObj, hObj);
000106  4632              MOV      r2,r6
000108  4621              MOV      r1,r4
00010a  4648              MOV      r0,r9
00010c  e000              B        |L2.272|
                  |L2.270|
00010e  e007              B        |L2.288|
                  |L2.272|
000110  f7fffffe          BL       _EditDec
;;;263                  _IncrementCursor(pObj);
000114  4620              MOV      r0,r4
000116  f7fffffe          BL       _IncrementCursor
                  |L2.282|
;;;264                }
;;;265              }
00011a  bf00              NOP      
                  |L2.284|
;;;266            }
;;;267            break;
00011c  bf00              NOP      
                  |L2.286|
00011e  bf00              NOP                            ;195
                  |L2.288|
;;;268        }
;;;269      }
;;;270      _UpdateBuffer(hObj);
000120  4630              MOV      r0,r6
000122  f7fffffe          BL       _UpdateBuffer
;;;271    }
000126  e8bd87f0          POP      {r4-r10,pc}
;;;272    
                          ENDP


                          AREA ||i._AddPosition||, CODE, READONLY, ALIGN=1

                  _AddPosition PROC
;;;158    #if !EDIT_DEC_DIGITONLY
;;;159    static void _AddPosition(EDIT_Obj* pObj, EDIT_Handle hObj, int Sign) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
;;;160      int Pos;
;;;161      I32 v;
;;;162      v = Sign;
00000a  46b8              MOV      r8,r7
;;;163      Pos = pObj->MaxLen - pObj->CursorPos-1;
00000c  f9b4002a          LDRSH    r0,[r4,#0x2a]
000010  6c21              LDR      r1,[r4,#0x40]
000012  1a40              SUBS     r0,r0,r1
000014  1e45              SUBS     r5,r0,#1
;;;164      if (pObj->NumDecs && (Pos > pObj->NumDecs)) {
000016  f8940038          LDRB     r0,[r4,#0x38]
00001a  b120              CBZ      r0,|L3.38|
00001c  f8940038          LDRB     r0,[r4,#0x38]
000020  42a8              CMP      r0,r5
000022  da00              BGE      |L3.38|
;;;165        Pos--;
000024  1e6d              SUBS     r5,r5,#1
                  |L3.38|
;;;166      }
;;;167      while (Pos--) {
000026  e003              B        |L3.48|
                  |L3.40|
;;;168        v *= 10;
000028  eb080088          ADD      r0,r8,r8,LSL #2
00002c  ea4f0840          LSL      r8,r0,#1
                  |L3.48|
000030  0028              MOVS     r0,r5                 ;167
000032  f1a50501          SUB      r5,r5,#1              ;167
000036  d1f7              BNE      |L3.40|
;;;169      }
;;;170      EDIT_SetValue(hObj, (I32)pObj->CurrentValue + v);
000038  6be0              LDR      r0,[r4,#0x3c]
00003a  eb000108          ADD      r1,r0,r8
00003e  4630              MOV      r0,r6
000040  f7fffffe          BL       EDIT_SetValue
;;;171    }
000044  e8bd81f0          POP      {r4-r8,pc}
;;;172    #endif
                          ENDP


                          AREA ||i._DecChar2Int||, CODE, READONLY, ALIGN=1

                  _DecChar2Int PROC
;;;48     */
;;;49     static int _DecChar2Int(int Char) {
000000  4601              MOV      r1,r0
;;;50       if ((Char >= '0') && (Char <= '9'))
000002  2930              CMP      r1,#0x30
000004  db04              BLT      |L4.16|
000006  2939              CMP      r1,#0x39
000008  dc02              BGT      |L4.16|
;;;51         return Char - '0';
00000a  f1a10030          SUB      r0,r1,#0x30
                  |L4.14|
;;;52       return -1;
;;;53     }
00000e  4770              BX       lr
                  |L4.16|
000010  f04f30ff          MOV      r0,#0xffffffff        ;52
000014  e7fb              B        |L4.14|
;;;54     
                          ENDP


                          AREA ||i._EditDec||, CODE, READONLY, ALIGN=2

                  _EditDec PROC
;;;75     */
;;;76     static void _EditDec(int Digit, EDIT_Obj* pObj, EDIT_Handle hObj) {
000000  e92d5ffc          PUSH     {r2-r12,lr}
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
000008  4690              MOV      r8,r2
;;;77       I32 Result = 0;
00000a  2500              MOVS     r5,#0
;;;78       int i, Pos = 0;
00000c  46a9              MOV      r9,r5
;;;79       char * s = (char*) GUI_ALLOC_h2p(pObj->hpText);
00000e  f9b40028          LDRSH    r0,[r4,#0x28]
000012  f7fffffe          BL       GUI_ALLOC_h2p
000016  9001              STR      r0,[sp,#4]
;;;80       for (i = 0; i < pObj->MaxLen; i++) {
000018  2600              MOVS     r6,#0
00001a  e02a              B        |L5.114|
                  |L5.28|
;;;81         int Index = pObj->MaxLen - i - 1;
00001c  f9b4002a          LDRSH    r0,[r4,#0x2a]
000020  1b80              SUBS     r0,r0,r6
000022  1e40              SUBS     r0,r0,#1
000024  9000              STR      r0,[sp,#0]
;;;82         if (Index == pObj->CursorPos) {
000026  6c21              LDR      r1,[r4,#0x40]
000028  9800              LDR      r0,[sp,#0]
00002a  4281              CMP      r1,r0
00002c  d108              BNE      |L5.64|
;;;83           Result += GUI_Pow10[Pos++] * Digit;
00002e  4648              MOV      r0,r9
000030  f1090901          ADD      r9,r9,#1
000034  4914              LDR      r1,|L5.136|
000036  f8510020          LDR      r0,[r1,r0,LSL #2]
00003a  fb005507          MLA      r5,r0,r7,r5
00003e  e017              B        |L5.112|
                  |L5.64|
;;;84         } else {
;;;85           char c = *(s + Index);
000040  e9dd1000          LDRD     r1,r0,[sp,#0]
000044  f810a001          LDRB     r10,[r0,r1]
;;;86           int Value = _DecChar2Int(c);
000048  4650              MOV      r0,r10
00004a  f7fffffe          BL       _DecChar2Int
00004e  4683              MOV      r11,r0
;;;87           if (Value >= 0) {
000050  f1bb0f00          CMP      r11,#0
000054  db07              BLT      |L5.102|
;;;88             Result += GUI_Pow10[Pos++] * Value;
000056  4648              MOV      r0,r9
000058  f1090901          ADD      r9,r9,#1
00005c  490a              LDR      r1,|L5.136|
00005e  f8510020          LDR      r0,[r1,r0,LSL #2]
000062  fb00550b          MLA      r5,r0,r11,r5
                  |L5.102|
;;;89           }
;;;90           if (c == '-') {
000066  f1ba0f2d          CMP      r10,#0x2d
00006a  d100              BNE      |L5.110|
;;;91             Result *= -1;
00006c  426d              RSBS     r5,r5,#0
                  |L5.110|
;;;92           }
;;;93         }
00006e  bf00              NOP      
                  |L5.112|
000070  1c76              ADDS     r6,r6,#1              ;80
                  |L5.114|
000072  f9b4002a          LDRSH    r0,[r4,#0x2a]         ;80
000076  42b0              CMP      r0,r6                 ;80
000078  dcd0              BGT      |L5.28|
;;;94       }
;;;95       EDIT_SetValue(hObj, Result);
00007a  4629              MOV      r1,r5
00007c  4640              MOV      r0,r8
00007e  f7fffffe          BL       EDIT_SetValue
;;;96     }
000082  e8bd9ffc          POP      {r2-r12,pc}
;;;97     
                          ENDP

000086  0000              DCW      0x0000
                  |L5.136|
                          DCD      GUI_Pow10

                          AREA ||i._IncrementCursor||, CODE, READONLY, ALIGN=1

                  _IncrementCursor PROC
;;;142    */
;;;143    static void _IncrementCursor(EDIT_Obj* pObj) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;144      EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
000004  6c20              LDR      r0,[r4,#0x40]
000006  1c41              ADDS     r1,r0,#1
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       EDIT__SetCursorPos
;;;145      if (EDIT__GetCurrentChar(pObj) == '.') {
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       EDIT__GetCurrentChar
000014  282e              CMP      r0,#0x2e
000016  d110              BNE      |L6.58|
;;;146        if (pObj->CursorPos < (pObj->MaxLen - 1)) {
000018  f9b4002a          LDRSH    r0,[r4,#0x2a]
00001c  1e40              SUBS     r0,r0,#1
00001e  6c21              LDR      r1,[r4,#0x40]
000020  4281              CMP      r1,r0
000022  da05              BGE      |L6.48|
;;;147          EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
000024  6c20              LDR      r0,[r4,#0x40]
000026  1c41              ADDS     r1,r0,#1
000028  4620              MOV      r0,r4
00002a  f7fffffe          BL       EDIT__SetCursorPos
00002e  e004              B        |L6.58|
                  |L6.48|
;;;148        } else {
;;;149          EDIT__SetCursorPos(pObj, pObj->CursorPos - 1);
000030  6c20              LDR      r0,[r4,#0x40]
000032  1e41              SUBS     r1,r0,#1
000034  4620              MOV      r0,r4
000036  f7fffffe          BL       EDIT__SetCursorPos
                  |L6.58|
;;;150        }
;;;151      }
;;;152    }
00003a  bd10              POP      {r4,pc}
;;;153    
                          ENDP


                          AREA ||i._MakeNegative||, CODE, READONLY, ALIGN=1

                  _MakeNegative PROC
;;;121    */
;;;122    static void _MakeNegative(EDIT_Obj* pObj, EDIT_Handle hObj) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;123      if ((I32)pObj->CurrentValue > 0) {
000006  6be0              LDR      r0,[r4,#0x3c]
000008  2800              CMP      r0,#0
00000a  dd04              BLE      |L7.22|
;;;124        EDIT_SetValue(hObj, (I32)pObj->CurrentValue * -1);
00000c  6be0              LDR      r0,[r4,#0x3c]
00000e  4241              RSBS     r1,r0,#0
000010  4628              MOV      r0,r5
000012  f7fffffe          BL       EDIT_SetValue
                  |L7.22|
;;;125      }
;;;126    }
000016  bd70              POP      {r4-r6,pc}
;;;127    
                          ENDP


                          AREA ||i._MakePositive||, CODE, READONLY, ALIGN=1

                  _MakePositive PROC
;;;111    */
;;;112    static void _MakePositive(EDIT_Obj* pObj, EDIT_Handle hObj) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;113      if ((I32)pObj->CurrentValue < 0) {
000006  6be0              LDR      r0,[r4,#0x3c]
000008  2800              CMP      r0,#0
00000a  da04              BGE      |L8.22|
;;;114        EDIT_SetValue(hObj, (I32)pObj->CurrentValue * -1);
00000c  6be0              LDR      r0,[r4,#0x3c]
00000e  4241              RSBS     r1,r0,#0
000010  4628              MOV      r0,r5
000012  f7fffffe          BL       EDIT_SetValue
                  |L8.22|
;;;115      }
;;;116    }
000016  bd70              POP      {r4-r6,pc}
;;;117    
                          ENDP


                          AREA ||i._SwapSign||, CODE, READONLY, ALIGN=1

                  _SwapSign PROC
;;;131    */
;;;132    static void _SwapSign(EDIT_Obj* pObj, EDIT_Handle hObj) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;133      if ((I32)pObj->CurrentValue > 0)
000006  6be0              LDR      r0,[r4,#0x3c]
000008  2800              CMP      r0,#0
00000a  dd04              BLE      |L9.22|
;;;134        _MakeNegative(pObj, hObj);
00000c  4629              MOV      r1,r5
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       _MakeNegative
000014  e003              B        |L9.30|
                  |L9.22|
;;;135      else
;;;136        _MakePositive(pObj, hObj);
000016  4629              MOV      r1,r5
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       _MakePositive
                  |L9.30|
;;;137    }
00001e  bd70              POP      {r4-r6,pc}
;;;138    
                          ENDP


                          AREA ||i._UpdateBuffer||, CODE, READONLY, ALIGN=1

                  _UpdateBuffer PROC
;;;58     */
;;;59     static void _UpdateBuffer(EDIT_Handle hObj) {
000000  b5f8              PUSH     {r3-r7,lr}
000002  4605              MOV      r5,r0
;;;60       char * s;
;;;61       EDIT_Obj * pObj;
;;;62       pObj = EDIT_H2P(hObj); /* The GUI needs not to be locked here. This function is called only from EDIT_AddKey which has already locked the GUI */
000004  4628              MOV      r0,r5
000006  f7fffffe          BL       GUI_ALLOC_h2p
00000a  4604              MOV      r4,r0
;;;63       s = (char*) GUI_ALLOC_h2p(pObj->hpText);
00000c  f9b40028          LDRSH    r0,[r4,#0x28]
000010  f7fffffe          BL       GUI_ALLOC_h2p
000014  9000              STR      r0,[sp,#0]
;;;64       if (pObj->Flags == GUI_EDIT_SIGNED) {
000016  f894004a          LDRB     r0,[r4,#0x4a]
00001a  2801              CMP      r0,#1
00001c  d10f              BNE      |L10.62|
;;;65         I32 Result = GUI_AddSign(pObj->CurrentValue, &s);
00001e  4669              MOV      r1,sp
000020  6be0              LDR      r0,[r4,#0x3c]
000022  f7fffffe          BL       GUI_AddSign
000026  4606              MOV      r6,r0
;;;66         GUI_AddDecShift(Result, pObj->MaxLen - 1, pObj->NumDecs, &s);
000028  f8942038          LDRB     r2,[r4,#0x38]
00002c  f894002a          LDRB     r0,[r4,#0x2a]
000030  1e40              SUBS     r0,r0,#1
000032  b2c1              UXTB     r1,r0
000034  466b              MOV      r3,sp
000036  4630              MOV      r0,r6
000038  f7fffffe          BL       GUI_AddDecShift
;;;67       } else {
00003c  e007              B        |L10.78|
                  |L10.62|
;;;68         GUI_AddDecShift(pObj->CurrentValue, pObj->MaxLen, pObj->NumDecs, &s);
00003e  f8942038          LDRB     r2,[r4,#0x38]
000042  f894102a          LDRB     r1,[r4,#0x2a]
000046  466b              MOV      r3,sp
000048  6be0              LDR      r0,[r4,#0x3c]
00004a  f7fffffe          BL       GUI_AddDecShift
                  |L10.78|
;;;69       }
;;;70     }
00004e  bdf8              POP      {r3-r7,pc}
;;;71     
                          ENDP

