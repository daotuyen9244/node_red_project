; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\guiaachar2.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\guiaachar2.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\AntiAlias\GUIAAChar2.c]
                          THUMB

                          AREA ||i.DrawNoTrans||, CODE, READONLY, ALIGN=2

                  DrawNoTrans PROC
;;;61     */
;;;62     static void DrawNoTrans(int x0, int y0, int XSize, int YSize, int BytesPerLine, const U8*pData) {
000000  e92d5ffc          PUSH     {r2-r12,lr}
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
00000a  4698              MOV      r8,r3
;;;63       if ((OldColorIndex   != LCD_COLORINDEX) || 
00000c  4824              LDR      r0,|L1.160|
00000e  8840              LDRH     r0,[r0,#2]  ; GUI_Context
000010  4924              LDR      r1,|L1.164|
000012  8809              LDRH     r1,[r1,#0]  ; OldColorIndex
000014  4288              CMP      r0,r1
000016  d105              BNE      |L1.36|
;;;64           (OldBkColorIndex != LCD_BKCOLORINDEX)) {
000018  4821              LDR      r0,|L1.160|
00001a  8800              LDRH     r0,[r0,#0]  ; GUI_Context
00001c  4922              LDR      r1,|L1.168|
00001e  8809              LDRH     r1,[r1,#0]  ; OldBkColorIndex
000020  4288              CMP      r0,r1
000022  d02d              BEQ      |L1.128|
                  |L1.36|
;;;65         int i;
;;;66         LCD_PIXELINDEX BkColorIndex = LCD_BKCOLORINDEX;
000024  481e              LDR      r0,|L1.160|
000026  f8b09000          LDRH     r9,[r0,#0]  ; GUI_Context
;;;67         LCD_PIXELINDEX ColorIndex   = LCD_COLORINDEX;
00002a  f8b0a002          LDRH     r10,[r0,#2]  ; GUI_Context
;;;68         LCD_COLOR BkColor = LCD_Index2Color(BkColorIndex);
00002e  4648              MOV      r0,r9
000030  f7fffffe          BL       LCD_Index2Color
000034  4683              MOV      r11,r0
;;;69         LCD_COLOR Color   = LCD_Index2Color(ColorIndex);
000036  4650              MOV      r0,r10
000038  f7fffffe          BL       LCD_Index2Color
00003c  9001              STR      r0,[sp,#4]
;;;70         aColor[0] = BkColor;
00003e  481b              LDR      r0,|L1.172|
000040  f8c0b000          STR      r11,[r0,#0]  ; aColor
;;;71         for (i = 1; i < 3; i++) {
000044  2401              MOVS     r4,#1
000046  e00c              B        |L1.98|
                  |L1.72|
;;;72           U8 Intens;
;;;73           Intens = 5 * i;
000048  eb040084          ADD      r0,r4,r4,LSL #2
00004c  b2c0              UXTB     r0,r0
00004e  9000              STR      r0,[sp,#0]
;;;74           aColor[i] = LCD_AA_MixColors(Color, BkColor, Intens);
000050  4659              MOV      r1,r11
000052  e9dd2000          LDRD     r2,r0,[sp,#0]
000056  f7fffffe          BL       LCD_AA_MixColors
00005a  4914              LDR      r1,|L1.172|
00005c  f8410024          STR      r0,[r1,r4,LSL #2]
000060  1c64              ADDS     r4,r4,#1              ;71
                  |L1.98|
000062  2c03              CMP      r4,#3                 ;71
000064  dbf0              BLT      |L1.72|
;;;75         }
;;;76         aColor[3] = Color;
000066  4911              LDR      r1,|L1.172|
000068  9801              LDR      r0,[sp,#4]
00006a  60c8              STR      r0,[r1,#0xc]  ; aColor
;;;77         LCD_GetpPalConvTableUncached(&Palette);
00006c  4810              LDR      r0,|L1.176|
00006e  f7fffffe          BL       LCD_GetpPalConvTableUncached
;;;78         OldColorIndex = ColorIndex;
000072  480c              LDR      r0,|L1.164|
000074  f8a0a000          STRH     r10,[r0,#0]
;;;79         OldBkColorIndex = BkColorIndex;
000078  480b              LDR      r0,|L1.168|
00007a  f8a09000          STRH     r9,[r0,#0]
;;;80       }
00007e  bf00              NOP      
                  |L1.128|
;;;81       Bitmap.XSize = XSize;
000080  490c              LDR      r1,|L1.180|
000082  800f              STRH     r7,[r1,#0]
;;;82       Bitmap.YSize = YSize;
000084  f8a18002          STRH     r8,[r1,#2]
;;;83       Bitmap.BytesPerLine = BytesPerLine;
000088  980c              LDR      r0,[sp,#0x30]
00008a  8088              STRH     r0,[r1,#4]
;;;84       Bitmap.pData = pData;
00008c  980d              LDR      r0,[sp,#0x34]
00008e  6088              STR      r0,[r1,#8]  ; Bitmap
;;;85       GL_DrawBitmap(&Bitmap, x0, y0);
000090  4632              MOV      r2,r6
000092  4629              MOV      r1,r5
000094  4807              LDR      r0,|L1.180|
000096  f7fffffe          BL       GL_DrawBitmap
;;;86     }
00009a  e8bd9ffc          POP      {r2-r12,pc}
;;;87     
                          ENDP

00009e  0000              DCW      0x0000
                  |L1.160|
                          DCD      GUI_Context
                  |L1.164|
                          DCD      OldColorIndex
                  |L1.168|
                          DCD      OldBkColorIndex
                  |L1.172|
                          DCD      aColor
                  |L1.176|
                          DCD      Palette
                  |L1.180|
                          DCD      Bitmap

                          AREA ||i.DrawTrans||, CODE, READONLY, ALIGN=2

                  DrawTrans PROC
;;;91     */
;;;92     static void DrawTrans(int x0, int y0, int XSize, int YSize, int BytesPerLine, const U8*pData) {
000000  e92d5ff0          PUSH     {r4-r12,lr}
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
000008  4691              MOV      r9,r2
00000a  469b              MOV      r11,r3
;;;93       int x, y;
;;;94       for (y = 0; y < YSize; y++) {
00000c  2500              MOVS     r5,#0
00000e  e06f              B        |L2.240|
                  |L2.16|
;;;95         const U8 *pData0 = pData;
000010  f8dd802c          LDR      r8,[sp,#0x2c]
;;;96         U8 Rem = XSize & 3;
000014  f0090a03          AND      r10,r9,#3
;;;97         for (x = 0; x < XSize - 1; x += 4) {
000018  2400              MOVS     r4,#0
00001a  e032              B        |L2.130|
                  |L2.28|
;;;98           LCD_SetPixelAA(x + x0    , y0 + y, aConvTable[((*pData0  ) >> 6)       ]);
00001c  f8983000          LDRB     r3,[r8,#0]
000020  119b              ASRS     r3,r3,#6
000022  f8dfc0d4          LDR      r12,|L2.248|
000026  f81c2023          LDRB     r2,[r12,r3,LSL #2]
00002a  1979              ADDS     r1,r7,r5
00002c  19a0              ADDS     r0,r4,r6
00002e  f7fffffe          BL       LCD_SetPixelAA
;;;99           LCD_SetPixelAA(x + x0 + 1, y0 + y, aConvTable[((*pData0  ) >> 4) & 0x03]);
000032  f8983000          LDRB     r3,[r8,#0]
000036  f3c31301          UBFX     r3,r3,#4,#2
00003a  f8dfc0bc          LDR      r12,|L2.248|
00003e  f81c2023          LDRB     r2,[r12,r3,LSL #2]
000042  1979              ADDS     r1,r7,r5
000044  19a3              ADDS     r3,r4,r6
000046  1c58              ADDS     r0,r3,#1
000048  f7fffffe          BL       LCD_SetPixelAA
;;;100          LCD_SetPixelAA(x + x0 + 2, y0 + y, aConvTable[((*pData0  ) >> 2) & 0x03]);
00004c  f8983000          LDRB     r3,[r8,#0]
000050  f3c30381          UBFX     r3,r3,#2,#2
000054  f8dfc0a0          LDR      r12,|L2.248|
000058  f81c2023          LDRB     r2,[r12,r3,LSL #2]
00005c  1979              ADDS     r1,r7,r5
00005e  19a3              ADDS     r3,r4,r6
000060  1c98              ADDS     r0,r3,#2
000062  f7fffffe          BL       LCD_SetPixelAA
;;;101          LCD_SetPixelAA(x + x0 + 3, y0 + y, aConvTable[((*pData0++)     ) & 0x03]);
000066  f818cb01          LDRB     r12,[r8],#1
00006a  f00c0303          AND      r3,r12,#3
00006e  f8dfc088          LDR      r12,|L2.248|
000072  f81c2023          LDRB     r2,[r12,r3,LSL #2]
000076  1979              ADDS     r1,r7,r5
000078  19a3              ADDS     r3,r4,r6
00007a  1cd8              ADDS     r0,r3,#3
00007c  f7fffffe          BL       LCD_SetPixelAA
000080  1d24              ADDS     r4,r4,#4              ;97
                  |L2.130|
000082  f1a90001          SUB      r0,r9,#1              ;97
000086  42a0              CMP      r0,r4                 ;97
000088  dcc8              BGT      |L2.28|
;;;102      	}
;;;103        if (Rem) {
00008a  f1ba0f00          CMP      r10,#0
00008e  d02a              BEQ      |L2.230|
;;;104          LCD_SetPixelAA(x + x0    , y0 + y, aConvTable[((*pData0  ) >> 6)       ]);
000090  f8983000          LDRB     r3,[r8,#0]
000094  119b              ASRS     r3,r3,#6
000096  f8dfc060          LDR      r12,|L2.248|
00009a  f81c2023          LDRB     r2,[r12,r3,LSL #2]
00009e  1979              ADDS     r1,r7,r5
0000a0  19a0              ADDS     r0,r4,r6
0000a2  f7fffffe          BL       LCD_SetPixelAA
;;;105          if (Rem > 1) {
0000a6  f1ba0f01          CMP      r10,#1
0000aa  dd1c              BLE      |L2.230|
;;;106            LCD_SetPixelAA(x + x0 + 1, y0 + y, aConvTable[((*pData0  ) >> 4) & 0x03]);
0000ac  f8983000          LDRB     r3,[r8,#0]
0000b0  f3c31301          UBFX     r3,r3,#4,#2
0000b4  f8dfc040          LDR      r12,|L2.248|
0000b8  f81c2023          LDRB     r2,[r12,r3,LSL #2]
0000bc  1979              ADDS     r1,r7,r5
0000be  19a3              ADDS     r3,r4,r6
0000c0  1c58              ADDS     r0,r3,#1
0000c2  f7fffffe          BL       LCD_SetPixelAA
;;;107            if (Rem > 2) {
0000c6  f1ba0f02          CMP      r10,#2
0000ca  dd0c              BLE      |L2.230|
;;;108              LCD_SetPixelAA(x + x0 + 2, y0 + y, aConvTable[((*pData0  ) >> 2) & 0x03]);
0000cc  f8983000          LDRB     r3,[r8,#0]
0000d0  f3c30381          UBFX     r3,r3,#2,#2
0000d4  f8dfc020          LDR      r12,|L2.248|
0000d8  f81c2023          LDRB     r2,[r12,r3,LSL #2]
0000dc  1979              ADDS     r1,r7,r5
0000de  19a3              ADDS     r3,r4,r6
0000e0  1c98              ADDS     r0,r3,#2
0000e2  f7fffffe          BL       LCD_SetPixelAA
                  |L2.230|
;;;109            }
;;;110          }
;;;111        }
;;;112        pData += BytesPerLine;
0000e6  e9dd100a          LDRD     r1,r0,[sp,#0x28]
0000ea  4408              ADD      r0,r0,r1
0000ec  900b              STR      r0,[sp,#0x2c]
0000ee  1c6d              ADDS     r5,r5,#1              ;94
                  |L2.240|
0000f0  455d              CMP      r5,r11                ;94
0000f2  db8d              BLT      |L2.16|
;;;113      }
;;;114    }
0000f4  e8bd9ff0          POP      {r4-r12,pc}
;;;115    
                          ENDP

                  |L2.248|
                          DCD      aConvTable

                          AREA ||i.GUIPROP_AA2_DispChar||, CODE, READONLY, ALIGN=2

                  GUIPROP_AA2_DispChar PROC
;;;137    */
;;;138    void GUIPROP_AA2_DispChar(U16P c) {
000000  e92d47fc          PUSH     {r2-r10,lr}
000004  4605              MOV      r5,r0
;;;139      int BytesPerLine;
;;;140      GUI_DRAWMODE DrawMode = GUI_Context.TextMode;
000006  4825              LDR      r0,|L3.156|
000008  f9b0802e          LDRSH    r8,[r0,#0x2e]  ; GUI_Context
;;;141      const GUI_FONT_PROP* pProp = GUIPROP_FindChar(GUI_Context.pAFont->p.pProp, c);
00000c  4601              MOV      r1,r0
00000e  69c9              LDR      r1,[r1,#0x1c]  ; GUI_Context
000010  6988              LDR      r0,[r1,#0x18]
000012  4629              MOV      r1,r5
000014  f7fffffe          BL       GUIPROP_FindChar
000018  4607              MOV      r7,r0
;;;142      if (pProp) {
00001a  2f00              CMP      r7,#0
00001c  d03c              BEQ      |L3.152|
;;;143        GUI_DRAWMODE OldDrawMode;
;;;144        const GUI_CHARINFO* pCharInfo = pProp->paCharInfo+(c-pProp->First);
00001e  8839              LDRH     r1,[r7,#0]
000020  1a69              SUBS     r1,r5,r1
000022  6878              LDR      r0,[r7,#4]
000024  eb0004c1          ADD      r4,r0,r1,LSL #3
;;;145        BytesPerLine = pCharInfo->BytesPerLine;
000028  78a6              LDRB     r6,[r4,#2]
;;;146        OldDrawMode  = LCD_SetDrawMode(DrawMode);
00002a  4640              MOV      r0,r8
00002c  f7fffffe          BL       LCD_SetDrawMode
000030  4681              MOV      r9,r0
;;;147        if (DrawMode & GUI_TM_TRANS) {
000032  f0180f02          TST      r8,#2
000036  d012              BEQ      |L3.94|
;;;148          DrawTrans(GUI_Context.DispPosX, 
000038  6860              LDR      r0,[r4,#4]
00003a  f8dfc060          LDR      r12,|L3.156|
00003e  e9cd6000          STRD     r6,r0,[sp,#0]
000042  f8dcc01c          LDR      r12,[r12,#0x1c]  ; GUI_Context
000046  f89c3014          LDRB     r3,[r12,#0x14]
00004a  7822              LDRB     r2,[r4,#0]
00004c  f8dfc04c          LDR      r12,|L3.156|
000050  f9bc1028          LDRSH    r1,[r12,#0x28]  ; GUI_Context
000054  f9bc0026          LDRSH    r0,[r12,#0x26]  ; GUI_Context
000058  f7fffffe          BL       DrawTrans
00005c  e011              B        |L3.130|
                  |L3.94|
;;;149                    GUI_Context.DispPosY,
;;;150                    pCharInfo->XSize,
;;;151                    GUI_Context.pAFont->YSize,
;;;152                    BytesPerLine,
;;;153                    (U8 const*)pCharInfo->pData
;;;154          );
;;;155        } else {
;;;156          DrawNoTrans(GUI_Context.DispPosX, 
00005e  6860              LDR      r0,[r4,#4]
000060  f8dfc038          LDR      r12,|L3.156|
000064  e9cd6000          STRD     r6,r0,[sp,#0]
000068  f8dcc01c          LDR      r12,[r12,#0x1c]  ; GUI_Context
00006c  f89c3014          LDRB     r3,[r12,#0x14]
000070  7822              LDRB     r2,[r4,#0]
000072  f8dfc028          LDR      r12,|L3.156|
000076  f9bc1028          LDRSH    r1,[r12,#0x28]  ; GUI_Context
00007a  f9bc0026          LDRSH    r0,[r12,#0x26]  ; GUI_Context
00007e  f7fffffe          BL       DrawNoTrans
                  |L3.130|
;;;157                      GUI_Context.DispPosY,
;;;158                      pCharInfo->XSize,
;;;159                      GUI_Context.pAFont->YSize,
;;;160                      BytesPerLine,
;;;161                      (U8 const*)pCharInfo->pData
;;;162          );
;;;163        }
;;;164        LCD_SetDrawMode(OldDrawMode); /* Restore draw mode */
000082  4648              MOV      r0,r9
000084  f7fffffe          BL       LCD_SetDrawMode
;;;165        GUI_Context.DispPosX += pCharInfo->XDist;
000088  4804              LDR      r0,|L3.156|
00008a  8cc0              LDRH     r0,[r0,#0x26]  ; GUI_Context
00008c  7861              LDRB     r1,[r4,#1]
00008e  4408              ADD      r0,r0,r1
000090  b200              SXTH     r0,r0
000092  4902              LDR      r1,|L3.156|
000094  84c8              STRH     r0,[r1,#0x26]
;;;166      }
000096  bf00              NOP      
                  |L3.152|
;;;167    }
000098  e8bd87fc          POP      {r2-r10,pc}
;;;168    
                          ENDP

                  |L3.156|
                          DCD      GUI_Context

                          AREA ||i.GUIPROP_AA2_GetCharDistX||, CODE, READONLY, ALIGN=2

                  GUIPROP_AA2_GetCharDistX PROC
;;;172    */
;;;173    int GUIPROP_AA2_GetCharDistX(U16P c) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;174      const GUI_FONT_PROP* pProp = GUIPROP_FindChar(GUI_Context.pAFont->p.pProp, c);
000004  4907              LDR      r1,|L4.36|
000006  69c9              LDR      r1,[r1,#0x1c]  ; GUI_Context
000008  6988              LDR      r0,[r1,#0x18]
00000a  4621              MOV      r1,r4
00000c  f7fffffe          BL       GUIPROP_FindChar
000010  4605              MOV      r5,r0
;;;175      return (pProp) ? (pProp->paCharInfo+(c-pProp->First))->XSize : 0;
000012  b12d              CBZ      r5,|L4.32|
000014  8829              LDRH     r1,[r5,#0]
000016  1a61              SUBS     r1,r4,r1
000018  6868              LDR      r0,[r5,#4]
00001a  f8100031          LDRB     r0,[r0,r1,LSL #3]
                  |L4.30|
;;;176    }
00001e  bd70              POP      {r4-r6,pc}
                  |L4.32|
000020  2000              MOVS     r0,#0                 ;175
000022  e7fc              B        |L4.30|
;;;177    
                          ENDP

                  |L4.36|
                          DCD      GUI_Context

                          AREA ||i.GUIPROP_AA2_GetFontInfo||, CODE, READONLY, ALIGN=1

                  GUIPROP_AA2_GetFontInfo PROC
;;;181    */
;;;182    void GUIPROP_AA2_GetFontInfo(const GUI_FONT * pFont, GUI_FONTINFO* pfi) {
000000  bf00              NOP      
;;;183      GUI_USE_PARA(pFont);
;;;184      pfi->Flags = GUI_FONTINFO_FLAG_PROP | GUI_FONTINFO_FLAG_AA2;
000002  2209              MOVS     r2,#9
000004  800a              STRH     r2,[r1,#0]
;;;185    }
000006  4770              BX       lr
;;;186    
                          ENDP


                          AREA ||i.GUIPROP_AA2_IsInFont||, CODE, READONLY, ALIGN=1

                  GUIPROP_AA2_IsInFont PROC
;;;190    */
;;;191    char GUIPROP_AA2_IsInFont(const GUI_FONT * pFont, U16 c) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;192      const GUI_FONT_PROP* pProp = GUIPROP_FindChar(pFont->p.pProp, c);
000006  4629              MOV      r1,r5
000008  69a0              LDR      r0,[r4,#0x18]
00000a  f7fffffe          BL       GUIPROP_FindChar
00000e  4606              MOV      r6,r0
;;;193      return (pProp==NULL) ? 0 : 1;
000010  b10e              CBZ      r6,|L6.22|
000012  2001              MOVS     r0,#1
                  |L6.20|
;;;194    }
000014  bd70              POP      {r4-r6,pc}
                  |L6.22|
000016  2000              MOVS     r0,#0                 ;193
000018  e7fc              B        |L6.20|
;;;195    
                          ENDP


                          AREA ||i.GUIPROP_FindChar||, CODE, READONLY, ALIGN=2

                  GUIPROP_FindChar PROC
;;;119    */
;;;120    static const GUI_FONT_PROP* GUIPROP_FindChar(const GUI_FONT_PROP* pProp, U16P c) {
000000  4a07              LDR      r2,|L7.32|
;;;121      for (pProp = GUI_Context.pAFont->p.pProp; pProp; pProp=(const GUI_FONT_PROP*) pProp->pNext) {
000002  69d2              LDR      r2,[r2,#0x1c]  ; GUI_Context
000004  6990              LDR      r0,[r2,#0x18]
000006  e007              B        |L7.24|
                  |L7.8|
;;;122        if ((c>=pProp->First) && (c<=pProp->Last))
000008  8802              LDRH     r2,[r0,#0]
00000a  428a              CMP      r2,r1
00000c  dc03              BGT      |L7.22|
00000e  8842              LDRH     r2,[r0,#2]
000010  428a              CMP      r2,r1
000012  db00              BLT      |L7.22|
;;;123          break;
000014  e002              B        |L7.28|
                  |L7.22|
000016  6880              LDR      r0,[r0,#8]            ;121
                  |L7.24|
000018  2800              CMP      r0,#0                 ;121
00001a  d1f5              BNE      |L7.8|
                  |L7.28|
00001c  bf00              NOP      
;;;124      }
;;;125      return pProp;
;;;126    }
00001e  4770              BX       lr
;;;127    
                          ENDP

                  |L7.32|
                          DCD      GUI_Context

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  aColor
                          %        16

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  aConvTable
                          DCD      0x00000000
                          DCD      0x00000005
                          DCD      0x0000000a
                          DCD      0x0000000f

                          AREA ||.data||, DATA, ALIGN=2

                  Palette
                          DCD      0x00000004
000004  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      aColor
                  Bitmap
00000c  00000000          DCW      0x0000,0x0000
000010  00000002          DCW      0x0000,0x0002
                          DCD      0x00000000
                          DCD      Palette
                          DCD      0x00000000
                  OldColorIndex
000020  0000              DCB      0x00,0x00
                  OldBkColorIndex
000022  0000              DCB      0x00,0x00
