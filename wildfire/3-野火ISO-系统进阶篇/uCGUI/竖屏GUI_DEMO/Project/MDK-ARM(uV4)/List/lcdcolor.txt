; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\lcdcolor.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\lcdcolor.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Core\LCDColor.c]
                          THUMB

                          AREA ||i.LCD_GetpPalConvTable||, CODE, READONLY, ALIGN=1

                  LCD_GetpPalConvTable PROC
;;;86     */
;;;87     LCD_PIXELINDEX* LCD_GetpPalConvTable(const LCD_LOGPALETTE GUI_UNI_PTR *  pLogPal) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;88     /* Check cache */
;;;89       #if  LCD_SIZEOF_COLORCACHE
;;;90         if (pLogPalCache == pLogPal) {
;;;91           return &LCD__aConvTable[0];
;;;92         }
;;;93         pLogPalCache = pLogPal;
;;;94       #endif
;;;95       return LCD_GetpPalConvTableUncached(pLogPal);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       LCD_GetpPalConvTableUncached
;;;96     }
00000a  bd10              POP      {r4,pc}
;;;97     
                          ENDP


                          AREA ||i.LCD_GetpPalConvTableUncached||, CODE, READONLY, ALIGN=2

                  LCD_GetpPalConvTableUncached PROC
;;;59     */
;;;60     LCD_PIXELINDEX* LCD_GetpPalConvTableUncached(const LCD_LOGPALETTE GUI_UNI_PTR *  pLogPal) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
;;;61       if (pLogPal == NULL) {
000006  b914              CBNZ     r4,|L2.14|
;;;62         return NULL;
000008  2000              MOVS     r0,#0
                  |L2.10|
;;;63       }
;;;64       if (!pLogPal->pPalEntries) {
;;;65         return NULL;
;;;66       }
;;;67       /* Check if sufficient space is available */
;;;68       if (pLogPal->NumEntries > LCD_MAX_LOG_COLORS) {
;;;69         return NULL;
;;;70       }
;;;71       /* Build conversion table */
;;;72       {
;;;73         int i;
;;;74         int NumEntries = pLogPal->NumEntries;
;;;75         const LCD_COLOR GUI_UNI_PTR * pPalEntry = &pLogPal->pPalEntries[0];
;;;76         for (i=0; i< NumEntries; i++) {
;;;77           LCD__aConvTable[i] = LCD_Color2Index(*(pPalEntry+i));
;;;78         }
;;;79       }
;;;80       return &LCD__aConvTable[0];
;;;81     }
00000a  e8bd81f0          POP      {r4-r8,pc}
                  |L2.14|
00000e  68a0              LDR      r0,[r4,#8]            ;64
000010  b908              CBNZ     r0,|L2.22|
000012  2000              MOVS     r0,#0                 ;65
000014  e7f9              B        |L2.10|
                  |L2.22|
000016  6820              LDR      r0,[r4,#0]            ;68
000018  f5b07f80          CMP      r0,#0x100             ;68
00001c  dd01              BLE      |L2.34|
00001e  2000              MOVS     r0,#0                 ;69
000020  e7f3              B        |L2.10|
                  |L2.34|
000022  6826              LDR      r6,[r4,#0]            ;74
000024  68a7              LDR      r7,[r4,#8]            ;75
000026  2500              MOVS     r5,#0                 ;76
000028  e007              B        |L2.58|
                  |L2.42|
00002a  f8570025          LDR      r0,[r7,r5,LSL #2]     ;77
00002e  f7fffffe          BL       LCD_Color2Index
000032  4904              LDR      r1,|L2.68|
000034  f8210015          STRH     r0,[r1,r5,LSL #1]     ;77
000038  1c6d              ADDS     r5,r5,#1              ;76
                  |L2.58|
00003a  42b5              CMP      r5,r6                 ;76
00003c  dbf5              BLT      |L2.42|
00003e  4801              LDR      r0,|L2.68|
000040  e7e3              B        |L2.10|
;;;82     
                          ENDP

000042  0000              DCW      0x0000
                  |L2.68|
                          DCD      LCD__aConvTable

                          AREA ||i.LCD_InitLUT||, CODE, READONLY, ALIGN=1

                  LCD_InitLUT PROC
;;;101    */
;;;102    void LCD_InitLUT(void) {
000000  4770              BX       lr
;;;103      #if (LCD_BITSPERPIXEL <= 8)
;;;104        {
;;;105          int i;
;;;106          for (i=0; i < LCD_NUM_COLORS; i++) {
;;;107            LCD_COLOR color = LCD_Index2Color((U8)i);
;;;108            #if LCD_REVERSE_LUT
;;;109              color ^= 0xffffff;    /* Invert R,G,B components */
;;;110            #endif
;;;111            #if LCD_SWAP_RB
;;;112              color = ((color & 0xff) << 16) | (color & 0xff00) | ((color & 0xff0000) >> 16);
;;;113            #endif
;;;114            LCD_L0_SetLUTEntry((U8)i, color);
;;;115          }
;;;116        }
;;;117      #endif
;;;118      #if (GUI_NUM_LAYERS > 1)
;;;119        #if (LCD_BITSPERPIXEL_1 <= 8)
;;;120        {
;;;121          int i;
;;;122          int DisplayOld = GUI_SelectLayer(1);
;;;123          for (i=0; i < LCD_NUM_COLORS_1; i++) {
;;;124            LCD_COLOR color = LCD_Index2Color((U8)i);
;;;125            #if LCD_REVERSE_LUT_1
;;;126              color ^= 0xffffff;    /* Invert R,G,B components */
;;;127            #endif
;;;128            #if LCD_SWAP_RB_1
;;;129              color = ((color & 0xff) << 16) | (color & 0xff00) | ((color & 0xff0000) >> 16);
;;;130            #endif
;;;131            LCD_L0_1_SetLUTEntry((U8)i, color);
;;;132          }
;;;133          GUI_SelectLayer(DisplayOld);
;;;134        }
;;;135        #endif
;;;136      #endif
;;;137      #if (GUI_NUM_LAYERS > 2)
;;;138        #if (LCD_BITSPERPIXEL_2 <= 8)
;;;139        {
;;;140          int i;
;;;141          int DisplayOld = GUI_SelectLayer(2);
;;;142          for (i=0; i < LCD_NUM_COLORS_2; i++) {
;;;143            LCD_COLOR color = LCD_Index2Color((U8)i);
;;;144            #if LCD_REVERSE_LUT_2
;;;145              color ^= 0xffffff;    /* Invert R,G,B components */
;;;146            #endif
;;;147            #if LCD_SWAP_RB_2
;;;148              color = ((color & 0xff) << 16) | (color & 0xff00) | ((color & 0xff0000) >> 16);
;;;149            #endif
;;;150            LCD_L0_2_SetLUTEntry((U8)i, color);
;;;151          }
;;;152          GUI_SelectLayer(DisplayOld);
;;;153        }
;;;154        #endif
;;;155      #endif
;;;156      #if (GUI_NUM_LAYERS > 3)
;;;157        #if (LCD_BITSPERPIXEL_3 <= 8)
;;;158        {
;;;159          int i;
;;;160          int DisplayOld = GUI_SelectLayer(3);
;;;161          for (i=0; i < LCD_NUM_COLORS_3; i++) {
;;;162            LCD_COLOR color = LCD_Index2Color((U8)i);
;;;163            #if LCD_REVERSE_LUT_3
;;;164              color ^= 0xffffff;    /* Invert R,G,B components */
;;;165            #endif
;;;166            #if LCD_SWAP_RB_3
;;;167              color = ((color & 0xff) << 16) | (color & 0xff00) | ((color & 0xff0000) >> 16);
;;;168            #endif
;;;169            LCD_L0_3_SetLUTEntry((U8)i, color);
;;;170          }
;;;171          GUI_SelectLayer(DisplayOld);
;;;172        }
;;;173        #endif
;;;174      #endif
;;;175      #if (GUI_NUM_LAYERS > 4)
;;;176        #if (LCD_BITSPERPIXEL_4 <= 8)
;;;177        {
;;;178          int i;
;;;179          int DisplayOld = GUI_SelectLayer(4);
;;;180          for (i=0; i < LCD_NUM_COLORS_4; i++) {
;;;181            LCD_COLOR color = LCD_Index2Color((U8)i);
;;;182            #if LCD_REVERSE_LUT_4
;;;183              color ^= 0xffffff;    /* Invert R,G,B components */
;;;184            #endif
;;;185            #if LCD_SWAP_RB_4
;;;186              color = ((color & 0xff) << 16) | (color & 0xff00) | ((color & 0xff0000) >> 16);
;;;187            #endif
;;;188            LCD_L0_4_SetLUTEntry((U8)i, color);
;;;189          }
;;;190          GUI_SelectLayer(DisplayOld);
;;;191        }
;;;192        #endif
;;;193      #endif
;;;194    }
;;;195    
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  LCD__aConvTable
                          %        512
