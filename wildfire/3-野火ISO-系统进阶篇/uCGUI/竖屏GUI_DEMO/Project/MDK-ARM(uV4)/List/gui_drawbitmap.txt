; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\gui_drawbitmap.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\gui_drawbitmap.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Core\GUI_DrawBitmap.c]
                          THUMB

                          AREA ||i.GL_DrawBitmap||, CODE, READONLY, ALIGN=2

                  GL_DrawBitmap PROC
;;;38     */
;;;39     void GL_DrawBitmap(const GUI_BITMAP GUI_UNI_PTR * pBitmap, int x0, int y0) {
000000  e92d43f0          PUSH     {r4-r9,lr}
000004  b087              SUB      sp,sp,#0x1c
000006  4604              MOV      r4,r0
000008  460e              MOV      r6,r1
00000a  4617              MOV      r7,r2
;;;40       GUI_DRAWMODE PrevDraw;
;;;41       const GUI_LOGPALETTE GUI_UNI_PTR * pPal;
;;;42       pPal = pBitmap->pPal;
00000c  f8d4800c          LDR      r8,[r4,#0xc]
;;;43       PrevDraw = GUI_SetDrawMode(0);  /* No Get... at this point */
000010  2000              MOVS     r0,#0
000012  f7fffffe          BL       GUI_SetDrawMode
000016  4605              MOV      r5,r0
;;;44       GUI_SetDrawMode((pPal && pPal->HasTrans) ? (PrevDraw|GUI_DRAWMODE_TRANS) : PrevDraw &(~GUI_DRAWMODE_TRANS));
000018  f1b80f00          CMP      r8,#0
00001c  d005              BEQ      |L1.42|
00001e  f8981004          LDRB     r1,[r8,#4]
000022  b111              CBZ      r1,|L1.42|
000024  f0450102          ORR      r1,r5,#2
000028  e001              B        |L1.46|
                  |L1.42|
00002a  f0250102          BIC      r1,r5,#2
                  |L1.46|
00002e  4608              MOV      r0,r1
000030  f7fffffe          BL       GUI_SetDrawMode
;;;45       if (pBitmap->pMethods) {
000034  6920              LDR      r0,[r4,#0x10]
000036  b170              CBZ      r0,|L1.86|
;;;46         #if GUI_COMPILER_SUPPORTS_FP      /* Do not support this on VERY simple chips and compilers */
;;;47           pBitmap->pMethods->pfDraw(x0, y0, pBitmap->XSize ,pBitmap->YSize, (U8 const *)pBitmap->pData, pBitmap->pPal, 1, 1);
000038  2201              MOVS     r2,#1
00003a  e9d40102          LDRD     r0,r1,[r4,#8]
00003e  e88d0007          STM      sp,{r0-r2}
000042  9203              STR      r2,[sp,#0xc]
000044  8863              LDRH     r3,[r4,#2]
000046  8822              LDRH     r2,[r4,#0]
000048  6920              LDR      r0,[r4,#0x10]
00004a  4639              MOV      r1,r7
00004c  f8d0c000          LDR      r12,[r0,#0]
000050  4630              MOV      r0,r6
000052  47e0              BLX      r12
000054  e01e              B        |L1.148|
                  |L1.86|
;;;48         #endif
;;;49       } else {
;;;50         const LCD_PIXELINDEX* pTrans;
;;;51         pTrans = LCD_GetpPalConvTable(pBitmap->pPal);
000056  68e0              LDR      r0,[r4,#0xc]
000058  f7fffffe          BL       LCD_GetpPalConvTable
00005c  4681              MOV      r9,r0
;;;52         if (!pTrans) {
00005e  f1b90f00          CMP      r9,#0
000062  d106              BNE      |L1.114|
;;;53           pTrans = (pBitmap->BitsPerPixel != 1) ? NULL : &LCD_BKCOLORINDEX;
000064  88e0              LDRH     r0,[r4,#6]
000066  2801              CMP      r0,#1
000068  d001              BEQ      |L1.110|
00006a  2000              MOVS     r0,#0
00006c  e000              B        |L1.112|
                  |L1.110|
00006e  480c              LDR      r0,|L1.160|
                  |L1.112|
000070  4681              MOV      r9,r0
                  |L1.114|
;;;54         }
;;;55         LCD_DrawBitmap( x0,y0
000072  88a1              LDRH     r1,[r4,#4]
000074  88e2              LDRH     r2,[r4,#6]
000076  68a0              LDR      r0,[r4,#8]
000078  e9cd0904          STRD     r0,r9,[sp,#0x10]
00007c  e9cd2102          STRD     r2,r1,[sp,#8]
000080  2001              MOVS     r0,#1
000082  9000              STR      r0,[sp,#0]
000084  9001              STR      r0,[sp,#4]
000086  8863              LDRH     r3,[r4,#2]
000088  8822              LDRH     r2,[r4,#0]
00008a  4639              MOV      r1,r7
00008c  4630              MOV      r0,r6
00008e  f7fffffe          BL       LCD_DrawBitmap
;;;56                         ,pBitmap->XSize ,pBitmap->YSize
;;;57                         ,1,1
;;;58                         ,pBitmap->BitsPerPixel
;;;59                         ,pBitmap->BytesPerLine
;;;60                         ,pBitmap->pData
;;;61                         ,pTrans);
;;;62       }
000092  bf00              NOP      
                  |L1.148|
;;;63       GUI_SetDrawMode(PrevDraw);
000094  4628              MOV      r0,r5
000096  f7fffffe          BL       GUI_SetDrawMode
;;;64     }
00009a  b007              ADD      sp,sp,#0x1c
00009c  e8bd83f0          POP      {r4-r9,pc}
;;;65     
                          ENDP

                  |L1.160|
                          DCD      GUI_Context

                          AREA ||i.GUI_DrawBitmap||, CODE, READONLY, ALIGN=2

                  GUI_DrawBitmap PROC
;;;69     */
;;;70     void GUI_DrawBitmap(const GUI_BITMAP GUI_UNI_PTR * pBitmap, int x0, int y0) {
000000  b57c              PUSH     {r2-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;71       #if (GUI_WINSUPPORT)
;;;72         GUI_RECT r;
;;;73       #endif
;;;74       GUI_LOCK();
000008  f7fffffe          BL       GUI_Lock
;;;75       #if (GUI_WINSUPPORT)
;;;76         WM_ADDORG(x0,y0);
00000c  4814              LDR      r0,|L2.96|
00000e  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
000010  4405              ADD      r5,r5,r0
000012  4813              LDR      r0,|L2.96|
000014  6c80              LDR      r0,[r0,#0x48]  ; GUI_Context
000016  4406              ADD      r6,r6,r0
;;;77         r.x1 = (r.x0 = x0) + pBitmap->XSize-1;
000018  b228              SXTH     r0,r5
00001a  f8ad0000          STRH     r0,[sp,#0]
00001e  8821              LDRH     r1,[r4,#0]
000020  4408              ADD      r0,r0,r1
000022  1e40              SUBS     r0,r0,#1
000024  b200              SXTH     r0,r0
000026  f8ad0004          STRH     r0,[sp,#4]
;;;78         r.y1 = (r.y0 = y0) + pBitmap->YSize-1;
00002a  b230              SXTH     r0,r6
00002c  f8ad0002          STRH     r0,[sp,#2]
000030  8861              LDRH     r1,[r4,#2]
000032  4408              ADD      r0,r0,r1
000034  1e40              SUBS     r0,r0,#1
000036  b200              SXTH     r0,r0
000038  f8ad0006          STRH     r0,[sp,#6]
;;;79         WM_ITERATE_START(&r) {
00003c  4668              MOV      r0,sp
00003e  f7fffffe          BL       WM__InitIVRSearch
000042  b148              CBZ      r0,|L2.88|
000044  bf00              NOP      
                  |L2.70|
;;;80       #endif
;;;81       GL_DrawBitmap(pBitmap, x0, y0);
000046  4632              MOV      r2,r6
000048  4629              MOV      r1,r5
00004a  4620              MOV      r0,r4
00004c  f7fffffe          BL       GL_DrawBitmap
;;;82       #if (GUI_WINSUPPORT)
;;;83         } WM_ITERATE_END();
000050  f7fffffe          BL       WM__GetNextIVR
000054  2800              CMP      r0,#0
000056  d1f6              BNE      |L2.70|
                  |L2.88|
;;;84       #endif
;;;85       GUI_UNLOCK();
000058  f7fffffe          BL       GUI_Unlock
;;;86     }
00005c  bd7c              POP      {r2-r6,pc}
;;;87     
                          ENDP

00005e  0000              DCW      0x0000
                  |L2.96|
                          DCD      GUI_Context
