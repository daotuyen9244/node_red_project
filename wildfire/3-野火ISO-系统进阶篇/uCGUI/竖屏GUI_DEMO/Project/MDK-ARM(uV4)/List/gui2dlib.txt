; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\gui2dlib.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\gui2dlib.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Core\GUI2DLib.c]
                          THUMB

                          AREA ||i.GL_MoveTo||, CODE, READONLY, ALIGN=2

                  GL_MoveTo PROC
;;;44     */
;;;45     void GL_MoveTo(int x, int y) {
000000  b202              SXTH     r2,r0
;;;46       GUI_Context.DrawPosX = x;
000002  4b02              LDR      r3,|L1.12|
000004  855a              STRH     r2,[r3,#0x2a]
;;;47       GUI_Context.DrawPosY = y;
000006  b20a              SXTH     r2,r1
000008  859a              STRH     r2,[r3,#0x2c]
;;;48     }
00000a  4770              BX       lr
;;;49     
                          ENDP

                  |L1.12|
                          DCD      GUI_Context

                          AREA ||i.GUI_DrawRect||, CODE, READONLY, ALIGN=2

                  GUI_DrawRect PROC
;;;83     */
;;;84     void GUI_DrawRect(int x0, int y0, int x1, int y1) {
000000  e92d41fc          PUSH     {r2-r8,lr}
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
00000a  4698              MOV      r8,r3
;;;85       #if (GUI_WINSUPPORT)
;;;86         int Off;
;;;87         GUI_RECT r;
;;;88       #endif
;;;89       GUI_LOCK();
00000c  f7fffffe          BL       GUI_Lock
;;;90       #if (GUI_WINSUPPORT)
;;;91         Off = GUI_Context.PenSize -1;
000010  4819              LDR      r0,|L2.120|
000012  7e00              LDRB     r0,[r0,#0x18]  ; GUI_Context
000014  1e44              SUBS     r4,r0,#1
;;;92         WM_ADDORG(x0,y0);
000016  4818              LDR      r0,|L2.120|
000018  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
00001a  4405              ADD      r5,r5,r0
00001c  4816              LDR      r0,|L2.120|
00001e  6c80              LDR      r0,[r0,#0x48]  ; GUI_Context
000020  4406              ADD      r6,r6,r0
;;;93         WM_ADDORG(x1,y1);
000022  4815              LDR      r0,|L2.120|
000024  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
000026  4407              ADD      r7,r7,r0
000028  4813              LDR      r0,|L2.120|
00002a  6c80              LDR      r0,[r0,#0x48]  ; GUI_Context
00002c  4480              ADD      r8,r8,r0
;;;94         r.x0 = x0 - Off;
00002e  1b28              SUBS     r0,r5,r4
000030  b200              SXTH     r0,r0
000032  f8ad0000          STRH     r0,[sp,#0]
;;;95         r.x1 = x1 + Off;
000036  1938              ADDS     r0,r7,r4
000038  b200              SXTH     r0,r0
00003a  f8ad0004          STRH     r0,[sp,#4]
;;;96         r.y0 = y0 - Off;
00003e  1b30              SUBS     r0,r6,r4
000040  b200              SXTH     r0,r0
000042  f8ad0002          STRH     r0,[sp,#2]
;;;97         r.y1 = y1 + Off;
000046  eb080004          ADD      r0,r8,r4
00004a  b200              SXTH     r0,r0
00004c  f8ad0006          STRH     r0,[sp,#6]
;;;98         WM_ITERATE_START(&r); {
000050  4668              MOV      r0,sp
000052  f7fffffe          BL       WM__InitIVRSearch
000056  b150              CBZ      r0,|L2.110|
000058  bf00              NOP      
                  |L2.90|
;;;99       #endif
;;;100      _DrawRect(x0, y0, x1, y1);
00005a  4643              MOV      r3,r8
00005c  463a              MOV      r2,r7
00005e  4631              MOV      r1,r6
000060  4628              MOV      r0,r5
000062  f7fffffe          BL       _DrawRect
;;;101      #if (GUI_WINSUPPORT)
;;;102        } WM_ITERATE_END();
000066  f7fffffe          BL       WM__GetNextIVR
00006a  2800              CMP      r0,#0
00006c  d1f5              BNE      |L2.90|
                  |L2.110|
;;;103      #endif
;;;104      GUI_UNLOCK();
00006e  f7fffffe          BL       GUI_Unlock
;;;105    }
000072  e8bd81fc          POP      {r2-r8,pc}
;;;106    
                          ENDP

000076  0000              DCW      0x0000
                  |L2.120|
                          DCD      GUI_Context

                          AREA ||i.GUI_MoveRel||, CODE, READONLY, ALIGN=2

                  GUI_MoveRel PROC
;;;33     */
;;;34     void GUI_MoveRel(int dx, int dy) { /*tbd: GL_LinePos. */
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;35       GUI_LOCK();
000006  f7fffffe          BL       GUI_Lock
;;;36       GUI_Context.DrawPosX += dx;
00000a  4807              LDR      r0,|L3.40|
00000c  8d40              LDRH     r0,[r0,#0x2a]  ; GUI_Context
00000e  4428              ADD      r0,r0,r5
000010  b200              SXTH     r0,r0
000012  4905              LDR      r1,|L3.40|
000014  8548              STRH     r0,[r1,#0x2a]
;;;37       GUI_Context.DrawPosY += dy;
000016  4608              MOV      r0,r1
000018  8d80              LDRH     r0,[r0,#0x2c]  ; GUI_Context
00001a  4420              ADD      r0,r0,r4
00001c  b200              SXTH     r0,r0
00001e  8588              STRH     r0,[r1,#0x2c]
;;;38       GUI_UNLOCK();
000020  f7fffffe          BL       GUI_Unlock
;;;39     }
000024  bd70              POP      {r4-r6,pc}
;;;40     
                          ENDP

000026  0000              DCW      0x0000
                  |L3.40|
                          DCD      GUI_Context

                          AREA ||i.GUI_MoveTo||, CODE, READONLY, ALIGN=2

                  GUI_MoveTo PROC
;;;53     */
;;;54     void GUI_MoveTo(int x, int y) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;55       GUI_LOCK();
000006  f7fffffe          BL       GUI_Lock
;;;56       #if (GUI_WINSUPPORT)
;;;57         WM_ADDORG(x,y);
00000a  4806              LDR      r0,|L4.36|
00000c  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
00000e  4405              ADD      r5,r5,r0
000010  4804              LDR      r0,|L4.36|
000012  6c80              LDR      r0,[r0,#0x48]  ; GUI_Context
000014  4404              ADD      r4,r4,r0
;;;58       #endif
;;;59       GL_MoveTo(x,y);
000016  4621              MOV      r1,r4
000018  4628              MOV      r0,r5
00001a  f7fffffe          BL       GL_MoveTo
;;;60       GUI_UNLOCK();
00001e  f7fffffe          BL       GUI_Unlock
;;;61     }
000022  bd70              POP      {r4-r6,pc}
;;;62     
                          ENDP

                  |L4.36|
                          DCD      GUI_Context

                          AREA ||i._DrawRect||, CODE, READONLY, ALIGN=1

                  _DrawRect PROC
;;;72     */
;;;73     static void _DrawRect(int x0, int y0, int x1, int y1) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4607              MOV      r7,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461c              MOV      r4,r3
;;;74       LCD_DrawHLine(x0, y0, x1);
00000c  4632              MOV      r2,r6
00000e  4629              MOV      r1,r5
000010  4638              MOV      r0,r7
000012  f7fffffe          BL       LCD_DrawHLine
;;;75       LCD_DrawHLine(x0, y1, x1);
000016  4632              MOV      r2,r6
000018  4621              MOV      r1,r4
00001a  4638              MOV      r0,r7
00001c  f7fffffe          BL       LCD_DrawHLine
;;;76       LCD_DrawVLine(x0, y0 + 1, y1 - 1);
000020  1e62              SUBS     r2,r4,#1
000022  1c69              ADDS     r1,r5,#1
000024  4638              MOV      r0,r7
000026  f7fffffe          BL       LCD_DrawVLine
;;;77       LCD_DrawVLine(x1, y0 + 1, y1 - 1);
00002a  1e62              SUBS     r2,r4,#1
00002c  1c69              ADDS     r1,r5,#1
00002e  4630              MOV      r0,r6
000030  f7fffffe          BL       LCD_DrawVLine
;;;78     }
000034  e8bd81f0          POP      {r4-r8,pc}
;;;79     
                          ENDP

