; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\gui_drawbitmapex.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\gui_drawbitmapex.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Core\GUI_DrawBitmapEx.c]
                          THUMB

                          AREA ||i.GL_DrawBitmapEx||, CODE, READONLY, ALIGN=2

                  GL_DrawBitmapEx PROC
;;;35     */
;;;36     static void GL_DrawBitmapEx(const GUI_BITMAP GUI_UNI_PTR * pBitmap, int x0, int y0,
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;37                                 int xCenter, int yCenter, int xMag, int yMag) {
000004  b08f              SUB      sp,sp,#0x3c
000006  4604              MOV      r4,r0
000008  460d              MOV      r5,r1
;;;38       LCD_PIXELINDEX Index, IndexPrev = 0;
00000a  2000              MOVS     r0,#0
00000c  900e              STR      r0,[sp,#0x38]
;;;39       LCD_COLOR Color;
;;;40       int x, y, xi, yi, xSize, ySize, xAct, xStart, xMagAbs, xiMag, yMin, yMax, yEnd, yPrev, yStep;
;;;41       char Cached, HasTrans = 0;
00000e  9001              STR      r0,[sp,#4]
;;;42       /* Use clipping rect to reduce calculation */
;;;43       yMin = GUI_Context.ClipRect.y0;
000010  4880              LDR      r0,|L1.532|
000012  f9b0000a          LDRSH    r0,[r0,#0xa]
000016  9006              STR      r0,[sp,#0x18]
;;;44       yMax = GUI_Context.ClipRect.y1;
000018  487e              LDR      r0,|L1.532|
00001a  f9b0000e          LDRSH    r0,[r0,#0xe]
00001e  9005              STR      r0,[sp,#0x14]
;;;45       /* Init some values */
;;;46       xSize    = pBitmap->XSize;
000020  8820              LDRH     r0,[r4,#0]
000022  900b              STR      r0,[sp,#0x2c]
;;;47       ySize    = pBitmap->YSize;
000024  8860              LDRH     r0,[r4,#2]
000026  900a              STR      r0,[sp,#0x28]
;;;48       xMagAbs  = ((xMag < 0) ? -xMag : xMag);
000028  981d              LDR      r0,[sp,#0x74]
00002a  2800              CMP      r0,#0
00002c  da02              BGE      |L1.52|
00002e  981d              LDR      r0,[sp,#0x74]
000030  4240              RSBS     r0,r0,#0
000032  e000              B        |L1.54|
                  |L1.52|
000034  981d              LDR      r0,[sp,#0x74]
                  |L1.54|
000036  9008              STR      r0,[sp,#0x20]
;;;49       x0      -= (I32)((xMag < 0) ? xSize - xCenter - 1 : xCenter) * (I32)(xMagAbs) / (I32)(1000);
000038  981d              LDR      r0,[sp,#0x74]
00003a  2800              CMP      r0,#0
00003c  da04              BGE      |L1.72|
00003e  9912              LDR      r1,[sp,#0x48]
000040  980b              LDR      r0,[sp,#0x2c]
000042  1a40              SUBS     r0,r0,r1
000044  1e40              SUBS     r0,r0,#1
000046  e000              B        |L1.74|
                  |L1.72|
000048  9812              LDR      r0,[sp,#0x48]
                  |L1.74|
00004a  9908              LDR      r1,[sp,#0x20]
00004c  4348              MULS     r0,r1,r0
00004e  f44f717a          MOV      r1,#0x3e8
000052  fb90f0f1          SDIV     r0,r0,r1
000056  1a2d              SUBS     r5,r5,r0
;;;50       yEnd     = y0 + GUI__DivideRound32(((I32)(-yCenter) * (I32)(yMag)), 1000);
000058  991c              LDR      r1,[sp,#0x70]
00005a  4249              RSBS     r1,r1,#0
00005c  9a1e              LDR      r2,[sp,#0x78]
00005e  fb01f002          MUL      r0,r1,r2
000062  f44f717a          MOV      r1,#0x3e8
000066  f7fffffe          BL       GUI__DivideRound32
00006a  9911              LDR      r1,[sp,#0x44]
00006c  eb000b01          ADD      r11,r0,r1
;;;51       yPrev    = yEnd + 1;
000070  f10b0001          ADD      r0,r11,#1
000074  9004              STR      r0,[sp,#0x10]
;;;52       yStep = (yMag < 0) ? -1 : 1;
000076  981e              LDR      r0,[sp,#0x78]
000078  2800              CMP      r0,#0
00007a  da02              BGE      |L1.130|
00007c  f04f30ff          MOV      r0,#0xffffffff
000080  e000              B        |L1.132|
                  |L1.130|
000082  2001              MOVS     r0,#1
                  |L1.132|
000084  9003              STR      r0,[sp,#0xc]
;;;53       if (pBitmap->pPal) {
000086  68e0              LDR      r0,[r4,#0xc]
000088  b120              CBZ      r0,|L1.148|
;;;54         if (pBitmap->pPal->HasTrans) {
00008a  68e0              LDR      r0,[r4,#0xc]
00008c  7900              LDRB     r0,[r0,#4]
00008e  b108              CBZ      r0,|L1.148|
;;;55           HasTrans = 1;
000090  2001              MOVS     r0,#1
000092  9001              STR      r0,[sp,#4]
                  |L1.148|
;;;56         }
;;;57       }
;;;58       for (yi = 0; yi < ySize; yi++) {
000094  f04f0900          MOV      r9,#0
000098  e0b4              B        |L1.516|
                  |L1.154|
;;;59         y = yEnd;
00009a  465e              MOV      r6,r11
;;;60         yEnd = y0 + GUI__DivideRound32(((I32)(yi + 1 - yCenter) * (I32)(yMag)), 1000);
00009c  f1090101          ADD      r1,r9,#1
0000a0  9a1c              LDR      r2,[sp,#0x70]
0000a2  1a89              SUBS     r1,r1,r2
0000a4  9a1e              LDR      r2,[sp,#0x78]
0000a6  fb01f002          MUL      r0,r1,r2
0000aa  f44f717a          MOV      r1,#0x3e8
0000ae  f7fffffe          BL       GUI__DivideRound32
0000b2  9911              LDR      r1,[sp,#0x44]
0000b4  eb000b01          ADD      r11,r0,r1
;;;61         if (y != yPrev) {
0000b8  9804              LDR      r0,[sp,#0x10]
0000ba  4286              CMP      r6,r0
0000bc  d07d              BEQ      |L1.442|
;;;62           yPrev = y;
0000be  9604              STR      r6,[sp,#0x10]
;;;63           do {
0000c0  bf00              NOP      
                  |L1.194|
;;;64             if ((y >= yMin) && (y <= yMax)) {
0000c2  9806              LDR      r0,[sp,#0x18]
0000c4  4286              CMP      r6,r0
0000c6  db79              BLT      |L1.444|
0000c8  9805              LDR      r0,[sp,#0x14]
0000ca  4286              CMP      r6,r0
0000cc  dc76              BGT      |L1.444|
;;;65               xStart = -1;
0000ce  f04f3aff          MOV      r10,#0xffffffff
;;;66               x      =  0;
0000d2  f04f0800          MOV      r8,#0
;;;67               xiMag  =  0;
0000d6  2000              MOVS     r0,#0
0000d8  9007              STR      r0,[sp,#0x1c]
;;;68               Cached =  0;
0000da  9002              STR      r0,[sp,#8]
;;;69               for (xi = 0; xi < xSize; xi++) {
0000dc  900c              STR      r0,[sp,#0x30]
0000de  e06b              B        |L1.440|
                  |L1.224|
;;;70                 xiMag += xMagAbs;
0000e0  e9dd0107          LDRD     r0,r1,[sp,#0x1c]
0000e4  4408              ADD      r0,r0,r1
0000e6  9007              STR      r0,[sp,#0x1c]
;;;71                 if (xiMag >= 1000) {
0000e8  9807              LDR      r0,[sp,#0x1c]
0000ea  f5b07f7a          CMP      r0,#0x3e8
0000ee  db60              BLT      |L1.434|
;;;72                   xAct  = (xMag > 0) ? xi : xSize - xi - 1;
0000f0  981d              LDR      r0,[sp,#0x74]
0000f2  2800              CMP      r0,#0
0000f4  dd01              BLE      |L1.250|
0000f6  980c              LDR      r0,[sp,#0x30]
0000f8  e003              B        |L1.258|
                  |L1.250|
0000fa  e9dd010b          LDRD     r0,r1,[sp,#0x2c]
0000fe  1a40              SUBS     r0,r0,r1
000100  1e40              SUBS     r0,r0,#1
                  |L1.258|
000102  9009              STR      r0,[sp,#0x24]
;;;73                   Index = GUI_GetBitmapPixelIndex(pBitmap, xAct, yi);
000104  464a              MOV      r2,r9
000106  4620              MOV      r0,r4
000108  9909              LDR      r1,[sp,#0x24]
00010a  f7fffffe          BL       GUI_GetBitmapPixelIndex
00010e  b287              UXTH     r7,r0
;;;74                   if (Index != IndexPrev || xStart == -1) {
000110  980e              LDR      r0,[sp,#0x38]
000112  4287              CMP      r7,r0
000114  d102              BNE      |L1.284|
000116  f11a0001          ADDS     r0,r10,#1
00011a  d13f              BNE      |L1.412|
                  |L1.284|
;;;75                     if ((Index == 0) && HasTrans) {
00011c  b977              CBNZ     r7,|L1.316|
00011e  9801              LDR      r0,[sp,#4]
000120  b160              CBZ      r0,|L1.316|
;;;76                       /* Transparent color ... clear cache */
;;;77                       if (Cached) {
000122  9802              LDR      r0,[sp,#8]
000124  b3c8              CBZ      r0,|L1.410|
;;;78                         LCD_DrawHLine(x0 + xStart, y, x0 + x - 1);
000126  eb050108          ADD      r1,r5,r8
00012a  1e4a              SUBS     r2,r1,#1
00012c  eb05000a          ADD      r0,r5,r10
000130  4631              MOV      r1,r6
000132  f7fffffe          BL       LCD_DrawHLine
;;;79                         Cached = 0;
000136  2000              MOVS     r0,#0
000138  9002              STR      r0,[sp,#8]
00013a  e02e              B        |L1.410|
                  |L1.316|
;;;80                       }
;;;81                     } else {
;;;82                       /* Another color ... draw contents of cache */
;;;83                       if (Cached && xStart != -1) {
00013c  9802              LDR      r0,[sp,#8]
00013e  b150              CBZ      r0,|L1.342|
000140  f11a0001          ADDS     r0,r10,#1
000144  d007              BEQ      |L1.342|
;;;84                         LCD_DrawHLine(x0 + xStart, y, x0 + x - 1);
000146  eb050108          ADD      r1,r5,r8
00014a  1e4a              SUBS     r2,r1,#1
00014c  eb05000a          ADD      r0,r5,r10
000150  4631              MOV      r1,r6
000152  f7fffffe          BL       LCD_DrawHLine
                  |L1.342|
;;;85                       }
;;;86                       xStart    = x;
000156  46c2              MOV      r10,r8
;;;87                       Cached    = 1;
000158  2001              MOVS     r0,#1
00015a  9002              STR      r0,[sp,#8]
;;;88                       if (pBitmap->pMethods) {
00015c  6920              LDR      r0,[r4,#0x10]
00015e  b128              CBZ      r0,|L1.364|
;;;89                         Color = pBitmap->pMethods->pfIndex2Color(Index);
000160  6920              LDR      r0,[r4,#0x10]
000162  6841              LDR      r1,[r0,#4]
000164  4638              MOV      r0,r7
000166  4788              BLX      r1
000168  900d              STR      r0,[sp,#0x34]
00016a  e00e              B        |L1.394|
                  |L1.364|
;;;90                       } else {
;;;91                         if (pBitmap->pPal->pPalEntries) {
00016c  68e0              LDR      r0,[r4,#0xc]
00016e  6880              LDR      r0,[r0,#8]
000170  b128              CBZ      r0,|L1.382|
;;;92                           Color = pBitmap->pPal->pPalEntries[Index];
000172  68e0              LDR      r0,[r4,#0xc]
000174  6880              LDR      r0,[r0,#8]
000176  f8500027          LDR      r0,[r0,r7,LSL #2]
00017a  900d              STR      r0,[sp,#0x34]
00017c  e005              B        |L1.394|
                  |L1.382|
;;;93                         } else {
;;;94                           Color = LCDDEV_L0_Index2Color(Index);
00017e  4825              LDR      r0,|L1.532|
000180  6cc0              LDR      r0,[r0,#0x4c]  ; GUI_Context
000182  6841              LDR      r1,[r0,#4]
000184  4638              MOV      r0,r7
000186  4788              BLX      r1
000188  900d              STR      r0,[sp,#0x34]
                  |L1.394|
;;;95                         }
;;;96                       }
;;;97                       LCD_SetColorIndex(LCDDEV_L0_Color2Index(Color));
00018a  4822              LDR      r0,|L1.532|
00018c  6cc0              LDR      r0,[r0,#0x4c]  ; GUI_Context
00018e  6801              LDR      r1,[r0,#0]
000190  980d              LDR      r0,[sp,#0x34]
000192  4788              BLX      r1
000194  9000              STR      r0,[sp,#0]
000196  f7fffffe          BL       LCD_SetColorIndex
                  |L1.410|
;;;98                     }
;;;99                     IndexPrev = Index;
00019a  970e              STR      r7,[sp,#0x38]
                  |L1.412|
;;;100                  }
;;;101                  do {
00019c  bf00              NOP      
                  |L1.414|
;;;102                    x++;
00019e  f1080801          ADD      r8,r8,#1
;;;103                    xiMag -= 1000;
0001a2  9807              LDR      r0,[sp,#0x1c]
0001a4  f5a0707a          SUB      r0,r0,#0x3e8
0001a8  9007              STR      r0,[sp,#0x1c]
;;;104                  } while (xiMag >= 1000);
0001aa  9807              LDR      r0,[sp,#0x1c]
0001ac  f5b07f7a          CMP      r0,#0x3e8
0001b0  daf5              BGE      |L1.414|
                  |L1.434|
0001b2  980c              LDR      r0,[sp,#0x30]         ;69
0001b4  1c40              ADDS     r0,r0,#1              ;69
0001b6  900c              STR      r0,[sp,#0x30]         ;69
                  |L1.440|
0001b8  e001              B        |L1.446|
                  |L1.442|
0001ba  e021              B        |L1.512|
                  |L1.444|
0001bc  e00d              B        |L1.474|
                  |L1.446|
0001be  e9dd100b          LDRD     r1,r0,[sp,#0x2c]      ;69
0001c2  4288              CMP      r0,r1                 ;69
0001c4  db8c              BLT      |L1.224|
;;;105                }
;;;106              }
;;;107              /* Clear cache */
;;;108              if (Cached) {
0001c6  9802              LDR      r0,[sp,#8]
0001c8  b138              CBZ      r0,|L1.474|
;;;109                LCD_DrawHLine(x0 + xStart, y, x0 + x - 1);
0001ca  eb050108          ADD      r1,r5,r8
0001ce  1e4a              SUBS     r2,r1,#1
0001d0  eb05000a          ADD      r0,r5,r10
0001d4  4631              MOV      r1,r6
0001d6  f7fffffe          BL       LCD_DrawHLine
                  |L1.474|
;;;110              }
;;;111            }
;;;112            y += yStep;
0001da  9803              LDR      r0,[sp,#0xc]
0001dc  4406              ADD      r6,r6,r0
;;;113          } while ((yMag < 0) ? (y > yEnd) : (y < yEnd));
0001de  981e              LDR      r0,[sp,#0x78]
0001e0  2800              CMP      r0,#0
0001e2  da05              BGE      |L1.496|
0001e4  455e              CMP      r6,r11
0001e6  dd01              BLE      |L1.492|
0001e8  2001              MOVS     r0,#1
0001ea  e006              B        |L1.506|
                  |L1.492|
0001ec  2000              MOVS     r0,#0
0001ee  e004              B        |L1.506|
                  |L1.496|
0001f0  455e              CMP      r6,r11
0001f2  da01              BGE      |L1.504|
0001f4  2001              MOVS     r0,#1
0001f6  e000              B        |L1.506|
                  |L1.504|
0001f8  2000              MOVS     r0,#0
                  |L1.506|
0001fa  2800              CMP      r0,#0
0001fc  f47faf61          BNE      |L1.194|
                  |L1.512|
000200  f1090901          ADD      r9,r9,#1              ;58
                  |L1.516|
000204  980a              LDR      r0,[sp,#0x28]         ;58
000206  4581              CMP      r9,r0                 ;58
000208  f6ffaf47          BLT      |L1.154|
;;;114        }
;;;115      }
;;;116    }
00020c  b013              ADD      sp,sp,#0x4c
00020e  e8bd8ff0          POP      {r4-r11,pc}
;;;117    
                          ENDP

000212  0000              DCW      0x0000
                  |L1.532|
                          DCD      GUI_Context

                          AREA ||i.GUI_DrawBitmapEx||, CODE, READONLY, ALIGN=2

                  GUI_DrawBitmapEx PROC
;;;127    */
;;;128    void GUI_DrawBitmapEx(const GUI_BITMAP GUI_UNI_PTR * pBitmap, int x0, int y0,
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;129                          int xCenter, int yCenter, int xMag, int yMag) {
000004  b085              SUB      sp,sp,#0x14
000006  4680              MOV      r8,r0
000008  460c              MOV      r4,r1
00000a  4615              MOV      r5,r2
00000c  4699              MOV      r9,r3
00000e  e9dda60e          LDRD     r10,r6,[sp,#0x38]
000012  9f10              LDR      r7,[sp,#0x40]
;;;130      int OldIndex;
;;;131      #if (GUI_WINSUPPORT)
;;;132        GUI_RECT r;
;;;133      #endif
;;;134      GUI_LOCK();
000014  f7fffffe          BL       GUI_Lock
;;;135      OldIndex = LCD_GetColorIndex();
000018  f7fffffe          BL       LCD_GetColorIndex
00001c  4683              MOV      r11,r0
;;;136      #if (GUI_WINSUPPORT)
;;;137        WM_ADDORG(x0, y0);
00001e  4849              LDR      r0,|L2.324|
000020  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
000022  4404              ADD      r4,r4,r0
000024  4847              LDR      r0,|L2.324|
000026  6c80              LDR      r0,[r0,#0x48]  ; GUI_Context
000028  4405              ADD      r5,r5,r0
;;;138        if (xMag >= 0) {
00002a  2e00              CMP      r6,#0
00002c  db1b              BLT      |L2.102|
;;;139          r.x0 = x0 + GUI__DivideRound32(((I32)(-xCenter) * (I32)(xMag)), 1000);
00002e  f1c90100          RSB      r1,r9,#0
000032  fb01f006          MUL      r0,r1,r6
000036  f44f717a          MOV      r1,#0x3e8
00003a  f7fffffe          BL       GUI__DivideRound32
00003e  4420              ADD      r0,r0,r4
000040  b200              SXTH     r0,r0
000042  f8ad000c          STRH     r0,[sp,#0xc]
;;;140          r.x1 = x0 + GUI__DivideRound32(((I32)(pBitmap->XSize - xCenter - 1) * (I32)(xMag)), 1000);
000046  f8b81000          LDRH     r1,[r8,#0]
00004a  eba10109          SUB      r1,r1,r9
00004e  1e49              SUBS     r1,r1,#1
000050  fb01f006          MUL      r0,r1,r6
000054  f44f717a          MOV      r1,#0x3e8
000058  f7fffffe          BL       GUI__DivideRound32
00005c  4420              ADD      r0,r0,r4
00005e  b200              SXTH     r0,r0
000060  f8ad0010          STRH     r0,[sp,#0x10]
000064  e01a              B        |L2.156|
                  |L2.102|
;;;141        } else {
;;;142          r.x1 = x0 + GUI__DivideRound32(((I32)(-xCenter) * (I32)(xMag)), 1000);
000066  f1c90100          RSB      r1,r9,#0
00006a  fb01f006          MUL      r0,r1,r6
00006e  f44f717a          MOV      r1,#0x3e8
000072  f7fffffe          BL       GUI__DivideRound32
000076  4420              ADD      r0,r0,r4
000078  b200              SXTH     r0,r0
00007a  f8ad0010          STRH     r0,[sp,#0x10]
;;;143          r.x0 = x0 + GUI__DivideRound32(((I32)(pBitmap->XSize - xCenter - 1) * (I32)(xMag)), 1000);
00007e  f8b81000          LDRH     r1,[r8,#0]
000082  eba10109          SUB      r1,r1,r9
000086  1e49              SUBS     r1,r1,#1
000088  fb01f006          MUL      r0,r1,r6
00008c  f44f717a          MOV      r1,#0x3e8
000090  f7fffffe          BL       GUI__DivideRound32
000094  4420              ADD      r0,r0,r4
000096  b200              SXTH     r0,r0
000098  f8ad000c          STRH     r0,[sp,#0xc]
                  |L2.156|
;;;144        }
;;;145        if (yMag >= 0) {
00009c  2f00              CMP      r7,#0
00009e  db1b              BLT      |L2.216|
;;;146          r.y0 = y0 + GUI__DivideRound32(((I32)(-yCenter) * (I32)(yMag)), 1000);
0000a0  f1ca0100          RSB      r1,r10,#0
0000a4  fb01f007          MUL      r0,r1,r7
0000a8  f44f717a          MOV      r1,#0x3e8
0000ac  f7fffffe          BL       GUI__DivideRound32
0000b0  4428              ADD      r0,r0,r5
0000b2  b200              SXTH     r0,r0
0000b4  f8ad000e          STRH     r0,[sp,#0xe]
;;;147          r.y1 = y0 + GUI__DivideRound32(((I32)(pBitmap->YSize - yCenter - 1) * (I32)(yMag)), 1000);
0000b8  f8b81002          LDRH     r1,[r8,#2]
0000bc  eba1010a          SUB      r1,r1,r10
0000c0  1e49              SUBS     r1,r1,#1
0000c2  fb01f007          MUL      r0,r1,r7
0000c6  f44f717a          MOV      r1,#0x3e8
0000ca  f7fffffe          BL       GUI__DivideRound32
0000ce  4428              ADD      r0,r0,r5
0000d0  b200              SXTH     r0,r0
0000d2  f8ad0012          STRH     r0,[sp,#0x12]
0000d6  e01a              B        |L2.270|
                  |L2.216|
;;;148        } else {
;;;149          r.y1 = y0 + GUI__DivideRound32(((I32)(-yCenter) * (I32)(yMag)), 1000);
0000d8  f1ca0100          RSB      r1,r10,#0
0000dc  fb01f007          MUL      r0,r1,r7
0000e0  f44f717a          MOV      r1,#0x3e8
0000e4  f7fffffe          BL       GUI__DivideRound32
0000e8  4428              ADD      r0,r0,r5
0000ea  b200              SXTH     r0,r0
0000ec  f8ad0012          STRH     r0,[sp,#0x12]
;;;150          r.y0 = y0 + GUI__DivideRound32(((I32)(pBitmap->YSize - yCenter - 1) * (I32)(yMag)), 1000);
0000f0  f8b81002          LDRH     r1,[r8,#2]
0000f4  eba1010a          SUB      r1,r1,r10
0000f8  1e49              SUBS     r1,r1,#1
0000fa  fb01f007          MUL      r0,r1,r7
0000fe  f44f717a          MOV      r1,#0x3e8
000102  f7fffffe          BL       GUI__DivideRound32
000106  4428              ADD      r0,r0,r5
000108  b200              SXTH     r0,r0
00010a  f8ad000e          STRH     r0,[sp,#0xe]
                  |L2.270|
;;;151        }
;;;152        WM_ITERATE_START(&r) {
00010e  a803              ADD      r0,sp,#0xc
000110  f7fffffe          BL       WM__InitIVRSearch
000114  b168              CBZ      r0,|L2.306|
000116  bf00              NOP      
                  |L2.280|
;;;153      #endif
;;;154      GL_DrawBitmapEx(pBitmap, x0, y0, xCenter, yCenter, xMag, yMag);
000118  464b              MOV      r3,r9
00011a  462a              MOV      r2,r5
00011c  4621              MOV      r1,r4
00011e  4640              MOV      r0,r8
000120  e9cda600          STRD     r10,r6,[sp,#0]
000124  9702              STR      r7,[sp,#8]
000126  f7fffffe          BL       GL_DrawBitmapEx
;;;155      #if (GUI_WINSUPPORT)
;;;156        } WM_ITERATE_END();
00012a  f7fffffe          BL       WM__GetNextIVR
00012e  2800              CMP      r0,#0
000130  d1f2              BNE      |L2.280|
                  |L2.306|
;;;157      #endif
;;;158      LCD_SetColorIndex(OldIndex);
000132  4658              MOV      r0,r11
000134  f7fffffe          BL       LCD_SetColorIndex
;;;159      GUI_UNLOCK();
000138  f7fffffe          BL       GUI_Unlock
;;;160    }
00013c  b005              ADD      sp,sp,#0x14
00013e  e8bd8ff0          POP      {r4-r11,pc}
;;;161    
                          ENDP

000142  0000              DCW      0x0000
                  |L2.324|
                          DCD      GUI_Context
