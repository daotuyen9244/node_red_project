; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\gui__memset.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\gui__memset.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Core\GUI__memset.c]
                          THUMB

                          AREA ||i.GUI__memset||, CODE, READONLY, ALIGN=1

                  GUI__memset PROC
;;;39     */
;;;40     void GUI__memset(U8* p, U8 Fill, int NumBytes) {
000000  b570              PUSH     {r4-r6,lr}
000002  4603              MOV      r3,r0
000004  460d              MOV      r5,r1
;;;41       int NumInts;
;;;42       /* Write bytes until we are done or have reached an int boundary */
;;;43       while (NumBytes && ((sizeof(int) - 1) & (U32)p)) {
000006  e002              B        |L1.14|
                  |L1.8|
;;;44         *p++ = Fill;
000008  f8035b01          STRB     r5,[r3],#1
;;;45         NumBytes--;
00000c  1e52              SUBS     r2,r2,#1
                  |L1.14|
00000e  b112              CBZ      r2,|L1.22|
000010  f0130f03          TST      r3,#3                 ;43
000014  d1f8              BNE      |L1.8|
                  |L1.22|
;;;46       }
;;;47       /* Write Ints */
;;;48       NumInts = (unsigned)NumBytes / sizeof(int);
000016  0891              LSRS     r1,r2,#2
;;;49       if (NumInts) {
000018  b1a9              CBZ      r1,|L1.70|
;;;50         int FillInt;
;;;51         int *pInt;
;;;52         NumBytes &= (sizeof(int) - 1);
00001a  f0020203          AND      r2,r2,#3
;;;53         if (sizeof(int) == 2) {        /* May some compilers generate a warning at this line: Condition is alwaws true/false */
;;;54           FillInt = Fill * 0x101;      /* May some compilers generate a warning at this line: Unreachable code */
;;;55         } else if (sizeof(int) == 4) { /* May some compilers generate a warning at this line: Condition is alwaws true/false */
;;;56           FillInt = Fill * 0x1010101;  /* May some compilers generate a warning at this line: Unreachable code */
00001e  eb054605          ADD      r6,r5,r5,LSL #16
000022  eb062406          ADD      r4,r6,r6,LSL #8
;;;57         }
;;;58         pInt = (int*)p;
000026  4618              MOV      r0,r3
;;;59         /* Fill large amount of data at a time */
;;;60         while (NumInts >= 4) { 
000028  e004              B        |L1.52|
                  |L1.42|
;;;61           *pInt++ = FillInt;
00002a  c010              STM      r0!,{r4}
;;;62           *pInt++ = FillInt;
00002c  c010              STM      r0!,{r4}
;;;63           *pInt++ = FillInt;
00002e  c010              STM      r0!,{r4}
;;;64           *pInt++ = FillInt;
000030  c010              STM      r0!,{r4}
;;;65           NumInts -= 4;
000032  1f09              SUBS     r1,r1,#4
                  |L1.52|
000034  2904              CMP      r1,#4                 ;60
000036  daf8              BGE      |L1.42|
;;;66         }
;;;67         /* Fill one int at a time */
;;;68         while (NumInts) {
000038  e001              B        |L1.62|
                  |L1.58|
;;;69           *pInt++ = FillInt;
00003a  c010              STM      r0!,{r4}
;;;70           NumInts--;
00003c  1e49              SUBS     r1,r1,#1
                  |L1.62|
00003e  2900              CMP      r1,#0                 ;68
000040  d1fb              BNE      |L1.58|
;;;71         }
;;;72         p = (U8*)pInt;
000042  4603              MOV      r3,r0
;;;73       }
000044  bf00              NOP      
                  |L1.70|
;;;74       /* Fill the remainder byte wise */
;;;75       while (NumBytes) {
000046  e002              B        |L1.78|
                  |L1.72|
;;;76         *p++ = Fill;
000048  f8035b01          STRB     r5,[r3],#1
;;;77         NumBytes--;
00004c  1e52              SUBS     r2,r2,#1
                  |L1.78|
00004e  2a00              CMP      r2,#0                 ;75
000050  d1fa              BNE      |L1.72|
;;;78       }
;;;79     }
000052  bd70              POP      {r4-r6,pc}
;;;80     
                          ENDP

