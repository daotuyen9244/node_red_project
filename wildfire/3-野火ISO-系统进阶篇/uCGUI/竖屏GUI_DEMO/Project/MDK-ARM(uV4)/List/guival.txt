; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\guival.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\guival.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Core\GUIVal.c]
                          THUMB

                          AREA ||i.GUI_DispDec||, CODE, READONLY, ALIGN=1

                  GUI_DispDec PROC
;;;95     */
;;;96     void GUI_DispDec(I32 v, U8 Len) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;97       GUI_DispDecShift(v, Len,0);
000006  2200              MOVS     r2,#0
000008  4629              MOV      r1,r5
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       GUI_DispDecShift
;;;98     }
000010  bd70              POP      {r4-r6,pc}
;;;99     
                          ENDP


                          AREA ||i.GUI_DispDecAt||, CODE, READONLY, ALIGN=1

                  GUI_DispDecAt PROC
;;;103    */
;;;104    void GUI_DispDecAt(I32 v, I16P x, I16P y, U8 Len) {
000000  e92d41ff          PUSH     {r0-r8,lr}
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
00000a  461c              MOV      r4,r3
;;;105    	char ac[12];
;;;106    	char* s = ac;
00000c  a801              ADD      r0,sp,#4
00000e  9000              STR      r0,[sp,#0]
;;;107      GUI_AddDecShift(v, Len, 0, &s);
000010  466b              MOV      r3,sp
000012  2200              MOVS     r2,#0
000014  4621              MOV      r1,r4
000016  4628              MOV      r0,r5
000018  f7fffffe          BL       GUI_AddDecShift
;;;108      GUI_DispStringAt(ac, x, y);
00001c  463a              MOV      r2,r7
00001e  4631              MOV      r1,r6
000020  a801              ADD      r0,sp,#4
000022  f7fffffe          BL       GUI_DispStringAt
;;;109    }
000026  e8bd81ff          POP      {r0-r8,pc}
;;;110    
                          ENDP


                          AREA ||i.GUI_DispDecMin||, CODE, READONLY, ALIGN=1

                  GUI_DispDecMin PROC
;;;56     */
;;;57     void GUI_DispDecMin(I32 v) {
000000  b51f              PUSH     {r0-r4,lr}
000002  4604              MOV      r4,r0
;;;58     	char ac[12];
;;;59     	char* s = ac;
000004  a801              ADD      r0,sp,#4
000006  9000              STR      r0,[sp,#0]
;;;60       GUI_AddDecMin(v, &s);
000008  4669              MOV      r1,sp
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       GUI_AddDecMin
;;;61       GUI_DispString(ac);
000010  a801              ADD      r0,sp,#4
000012  f7fffffe          BL       GUI_DispString
;;;62     }
000016  bd1f              POP      {r0-r4,pc}
;;;63     
                          ENDP


                          AREA ||i.GUI_DispDecShift||, CODE, READONLY, ALIGN=1

                  GUI_DispDecShift PROC
;;;33     */
;;;34     void GUI_DispDecShift(I32 v, U8 Len, U8 Shift) {
000000  b57f              PUSH     {r0-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;35     	char ac[12];
;;;36     	char* s = ac;
000008  a801              ADD      r0,sp,#4
00000a  9000              STR      r0,[sp,#0]
;;;37       GUI_AddDecShift(v, Len, Shift, &s);
00000c  466b              MOV      r3,sp
00000e  4632              MOV      r2,r6
000010  4629              MOV      r1,r5
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       GUI_AddDecShift
;;;38       GUI_DispString(ac);
000018  a801              ADD      r0,sp,#4
00001a  f7fffffe          BL       GUI_DispString
;;;39     }
00001e  bd7f              POP      {r0-r6,pc}
;;;40     
                          ENDP


                          AREA ||i.GUI_DispDecSpace||, CODE, READONLY, ALIGN=1

                  GUI_DispDecSpace PROC
;;;67     */
;;;68     void GUI_DispDecSpace(I32 v, U8 MaxDigits) {
000000  b57f              PUSH     {r0-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;69     	char ac[12];
;;;70     	char* s = ac;
000006  a801              ADD      r0,sp,#4
000008  9000              STR      r0,[sp,#0]
;;;71       U8 Len;
;;;72       if (v < 0) {
00000a  2d00              CMP      r5,#0
00000c  da06              BGE      |L5.28|
;;;73         v = GUI_AddSign(v, &s);
00000e  4669              MOV      r1,sp
000010  4628              MOV      r0,r5
000012  f7fffffe          BL       GUI_AddSign
000016  4605              MOV      r5,r0
;;;74         MaxDigits--;
000018  1e60              SUBS     r0,r4,#1
00001a  b2c4              UXTB     r4,r0
                  |L5.28|
;;;75       }
;;;76       Len = GUI_Long2Len(v);
00001c  4628              MOV      r0,r5
00001e  f7fffffe          BL       GUI_Long2Len
000022  b2c6              UXTB     r6,r0
;;;77       while (Len++ < MaxDigits) {
000024  e005              B        |L5.50|
                  |L5.38|
;;;78         *s++ = ' ';
000026  2020              MOVS     r0,#0x20
000028  9900              LDR      r1,[sp,#0]
00002a  7008              STRB     r0,[r1,#0]
00002c  9800              LDR      r0,[sp,#0]
00002e  1c40              ADDS     r0,r0,#1
000030  9000              STR      r0,[sp,#0]
                  |L5.50|
000032  4630              MOV      r0,r6                 ;77
000034  1c71              ADDS     r1,r6,#1              ;77
000036  b2ce              UXTB     r6,r1                 ;77
000038  42a0              CMP      r0,r4                 ;77
00003a  dbf4              BLT      |L5.38|
;;;79       }
;;;80       GUI_AddDecMin(v, &s);
00003c  4669              MOV      r1,sp
00003e  4628              MOV      r0,r5
000040  f7fffffe          BL       GUI_AddDecMin
;;;81       GUI_DispString(ac);
000044  a801              ADD      r0,sp,#4
000046  f7fffffe          BL       GUI_DispString
;;;82     }
00004a  bd7f              POP      {r0-r6,pc}
;;;83     
                          ENDP


                          AREA ||i.GUI_DispSDec||, CODE, READONLY, ALIGN=1

                  GUI_DispSDec PROC
;;;87     */
;;;88     void GUI_DispSDec(I32 v, U8 Len) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;89       GUI_DispSDecShift(v,Len,0);
000006  2200              MOVS     r2,#0
000008  4629              MOV      r1,r5
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       GUI_DispSDecShift
;;;90     }
000010  bd70              POP      {r4-r6,pc}
;;;91     
                          ENDP


                          AREA ||i.GUI_DispSDecShift||, CODE, READONLY, ALIGN=1

                  GUI_DispSDecShift PROC
;;;44     */
;;;45     void GUI_DispSDecShift(I32 v, U8 Len, U8 Shift) {
000000  b57f              PUSH     {r0-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
000006  4616              MOV      r6,r2
;;;46     	char ac[12];
;;;47     	char* s = ac;
000008  a801              ADD      r0,sp,#4
00000a  9000              STR      r0,[sp,#0]
;;;48       v = GUI_AddSign(v, &s);
00000c  4669              MOV      r1,sp
00000e  4628              MOV      r0,r5
000010  f7fffffe          BL       GUI_AddSign
000014  4605              MOV      r5,r0
;;;49       GUI_AddDecShift(v, --Len, Shift, &s);
000016  1e60              SUBS     r0,r4,#1
000018  b2c0              UXTB     r0,r0
00001a  4604              MOV      r4,r0
00001c  4601              MOV      r1,r0
00001e  466b              MOV      r3,sp
000020  4632              MOV      r2,r6
000022  4628              MOV      r0,r5
000024  f7fffffe          BL       GUI_AddDecShift
;;;50       GUI_DispString(ac);
000028  a801              ADD      r0,sp,#4
00002a  f7fffffe          BL       GUI_DispString
;;;51     }
00002e  bd7f              POP      {r0-r6,pc}
;;;52     
                          ENDP

