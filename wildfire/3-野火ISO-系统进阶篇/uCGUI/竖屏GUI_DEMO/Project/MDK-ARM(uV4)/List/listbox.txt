; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\listbox.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\listbox.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Widget\LISTBOX.c]
                          THUMB

                          AREA ||i.LISTBOX_AddKey||, CODE, READONLY, ALIGN=1

                  LISTBOX_AddKey PROC
;;;1101   */
;;;1102   int LISTBOX_AddKey(LISTBOX_Handle hObj, int Key) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;1103     int r = 0;
000006  2600              MOVS     r6,#0
;;;1104     if (hObj) {
000008  b144              CBZ      r4,|L1.28|
;;;1105       WM_LOCK();
00000a  f7fffffe          BL       GUI_Lock
;;;1106       r = _AddKey(hObj, Key);
00000e  4629              MOV      r1,r5
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       _AddKey
000016  4606              MOV      r6,r0
;;;1107       WM_UNLOCK();
000018  f7fffffe          BL       GUI_Unlock
                  |L1.28|
;;;1108     }
;;;1109     return r;
00001c  4630              MOV      r0,r6
;;;1110   }
00001e  bd70              POP      {r4-r6,pc}
;;;1111   
                          ENDP


                          AREA ||i.LISTBOX_AddString||, CODE, READONLY, ALIGN=1

                  LISTBOX_AddString PROC
;;;1115   */
;;;1116   void LISTBOX_AddString(LISTBOX_Handle hObj, const char* s) {
000000  e92d41fc          PUSH     {r2-r8,lr}
000004  4606              MOV      r6,r0
000006  460d              MOV      r5,r1
;;;1117     if (hObj && s) {
000008  2e00              CMP      r6,#0
00000a  d035              BEQ      |L2.120|
00000c  2d00              CMP      r5,#0
00000e  d033              BEQ      |L2.120|
;;;1118       LISTBOX_Obj* pObj;
;;;1119       LISTBOX_ITEM Item = {0, 0};
000010  2000              MOVS     r0,#0
000012  9000              STR      r0,[sp,#0]
000014  9001              STR      r0,[sp,#4]
;;;1120       WM_LOCK();
000016  f7fffffe          BL       GUI_Lock
;;;1121       pObj = LISTBOX_H2P(hObj);
00001a  4630              MOV      r0,r6
00001c  f7fffffe          BL       GUI_ALLOC_h2p
000020  4604              MOV      r4,r0
;;;1122       if (GUI_ARRAY_AddItem(&pObj->ItemArray, &Item, sizeof(LISTBOX_ITEM) + strlen(s)) == 0) {
000022  4628              MOV      r0,r5
000024  f7fffffe          BL       strlen
000028  1d87              ADDS     r7,r0,#6
00002a  463a              MOV      r2,r7
00002c  4669              MOV      r1,sp
00002e  f1040028          ADD      r0,r4,#0x28
000032  f7fffffe          BL       GUI_ARRAY_AddItem
000036  b9e0              CBNZ     r0,|L2.114|
;;;1123         unsigned ItemIndex = GUI_ARRAY_GetNumItems(&pObj->ItemArray) - 1;
000038  f1040028          ADD      r0,r4,#0x28
00003c  f7fffffe          BL       GUI_ARRAY_GetNumItems
000040  1e47              SUBS     r7,r0,#1
;;;1124         LISTBOX_ITEM* pItem= (LISTBOX_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, ItemIndex);
000042  4639              MOV      r1,r7
000044  f1040028          ADD      r0,r4,#0x28
000048  f7fffffe          BL       GUI_ARRAY_GetpItem
00004c  4680              MOV      r8,r0
;;;1125         strcpy(pItem->acText, s);
00004e  4629              MOV      r1,r5
000050  f1080005          ADD      r0,r8,#5
000054  f7fffffe          BL       strcpy
;;;1126         LISTBOX__InvalidateItemSize(pObj, ItemIndex);
000058  4639              MOV      r1,r7
00005a  4620              MOV      r0,r4
00005c  f7fffffe          BL       LISTBOX__InvalidateItemSize
;;;1127         LISTBOX_UpdateScrollers(hObj);
000060  4630              MOV      r0,r6
000062  f7fffffe          BL       LISTBOX_UpdateScrollers
;;;1128         LISTBOX__InvalidateItem(hObj, pObj, ItemIndex);
000066  463a              MOV      r2,r7
000068  4621              MOV      r1,r4
00006a  4630              MOV      r0,r6
00006c  f7fffffe          BL       LISTBOX__InvalidateItem
;;;1129       }
000070  bf00              NOP      
                  |L2.114|
;;;1130       WM_UNLOCK();
000072  f7fffffe          BL       GUI_Unlock
;;;1131     }
000076  bf00              NOP      
                  |L2.120|
;;;1132   }
000078  e8bd81fc          POP      {r2-r8,pc}
;;;1133   
                          ENDP


                          AREA ||i.LISTBOX_Callback||, CODE, READONLY, ALIGN=1

                  LISTBOX_Callback PROC
;;;926    */
;;;927    void LISTBOX_Callback(WM_MESSAGE * pMsg) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  b086              SUB      sp,sp,#0x18
000006  4604              MOV      r4,r0
;;;928      LISTBOX_Handle hObj;
;;;929      LISTBOX_Obj * pObj;
;;;930      WM_SCROLL_STATE ScrollState;
;;;931      WM_MESSAGE Msg;
;;;932      hObj = pMsg->hWin;
000008  f9b48004          LDRSH    r8,[r4,#4]
;;;933      pObj = (LISTBOX_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
00000c  4640              MOV      r0,r8
00000e  f7fffffe          BL       GUI_ALLOC_h2p
000012  4605              MOV      r5,r0
;;;934      /* Let widget handle the standard messages */
;;;935      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
000014  4621              MOV      r1,r4
000016  4640              MOV      r0,r8
000018  f7fffffe          BL       WIDGET_HandleActive
00001c  b958              CBNZ     r0,|L3.54|
;;;936        /* Owner needs to be informed about focus change */
;;;937        if (pMsg->MsgId == WM_SET_FOCUS) {
00001e  6820              LDR      r0,[r4,#0]
000020  281e              CMP      r0,#0x1e
000022  d105              BNE      |L3.48|
;;;938          if (pMsg->Data.v == 0) {            /* Lost focus ? */
000024  68a0              LDR      r0,[r4,#8]
000026  b918              CBNZ     r0,|L3.48|
;;;939            _NotifyOwner(hObj, LISTBOX_NOTIFICATION_LOST_FOCUS);
000028  210b              MOVS     r1,#0xb
00002a  4640              MOV      r0,r8
00002c  f7fffffe          BL       _NotifyOwner
                  |L3.48|
;;;940          }
;;;941        }
;;;942        return;
;;;943      }
;;;944      switch (pMsg->MsgId) {
;;;945      case WM_NOTIFY_PARENT:
;;;946        switch (pMsg->Data.v) {
;;;947        case WM_NOTIFICATION_VALUE_CHANGED:
;;;948          if (pMsg->hWinSrc  == WM_GetScrollbarV(hObj)) {
;;;949            WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
;;;950            pObj->ScrollStateV.v = ScrollState.v;
;;;951            LISTBOX__InvalidateInsideArea(hObj);
;;;952            _NotifyOwner(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
;;;953          } else if (pMsg->hWinSrc == WM_GetScrollbarH(hObj)) {
;;;954            WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
;;;955            pObj->ScrollStateH.v = ScrollState.v;
;;;956            LISTBOX__InvalidateInsideArea(hObj);
;;;957            _NotifyOwner(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
;;;958          }
;;;959          break;
;;;960        case WM_NOTIFICATION_SCROLLBAR_ADDED:
;;;961          #if WIDGET_USE_PARENT_EFFECT
;;;962            WIDGET_SetEffect(pMsg->hWinSrc, pObj->Widget.pEffect);
;;;963          #endif
;;;964          LISTBOX_UpdateScrollers(hObj);
;;;965          break;
;;;966        }
;;;967        break;
;;;968      case WM_PAINT:
;;;969        _OnPaint(hObj, pObj, pMsg);
;;;970        break;
;;;971      case WM_PID_STATE_CHANGED:
;;;972        {
;;;973          const WM_PID_STATE_CHANGED_INFO* pInfo = (const WM_PID_STATE_CHANGED_INFO*)pMsg->Data.p;
;;;974          if (pInfo->State) {
;;;975            int Sel;
;;;976            Sel = _GetItemFromPos(hObj, pObj, pInfo->x, pInfo->y);
;;;977            if (Sel >= 0) {
;;;978              _ToggleMultiSel(hObj, pObj, Sel);
;;;979              LISTBOX_SetSel(hObj, Sel);
;;;980            }
;;;981            _NotifyOwner(hObj, WM_NOTIFICATION_CLICKED);
;;;982            return;
;;;983          }
;;;984        }
;;;985        break;
;;;986      case WM_TOUCH:
;;;987        _OnTouch(hObj, pMsg);
;;;988        return;
;;;989    #if GUI_SUPPORT_MOUSE
;;;990      case WM_MOUSEOVER:
;;;991        if (_OnMouseOver(hObj, pObj, pMsg) == 0)
;;;992          return;
;;;993        break;
;;;994    #endif
;;;995      case WM_DELETE:
;;;996        _FreeAttached(pObj);
;;;997        break;       /* No return here ... WM_DefaultProc needs to be called */
;;;998      case WM_KEY:
;;;999        if (((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt > 0) {
;;;1000         int Key;
;;;1001         Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
;;;1002         if (LISTBOX_AddKey(hObj, Key)) {
;;;1003           return;
;;;1004         }
;;;1005       }
;;;1006       /* Send a WM_NOTIFY_OWNER_KEY message with the key information to the owner window */
;;;1007       Msg = *pMsg;
;;;1008       Msg.MsgId = WM_NOTIFY_OWNER_KEY;
;;;1009       _SendToOwner(hObj, &Msg);
;;;1010       if (!WM_IsWindow(hObj)) {
;;;1011         return;
;;;1012       }
;;;1013       break;
;;;1014     case WM_SIZE:
;;;1015       LISTBOX_UpdateScrollers(hObj);
;;;1016       WM_InvalidateWindow(hObj);
;;;1017       break;
;;;1018     }
;;;1019     WM_DefaultProc(pMsg);
;;;1020   }
000030  b006              ADD      sp,sp,#0x18
000032  e8bd81f0          POP      {r4-r8,pc}
                  |L3.54|
000036  6820              LDR      r0,[r4,#0]            ;944
000038  280e              CMP      r0,#0xe               ;944
00003a  d071              BEQ      |L3.288|
00003c  dc06              BGT      |L3.76|
00003e  2805              CMP      r0,#5                 ;944
000040  d06d              BEQ      |L3.286|
000042  280b              CMP      r0,#0xb               ;944
000044  d066              BEQ      |L3.276|
000046  280c              CMP      r0,#0xc               ;944
                  |L3.72|
000048  d13d              BNE      |L3.198|
00004a  e05e              B        |L3.266|
                  |L3.76|
00004c  280f              CMP      r0,#0xf               ;944
00004e  d03b              BEQ      |L3.200|
000050  2811              CMP      r0,#0x11              ;944
000052  d03f              BEQ      |L3.212|
000054  2826              CMP      r0,#0x26              ;944
000056  d1f7              BNE      |L3.72|
000058  68a0              LDR      r0,[r4,#8]            ;946
00005a  2805              CMP      r0,#5                 ;946
00005c  d002              BEQ      |L3.100|
00005e  2806              CMP      r0,#6                 ;946
000060  d130              BNE      |L3.196|
000062  e02b              B        |L3.188|
                  |L3.100|
000064  4640              MOV      r0,r8                 ;948
000066  f7fffffe          BL       WM_GetScrollbarV
00006a  f9b41006          LDRSH    r1,[r4,#6]            ;948
00006e  4288              CMP      r0,r1                 ;948
000070  d10e              BNE      |L3.144|
000072  f9b40006          LDRSH    r0,[r4,#6]            ;949
000076  a903              ADD      r1,sp,#0xc            ;949
000078  f7fffffe          BL       WM_GetScrollState
00007c  9904              LDR      r1,[sp,#0x10]         ;950
00007e  6369              STR      r1,[r5,#0x34]         ;950
000080  4640              MOV      r0,r8                 ;951
000082  f7fffffe          BL       LISTBOX__InvalidateInsideArea
000086  210a              MOVS     r1,#0xa               ;952
000088  4640              MOV      r0,r8                 ;952
00008a  f7fffffe          BL       _NotifyOwner
00008e  e014              B        |L3.186|
                  |L3.144|
000090  4640              MOV      r0,r8                 ;953
000092  f7fffffe          BL       WM_GetScrollbarH
000096  f9b41006          LDRSH    r1,[r4,#6]            ;953
00009a  4288              CMP      r0,r1                 ;953
00009c  d10d              BNE      |L3.186|
00009e  f9b40006          LDRSH    r0,[r4,#6]            ;954
0000a2  a903              ADD      r1,sp,#0xc            ;954
0000a4  f7fffffe          BL       WM_GetScrollState
0000a8  9904              LDR      r1,[sp,#0x10]         ;955
0000aa  6429              STR      r1,[r5,#0x40]         ;955
0000ac  4640              MOV      r0,r8                 ;956
0000ae  f7fffffe          BL       LISTBOX__InvalidateInsideArea
0000b2  210a              MOVS     r1,#0xa               ;957
0000b4  4640              MOV      r0,r8                 ;957
0000b6  f7fffffe          BL       _NotifyOwner
                  |L3.186|
0000ba  e003              B        |L3.196|
                  |L3.188|
0000bc  4640              MOV      r0,r8                 ;964
0000be  f7fffffe          BL       LISTBOX_UpdateScrollers
0000c2  bf00              NOP                            ;965
                  |L3.196|
0000c4  bf00              NOP                            ;959
                  |L3.198|
0000c6  e04f              B        |L3.360|
                  |L3.200|
0000c8  4622              MOV      r2,r4                 ;969
0000ca  4629              MOV      r1,r5                 ;969
0000cc  4640              MOV      r0,r8                 ;969
0000ce  f7fffffe          BL       _OnPaint
0000d2  e049              B        |L3.360|
                  |L3.212|
0000d4  68a6              LDR      r6,[r4,#8]            ;973
0000d6  7a30              LDRB     r0,[r6,#8]            ;974
0000d8  b1b0              CBZ      r0,|L3.264|
0000da  4629              MOV      r1,r5                 ;976
0000dc  4640              MOV      r0,r8                 ;976
0000de  e9d62300          LDRD     r2,r3,[r6,#0]         ;976
0000e2  f7fffffe          BL       _GetItemFromPos
0000e6  4607              MOV      r7,r0                 ;976
0000e8  2f00              CMP      r7,#0                 ;977
0000ea  db08              BLT      |L3.254|
0000ec  463a              MOV      r2,r7                 ;978
0000ee  4629              MOV      r1,r5                 ;978
0000f0  4640              MOV      r0,r8                 ;978
0000f2  f7fffffe          BL       _ToggleMultiSel
0000f6  4639              MOV      r1,r7                 ;979
0000f8  4640              MOV      r0,r8                 ;979
0000fa  f7fffffe          BL       LISTBOX_SetSel
                  |L3.254|
0000fe  2101              MOVS     r1,#1                 ;981
000100  4640              MOV      r0,r8                 ;981
000102  f7fffffe          BL       _NotifyOwner
000106  e793              B        |L3.48|
                  |L3.264|
000108  e02e              B        |L3.360|
                  |L3.266|
00010a  4621              MOV      r1,r4                 ;987
00010c  4640              MOV      r0,r8                 ;987
00010e  f7fffffe          BL       _OnTouch
000112  e78d              B        |L3.48|
                  |L3.276|
000114  4628              MOV      r0,r5                 ;996
000116  f7fffffe          BL       _FreeAttached
00011a  e025              B        |L3.360|
00011c  e000              B        |L3.288|
                  |L3.286|
00011e  e01c              B        |L3.346|
                  |L3.288|
000120  68a0              LDR      r0,[r4,#8]            ;999
000122  6840              LDR      r0,[r0,#4]            ;999
000124  2800              CMP      r0,#0                 ;999
000126  dd08              BLE      |L3.314|
000128  68a0              LDR      r0,[r4,#8]            ;1001
00012a  6806              LDR      r6,[r0,#0]            ;1001
00012c  4631              MOV      r1,r6                 ;1002
00012e  4640              MOV      r0,r8                 ;1002
000130  f7fffffe          BL       LISTBOX_AddKey
000134  b100              CBZ      r0,|L3.312|
000136  e77b              B        |L3.48|
                  |L3.312|
000138  bf00              NOP                            ;1005
                  |L3.314|
00013a  e8940007          LDM      r4,{r0-r2}            ;1007
00013e  e88d0007          STM      sp,{r0-r2}            ;1007
000142  2021              MOVS     r0,#0x21              ;1008
000144  9000              STR      r0,[sp,#0]            ;1008
000146  4669              MOV      r1,sp                 ;1009
000148  4640              MOV      r0,r8                 ;1009
00014a  f7fffffe          BL       _SendToOwner
00014e  4640              MOV      r0,r8                 ;1010
000150  f7fffffe          BL       WM_IsWindow
000154  b900              CBNZ     r0,|L3.344|
000156  e76b              B        |L3.48|
                  |L3.344|
000158  e006              B        |L3.360|
                  |L3.346|
00015a  4640              MOV      r0,r8                 ;1015
00015c  f7fffffe          BL       LISTBOX_UpdateScrollers
000160  4640              MOV      r0,r8                 ;1016
000162  f7fffffe          BL       WM_InvalidateWindow
000166  bf00              NOP                            ;1017
                  |L3.360|
000168  bf00              NOP                            ;967
00016a  4620              MOV      r0,r4                 ;1019
00016c  f7fffffe          BL       WM_DefaultProc
000170  bf00              NOP      
000172  e75d              B        |L3.48|
;;;1021   
                          ENDP


                          AREA ||i.LISTBOX_CreateEx||, CODE, READONLY, ALIGN=2

                  LISTBOX_CreateEx PROC
;;;1031   */
;;;1032   LISTBOX_Handle LISTBOX_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;1033                                   int WinFlags, int ExFlags, int Id, const GUI_ConstString* ppText)
;;;1034   {
000004  b085              SUB      sp,sp,#0x14
000006  4607              MOV      r7,r0
000008  4688              MOV      r8,r1
00000a  4691              MOV      r9,r2
00000c  e9ddab13          LDRD     r10,r11,[sp,#0x4c]
000010  9c16              LDR      r4,[sp,#0x58]
;;;1035     LISTBOX_Handle hObj;
;;;1036     GUI_USE_PARA(ExFlags);
000012  bf00              NOP      
;;;1037     WM_LOCK();
000014  f7fffffe          BL       GUI_Lock
;;;1038     hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, LISTBOX_Callback,
000018  2268              MOVS     r2,#0x68
00001a  4b17              LDR      r3,|L4.120|
00001c  fa1ff08a          UXTH     r0,r10
000020  9912              LDR      r1,[sp,#0x48]
000022  e9cd3202          STRD     r3,r2,[sp,#8]
000026  e9cd1000          STRD     r1,r0,[sp,#0]
00002a  464a              MOV      r2,r9
00002c  4641              MOV      r1,r8
00002e  4638              MOV      r0,r7
000030  9b08              LDR      r3,[sp,#0x20]
000032  f7fffffe          BL       WM_CreateWindowAsChild
000036  4605              MOV      r5,r0
;;;1039                                   sizeof(LISTBOX_Obj) - sizeof(WM_Obj));
;;;1040     if (hObj) {
000038  b1bd              CBZ      r5,|L4.106|
;;;1041       LISTBOX_Obj* pObj;
;;;1042       pObj = (LISTBOX_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
00003a  4628              MOV      r0,r5
00003c  f7fffffe          BL       GUI_ALLOC_h2p
000040  4606              MOV      r6,r0
;;;1043        /* Init sub-classes */
;;;1044       GUI_ARRAY_CREATE(&pObj->ItemArray);
;;;1045      /* init widget specific variables */
;;;1046       WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE);
000042  2210              MOVS     r2,#0x10
000044  4630              MOV      r0,r6
000046  9915              LDR      r1,[sp,#0x54]
000048  f7fffffe          BL       WIDGET__Init
;;;1047       LISTBOX_INIT_ID(pObj);
;;;1048       pObj->Props = LISTBOX_DefaultProps;
00004c  2238              MOVS     r2,#0x38
00004e  490b              LDR      r1,|L4.124|
000050  f1060048          ADD      r0,r6,#0x48
000054  f7fffffe          BL       __aeabi_memcpy4
;;;1049       if (ppText) {
000058  b11c              CBZ      r4,|L4.98|
;;;1050         /* init member variables */
;;;1051         /* Set non-zero attributes */
;;;1052         LISTBOX_SetText(hObj, ppText);
00005a  4621              MOV      r1,r4
00005c  4628              MOV      r0,r5
00005e  f7fffffe          BL       LISTBOX_SetText
                  |L4.98|
;;;1053       }
;;;1054       LISTBOX_UpdateScrollers(hObj);
000062  4628              MOV      r0,r5
000064  f7fffffe          BL       LISTBOX_UpdateScrollers
;;;1055     }
000068  bf00              NOP      
                  |L4.106|
;;;1056     WM_UNLOCK();
00006a  f7fffffe          BL       GUI_Unlock
;;;1057     return hObj;
00006e  4628              MOV      r0,r5
;;;1058   }
000070  b009              ADD      sp,sp,#0x24
000072  e8bd8ff0          POP      {r4-r11,pc}
;;;1059   
                          ENDP

000076  0000              DCW      0x0000
                  |L4.120|
                          DCD      LISTBOX_Callback
                  |L4.124|
                          DCD      LISTBOX_DefaultProps

                          AREA ||i.LISTBOX_DecSel||, CODE, READONLY, ALIGN=1

                  LISTBOX_DecSel PROC
;;;1226   */
;;;1227   void LISTBOX_DecSel      (LISTBOX_Handle hObj) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;1228     if (hObj) {
000004  b144              CBZ      r4,|L5.24|
;;;1229       WM_LOCK();
000006  f7fffffe          BL       GUI_Lock
;;;1230       _MoveSel(hObj, -1);
00000a  f04f31ff          MOV      r1,#0xffffffff
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       _MoveSel
;;;1231       WM_UNLOCK();
000014  f7fffffe          BL       GUI_Unlock
                  |L5.24|
;;;1232     }
;;;1233   }
000018  bd10              POP      {r4,pc}
;;;1234   
                          ENDP


                          AREA ||i.LISTBOX_GetSel||, CODE, READONLY, ALIGN=1

                  LISTBOX_GetSel PROC
;;;1198   */
;;;1199   int  LISTBOX_GetSel (LISTBOX_Handle hObj) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;1200     int r = -1;
000004  f04f36ff          MOV      r6,#0xffffffff
;;;1201     LISTBOX_Obj* pObj;
;;;1202     if (hObj) {
000008  b14c              CBZ      r4,|L6.30|
;;;1203       WM_LOCK();
00000a  f7fffffe          BL       GUI_Lock
;;;1204       pObj = LISTBOX_H2P(hObj);
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       GUI_ALLOC_h2p
000014  4605              MOV      r5,r0
;;;1205       r = pObj->Sel;
000016  f9b56082          LDRSH    r6,[r5,#0x82]
;;;1206       WM_UNLOCK();
00001a  f7fffffe          BL       GUI_Unlock
                  |L6.30|
;;;1207     }
;;;1208     return r;
00001e  4630              MOV      r0,r6
;;;1209   }
000020  bd70              POP      {r4-r6,pc}
;;;1210   
                          ENDP


                          AREA ||i.LISTBOX_IncSel||, CODE, READONLY, ALIGN=1

                  LISTBOX_IncSel PROC
;;;1214   */
;;;1215   void LISTBOX_IncSel      (LISTBOX_Handle hObj) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;1216     if (hObj) {
000004  b13c              CBZ      r4,|L7.22|
;;;1217       WM_LOCK();
000006  f7fffffe          BL       GUI_Lock
;;;1218       _MoveSel(hObj, 1);
00000a  2101              MOVS     r1,#1
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       _MoveSel
;;;1219       WM_UNLOCK();
000012  f7fffffe          BL       GUI_Unlock
                  |L7.22|
;;;1220     }
;;;1221   }
000016  bd10              POP      {r4,pc}
;;;1222   
                          ENDP


                          AREA ||i.LISTBOX_InvalidateItem||, CODE, READONLY, ALIGN=1

                  LISTBOX_InvalidateItem PROC
;;;1069   */
;;;1070   void LISTBOX_InvalidateItem(LISTBOX_Handle hObj, int Index) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
;;;1071     if (hObj) {
000008  b366              CBZ      r6,|L8.100|
;;;1072       LISTBOX_Obj* pObj;
;;;1073       int NumItems;
;;;1074       WM_LOCK();
00000a  f7fffffe          BL       GUI_Lock
;;;1075       pObj = LISTBOX_H2P(hObj);
00000e  4630              MOV      r0,r6
000010  f7fffffe          BL       GUI_ALLOC_h2p
000014  4680              MOV      r8,r0
;;;1076       NumItems = LISTBOX__GetNumItems(pObj);
000016  4640              MOV      r0,r8
000018  f7fffffe          BL       LISTBOX__GetNumItems
00001c  4607              MOV      r7,r0
;;;1077       if (Index < NumItems) {
00001e  42bc              CMP      r4,r7
000020  da1d              BGE      |L8.94|
;;;1078         if (Index < 0) {
000022  2c00              CMP      r4,#0
000024  da0f              BGE      |L8.70|
;;;1079           int i;
;;;1080           for (i = 0; i < NumItems; i++) {
000026  2500              MOVS     r5,#0
000028  e004              B        |L8.52|
                  |L8.42|
;;;1081             LISTBOX__InvalidateItemSize(pObj, i);
00002a  4629              MOV      r1,r5
00002c  4640              MOV      r0,r8
00002e  f7fffffe          BL       LISTBOX__InvalidateItemSize
000032  1c6d              ADDS     r5,r5,#1              ;1080
                  |L8.52|
000034  42bd              CMP      r5,r7                 ;1080
000036  dbf8              BLT      |L8.42|
;;;1082           }
;;;1083           LISTBOX_UpdateScrollers(hObj);
000038  4630              MOV      r0,r6
00003a  f7fffffe          BL       LISTBOX_UpdateScrollers
;;;1084           LISTBOX__InvalidateInsideArea(hObj);
00003e  4630              MOV      r0,r6
000040  f7fffffe          BL       LISTBOX__InvalidateInsideArea
;;;1085         } else {
000044  e00b              B        |L8.94|
                  |L8.70|
;;;1086           LISTBOX__InvalidateItemSize(pObj, Index);
000046  4621              MOV      r1,r4
000048  4640              MOV      r0,r8
00004a  f7fffffe          BL       LISTBOX__InvalidateItemSize
;;;1087           LISTBOX_UpdateScrollers(hObj);
00004e  4630              MOV      r0,r6
000050  f7fffffe          BL       LISTBOX_UpdateScrollers
;;;1088           LISTBOX__InvalidateItemAndBelow(hObj, pObj, Index);
000054  4622              MOV      r2,r4
000056  4641              MOV      r1,r8
000058  4630              MOV      r0,r6
00005a  f7fffffe          BL       LISTBOX__InvalidateItemAndBelow
                  |L8.94|
;;;1089         }
;;;1090       }
;;;1091       WM_UNLOCK();
00005e  f7fffffe          BL       GUI_Unlock
;;;1092     }
000062  bf00              NOP      
                  |L8.100|
;;;1093   }
000064  e8bd81f0          POP      {r4-r8,pc}
;;;1094   
                          ENDP


                          AREA ||i.LISTBOX_OwnerDraw||, CODE, READONLY, ALIGN=2

                  LISTBOX_OwnerDraw PROC
;;;320    */
;;;321    int LISTBOX_OwnerDraw(const WIDGET_ITEM_DRAW_INFO* pDrawItemInfo) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b089              SUB      sp,sp,#0x24
000006  4604              MOV      r4,r0
;;;322      switch (pDrawItemInfo->Cmd) {
000008  6860              LDR      r0,[r4,#4]
00000a  b348              CBZ      r0,|L9.96|
00000c  2801              CMP      r0,#1
00000e  d002              BEQ      |L9.22|
000010  2802              CMP      r0,#2
000012  d17d              BNE      |L9.272|
000014  e018              B        |L9.72|
                  |L9.22|
;;;323        case WIDGET_ITEM_GET_XSIZE: {
;;;324          LISTBOX_Obj* pObj;
;;;325          const GUI_FONT GUI_UNI_PTR* pOldFont;
;;;326          const char* s;
;;;327          int DistX;
;;;328          pObj = LISTBOX_H2P(pDrawItemInfo->hWin);
000016  f9b40000          LDRSH    r0,[r4,#0]
00001a  f7fffffe          BL       GUI_ALLOC_h2p
00001e  4605              MOV      r5,r0
;;;329          pOldFont = GUI_SetFont(pObj->Props.pFont);
000020  6ca8              LDR      r0,[r5,#0x48]
000022  f7fffffe          BL       GUI_SetFont
000026  4607              MOV      r7,r0
;;;330          s = LISTBOX__GetpString(pObj, pDrawItemInfo->ItemIndex);
000028  4628              MOV      r0,r5
00002a  68a1              LDR      r1,[r4,#8]
00002c  f7fffffe          BL       LISTBOX__GetpString
000030  4680              MOV      r8,r0
;;;331          DistX = GUI_GetStringDistX(s);
000032  4640              MOV      r0,r8
000034  f7fffffe          BL       GUI_GetStringDistX
000038  4606              MOV      r6,r0
;;;332          GUI_SetFont(pOldFont);
00003a  4638              MOV      r0,r7
00003c  f7fffffe          BL       GUI_SetFont
;;;333          return DistX;
000040  4630              MOV      r0,r6
                  |L9.66|
;;;334        }
;;;335        case WIDGET_ITEM_GET_YSIZE: {
;;;336          LISTBOX_Obj* pObj;
;;;337          pObj = LISTBOX_H2P(pDrawItemInfo->hWin);
;;;338          return GUI_GetYDistOfFont(pObj->Props.pFont) + pObj->ItemSpacing;
;;;339        }
;;;340        case WIDGET_ITEM_DRAW: {
;;;341          LISTBOX_Obj* pObj;
;;;342          LISTBOX_ITEM* pItem;
;;;343          WM_HMEM hItem;
;;;344          GUI_RECT r, rText;
;;;345          int FontDistY;
;;;346          int ItemIndex = pDrawItemInfo->ItemIndex;
;;;347          const char* s;
;;;348          int ColorIndex;
;;;349          char IsDisabled;
;;;350          char IsSelected;
;;;351          pObj = LISTBOX_H2P(pDrawItemInfo->hWin);
;;;352          hItem = GUI_ARRAY_GethItem(&pObj->ItemArray, ItemIndex);
;;;353          pItem = (LISTBOX_ITEM *)GUI_ALLOC_h2p(hItem);
;;;354          WM_GetInsideRect(&r);
;;;355          FontDistY = GUI_GetFontDistY();
;;;356          /* Calculate color index */
;;;357          IsDisabled = (pItem->Status & LISTBOX_ITEM_DISABLED) ? 1 : 0;
;;;358          IsSelected = (pItem->Status & LISTBOX_ITEM_SELECTED) ? 1 : 0;
;;;359          if (pObj->Flags & LISTBOX_SF_MULTISEL) {
;;;360            if (IsDisabled) {
;;;361              ColorIndex = LISTBOX_CI_DISABLED;
;;;362            } else {
;;;363              ColorIndex = (IsSelected) ? LISTBOX_CI_SELFOCUS : LISTBOX_CI_UNSEL;
;;;364            }
;;;365          } else {
;;;366            if (IsDisabled) {
;;;367              ColorIndex = LISTBOX_CI_DISABLED;
;;;368            } else {
;;;369              if (ItemIndex == pObj->Sel) {
;;;370                ColorIndex = (pObj->Widget.State & WIDGET_STATE_FOCUS) ? LISTBOX_CI_SELFOCUS : LISTBOX_CI_SEL;
;;;371              } else {
;;;372                ColorIndex = LISTBOX_CI_UNSEL;
;;;373              }
;;;374            }
;;;375          }
;;;376          /* Display item */
;;;377          LCD_SetBkColor(pObj->Props.aBackColor[ColorIndex]);
;;;378          LCD_SetColor  (pObj->Props.aTextColor[ColorIndex]);
;;;379          s = LISTBOX__GetpString(pObj, ItemIndex);
;;;380          GUI_SetTextMode(GUI_TM_TRANS);
;;;381          GUI_Clear();
;;;382          rText.y0 = pDrawItemInfo->y0;
;;;383          rText.x0 = pDrawItemInfo->x0 + 1;
;;;384          rText.y1 = rText.y0 + pItem->ySize - 1;
;;;385          if (pObj->Props.Align & (GUI_TA_RIGHT | GUI_TA_CENTER)) {
;;;386            GUI_RECT Rect;
;;;387            WM_GetInsideRectExScrollbar(pDrawItemInfo->hWin, &Rect);
;;;388            rText.x1 = rText.x0 + Rect.x1 - Rect.x0 - pObj->Widget.pEffect->EffectSize;
;;;389          } else {
;;;390            rText.x1 = rText.x0 + pItem->xSize - 1;
;;;391          }
;;;392          GUI_DispStringInRect(s, &rText, pObj->Props.Align);
;;;393          /* Display focus rectangle */
;;;394          if ((pObj->Flags & LISTBOX_SF_MULTISEL) && (ItemIndex == pObj->Sel)) {
;;;395            GUI_RECT rFocus;
;;;396            rFocus.x0 = pDrawItemInfo->x0;
;;;397            rFocus.x1 = r.x1;
;;;398            switch (pObj->Props.Align & GUI_TA_VERTICAL) {
;;;399            case GUI_TA_TOP:
;;;400              rFocus.y0 = pDrawItemInfo->y0;
;;;401              rFocus.y1 = pDrawItemInfo->y0 + FontDistY - 1;
;;;402              break;
;;;403            case GUI_TA_VCENTER:
;;;404              rFocus.y0 = pDrawItemInfo->y0 + (GUI_Context.WM__pUserClipRect->y1 - GUI_Context.WM__pUserClipRect->y0 - FontDistY) / 2;
;;;405              rFocus.y1 = rFocus.y0 + FontDistY - 1;
;;;406              break;
;;;407            case GUI_TA_BOTTOM:
;;;408              rFocus.y1 = pDrawItemInfo->y0 + (GUI_Context.WM__pUserClipRect->y1 - GUI_Context.WM__pUserClipRect->y0);
;;;409              rFocus.y0 = rFocus.y1 - FontDistY + 1;
;;;410              break;
;;;411            }
;;;412            LCD_SetColor(GUI_WHITE - pObj->Props.aBackColor[ColorIndex]);
;;;413            GUI_DrawFocusRect(&rFocus, 0);
;;;414          }
;;;415          return 0;
;;;416        }
;;;417      }
;;;418      return 0;
;;;419    }
000042  b009              ADD      sp,sp,#0x24
000044  e8bd8ff0          POP      {r4-r11,pc}
                  |L9.72|
000048  f9b40000          LDRSH    r0,[r4,#0]            ;337
00004c  f7fffffe          BL       GUI_ALLOC_h2p
000050  4605              MOV      r5,r0                 ;337
000052  6ca8              LDR      r0,[r5,#0x48]         ;338
000054  f7fffffe          BL       GUI_GetYDistOfFont
000058  f8b51086          LDRH     r1,[r5,#0x86]         ;338
00005c  4408              ADD      r0,r0,r1              ;338
00005e  e7f0              B        |L9.66|
                  |L9.96|
000060  f8d49008          LDR      r9,[r4,#8]            ;346
000064  f9b40000          LDRSH    r0,[r4,#0]            ;351
000068  f7fffffe          BL       GUI_ALLOC_h2p
00006c  4605              MOV      r5,r0                 ;351
00006e  4649              MOV      r1,r9                 ;352
000070  f1050028          ADD      r0,r5,#0x28           ;352
000074  f7fffffe          BL       GUI_ARRAY_GethItem
000078  9008              STR      r0,[sp,#0x20]         ;352
00007a  9808              LDR      r0,[sp,#0x20]         ;353
00007c  f7fffffe          BL       GUI_ALLOC_h2p
000080  4607              MOV      r7,r0                 ;353
000082  a806              ADD      r0,sp,#0x18           ;354
000084  f7fffffe          BL       WM_GetInsideRect
000088  f7fffffe          BL       GUI_GetFontDistY
00008c  4680              MOV      r8,r0                 ;355
00008e  7938              LDRB     r0,[r7,#4]            ;357
000090  f3c00a40          UBFX     r10,r0,#1,#1          ;357
000094  7938              LDRB     r0,[r7,#4]            ;358
000096  f0000b01          AND      r11,r0,#1             ;358
00009a  f8950084          LDRB     r0,[r5,#0x84]         ;359
00009e  f0100f04          TST      r0,#4                 ;359
0000a2  d00c              BEQ      |L9.190|
0000a4  f1ba0f00          CMP      r10,#0                ;360
0000a8  d001              BEQ      |L9.174|
0000aa  2603              MOVS     r6,#3                 ;361
0000ac  e01b              B        |L9.230|
                  |L9.174|
0000ae  f1bb0f00          CMP      r11,#0                ;363
0000b2  d001              BEQ      |L9.184|
0000b4  2002              MOVS     r0,#2                 ;363
0000b6  e000              B        |L9.186|
                  |L9.184|
0000b8  2000              MOVS     r0,#0                 ;363
                  |L9.186|
0000ba  4606              MOV      r6,r0                 ;363
0000bc  e013              B        |L9.230|
                  |L9.190|
0000be  f1ba0f00          CMP      r10,#0                ;366
0000c2  d001              BEQ      |L9.200|
0000c4  2603              MOVS     r6,#3                 ;367
0000c6  e00e              B        |L9.230|
                  |L9.200|
0000c8  f9b50082          LDRSH    r0,[r5,#0x82]         ;369
0000cc  4548              CMP      r0,r9                 ;369
0000ce  d109              BNE      |L9.228|
0000d0  f8950026          LDRB     r0,[r5,#0x26]         ;370
0000d4  f0100f01          TST      r0,#1                 ;370
0000d8  d001              BEQ      |L9.222|
0000da  2002              MOVS     r0,#2                 ;370
0000dc  e000              B        |L9.224|
                  |L9.222|
0000de  2001              MOVS     r0,#1                 ;370
                  |L9.224|
0000e0  4606              MOV      r6,r0                 ;370
0000e2  e000              B        |L9.230|
                  |L9.228|
0000e4  2600              MOVS     r6,#0                 ;372
                  |L9.230|
0000e6  f1050150          ADD      r1,r5,#0x50           ;377
0000ea  f8510026          LDR      r0,[r1,r6,LSL #2]     ;377
0000ee  f7fffffe          BL       LCD_SetBkColor
0000f2  f1050160          ADD      r1,r5,#0x60           ;378
0000f6  f8510026          LDR      r0,[r1,r6,LSL #2]     ;378
0000fa  f7fffffe          BL       LCD_SetColor
0000fe  4649              MOV      r1,r9                 ;379
000100  4628              MOV      r0,r5                 ;379
000102  f7fffffe          BL       LISTBOX__GetpString
000106  9003              STR      r0,[sp,#0xc]          ;379
000108  2002              MOVS     r0,#2                 ;380
00010a  f7fffffe          BL       GUI_SetTextMode
00010e  e000              B        |L9.274|
                  |L9.272|
000110  e0a0              B        |L9.596|
                  |L9.274|
000112  f7fffffe          BL       GUI_Clear
000116  8a20              LDRH     r0,[r4,#0x10]         ;382
000118  b200              SXTH     r0,r0                 ;382
00011a  f8ad0012          STRH     r0,[sp,#0x12]         ;382
00011e  89a0              LDRH     r0,[r4,#0xc]          ;383
000120  1c40              ADDS     r0,r0,#1              ;383
000122  b200              SXTH     r0,r0                 ;383
000124  f8ad0010          STRH     r0,[sp,#0x10]         ;383
000128  f8bd0012          LDRH     r0,[sp,#0x12]         ;384
00012c  8879              LDRH     r1,[r7,#2]            ;384
00012e  4408              ADD      r0,r0,r1              ;384
000130  1e40              SUBS     r0,r0,#1              ;384
000132  b200              SXTH     r0,r0                 ;384
000134  f8ad0016          STRH     r0,[sp,#0x16]         ;384
000138  f895007c          LDRB     r0,[r5,#0x7c]         ;385
00013c  f0100f03          TST      r0,#3                 ;385
000140  d013              BEQ      |L9.362|
000142  f9b40000          LDRSH    r0,[r4,#0]            ;387
000146  a901              ADD      r1,sp,#4              ;387
000148  f7fffffe          BL       WM_GetInsideRectExScrollbar
00014c  f8bd0010          LDRH     r0,[sp,#0x10]         ;388
000150  f8bd1008          LDRH     r1,[sp,#8]            ;388
000154  4408              ADD      r0,r0,r1              ;388
000156  f8bd1004          LDRH     r1,[sp,#4]            ;388
00015a  1a40              SUBS     r0,r0,r1              ;388
00015c  6a29              LDR      r1,[r5,#0x20]         ;388
00015e  8a89              LDRH     r1,[r1,#0x14]         ;388
000160  1a40              SUBS     r0,r0,r1              ;388
000162  b200              SXTH     r0,r0                 ;388
000164  f8ad0014          STRH     r0,[sp,#0x14]         ;388
000168  e007              B        |L9.378|
                  |L9.362|
00016a  f8bd0010          LDRH     r0,[sp,#0x10]         ;390
00016e  8839              LDRH     r1,[r7,#0]            ;390
000170  4408              ADD      r0,r0,r1              ;390
000172  1e40              SUBS     r0,r0,#1              ;390
000174  b200              SXTH     r0,r0                 ;390
000176  f8ad0014          STRH     r0,[sp,#0x14]         ;390
                  |L9.378|
00017a  f9b5207c          LDRSH    r2,[r5,#0x7c]         ;392
00017e  a904              ADD      r1,sp,#0x10           ;392
000180  9803              LDR      r0,[sp,#0xc]          ;392
000182  f7fffffe          BL       GUI_DispStringInRect
000186  f8950084          LDRB     r0,[r5,#0x84]         ;394
00018a  f0100f04          TST      r0,#4                 ;394
00018e  d05f              BEQ      |L9.592|
000190  f9b50082          LDRSH    r0,[r5,#0x82]         ;394
000194  4548              CMP      r0,r9                 ;394
000196  d15b              BNE      |L9.592|
000198  89a0              LDRH     r0,[r4,#0xc]          ;396
00019a  b200              SXTH     r0,r0                 ;396
00019c  f8ad0004          STRH     r0,[sp,#4]            ;396
0001a0  f8bd001c          LDRH     r0,[sp,#0x1c]         ;397
0001a4  f8ad0008          STRH     r0,[sp,#8]            ;397
0001a8  f895007c          LDRB     r0,[r5,#0x7c]         ;398
0001ac  f010000c          ANDS     r0,r0,#0xc            ;398
0001b0  d004              BEQ      |L9.444|
0001b2  2804              CMP      r0,#4                 ;398
0001b4  d028              BEQ      |L9.520|
0001b6  280c              CMP      r0,#0xc               ;398
0001b8  d13b              BNE      |L9.562|
0001ba  e00a              B        |L9.466|
                  |L9.444|
0001bc  8a20              LDRH     r0,[r4,#0x10]         ;400
0001be  b200              SXTH     r0,r0                 ;400
0001c0  f8ad0006          STRH     r0,[sp,#6]            ;400
0001c4  8a20              LDRH     r0,[r4,#0x10]         ;401
0001c6  4440              ADD      r0,r0,r8              ;401
0001c8  1e40              SUBS     r0,r0,#1              ;401
0001ca  b200              SXTH     r0,r0                 ;401
0001cc  f8ad000a          STRH     r0,[sp,#0xa]          ;401
0001d0  e02f              B        |L9.562|
                  |L9.466|
0001d2  4921              LDR      r1,|L9.600|
0001d4  6bc9              LDR      r1,[r1,#0x3c]         ;404  ; GUI_Context
0001d6  f9b11006          LDRSH    r1,[r1,#6]            ;404
0001da  4a1f              LDR      r2,|L9.600|
0001dc  6bd2              LDR      r2,[r2,#0x3c]         ;404  ; GUI_Context
0001de  f9b22002          LDRSH    r2,[r2,#2]            ;404
0001e2  1a89              SUBS     r1,r1,r2              ;404
0001e4  eba10008          SUB      r0,r1,r8              ;404
0001e8  eb0071d0          ADD      r1,r0,r0,LSR #31      ;404
0001ec  8a22              LDRH     r2,[r4,#0x10]         ;404
0001ee  eb020161          ADD      r1,r2,r1,ASR #1       ;404
0001f2  b209              SXTH     r1,r1                 ;404
0001f4  f8ad1006          STRH     r1,[sp,#6]            ;404
0001f8  f8bd0006          LDRH     r0,[sp,#6]            ;405
0001fc  4440              ADD      r0,r0,r8              ;405
0001fe  1e40              SUBS     r0,r0,#1              ;405
000200  b200              SXTH     r0,r0                 ;405
000202  f8ad000a          STRH     r0,[sp,#0xa]          ;405
000206  e014              B        |L9.562|
                  |L9.520|
000208  4813              LDR      r0,|L9.600|
00020a  6bc0              LDR      r0,[r0,#0x3c]         ;408  ; GUI_Context
00020c  88c0              LDRH     r0,[r0,#6]            ;408
00020e  4912              LDR      r1,|L9.600|
000210  6bc9              LDR      r1,[r1,#0x3c]         ;408  ; GUI_Context
000212  8849              LDRH     r1,[r1,#2]            ;408
000214  1a40              SUBS     r0,r0,r1              ;408
000216  8a21              LDRH     r1,[r4,#0x10]         ;408
000218  4408              ADD      r0,r0,r1              ;408
00021a  b200              SXTH     r0,r0                 ;408
00021c  f8ad000a          STRH     r0,[sp,#0xa]          ;408
000220  f8bd000a          LDRH     r0,[sp,#0xa]          ;409
000224  eba00008          SUB      r0,r0,r8              ;409
000228  1c40              ADDS     r0,r0,#1              ;409
00022a  b200              SXTH     r0,r0                 ;409
00022c  f8ad0006          STRH     r0,[sp,#6]            ;409
000230  bf00              NOP                            ;410
                  |L9.562|
000232  bf00              NOP                            ;402
000234  f1050150          ADD      r1,r5,#0x50           ;412
000238  f8511026          LDR      r1,[r1,r6,LSL #2]     ;412
00023c  f06f427f          MVN      r2,#0xff000000        ;412
000240  1a50              SUBS     r0,r2,r1              ;412
000242  f7fffffe          BL       LCD_SetColor
000246  2100              MOVS     r1,#0                 ;413
000248  a801              ADD      r0,sp,#4              ;413
00024a  f7fffffe          BL       GUI_DrawFocusRect
00024e  bf00              NOP                            ;414
                  |L9.592|
000250  2000              MOVS     r0,#0                 ;415
000252  e6f6              B        |L9.66|
                  |L9.596|
000254  2000              MOVS     r0,#0                 ;418
000256  e6f4              B        |L9.66|
;;;420    
                          ENDP

                  |L9.600|
                          DCD      GUI_Context

                          AREA ||i.LISTBOX_SetSel||, CODE, READONLY, ALIGN=1

                  LISTBOX_SetSel PROC
;;;1156   */
;;;1157   void LISTBOX_SetSel (LISTBOX_Handle hObj, int NewSel) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
;;;1158     if (hObj) {
000008  2f00              CMP      r7,#0
00000a  d050              BEQ      |L10.174|
;;;1159       LISTBOX_Obj* pObj;
;;;1160       int MaxSel;
;;;1161       WM_LOCK();
00000c  f7fffffe          BL       GUI_Lock
;;;1162       pObj = LISTBOX_H2P(hObj);
000010  4638              MOV      r0,r7
000012  f7fffffe          BL       GUI_ALLOC_h2p
000016  4605              MOV      r5,r0
;;;1163       MaxSel = LISTBOX__GetNumItems(pObj);
000018  4628              MOV      r0,r5
00001a  f7fffffe          BL       LISTBOX__GetNumItems
00001e  4606              MOV      r6,r0
;;;1164       MaxSel = MaxSel ? MaxSel - 1 : 0;
000020  b10e              CBZ      r6,|L10.38|
000022  1e70              SUBS     r0,r6,#1
000024  e000              B        |L10.40|
                  |L10.38|
000026  2000              MOVS     r0,#0
                  |L10.40|
000028  4606              MOV      r6,r0
;;;1165       if (NewSel > MaxSel) {
00002a  42b4              CMP      r4,r6
00002c  dd00              BLE      |L10.48|
;;;1166         NewSel = MaxSel;
00002e  4634              MOV      r4,r6
                  |L10.48|
;;;1167       }
;;;1168       if (NewSel < 0) {
000030  2c00              CMP      r4,#0
000032  da02              BGE      |L10.58|
;;;1169         NewSel = -1;
000034  f04f34ff          MOV      r4,#0xffffffff
000038  e015              B        |L10.102|
                  |L10.58|
;;;1170       } else {
;;;1171         WM_HMEM hItem = GUI_ARRAY_GethItem(&pObj->ItemArray, NewSel);
00003a  4621              MOV      r1,r4
00003c  f1050028          ADD      r0,r5,#0x28
000040  f7fffffe          BL       GUI_ARRAY_GethItem
000044  4680              MOV      r8,r0
;;;1172         if (hItem) {
000046  f1b80f00          CMP      r8,#0
00004a  d00b              BEQ      |L10.100|
;;;1173           LISTBOX_ITEM* pItem = (LISTBOX_ITEM*)GUI_ALLOC_h2p(hItem);
00004c  4640              MOV      r0,r8
00004e  f7fffffe          BL       GUI_ALLOC_h2p
000052  4681              MOV      r9,r0
;;;1174           if (pItem->Status & LISTBOX_ITEM_DISABLED) {
000054  f8990004          LDRB     r0,[r9,#4]
000058  f0100f02          TST      r0,#2
00005c  d001              BEQ      |L10.98|
;;;1175             NewSel = -1;
00005e  f04f34ff          MOV      r4,#0xffffffff
                  |L10.98|
;;;1176           }
;;;1177         }
000062  bf00              NOP      
                  |L10.100|
;;;1178       }
000064  bf00              NOP      
                  |L10.102|
;;;1179       if (NewSel != pObj->Sel) {
000066  f9b50082          LDRSH    r0,[r5,#0x82]
00006a  42a0              CMP      r0,r4
00006c  d01c              BEQ      |L10.168|
;;;1180         int OldSel;
;;;1181         OldSel    = pObj->Sel;
00006e  f9b58082          LDRSH    r8,[r5,#0x82]
;;;1182         pObj->Sel = NewSel;
000072  b220              SXTH     r0,r4
000074  f8a50082          STRH     r0,[r5,#0x82]
;;;1183         if (_UpdateScrollPos(hObj, pObj)) {
000078  4629              MOV      r1,r5
00007a  4638              MOV      r0,r7
00007c  f7fffffe          BL       _UpdateScrollPos
000080  b118              CBZ      r0,|L10.138|
;;;1184           LISTBOX__InvalidateInsideArea(hObj);
000082  4638              MOV      r0,r7
000084  f7fffffe          BL       LISTBOX__InvalidateInsideArea
000088  e009              B        |L10.158|
                  |L10.138|
;;;1185         } else {
;;;1186           LISTBOX__InvalidateItem(hObj, pObj, OldSel);
00008a  4642              MOV      r2,r8
00008c  4629              MOV      r1,r5
00008e  4638              MOV      r0,r7
000090  f7fffffe          BL       LISTBOX__InvalidateItem
;;;1187           LISTBOX__InvalidateItem(hObj, pObj, NewSel);
000094  4622              MOV      r2,r4
000096  4629              MOV      r1,r5
000098  4638              MOV      r0,r7
00009a  f7fffffe          BL       LISTBOX__InvalidateItem
                  |L10.158|
;;;1188         }
;;;1189         _NotifyOwner(hObj, WM_NOTIFICATION_SEL_CHANGED);
00009e  2104              MOVS     r1,#4
0000a0  4638              MOV      r0,r7
0000a2  f7fffffe          BL       _NotifyOwner
;;;1190       }
0000a6  bf00              NOP      
                  |L10.168|
;;;1191       WM_UNLOCK();
0000a8  f7fffffe          BL       GUI_Unlock
;;;1192     }
0000ac  bf00              NOP      
                  |L10.174|
;;;1193   }
0000ae  e8bd87f0          POP      {r4-r10,pc}
;;;1194   
                          ENDP


                          AREA ||i.LISTBOX_SetText||, CODE, READONLY, ALIGN=1

                  LISTBOX_SetText PROC
;;;1137   */
;;;1138   void LISTBOX_SetText(LISTBOX_Handle hObj, const GUI_ConstString* ppText) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
;;;1139     if (hObj) {
000008  b1ae              CBZ      r6,|L11.54|
;;;1140       int i;
;;;1141       const char* s;
;;;1142       WM_LOCK();
00000a  f7fffffe          BL       GUI_Lock
;;;1143       if (ppText) {
00000e  b154              CBZ      r4,|L11.38|
;;;1144         for (i = 0; (s = *(ppText+i)) != 0; i++) {
000010  2500              MOVS     r5,#0
000012  e004              B        |L11.30|
                  |L11.20|
;;;1145           LISTBOX_AddString(hObj, s);
000014  4639              MOV      r1,r7
000016  4630              MOV      r0,r6
000018  f7fffffe          BL       LISTBOX_AddString
00001c  1c6d              ADDS     r5,r5,#1              ;1144
                  |L11.30|
00001e  f8547025          LDR      r7,[r4,r5,LSL #2]     ;1144
000022  2f00              CMP      r7,#0                 ;1144
000024  d1f6              BNE      |L11.20|
                  |L11.38|
;;;1146         }
;;;1147       }
;;;1148       LISTBOX_InvalidateItem(hObj, LISTBOX_ALL_ITEMS);
000026  f04f31ff          MOV      r1,#0xffffffff
00002a  4630              MOV      r0,r6
00002c  f7fffffe          BL       LISTBOX_InvalidateItem
;;;1149       WM_UNLOCK();
000030  f7fffffe          BL       GUI_Unlock
;;;1150     }
000034  bf00              NOP      
                  |L11.54|
;;;1151   }
000036  e8bd81f0          POP      {r4-r8,pc}
;;;1152   
                          ENDP


                          AREA ||i.LISTBOX_UpdateScrollers||, CODE, READONLY, ALIGN=1

                  LISTBOX_UpdateScrollers PROC
;;;498    */
;;;499    int LISTBOX_UpdateScrollers(LISTBOX_Handle hObj) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;500      _ManageAutoScroll(hObj);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       _ManageAutoScroll
;;;501      return _CalcScrollParas(hObj);
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       _CalcScrollParas
;;;502    }
000010  bd10              POP      {r4,pc}
;;;503    
                          ENDP


                          AREA ||i.LISTBOX__GetNumItems||, CODE, READONLY, ALIGN=1

                  LISTBOX__GetNumItems PROC
;;;800    */
;;;801    unsigned LISTBOX__GetNumItems(const LISTBOX_Obj* pObj) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;802      return GUI_ARRAY_GetNumItems(&pObj->ItemArray);
000004  f1040028          ADD      r0,r4,#0x28
000008  f7fffffe          BL       GUI_ARRAY_GetNumItems
;;;803    }
00000c  bd10              POP      {r4,pc}
;;;804    
                          ENDP


                          AREA ||i.LISTBOX__GetpString||, CODE, READONLY, ALIGN=1

                  LISTBOX__GetpString PROC
;;;811    */
;;;812    const char* LISTBOX__GetpString(const LISTBOX_Obj* pObj, int Index) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
;;;813      const char* s = NULL;
000008  2700              MOVS     r7,#0
;;;814      LISTBOX_ITEM* pItem = (LISTBOX_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
00000a  4631              MOV      r1,r6
00000c  f1040028          ADD      r0,r4,#0x28
000010  f7fffffe          BL       GUI_ARRAY_GetpItem
000014  4605              MOV      r5,r0
;;;815      if (pItem) {
000016  b105              CBZ      r5,|L14.26|
;;;816        s = pItem->acText;
000018  1d6f              ADDS     r7,r5,#5
                  |L14.26|
;;;817      }
;;;818      return s;
00001a  4638              MOV      r0,r7
;;;819    }
00001c  e8bd81f0          POP      {r4-r8,pc}
;;;820    
                          ENDP


                          AREA ||i.LISTBOX__InvalidateInsideArea||, CODE, READONLY, ALIGN=1

                  LISTBOX__InvalidateInsideArea PROC
;;;837    */
;;;838    void LISTBOX__InvalidateInsideArea(LISTBOX_Handle hObj) {
000000  b51c              PUSH     {r2-r4,lr}
000002  4604              MOV      r4,r0
;;;839      GUI_RECT Rect;
;;;840      WM_GetInsideRectExScrollbar(hObj, &Rect);
000004  4669              MOV      r1,sp
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;841      WM_InvalidateRect(hObj, &Rect);
00000c  4669              MOV      r1,sp
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       WM_InvalidateRect
;;;842    }
000014  bd1c              POP      {r2-r4,pc}
;;;843    
                          ENDP


                          AREA ||i.LISTBOX__InvalidateItem||, CODE, READONLY, ALIGN=1

                  LISTBOX__InvalidateItem PROC
;;;847    */
;;;848    void LISTBOX__InvalidateItem(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, int Sel) {
000000  e92d41fc          PUSH     {r2-r8,lr}
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
000008  4614              MOV      r4,r2
;;;849      if (Sel >= 0) {
00000a  2c00              CMP      r4,#0
00000c  db24              BLT      |L16.88|
;;;850        int ItemPosY;
;;;851        ItemPosY = _GetItemPosY(hObj, pObj, Sel);
00000e  4622              MOV      r2,r4
000010  4639              MOV      r1,r7
000012  4630              MOV      r0,r6
000014  f7fffffe          BL       _GetItemPosY
000018  4605              MOV      r5,r0
;;;852        if (ItemPosY >= 0) {
00001a  2d00              CMP      r5,#0
00001c  db1b              BLT      |L16.86|
;;;853          GUI_RECT Rect;
;;;854          int ItemDistY;
;;;855          ItemDistY = _GetItemSizeY(hObj, pObj, Sel);
00001e  4622              MOV      r2,r4
000020  4639              MOV      r1,r7
000022  4630              MOV      r0,r6
000024  f7fffffe          BL       _GetItemSizeY
000028  4680              MOV      r8,r0
;;;856          WM_GetInsideRectExScrollbar(hObj, &Rect);
00002a  4669              MOV      r1,sp
00002c  4630              MOV      r0,r6
00002e  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;857          Rect.y0 += ItemPosY;
000032  f8bd0002          LDRH     r0,[sp,#2]
000036  4428              ADD      r0,r0,r5
000038  b200              SXTH     r0,r0
00003a  f8ad0002          STRH     r0,[sp,#2]
;;;858          Rect.y1  = Rect.y0 + ItemDistY - 1;
00003e  f8bd0002          LDRH     r0,[sp,#2]
000042  4440              ADD      r0,r0,r8
000044  1e40              SUBS     r0,r0,#1
000046  b200              SXTH     r0,r0
000048  f8ad0006          STRH     r0,[sp,#6]
;;;859          WM_InvalidateRect(hObj, &Rect);
00004c  4669              MOV      r1,sp
00004e  4630              MOV      r0,r6
000050  f7fffffe          BL       WM_InvalidateRect
;;;860        }
000054  bf00              NOP      
                  |L16.86|
;;;861      }
000056  bf00              NOP      
                  |L16.88|
;;;862    }
000058  e8bd81fc          POP      {r2-r8,pc}
;;;863    
                          ENDP


                          AREA ||i.LISTBOX__InvalidateItemAndBelow||, CODE, READONLY, ALIGN=1

                  LISTBOX__InvalidateItemAndBelow PROC
;;;867    */
;;;868    void LISTBOX__InvalidateItemAndBelow(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, int Sel) {
000000  e92d41fc          PUSH     {r2-r8,lr}
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
000008  4614              MOV      r4,r2
;;;869      if (Sel >= 0) {
00000a  2c00              CMP      r4,#0
00000c  db17              BLT      |L17.62|
;;;870        int ItemPosY;
;;;871        ItemPosY = _GetItemPosY(hObj, pObj, Sel);
00000e  4622              MOV      r2,r4
000010  4639              MOV      r1,r7
000012  4630              MOV      r0,r6
000014  f7fffffe          BL       _GetItemPosY
000018  4605              MOV      r5,r0
;;;872        if (ItemPosY >= 0) {
00001a  2d00              CMP      r5,#0
00001c  db0e              BLT      |L17.60|
;;;873          GUI_RECT Rect;
;;;874          WM_GetInsideRectExScrollbar(hObj, &Rect);
00001e  4669              MOV      r1,sp
000020  4630              MOV      r0,r6
000022  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;875          Rect.y0 += ItemPosY;
000026  f8bd0002          LDRH     r0,[sp,#2]
00002a  4428              ADD      r0,r0,r5
00002c  b200              SXTH     r0,r0
00002e  f8ad0002          STRH     r0,[sp,#2]
;;;876          WM_InvalidateRect(hObj, &Rect);
000032  4669              MOV      r1,sp
000034  4630              MOV      r0,r6
000036  f7fffffe          BL       WM_InvalidateRect
;;;877        }
00003a  bf00              NOP      
                  |L17.60|
;;;878      }
00003c  bf00              NOP      
                  |L17.62|
;;;879    }
00003e  e8bd81fc          POP      {r2-r8,pc}
;;;880    
                          ENDP


                          AREA ||i.LISTBOX__InvalidateItemSize||, CODE, READONLY, ALIGN=1

                  LISTBOX__InvalidateItemSize PROC
;;;824    */
;;;825    void LISTBOX__InvalidateItemSize(const LISTBOX_Obj* pObj, unsigned Index) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
;;;826      LISTBOX_ITEM* pItem;
;;;827      pItem = (LISTBOX_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
000006  4631              MOV      r1,r6
000008  f1050028          ADD      r0,r5,#0x28
00000c  f7fffffe          BL       GUI_ARRAY_GetpItem
000010  4604              MOV      r4,r0
;;;828      if (pItem) {
000012  b114              CBZ      r4,|L18.26|
;;;829        pItem->xSize = 0;
000014  2000              MOVS     r0,#0
000016  8020              STRH     r0,[r4,#0]
;;;830        pItem->ySize = 0;
000018  8060              STRH     r0,[r4,#2]
                  |L18.26|
;;;831      }
;;;832    }
00001a  bd70              POP      {r4-r6,pc}
;;;833    
                          ENDP


                          AREA ||i.LISTBOX__SetScrollbarColor||, CODE, READONLY, ALIGN=1

                  LISTBOX__SetScrollbarColor PROC
;;;901    */
;;;902    void LISTBOX__SetScrollbarColor(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4680              MOV      r8,r0
000006  460d              MOV      r5,r1
;;;903      WM_HWIN hBarH, hBarV;
;;;904      int i;
;;;905      hBarH = WM_GetDialogItem(hObj, GUI_ID_HSCROLL);
000008  21ff              MOVS     r1,#0xff
00000a  4640              MOV      r0,r8
00000c  f7fffffe          BL       WM_GetDialogItem
000010  4606              MOV      r6,r0
;;;906      hBarV = WM_GetDialogItem(hObj, GUI_ID_VSCROLL);
000012  21fe              MOVS     r1,#0xfe
000014  4640              MOV      r0,r8
000016  f7fffffe          BL       WM_GetDialogItem
00001a  4607              MOV      r7,r0
;;;907      if (hBarH || hBarV) {
00001c  b906              CBNZ     r6,|L19.32|
00001e  b1e7              CBZ      r7,|L19.90|
                  |L19.32|
;;;908        for (i = 0; i < GUI_COUNTOF(pObj->Props.aScrollbarColor); i++) {
000020  2400              MOVS     r4,#0
000022  e018              B        |L19.86|
                  |L19.36|
;;;909          if (pObj->Props.aScrollbarColor[i] != GUI_INVALID_COLOR) {
000024  f1050070          ADD      r0,r5,#0x70
000028  f8500024          LDR      r0,[r0,r4,LSL #2]
00002c  f06f4170          MVN      r1,#0xf0000000
000030  4288              CMP      r0,r1
000032  d00f              BEQ      |L19.84|
;;;910            SCROLLBAR_SetColor(hBarH, i, pObj->Props.aScrollbarColor[i]);
000034  f1050070          ADD      r0,r5,#0x70
000038  f8502024          LDR      r2,[r0,r4,LSL #2]
00003c  4621              MOV      r1,r4
00003e  4630              MOV      r0,r6
000040  f7fffffe          BL       SCROLLBAR_SetColor
;;;911            SCROLLBAR_SetColor(hBarV, i, pObj->Props.aScrollbarColor[i]);
000044  f1050070          ADD      r0,r5,#0x70
000048  f8502024          LDR      r2,[r0,r4,LSL #2]
00004c  4621              MOV      r1,r4
00004e  4638              MOV      r0,r7
000050  f7fffffe          BL       SCROLLBAR_SetColor
                  |L19.84|
000054  1c64              ADDS     r4,r4,#1              ;908
                  |L19.86|
000056  2c03              CMP      r4,#3                 ;908
000058  d3e4              BCC      |L19.36|
                  |L19.90|
;;;912          }
;;;913        }
;;;914      }
;;;915    }
00005a  e8bd81f0          POP      {r4-r8,pc}
;;;916    
                          ENDP


                          AREA ||i.LISTBOX__SetScrollbarWidth||, CODE, READONLY, ALIGN=1

                  LISTBOX__SetScrollbarWidth PROC
;;;884    */
;;;885    void LISTBOX__SetScrollbarWidth(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
;;;886      WM_HWIN hBarH, hBarV;
;;;887      int Width;
;;;888      Width = pObj->ScrollbarWidth;
000008  f8945085          LDRB     r5,[r4,#0x85]
;;;889      if (Width == 0) {
00000c  b915              CBNZ     r5,|L20.20|
;;;890        Width = SCROLLBAR_GetDefaultWidth();
00000e  f7fffffe          BL       SCROLLBAR_GetDefaultWidth
000012  4605              MOV      r5,r0
                  |L20.20|
;;;891      }
;;;892      hBarH = WM_GetDialogItem(hObj, GUI_ID_HSCROLL);
000014  21ff              MOVS     r1,#0xff
000016  4630              MOV      r0,r6
000018  f7fffffe          BL       WM_GetDialogItem
00001c  4680              MOV      r8,r0
;;;893      hBarV = WM_GetDialogItem(hObj, GUI_ID_VSCROLL);
00001e  21fe              MOVS     r1,#0xfe
000020  4630              MOV      r0,r6
000022  f7fffffe          BL       WM_GetDialogItem
000026  4607              MOV      r7,r0
;;;894      SCROLLBAR_SetWidth(hBarH, Width);
000028  4629              MOV      r1,r5
00002a  4640              MOV      r0,r8
00002c  f7fffffe          BL       SCROLLBAR_SetWidth
;;;895      SCROLLBAR_SetWidth(hBarV, Width);
000030  4629              MOV      r1,r5
000032  4638              MOV      r0,r7
000034  f7fffffe          BL       SCROLLBAR_SetWidth
;;;896    }
000038  e8bd81f0          POP      {r4-r8,pc}
;;;897    
                          ENDP


                          AREA ||i._AddKey||, CODE, READONLY, ALIGN=1

                  _AddKey PROC
;;;736    */
;;;737    static int _AddKey(LISTBOX_Handle hObj, int Key) {
000000  b570              PUSH     {r4-r6,lr}
000002  4606              MOV      r6,r0
000004  460d              MOV      r5,r1
;;;738      LISTBOX_Obj* pObj;
;;;739      pObj = LISTBOX_H2P(hObj);
000006  4630              MOV      r0,r6
000008  f7fffffe          BL       GUI_ALLOC_h2p
00000c  4604              MOV      r4,r0
;;;740      switch (Key) {
00000e  2d12              CMP      r5,#0x12
000010  d011              BEQ      |L21.54|
000012  dc04              BGT      |L21.30|
000014  2d10              CMP      r5,#0x10
000016  d01f              BEQ      |L21.88|
000018  2d11              CMP      r5,#0x11
00001a  d138              BNE      |L21.142|
00001c  e032              B        |L21.132|
                  |L21.30|
00001e  2d13              CMP      r5,#0x13
000020  d02b              BEQ      |L21.122|
000022  2d20              CMP      r5,#0x20
000024  d133              BNE      |L21.142|
;;;741      case GUI_KEY_SPACE:
;;;742        _ToggleMultiSel(hObj, pObj, pObj->Sel);
000026  f9b42082          LDRSH    r2,[r4,#0x82]
00002a  4621              MOV      r1,r4
00002c  4630              MOV      r0,r6
00002e  f7fffffe          BL       _ToggleMultiSel
;;;743        return 1;               /* Key has been consumed */
000032  2001              MOVS     r0,#1
                  |L21.52|
;;;744      case GUI_KEY_RIGHT:
;;;745        if (WM_SetScrollValue(&pObj->ScrollStateH, pObj->ScrollStateH.v + pObj->Props.ScrollStepH)) {
;;;746          LISTBOX_UpdateScrollers(hObj);
;;;747          LISTBOX__InvalidateInsideArea(hObj);
;;;748        }
;;;749        return 1;               /* Key has been consumed */
;;;750      case GUI_KEY_LEFT:
;;;751        if (WM_SetScrollValue(&pObj->ScrollStateH, pObj->ScrollStateH.v - pObj->Props.ScrollStepH)) {
;;;752          LISTBOX_UpdateScrollers(hObj);
;;;753          LISTBOX__InvalidateInsideArea(hObj);
;;;754        }
;;;755        return 1;               /* Key has been consumed */
;;;756      case GUI_KEY_DOWN:
;;;757        LISTBOX_IncSel(hObj);
;;;758        return 1;               /* Key has been consumed */
;;;759      case GUI_KEY_UP:
;;;760        LISTBOX_DecSel(hObj);
;;;761        return 1;               /* Key has been consumed */
;;;762      default:
;;;763        if(_IsAlphaNum(Key)) {
;;;764          _SelectByKey(hObj, Key);
;;;765          return 1;               /* Key has been consumed */
;;;766        }
;;;767      }
;;;768      return 0;
;;;769    }
000034  bd70              POP      {r4-r6,pc}
                  |L21.54|
000036  204c              MOVS     r0,#0x4c              ;745
000038  5b00              LDRH     r0,[r0,r4]            ;745
00003a  6c22              LDR      r2,[r4,#0x40]         ;745
00003c  1811              ADDS     r1,r2,r0              ;745
00003e  f104003c          ADD      r0,r4,#0x3c           ;745
000042  f7fffffe          BL       WM_SetScrollValue
000046  b128              CBZ      r0,|L21.84|
000048  4630              MOV      r0,r6                 ;746
00004a  f7fffffe          BL       LISTBOX_UpdateScrollers
00004e  4630              MOV      r0,r6                 ;747
000050  f7fffffe          BL       LISTBOX__InvalidateInsideArea
                  |L21.84|
000054  2001              MOVS     r0,#1                 ;749
000056  e7ed              B        |L21.52|
                  |L21.88|
000058  204c              MOVS     r0,#0x4c              ;751
00005a  5b00              LDRH     r0,[r0,r4]            ;751
00005c  6c22              LDR      r2,[r4,#0x40]         ;751
00005e  1a11              SUBS     r1,r2,r0              ;751
000060  f104003c          ADD      r0,r4,#0x3c           ;751
000064  f7fffffe          BL       WM_SetScrollValue
000068  b128              CBZ      r0,|L21.118|
00006a  4630              MOV      r0,r6                 ;752
00006c  f7fffffe          BL       LISTBOX_UpdateScrollers
000070  4630              MOV      r0,r6                 ;753
000072  f7fffffe          BL       LISTBOX__InvalidateInsideArea
                  |L21.118|
000076  2001              MOVS     r0,#1                 ;755
000078  e7dc              B        |L21.52|
                  |L21.122|
00007a  4630              MOV      r0,r6                 ;757
00007c  f7fffffe          BL       LISTBOX_IncSel
000080  2001              MOVS     r0,#1                 ;758
000082  e7d7              B        |L21.52|
                  |L21.132|
000084  4630              MOV      r0,r6                 ;760
000086  f7fffffe          BL       LISTBOX_DecSel
00008a  2001              MOVS     r0,#1                 ;761
00008c  e7d2              B        |L21.52|
                  |L21.142|
00008e  4628              MOV      r0,r5                 ;763
000090  f7fffffe          BL       _IsAlphaNum
000094  b128              CBZ      r0,|L21.162|
000096  4629              MOV      r1,r5                 ;764
000098  4630              MOV      r0,r6                 ;764
00009a  f7fffffe          BL       _SelectByKey
00009e  2001              MOVS     r0,#1                 ;765
0000a0  e7c8              B        |L21.52|
                  |L21.162|
0000a2  bf00              NOP                            ;740
0000a4  bf00              NOP                            ;740
0000a6  2000              MOVS     r0,#0                 ;768
0000a8  e7c4              B        |L21.52|
;;;770    
                          ENDP


                          AREA ||i._CalcScrollParas||, CODE, READONLY, ALIGN=1

                  _CalcScrollParas PROC
;;;455    */
;;;456    static int _CalcScrollParas(LISTBOX_Handle hObj) {
000000  b57c              PUSH     {r2-r6,lr}
000002  4605              MOV      r5,r0
;;;457      GUI_RECT Rect;
;;;458      LISTBOX_Obj* pObj = LISTBOX_H2P(hObj);
000004  4628              MOV      r0,r5
000006  f7fffffe          BL       GUI_ALLOC_h2p
00000a  4604              MOV      r4,r0
;;;459      /* Calc vertical scroll parameters */
;;;460      pObj->ScrollStateV.NumItems = LISTBOX__GetNumItems(pObj);
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       LISTBOX__GetNumItems
000012  6320              STR      r0,[r4,#0x30]
;;;461      pObj->ScrollStateV.PageSize = _GetNumVisItems(pObj, hObj);
000014  4629              MOV      r1,r5
000016  4620              MOV      r0,r4
000018  f7fffffe          BL       _GetNumVisItems
00001c  63a0              STR      r0,[r4,#0x38]
;;;462      /* Calc horizontal scroll parameters */
;;;463      WM_GetInsideRectExScrollbar(hObj, &Rect);
00001e  4669              MOV      r1,sp
000020  4628              MOV      r0,r5
000022  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;464      pObj->ScrollStateH.NumItems = _GetContentsSizeX(hObj);
000026  4628              MOV      r0,r5
000028  f7fffffe          BL       _GetContentsSizeX
00002c  63e0              STR      r0,[r4,#0x3c]
;;;465      pObj->ScrollStateH.PageSize = Rect.x1 - Rect.x0 + 1;
00002e  f9bd0004          LDRSH    r0,[sp,#4]
000032  f9bd1000          LDRSH    r1,[sp,#0]
000036  1a40              SUBS     r0,r0,r1
000038  1c40              ADDS     r0,r0,#1
00003a  6460              STR      r0,[r4,#0x44]
;;;466      return _UpdateScrollPos(hObj, pObj);
00003c  4621              MOV      r1,r4
00003e  4628              MOV      r0,r5
000040  f7fffffe          BL       _UpdateScrollPos
;;;467    }
000044  bd7c              POP      {r2-r6,pc}
;;;468    
                          ENDP


                          AREA ||i._CallOwnerDraw||, CODE, READONLY, ALIGN=1

                  _CallOwnerDraw PROC
;;;127    */
;;;128    static int _CallOwnerDraw(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, int Cmd, int ItemIndex) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  b086              SUB      sp,sp,#0x18
000006  4606              MOV      r6,r0
000008  460c              MOV      r4,r1
00000a  4617              MOV      r7,r2
00000c  4698              MOV      r8,r3
;;;129      WIDGET_ITEM_DRAW_INFO ItemInfo;
;;;130      int r;
;;;131      ItemInfo.Cmd       = Cmd;
00000e  9702              STR      r7,[sp,#8]
;;;132      ItemInfo.hWin      = hObj;
000010  f8ad6004          STRH     r6,[sp,#4]
;;;133      ItemInfo.ItemIndex = ItemIndex;
000014  f8cd800c          STR      r8,[sp,#0xc]
;;;134      if (pObj->pfDrawItem) {
000018  6ae0              LDR      r0,[r4,#0x2c]
00001a  b120              CBZ      r0,|L23.38|
;;;135        r = pObj->pfDrawItem(&ItemInfo);
00001c  a801              ADD      r0,sp,#4
00001e  6ae1              LDR      r1,[r4,#0x2c]
000020  4788              BLX      r1
000022  4605              MOV      r5,r0
000024  e003              B        |L23.46|
                  |L23.38|
;;;136      } else {
;;;137        r = LISTBOX_OwnerDraw(&ItemInfo);
000026  a801              ADD      r0,sp,#4
000028  f7fffffe          BL       LISTBOX_OwnerDraw
00002c  4605              MOV      r5,r0
                  |L23.46|
;;;138      }
;;;139      return r;
00002e  4628              MOV      r0,r5
;;;140    }
000030  b006              ADD      sp,sp,#0x18
000032  e8bd81f0          POP      {r4-r8,pc}
;;;141    
                          ENDP


                          AREA ||i._FreeAttached||, CODE, READONLY, ALIGN=1

                  _FreeAttached PROC
;;;551    */
;;;552    static void _FreeAttached(LISTBOX_Obj* pObj) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;553      GUI_ARRAY_Delete(&pObj->ItemArray);
000004  f1040028          ADD      r0,r4,#0x28
000008  f7fffffe          BL       GUI_ARRAY_Delete
;;;554    }
00000c  bd10              POP      {r4,pc}
;;;555    
                          ENDP


                          AREA ||i._GetContentsSizeX||, CODE, READONLY, ALIGN=1

                  _GetContentsSizeX PROC
;;;201    */
;;;202    static int _GetContentsSizeX(LISTBOX_Handle hObj) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4607              MOV      r7,r0
;;;203      LISTBOX_Obj* pObj;
;;;204      int i, NumItems, SizeX;
;;;205      int Result = 0;
000006  2600              MOVS     r6,#0
;;;206      pObj = LISTBOX_H2P(hObj);
000008  4638              MOV      r0,r7
00000a  f7fffffe          BL       GUI_ALLOC_h2p
00000e  4681              MOV      r9,r0
;;;207      NumItems = LISTBOX__GetNumItems(pObj);
000010  4648              MOV      r0,r9
000012  f7fffffe          BL       LISTBOX__GetNumItems
000016  4680              MOV      r8,r0
;;;208      for (i = 0; i < NumItems; i++) {
000018  2500              MOVS     r5,#0
00001a  e009              B        |L25.48|
                  |L25.28|
;;;209        SizeX = _GetItemSizeX(hObj, pObj, i);
00001c  462a              MOV      r2,r5
00001e  4649              MOV      r1,r9
000020  4638              MOV      r0,r7
000022  f7fffffe          BL       _GetItemSizeX
000026  4604              MOV      r4,r0
;;;210        if (Result < SizeX) {
000028  42a6              CMP      r6,r4
00002a  da00              BGE      |L25.46|
;;;211          Result = SizeX;
00002c  4626              MOV      r6,r4
                  |L25.46|
00002e  1c6d              ADDS     r5,r5,#1              ;208
                  |L25.48|
000030  4545              CMP      r5,r8                 ;208
000032  dbf3              BLT      |L25.28|
;;;212        }
;;;213      }
;;;214      return Result;
000034  4630              MOV      r0,r6
;;;215    }
000036  e8bd87f0          POP      {r4-r10,pc}
;;;216    
                          ENDP


                          AREA ||i._GetItemFromPos||, CODE, READONLY, ALIGN=1

                  _GetItemFromPos PROC
;;;633    */
;;;634    static int _GetItemFromPos(LISTBOX_Handle hObj, LISTBOX_Obj* pObj, int x, int y) {
000000  e92d5ffc          PUSH     {r2-r12,lr}
000004  4681              MOV      r9,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
00000a  461c              MOV      r4,r3
;;;635      int Sel = -1;
00000c  f04f3aff          MOV      r10,#0xffffffff
;;;636      GUI_RECT Rect;
;;;637      WM_GetInsideRectExScrollbar(hObj, &Rect);
000010  4669              MOV      r1,sp
000012  4648              MOV      r0,r9
000014  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;638      if ((x >= Rect.x0) && (y >= Rect.y0)) {
000018  f9bd0000          LDRSH    r0,[sp,#0]
00001c  42b8              CMP      r0,r7
00001e  dc20              BGT      |L26.98|
000020  f9bd0002          LDRSH    r0,[sp,#2]
000024  42a0              CMP      r0,r4
000026  dc1c              BGT      |L26.98|
;;;639        if ((x <= Rect.x1) && (y <= Rect.y1)) {
000028  f9bd0004          LDRSH    r0,[sp,#4]
00002c  42b8              CMP      r0,r7
00002e  db18              BLT      |L26.98|
000030  f9bd0006          LDRSH    r0,[sp,#6]
000034  42a0              CMP      r0,r4
000036  db14              BLT      |L26.98|
;;;640          int NumItems = LISTBOX__GetNumItems(pObj);
000038  4630              MOV      r0,r6
00003a  f7fffffe          BL       LISTBOX__GetNumItems
00003e  4683              MOV      r11,r0
;;;641          int i, y0 = Rect.y0;
000040  f9bd8002          LDRSH    r8,[sp,#2]
;;;642          for (i = pObj->ScrollStateV.v; i < NumItems; i++) {
000044  6b75              LDR      r5,[r6,#0x34]
000046  e009              B        |L26.92|
                  |L26.72|
;;;643            if (y >= y0) {
000048  4544              CMP      r4,r8
00004a  db00              BLT      |L26.78|
;;;644              Sel = i;
00004c  46aa              MOV      r10,r5
                  |L26.78|
;;;645            }
;;;646            y0 += _GetItemSizeY(hObj, pObj, i);
00004e  462a              MOV      r2,r5
000050  4631              MOV      r1,r6
000052  4648              MOV      r0,r9
000054  f7fffffe          BL       _GetItemSizeY
000058  4480              ADD      r8,r8,r0
00005a  1c6d              ADDS     r5,r5,#1              ;642
                  |L26.92|
00005c  455d              CMP      r5,r11                ;642
00005e  dbf3              BLT      |L26.72|
;;;647          }
;;;648        }
000060  bf00              NOP      
                  |L26.98|
;;;649      }
;;;650      return Sel;
000062  4650              MOV      r0,r10
;;;651    }
000064  e8bd9ffc          POP      {r2-r12,pc}
;;;652    
                          ENDP


                          AREA ||i._GetItemPosY||, CODE, READONLY, ALIGN=1

                  _GetItemPosY PROC
;;;220    */
;;;221    static int _GetItemPosY(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, unsigned Index) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4680              MOV      r8,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
;;;222      if (Index < LISTBOX__GetNumItems(pObj)) {
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       LISTBOX__GetNumItems
000010  42a8              CMP      r0,r5
000012  d912              BLS      |L27.58|
;;;223        if ((int)Index >= pObj->ScrollStateV.v) {
000014  6b60              LDR      r0,[r4,#0x34]
000016  42a8              CMP      r0,r5
000018  dc0e              BGT      |L27.56|
;;;224          unsigned i;
;;;225          int PosY = 0;
00001a  2700              MOVS     r7,#0
;;;226          for (i = pObj->ScrollStateV.v; i < Index; i++) {
00001c  6b66              LDR      r6,[r4,#0x34]
00001e  e006              B        |L27.46|
                  |L27.32|
;;;227            PosY += _GetItemSizeY(hObj, pObj, i);
000020  4632              MOV      r2,r6
000022  4621              MOV      r1,r4
000024  4640              MOV      r0,r8
000026  f7fffffe          BL       _GetItemSizeY
00002a  4407              ADD      r7,r7,r0
00002c  1c76              ADDS     r6,r6,#1              ;226
                  |L27.46|
00002e  42ae              CMP      r6,r5                 ;226
000030  d3f6              BCC      |L27.32|
;;;228          }
;;;229          return PosY;
000032  4638              MOV      r0,r7
                  |L27.52|
;;;230        }
;;;231      }
;;;232      return -1;
;;;233    }
000034  e8bd81f0          POP      {r4-r8,pc}
                  |L27.56|
000038  bf00              NOP                            ;230
                  |L27.58|
00003a  f04f30ff          MOV      r0,#0xffffffff        ;232
00003e  e7f9              B        |L27.52|
;;;234    
                          ENDP


                          AREA ||i._GetItemSizeX||, CODE, READONLY, ALIGN=1

                  _GetItemSizeX PROC
;;;155    */
;;;156    static int _GetItemSizeX(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, unsigned Index) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4680              MOV      r8,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
;;;157      LISTBOX_ITEM* pItem;
;;;158      int xSize = 0;
00000a  2700              MOVS     r7,#0
;;;159      pItem = (LISTBOX_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
00000c  4631              MOV      r1,r6
00000e  f1050028          ADD      r0,r5,#0x28
000012  f7fffffe          BL       GUI_ARRAY_GetpItem
000016  4604              MOV      r4,r0
;;;160      if (pItem) {
000018  b104              CBZ      r4,|L28.28|
;;;161        xSize = pItem->xSize;
00001a  8827              LDRH     r7,[r4,#0]
                  |L28.28|
;;;162      }
;;;163      if (xSize == 0) {
00001c  b977              CBNZ     r7,|L28.60|
;;;164        const GUI_FONT GUI_UNI_PTR* pOldFont;
;;;165        pOldFont = GUI_SetFont(pObj->Props.pFont);
00001e  6ca8              LDR      r0,[r5,#0x48]
000020  f7fffffe          BL       GUI_SetFont
000024  4681              MOV      r9,r0
;;;166        xSize    = _CallOwnerDraw(hObj, pObj, WIDGET_ITEM_GET_XSIZE, Index);
000026  4633              MOV      r3,r6
000028  2201              MOVS     r2,#1
00002a  4629              MOV      r1,r5
00002c  4640              MOV      r0,r8
00002e  f7fffffe          BL       _CallOwnerDraw
000032  4607              MOV      r7,r0
;;;167        GUI_SetFont(pOldFont);
000034  4648              MOV      r0,r9
000036  f7fffffe          BL       GUI_SetFont
;;;168      }
00003a  bf00              NOP      
                  |L28.60|
;;;169      if (pItem) {
00003c  b104              CBZ      r4,|L28.64|
;;;170        pItem->xSize = xSize;
00003e  8027              STRH     r7,[r4,#0]
                  |L28.64|
;;;171      }
;;;172      return xSize;
000040  4638              MOV      r0,r7
;;;173    }
000042  e8bd87f0          POP      {r4-r10,pc}
;;;174    
                          ENDP


                          AREA ||i._GetItemSizeY||, CODE, READONLY, ALIGN=1

                  _GetItemSizeY PROC
;;;178    */
;;;179    static int _GetItemSizeY(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, unsigned Index) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4680              MOV      r8,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
;;;180      LISTBOX_ITEM* pItem;
;;;181      int ySize = 0;
00000a  2700              MOVS     r7,#0
;;;182      pItem = (LISTBOX_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
00000c  4631              MOV      r1,r6
00000e  f1050028          ADD      r0,r5,#0x28
000012  f7fffffe          BL       GUI_ARRAY_GetpItem
000016  4604              MOV      r4,r0
;;;183      if (pItem) {
000018  b104              CBZ      r4,|L29.28|
;;;184        ySize = pItem->ySize;
00001a  8867              LDRH     r7,[r4,#2]
                  |L29.28|
;;;185      }
;;;186      if (ySize == 0) {
00001c  b977              CBNZ     r7,|L29.60|
;;;187        const GUI_FONT GUI_UNI_PTR* pOldFont;
;;;188        pOldFont = GUI_SetFont(pObj->Props.pFont);
00001e  6ca8              LDR      r0,[r5,#0x48]
000020  f7fffffe          BL       GUI_SetFont
000024  4681              MOV      r9,r0
;;;189        ySize    = _CallOwnerDraw(hObj, pObj, WIDGET_ITEM_GET_YSIZE, Index);
000026  4633              MOV      r3,r6
000028  2202              MOVS     r2,#2
00002a  4629              MOV      r1,r5
00002c  4640              MOV      r0,r8
00002e  f7fffffe          BL       _CallOwnerDraw
000032  4607              MOV      r7,r0
;;;190        GUI_SetFont(pOldFont);
000034  4648              MOV      r0,r9
000036  f7fffffe          BL       GUI_SetFont
;;;191      }
00003a  bf00              NOP      
                  |L29.60|
;;;192      if (pItem) {
00003c  b104              CBZ      r4,|L29.64|
;;;193        pItem->ySize = ySize;
00003e  8067              STRH     r7,[r4,#2]
                  |L29.64|
;;;194      }
;;;195      return ySize;
000040  4638              MOV      r0,r7
;;;196    }
000042  e8bd87f0          POP      {r4-r10,pc}
;;;197    
                          ENDP


                          AREA ||i._GetNumVisItems||, CODE, READONLY, ALIGN=1

                  _GetNumVisItems PROC
;;;261    */
;;;262    static unsigned _GetNumVisItems(const LISTBOX_Obj* pObj, LISTBOX_Handle hObj) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
;;;263      int NumItems, r = 1;
000008  f04f0801          MOV      r8,#1
;;;264      NumItems = LISTBOX__GetNumItems(pObj);
00000c  4630              MOV      r0,r6
00000e  f7fffffe          BL       LISTBOX__GetNumItems
000012  4605              MOV      r5,r0
;;;265      if (NumItems > 1) {
000014  2d01              CMP      r5,#1
000016  dd1e              BLE      |L30.86|
;;;266        int i, ySize, DistY = 0;
000018  f04f0900          MOV      r9,#0
;;;267        ySize = _GetYSize(hObj);
00001c  4638              MOV      r0,r7
00001e  f7fffffe          BL       _GetYSize
000022  4682              MOV      r10,r0
;;;268        for (i = NumItems - 1; i >= 0; i--) {
000024  1e6c              SUBS     r4,r5,#1
000026  e009              B        |L30.60|
                  |L30.40|
;;;269          DistY += _GetItemSizeY(hObj, pObj, i);
000028  4622              MOV      r2,r4
00002a  4631              MOV      r1,r6
00002c  4638              MOV      r0,r7
00002e  f7fffffe          BL       _GetItemSizeY
000032  4481              ADD      r9,r9,r0
;;;270          if (DistY > ySize) {
000034  45d1              CMP      r9,r10
000036  dd00              BLE      |L30.58|
;;;271            break;
000038  e002              B        |L30.64|
                  |L30.58|
00003a  1e64              SUBS     r4,r4,#1              ;268
                  |L30.60|
00003c  2c00              CMP      r4,#0                 ;268
00003e  daf3              BGE      |L30.40|
                  |L30.64|
000040  bf00              NOP      
;;;272          }
;;;273        }
;;;274        r = NumItems - i - 1;
000042  1b28              SUBS     r0,r5,r4
000044  f1a00801          SUB      r8,r0,#1
;;;275        if (r < 1) {
000048  f1b80f01          CMP      r8,#1
00004c  da02              BGE      |L30.84|
;;;276          return 1;
00004e  2001              MOVS     r0,#1
                  |L30.80|
;;;277        }
;;;278      }
;;;279      return r;
;;;280    }
000050  e8bd87f0          POP      {r4-r10,pc}
                  |L30.84|
000054  bf00              NOP                            ;278
                  |L30.86|
000056  4640              MOV      r0,r8                 ;279
000058  e7fa              B        |L30.80|
;;;281    
                          ENDP


                          AREA ||i._GetYSize||, CODE, READONLY, ALIGN=1

                  _GetYSize PROC
;;;145    */
;;;146    static int _GetYSize(LISTBOX_Handle hObj) {
000000  b51c              PUSH     {r2-r4,lr}
000002  4604              MOV      r4,r0
;;;147      GUI_RECT Rect;
;;;148      WM_GetInsideRectExScrollbar(hObj, &Rect);
000004  4669              MOV      r1,sp
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;149      return (Rect.y1 - Rect.y0 + 1);
00000c  f9bd0006          LDRSH    r0,[sp,#6]
000010  f9bd1002          LDRSH    r1,[sp,#2]
000014  1a40              SUBS     r0,r0,r1
000016  1c40              ADDS     r0,r0,#1
;;;150    }
000018  bd1c              POP      {r2-r4,pc}
;;;151    
                          ENDP


                          AREA ||i._IsAlphaNum||, CODE, READONLY, ALIGN=1

                  _IsAlphaNum PROC
;;;518    */
;;;519    static int _IsAlphaNum(int Key) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;520      Key = _Tolower(Key);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       _Tolower
00000a  4604              MOV      r4,r0
;;;521      if (Key >= 'a' && Key <= 'z') {
00000c  2c61              CMP      r4,#0x61
00000e  db03              BLT      |L32.24|
000010  2c7a              CMP      r4,#0x7a
000012  dc01              BGT      |L32.24|
;;;522        return 1;
000014  2001              MOVS     r0,#1
                  |L32.22|
;;;523      }
;;;524      if (Key >= '0' && Key <= '9') {
;;;525        return 1;
;;;526      }
;;;527      return 0;
;;;528    }
000016  bd10              POP      {r4,pc}
                  |L32.24|
000018  2c30              CMP      r4,#0x30              ;524
00001a  db03              BLT      |L32.36|
00001c  2c39              CMP      r4,#0x39              ;524
00001e  dc01              BGT      |L32.36|
000020  2001              MOVS     r0,#1                 ;525
000022  e7f8              B        |L32.22|
                  |L32.36|
000024  2000              MOVS     r0,#0                 ;527
000026  e7f6              B        |L32.22|
;;;529    
                          ENDP


                          AREA ||i._IsPartiallyVis||, CODE, READONLY, ALIGN=1

                  _IsPartiallyVis PROC
;;;238    */
;;;239    static int _IsPartiallyVis(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
;;;240      int Index;
;;;241      Index = pObj->Sel;
000008  f9b45082          LDRSH    r5,[r4,#0x82]
;;;242      if (Index < (int)LISTBOX__GetNumItems(pObj)) {
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       LISTBOX__GetNumItems
000012  42a8              CMP      r0,r5
000014  dd17              BLE      |L33.70|
;;;243        if (Index >= pObj->ScrollStateV.v) {
000016  6b60              LDR      r0,[r4,#0x34]
000018  42a8              CMP      r0,r5
00001a  dc14              BGT      |L33.70|
;;;244          int y;
;;;245          y  = _GetItemPosY (hObj, pObj, Index);
00001c  462a              MOV      r2,r5
00001e  4621              MOV      r1,r4
000020  4638              MOV      r0,r7
000022  f7fffffe          BL       _GetItemPosY
000026  4606              MOV      r6,r0
;;;246          y += _GetItemSizeY(hObj, pObj, Index);
000028  462a              MOV      r2,r5
00002a  4621              MOV      r1,r4
00002c  4638              MOV      r0,r7
00002e  f7fffffe          BL       _GetItemSizeY
000032  4406              ADD      r6,r6,r0
;;;247          if (y > _GetYSize(hObj)) {
000034  4638              MOV      r0,r7
000036  f7fffffe          BL       _GetYSize
00003a  42b0              CMP      r0,r6
00003c  da02              BGE      |L33.68|
;;;248            return 1;
00003e  2001              MOVS     r0,#1
                  |L33.64|
;;;249          }
;;;250        }
;;;251      }
;;;252      return 0;
;;;253    }
000040  e8bd81f0          POP      {r4-r8,pc}
                  |L33.68|
000044  bf00              NOP                            ;250
                  |L33.70|
000046  2000              MOVS     r0,#0                 ;252
000048  e7fa              B        |L33.64|
;;;254    
                          ENDP


                          AREA ||i._ManageAutoScroll||, CODE, READONLY, ALIGN=1

                  _ManageAutoScroll PROC
;;;472    */
;;;473    static void _ManageAutoScroll(LISTBOX_Handle hObj) {
000000  e92d41fc          PUSH     {r2-r8,lr}
000004  4605              MOV      r5,r0
;;;474      char IsRequired;
;;;475      LISTBOX_Obj* pObj = LISTBOX_H2P(hObj);
000006  4628              MOV      r0,r5
000008  f7fffffe          BL       GUI_ALLOC_h2p
00000c  4604              MOV      r4,r0
;;;476      if (pObj->Flags & LISTBOX_SF_AUTOSCROLLBAR_V) {
00000e  f8940084          LDRB     r0,[r4,#0x84]
000012  f0100f02          TST      r0,#2
000016  d011              BEQ      |L34.60|
;;;477        IsRequired = (_GetNumVisItems(pObj, hObj) < LISTBOX__GetNumItems(pObj));
000018  4629              MOV      r1,r5
00001a  4620              MOV      r0,r4
00001c  f7fffffe          BL       _GetNumVisItems
000020  4607              MOV      r7,r0
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       LISTBOX__GetNumItems
000028  4287              CMP      r7,r0
00002a  d201              BCS      |L34.48|
00002c  2001              MOVS     r0,#1
00002e  e000              B        |L34.50|
                  |L34.48|
000030  2000              MOVS     r0,#0
                  |L34.50|
000032  4606              MOV      r6,r0
;;;478        WM_SetScrollbarV(hObj, IsRequired);
000034  4631              MOV      r1,r6
000036  4628              MOV      r0,r5
000038  f7fffffe          BL       WM_SetScrollbarV
                  |L34.60|
;;;479      }
;;;480      if (pObj->Flags & LISTBOX_SF_AUTOSCROLLBAR_H) {
00003c  f8940084          LDRB     r0,[r4,#0x84]
000040  f0100f01          TST      r0,#1
000044  d018              BEQ      |L34.120|
;;;481        GUI_RECT Rect;
;;;482        int xSize, xSizeContents;
;;;483        xSizeContents = _GetContentsSizeX(hObj);
000046  4628              MOV      r0,r5
000048  f7fffffe          BL       _GetContentsSizeX
00004c  4680              MOV      r8,r0
;;;484        WM_GetInsideRectExScrollbar(hObj, &Rect);
00004e  4669              MOV      r1,sp
000050  4628              MOV      r0,r5
000052  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;485        xSize = Rect.x1 - Rect.x0 + 1;
000056  f9bd0004          LDRSH    r0,[sp,#4]
00005a  f9bd1000          LDRSH    r1,[sp,#0]
00005e  1a40              SUBS     r0,r0,r1
000060  1c47              ADDS     r7,r0,#1
;;;486        IsRequired = (xSizeContents > xSize);
000062  45b8              CMP      r8,r7
000064  dd01              BLE      |L34.106|
000066  2001              MOVS     r0,#1
000068  e000              B        |L34.108|
                  |L34.106|
00006a  2000              MOVS     r0,#0
                  |L34.108|
00006c  4606              MOV      r6,r0
;;;487        WM_SetScrollbarH(hObj, IsRequired);
00006e  4631              MOV      r1,r6
000070  4628              MOV      r0,r5
000072  f7fffffe          BL       WM_SetScrollbarH
;;;488      }
000076  bf00              NOP      
                  |L34.120|
;;;489      if (pObj->ScrollbarWidth) {
000078  f8940085          LDRB     r0,[r4,#0x85]
00007c  b118              CBZ      r0,|L34.134|
;;;490        LISTBOX__SetScrollbarWidth(hObj, pObj);
00007e  4621              MOV      r1,r4
000080  4628              MOV      r0,r5
000082  f7fffffe          BL       LISTBOX__SetScrollbarWidth
                  |L34.134|
;;;491      }
;;;492      LISTBOX__SetScrollbarColor(hObj, pObj);
000086  4621              MOV      r1,r4
000088  4628              MOV      r0,r5
00008a  f7fffffe          BL       LISTBOX__SetScrollbarColor
;;;493    }
00008e  e8bd81fc          POP      {r2-r8,pc}
;;;494    
                          ENDP


                          AREA ||i._MoveSel||, CODE, READONLY, ALIGN=1

                  _MoveSel PROC
;;;695    */
;;;696    static void _MoveSel(LISTBOX_Handle hObj, int Dir) {
000000  e92d5ff0          PUSH     {r4-r12,lr}
000004  4681              MOV      r9,r0
000006  460e              MOV      r6,r1
;;;697      int Index, NewSel = -1, NumItems;
000008  f04f37ff          MOV      r7,#0xffffffff
;;;698      LISTBOX_Obj * pObj;
;;;699      pObj = LISTBOX_H2P(hObj);
00000c  4648              MOV      r0,r9
00000e  f7fffffe          BL       GUI_ALLOC_h2p
000012  4604              MOV      r4,r0
;;;700      Index = LISTBOX_GetSel(hObj);
000014  4648              MOV      r0,r9
000016  f7fffffe          BL       LISTBOX_GetSel
00001a  4605              MOV      r5,r0
;;;701      NumItems = LISTBOX__GetNumItems(pObj);
00001c  4620              MOV      r0,r4
00001e  f7fffffe          BL       LISTBOX__GetNumItems
000022  4682              MOV      r10,r0
;;;702      do {
000024  bf00              NOP      
                  |L35.38|
;;;703        WM_HMEM hItem;
;;;704        Index += Dir;
000026  4435              ADD      r5,r5,r6
;;;705        if ((Index < 0) || (Index >= NumItems)) {
000028  2d00              CMP      r5,#0
00002a  db01              BLT      |L35.48|
00002c  4555              CMP      r5,r10
00002e  db00              BLT      |L35.50|
                  |L35.48|
;;;706          break;
000030  e015              B        |L35.94|
                  |L35.50|
;;;707        }
;;;708        hItem = GUI_ARRAY_GethItem(&pObj->ItemArray, Index);
000032  4629              MOV      r1,r5
000034  f1040028          ADD      r0,r4,#0x28
000038  f7fffffe          BL       GUI_ARRAY_GethItem
00003c  4680              MOV      r8,r0
;;;709        if (hItem) {
00003e  f1b80f00          CMP      r8,#0
000042  d00a              BEQ      |L35.90|
;;;710          LISTBOX_ITEM * pItem = (LISTBOX_ITEM *)GUI_ALLOC_h2p(hItem);
000044  4640              MOV      r0,r8
000046  f7fffffe          BL       GUI_ALLOC_h2p
00004a  4683              MOV      r11,r0
;;;711          if (!(pItem->Status & LISTBOX_ITEM_DISABLED)) {
00004c  f89b0004          LDRB     r0,[r11,#4]
000050  f0100f02          TST      r0,#2
000054  d100              BNE      |L35.88|
;;;712            NewSel = Index;
000056  462f              MOV      r7,r5
                  |L35.88|
;;;713          }
;;;714        }
000058  bf00              NOP      
                  |L35.90|
;;;715      } while(NewSel < 0);
00005a  2f00              CMP      r7,#0
00005c  dbe3              BLT      |L35.38|
                  |L35.94|
00005e  bf00              NOP                            ;706
;;;716      if (NewSel >= 0) {
000060  2f00              CMP      r7,#0
000062  db04              BLT      |L35.110|
;;;717        LISTBOX_SetSel(hObj, NewSel);
000064  4639              MOV      r1,r7
000066  4648              MOV      r0,r9
000068  f7fffffe          BL       LISTBOX_SetSel
00006c  e012              B        |L35.148|
                  |L35.110|
;;;718      } else {
;;;719        int PrevScrollStateV;
;;;720        PrevScrollStateV = pObj->ScrollStateV.v;
00006e  f8d48034          LDR      r8,[r4,#0x34]
;;;721        pObj->ScrollStateV.v += Dir;
000072  6b60              LDR      r0,[r4,#0x34]
000074  1981              ADDS     r1,r0,r6
000076  6361              STR      r1,[r4,#0x34]
;;;722        WM_CheckScrollBounds(&pObj->ScrollStateV);
000078  f1040030          ADD      r0,r4,#0x30
00007c  f7fffffe          BL       WM_CheckScrollBounds
;;;723        if (PrevScrollStateV != pObj->ScrollStateV.v) {
000080  6b60              LDR      r0,[r4,#0x34]
000082  4540              CMP      r0,r8
000084  d002              BEQ      |L35.140|
;;;724          LISTBOX__InvalidateInsideArea(hObj);
000086  4648              MOV      r0,r9
000088  f7fffffe          BL       LISTBOX__InvalidateInsideArea
                  |L35.140|
;;;725        }
;;;726        LISTBOX_UpdateScrollers(hObj);
00008c  4648              MOV      r0,r9
00008e  f7fffffe          BL       LISTBOX_UpdateScrollers
;;;727      }
000092  bf00              NOP      
                  |L35.148|
;;;728    }
000094  e8bd9ff0          POP      {r4-r12,pc}
;;;729    
                          ENDP


                          AREA ||i._NotifyOwner||, CODE, READONLY, ALIGN=1

                  _NotifyOwner PROC
;;;289    */
;;;290    static void _NotifyOwner(WM_HWIN hObj, int Notification) {
000000  b5fe              PUSH     {r1-r7,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;291      WM_MESSAGE Msg = {0};
000006  2000              MOVS     r0,#0
000008  9000              STR      r0,[sp,#0]
00000a  9001              STR      r0,[sp,#4]
00000c  9002              STR      r0,[sp,#8]
;;;292      WM_HWIN hOwner;
;;;293      LISTBOX_Obj* pObj    = LISTBOX_H2P(hObj);
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       GUI_ALLOC_h2p
000014  4606              MOV      r6,r0
;;;294      hOwner = pObj->hOwner ? pObj->hOwner : WM_GetParent(hObj);
000016  f8b60080          LDRH     r0,[r6,#0x80]
00001a  b110              CBZ      r0,|L36.34|
00001c  f9b60080          LDRSH    r0,[r6,#0x80]
000020  e002              B        |L36.40|
                  |L36.34|
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       WM_GetParent
                  |L36.40|
000028  4607              MOV      r7,r0
;;;295      Msg.MsgId  = WM_NOTIFY_PARENT;
00002a  2026              MOVS     r0,#0x26
00002c  9000              STR      r0,[sp,#0]
;;;296      Msg.Data.v = Notification;
00002e  9502              STR      r5,[sp,#8]
;;;297      Msg.hWinSrc= hObj;
000030  f8ad4006          STRH     r4,[sp,#6]
;;;298      WM__SendMessage(hOwner, &Msg);
000034  4669              MOV      r1,sp
000036  4638              MOV      r0,r7
000038  f7fffffe          BL       WM__SendMessage
;;;299    }
00003c  bdfe              POP      {r1-r7,pc}
;;;300    
                          ENDP


                          AREA ||i._OnPaint||, CODE, READONLY, ALIGN=1

                  _OnPaint PROC
;;;559    */
;;;560    static void _OnPaint(LISTBOX_Handle hObj, LISTBOX_Obj* pObj, WM_MESSAGE* pMsg) {
000000  e92d43f0          PUSH     {r4-r9,lr}
000004  b08b              SUB      sp,sp,#0x2c
000006  4607              MOV      r7,r0
000008  460c              MOV      r4,r1
00000a  4690              MOV      r8,r2
;;;561      WIDGET_ITEM_DRAW_INFO ItemInfo;
;;;562      GUI_RECT RectInside, RectItem, ClipRect;
;;;563      int ItemDistY, NumItems, i;
;;;564      NumItems = LISTBOX__GetNumItems(pObj);
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       LISTBOX__GetNumItems
000012  4681              MOV      r9,r0
;;;565      GUI_SetFont(pObj->Props.pFont);
000014  6ca0              LDR      r0,[r4,#0x48]
000016  f7fffffe          BL       GUI_SetFont
;;;566      /* Calculate clipping rectangle */
;;;567      ClipRect = *(const GUI_RECT*)pMsg->Data.p;
00001a  f8d80008          LDR      r0,[r8,#8]
00001e  6801              LDR      r1,[r0,#0]
000020  9100              STR      r1,[sp,#0]
000022  6840              LDR      r0,[r0,#4]
000024  9001              STR      r0,[sp,#4]
;;;568      GUI_MoveRect(&ClipRect, -pObj->Widget.Win.Rect.x0, -pObj->Widget.Win.Rect.y0);
000026  f9b40002          LDRSH    r0,[r4,#2]
00002a  4242              RSBS     r2,r0,#0
00002c  f9b40000          LDRSH    r0,[r4,#0]
000030  4241              RSBS     r1,r0,#0
000032  4668              MOV      r0,sp
000034  f7fffffe          BL       GUI_MoveRect
;;;569      WM_GetInsideRectExScrollbar(hObj, &RectInside);
000038  a904              ADD      r1,sp,#0x10
00003a  4638              MOV      r0,r7
00003c  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;570      GUI__IntersectRect(&ClipRect, &RectInside);
000040  a904              ADD      r1,sp,#0x10
000042  4668              MOV      r0,sp
000044  f7fffffe          BL       GUI__IntersectRect
;;;571      RectItem.x0 = ClipRect.x0;
000048  f8bd0000          LDRH     r0,[sp,#0]
00004c  f8ad0008          STRH     r0,[sp,#8]
;;;572      RectItem.x1 = ClipRect.x1;
000050  f8bd0004          LDRH     r0,[sp,#4]
000054  f8ad000c          STRH     r0,[sp,#0xc]
;;;573      /* Fill item info structure */
;;;574      ItemInfo.Cmd  = WIDGET_ITEM_DRAW;
000058  2000              MOVS     r0,#0
00005a  9007              STR      r0,[sp,#0x1c]
;;;575      ItemInfo.hWin = hObj;
00005c  f8ad7018          STRH     r7,[sp,#0x18]
;;;576      ItemInfo.x0   = RectInside.x0 - pObj->ScrollStateH.v;
000060  f9bd1010          LDRSH    r1,[sp,#0x10]
000064  6c20              LDR      r0,[r4,#0x40]
000066  1a08              SUBS     r0,r1,r0
000068  9009              STR      r0,[sp,#0x24]
;;;577      ItemInfo.y0   = RectInside.y0;
00006a  f9bd0012          LDRSH    r0,[sp,#0x12]
00006e  900a              STR      r0,[sp,#0x28]
;;;578      /* Do the drawing */
;;;579      for (i = pObj->ScrollStateV.v; i < NumItems; i++) {
000070  6b66              LDR      r6,[r4,#0x34]
000072  e02e              B        |L37.210|
                  |L37.116|
;;;580        RectItem.y0 = ItemInfo.y0;
000074  980a              LDR      r0,[sp,#0x28]
000076  b200              SXTH     r0,r0
000078  f8ad000a          STRH     r0,[sp,#0xa]
;;;581        /* Break when all other rows are outside the drawing area */
;;;582        if (RectItem.y0 > ClipRect.y1) {
00007c  f9bd000a          LDRSH    r0,[sp,#0xa]
000080  f9bd1006          LDRSH    r1,[sp,#6]
000084  4288              CMP      r0,r1
000086  dd00              BLE      |L37.138|
;;;583          break;
000088  e025              B        |L37.214|
                  |L37.138|
;;;584        }
;;;585        ItemDistY = _GetItemSizeY(hObj, pObj, i);
00008a  4632              MOV      r2,r6
00008c  4621              MOV      r1,r4
00008e  4638              MOV      r0,r7
000090  f7fffffe          BL       _GetItemSizeY
000094  4605              MOV      r5,r0
;;;586        RectItem.y1 = RectItem.y0 + ItemDistY - 1;
000096  f8bd100a          LDRH     r1,[sp,#0xa]
00009a  1948              ADDS     r0,r1,r5
00009c  1e40              SUBS     r0,r0,#1
00009e  b200              SXTH     r0,r0
0000a0  f8ad000e          STRH     r0,[sp,#0xe]
;;;587        /* Make sure that we draw only when row is in drawing area */
;;;588        if (RectItem.y1 >= ClipRect.y0) {
0000a4  f9bd000e          LDRSH    r0,[sp,#0xe]
0000a8  f9bd1002          LDRSH    r1,[sp,#2]
0000ac  4288              CMP      r0,r1
0000ae  db0c              BLT      |L37.202|
;;;589          /* Set user clip rect */
;;;590          WM_SetUserClipArea(&RectItem);
0000b0  a802              ADD      r0,sp,#8
0000b2  f7fffffe          BL       WM_SetUserClipRect
;;;591          /* Fill item info structure */
;;;592          ItemInfo.ItemIndex = i;
0000b6  9608              STR      r6,[sp,#0x20]
;;;593          /* Draw item */
;;;594          if (pObj->pfDrawItem) {
0000b8  6ae0              LDR      r0,[r4,#0x2c]
0000ba  b118              CBZ      r0,|L37.196|
;;;595            pObj->pfDrawItem(&ItemInfo);
0000bc  a806              ADD      r0,sp,#0x18
0000be  6ae1              LDR      r1,[r4,#0x2c]
0000c0  4788              BLX      r1
0000c2  e002              B        |L37.202|
                  |L37.196|
;;;596          } else {
;;;597            LISTBOX_OwnerDraw(&ItemInfo);
0000c4  a806              ADD      r0,sp,#0x18
0000c6  f7fffffe          BL       LISTBOX_OwnerDraw
                  |L37.202|
;;;598          }
;;;599        }
;;;600        ItemInfo.y0 += ItemDistY;
0000ca  980a              LDR      r0,[sp,#0x28]
0000cc  4428              ADD      r0,r0,r5
0000ce  900a              STR      r0,[sp,#0x28]
0000d0  1c76              ADDS     r6,r6,#1              ;579
                  |L37.210|
0000d2  454e              CMP      r6,r9                 ;579
0000d4  dbce              BLT      |L37.116|
                  |L37.214|
0000d6  bf00              NOP                            ;583
;;;601      }
;;;602      WM_SetUserClipArea(NULL);
0000d8  2000              MOVS     r0,#0
0000da  f7fffffe          BL       WM_SetUserClipRect
;;;603      /* Calculate & clear 'data free' area */
;;;604      RectItem.y0 = ItemInfo.y0;
0000de  980a              LDR      r0,[sp,#0x28]
0000e0  b200              SXTH     r0,r0
0000e2  f8ad000a          STRH     r0,[sp,#0xa]
;;;605      RectItem.y1 = RectInside.y1;
0000e6  f8bd0016          LDRH     r0,[sp,#0x16]
0000ea  f8ad000e          STRH     r0,[sp,#0xe]
;;;606      LCD_SetBkColor(pObj->Props.aBackColor[0]);
0000ee  6d20              LDR      r0,[r4,#0x50]
0000f0  f7fffffe          BL       LCD_SetBkColor
;;;607      GUI_ClearRectEx(&RectItem);
0000f4  a802              ADD      r0,sp,#8
0000f6  f7fffffe          BL       GUI_ClearRectEx
;;;608      /* Draw the 3D effect (if configured) */
;;;609      WIDGET__EFFECT_DrawDown(&pObj->Widget);
0000fa  4620              MOV      r0,r4
0000fc  f7fffffe          BL       WIDGET__EFFECT_DrawDown
;;;610    }
000100  b00b              ADD      sp,sp,#0x2c
000102  e8bd83f0          POP      {r4-r9,pc}
;;;611    
                          ENDP


                          AREA ||i._OnTouch||, CODE, READONLY, ALIGN=1

                  _OnTouch PROC
;;;656    */
;;;657    static void _OnTouch(LISTBOX_Handle hObj, WM_MESSAGE* pMsg) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;658      const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
000006  68a6              LDR      r6,[r4,#8]
;;;659      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
000008  68a0              LDR      r0,[r4,#8]
00000a  b130              CBZ      r0,|L38.26|
;;;660        if (pState->Pressed == 0) {
00000c  7a30              LDRB     r0,[r6,#8]
00000e  b940              CBNZ     r0,|L38.34|
;;;661          _NotifyOwner(hObj, WM_NOTIFICATION_RELEASED);
000010  2102              MOVS     r1,#2
000012  4628              MOV      r0,r5
000014  f7fffffe          BL       _NotifyOwner
000018  e003              B        |L38.34|
                  |L38.26|
;;;662        }
;;;663      } else {     /* Mouse moved out */
;;;664        _NotifyOwner(hObj, WM_NOTIFICATION_MOVED_OUT);
00001a  2103              MOVS     r1,#3
00001c  4628              MOV      r0,r5
00001e  f7fffffe          BL       _NotifyOwner
                  |L38.34|
;;;665      }
;;;666    }
000022  bd70              POP      {r4-r6,pc}
;;;667    
                          ENDP


                          AREA ||i._SelectByKey||, CODE, READONLY, ALIGN=1

                  _SelectByKey PROC
;;;533    */
;;;534    static void _SelectByKey(LISTBOX_Handle hObj, int Key) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
;;;535      unsigned i;
;;;536      LISTBOX_Obj* pObj;
;;;537      pObj = LISTBOX_H2P(hObj);
000008  4630              MOV      r0,r6
00000a  f7fffffe          BL       GUI_ALLOC_h2p
00000e  4680              MOV      r8,r0
;;;538      Key = _Tolower(Key);
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       _Tolower
000016  4604              MOV      r4,r0
;;;539      for (i = 0; i < LISTBOX__GetNumItems(pObj); i++) {
000018  2500              MOVS     r5,#0
00001a  e00f              B        |L39.60|
                  |L39.28|
;;;540        const char* s = LISTBOX__GetpString(pObj, i);
00001c  4629              MOV      r1,r5
00001e  4640              MOV      r0,r8
000020  f7fffffe          BL       LISTBOX__GetpString
000024  4607              MOV      r7,r0
;;;541        if (_Tolower(*s) == Key) {
000026  7838              LDRB     r0,[r7,#0]
000028  f7fffffe          BL       _Tolower
00002c  42a0              CMP      r0,r4
00002e  d104              BNE      |L39.58|
;;;542          LISTBOX_SetSel(hObj, i);
000030  4629              MOV      r1,r5
000032  4630              MOV      r0,r6
000034  f7fffffe          BL       LISTBOX_SetSel
;;;543          break;
000038  e005              B        |L39.70|
                  |L39.58|
00003a  1c6d              ADDS     r5,r5,#1              ;539
                  |L39.60|
00003c  4640              MOV      r0,r8                 ;539
00003e  f7fffffe          BL       LISTBOX__GetNumItems
000042  42a8              CMP      r0,r5                 ;539
000044  d8ea              BHI      |L39.28|
                  |L39.70|
000046  bf00              NOP      
;;;544        }
;;;545      }
;;;546    }
000048  e8bd81f0          POP      {r4-r8,pc}
;;;547    
                          ENDP


                          AREA ||i._SendToOwner||, CODE, READONLY, ALIGN=1

                  _SendToOwner PROC
;;;308    */
;;;309    static void _SendToOwner(WM_HWIN hObj, WM_MESSAGE * pMsg) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;310      WM_HWIN hOwner;
;;;311      LISTBOX_Obj * pObj = LISTBOX_H2P(hObj);
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       GUI_ALLOC_h2p
00000e  4606              MOV      r6,r0
;;;312      hOwner = pObj->hOwner ? pObj->hOwner : WM_GetParent(hObj);
000010  f8b60080          LDRH     r0,[r6,#0x80]
000014  b110              CBZ      r0,|L40.28|
000016  f9b60080          LDRSH    r0,[r6,#0x80]
00001a  e002              B        |L40.34|
                  |L40.28|
00001c  4620              MOV      r0,r4
00001e  f7fffffe          BL       WM_GetParent
                  |L40.34|
000022  4607              MOV      r7,r0
;;;313      pMsg->hWinSrc= hObj;
000024  80ec              STRH     r4,[r5,#6]
;;;314      WM__SendMessage(hOwner, pMsg);
000026  4629              MOV      r1,r5
000028  4638              MOV      r0,r7
00002a  f7fffffe          BL       WM__SendMessage
;;;315    }
00002e  e8bd81f0          POP      {r4-r8,pc}
;;;316    
                          ENDP


                          AREA ||i._ToggleMultiSel||, CODE, READONLY, ALIGN=1

                  _ToggleMultiSel PROC
;;;615    */
;;;616    static void _ToggleMultiSel(LISTBOX_Handle hObj, LISTBOX_Obj* pObj, int Sel) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4680              MOV      r8,r0
000006  460c              MOV      r4,r1
000008  4616              MOV      r6,r2
;;;617      if (pObj->Flags & LISTBOX_SF_MULTISEL) {
00000a  f8940084          LDRB     r0,[r4,#0x84]
00000e  f0100f04          TST      r0,#4
000012  d01d              BEQ      |L41.80|
;;;618        WM_HMEM hItem = GUI_ARRAY_GethItem(&pObj->ItemArray, Sel);
000014  4631              MOV      r1,r6
000016  f1040028          ADD      r0,r4,#0x28
00001a  f7fffffe          BL       GUI_ARRAY_GethItem
00001e  4607              MOV      r7,r0
;;;619        if (hItem) {
000020  b1af              CBZ      r7,|L41.78|
;;;620          LISTBOX_ITEM * pItem = (LISTBOX_ITEM *)GUI_ALLOC_h2p(hItem);
000022  4638              MOV      r0,r7
000024  f7fffffe          BL       GUI_ALLOC_h2p
000028  4605              MOV      r5,r0
;;;621          if (!(pItem->Status & LISTBOX_ITEM_DISABLED)) {
00002a  7928              LDRB     r0,[r5,#4]
00002c  f0100f02          TST      r0,#2
000030  d10c              BNE      |L41.76|
;;;622            pItem->Status ^= LISTBOX_ITEM_SELECTED;
000032  7928              LDRB     r0,[r5,#4]
000034  f0800001          EOR      r0,r0,#1
000038  7128              STRB     r0,[r5,#4]
;;;623            _NotifyOwner(hObj, WM_NOTIFICATION_SEL_CHANGED);
00003a  2104              MOVS     r1,#4
00003c  4640              MOV      r0,r8
00003e  f7fffffe          BL       _NotifyOwner
;;;624            LISTBOX__InvalidateItem(hObj, pObj, Sel);
000042  4632              MOV      r2,r6
000044  4621              MOV      r1,r4
000046  4640              MOV      r0,r8
000048  f7fffffe          BL       LISTBOX__InvalidateItem
                  |L41.76|
;;;625          }
;;;626        }
00004c  bf00              NOP      
                  |L41.78|
;;;627      }
00004e  bf00              NOP      
                  |L41.80|
;;;628    }
000050  e8bd81f0          POP      {r4-r8,pc}
;;;629    
                          ENDP


                          AREA ||i._Tolower||, CODE, READONLY, ALIGN=1

                  _Tolower PROC
;;;507    */
;;;508    static int _Tolower(int Key) {
000000  2841              CMP      r0,#0x41
;;;509      if ((Key >= 0x41) && (Key <= 0x5a)) {
000002  db02              BLT      |L42.10|
000004  285a              CMP      r0,#0x5a
000006  dc00              BGT      |L42.10|
;;;510        Key += 0x20;
000008  3020              ADDS     r0,r0,#0x20
                  |L42.10|
;;;511      }
;;;512      return Key;
;;;513    }
00000a  4770              BX       lr
;;;514    
                          ENDP


                          AREA ||i._UpdateScrollPos||, CODE, READONLY, ALIGN=1

                  _UpdateScrollPos PROC
;;;432    */
;;;433    static int _UpdateScrollPos(LISTBOX_Handle hObj, LISTBOX_Obj* pObj) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;434      int PrevScrollStateV;
;;;435      PrevScrollStateV = pObj->ScrollStateV.v;
000006  6b66              LDR      r6,[r4,#0x34]
;;;436      if (pObj->Sel >= 0) {
000008  f9b40082          LDRSH    r0,[r4,#0x82]
00000c  2800              CMP      r0,#0
00000e  db12              BLT      |L43.54|
;;;437        /* Check upper limit */
;;;438        if (_IsPartiallyVis(hObj, pObj)) {
000010  4621              MOV      r1,r4
000012  4628              MOV      r0,r5
000014  f7fffffe          BL       _IsPartiallyVis
000018  b128              CBZ      r0,|L43.38|
;;;439          pObj->ScrollStateV.v = pObj->Sel - (pObj->ScrollStateV.PageSize - 1);
00001a  f9b41082          LDRSH    r1,[r4,#0x82]
00001e  6ba0              LDR      r0,[r4,#0x38]
000020  1e40              SUBS     r0,r0,#1
000022  1a09              SUBS     r1,r1,r0
000024  6361              STR      r1,[r4,#0x34]
                  |L43.38|
;;;440        }
;;;441        /* Check lower limit */
;;;442        if (pObj->Sel < pObj->ScrollStateV.v) {
000026  f9b41082          LDRSH    r1,[r4,#0x82]
00002a  6b60              LDR      r0,[r4,#0x34]
00002c  4281              CMP      r1,r0
00002e  da02              BGE      |L43.54|
;;;443          pObj->ScrollStateV.v = pObj->Sel;
000030  f9b41082          LDRSH    r1,[r4,#0x82]
000034  6361              STR      r1,[r4,#0x34]
                  |L43.54|
;;;444        }
;;;445      }
;;;446      WM_CheckScrollBounds(&pObj->ScrollStateV);
000036  f1040030          ADD      r0,r4,#0x30
00003a  f7fffffe          BL       WM_CheckScrollBounds
;;;447      WM_CheckScrollBounds(&pObj->ScrollStateH);
00003e  f104003c          ADD      r0,r4,#0x3c
000042  f7fffffe          BL       WM_CheckScrollBounds
;;;448      WIDGET__SetScrollState(hObj, &pObj->ScrollStateV, &pObj->ScrollStateH);
000046  f104023c          ADD      r2,r4,#0x3c
00004a  f1040130          ADD      r1,r4,#0x30
00004e  4628              MOV      r0,r5
000050  f7fffffe          BL       WIDGET__SetScrollState
;;;449      return pObj->ScrollStateV.v - PrevScrollStateV;
000054  6b60              LDR      r0,[r4,#0x34]
000056  1b80              SUBS     r0,r0,r6
;;;450    }
000058  bd70              POP      {r4-r6,pc}
;;;451    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  LISTBOX_DefaultProps
                          DCD      GUI_Font13_1
000004  000a              DCW      0x000a
000006  0000              DCB      0x00,0x00
                          DCD      0x00ffffff
                          DCD      0x00808080
                          DCD      0x00ff0000
                          DCD      0x00c0c0c0
                          DCD      0x00000000
                          DCD      0x00ffffff
                          DCD      0x00ffffff
                          DCD      0x00808080
                          DCD      0x0fffffff
                          DCD      0x0fffffff
                          DCD      0x0fffffff
000034  0000              DCW      0x0000
000036  0000              DCB      0x00,0x00
