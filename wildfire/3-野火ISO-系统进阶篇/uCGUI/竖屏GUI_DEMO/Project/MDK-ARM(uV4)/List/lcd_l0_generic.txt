; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\lcd_l0_generic.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\lcd_l0_generic.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Core\LCD_L0_Generic.c]
                          THUMB

                          AREA ||i.LCD_L0_Color2Index||, CODE, READONLY, ALIGN=1

                  LCD_L0_Color2Index PROC
;;;217    */
;;;218    unsigned int LCD_L0_Color2Index(LCD_COLOR Color) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;219      unsigned int Index;
;;;220      Index = COLOR2INDEX(Color);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       LCD_Color2Index_M565
00000a  4605              MOV      r5,r0
;;;221      #if LCD_REVERSE
;;;222        Index ^= ((1<<LCD_BITSPERPIXEL)-1);
;;;223      #endif
;;;224      return Index;
00000c  4628              MOV      r0,r5
;;;225    }
00000e  bd70              POP      {r4-r6,pc}
;;;226    
                          ENDP


                          AREA ||i.LCD_L0_GetIndexMask||, CODE, READONLY, ALIGN=1

                  LCD_L0_GetIndexMask PROC
;;;241    */
;;;242    unsigned int LCD_L0_GetIndexMask(void) {
000000  b510              PUSH     {r4,lr}
;;;243      return GETINDEXMASK();
000002  f7fffffe          BL       LCD_GetIndexMask_M565
;;;244    }
000006  bd10              POP      {r4,pc}
;;;245    
                          ENDP


                          AREA ||i.LCD_L0_GetRect||, CODE, READONLY, ALIGN=1

                  LCD_L0_GetRect PROC
;;;249    */
;;;250    void LCD_L0_GetRect(LCD_RECT *pRect) {
000000  2100              MOVS     r1,#0
;;;251      pRect->x0 = 0;
000002  8001              STRH     r1,[r0,#0]
;;;252      pRect->y0 = 0;
000004  8041              STRH     r1,[r0,#2]
;;;253      pRect->x1 = LCD_VXSIZE - 1;
000006  21ef              MOVS     r1,#0xef
000008  8081              STRH     r1,[r0,#4]
;;;254      pRect->y1 = LCD_VYSIZE - 1;
00000a  f240113f          MOV      r1,#0x13f
00000e  80c1              STRH     r1,[r0,#6]
;;;255    }
000010  4770              BX       lr
;;;256    
                          ENDP


                          AREA ||i.LCD_L0_GetpfIndex2Color||, CODE, READONLY, ALIGN=2

                  LCD_L0_GetpfIndex2Color PROC
;;;208    */
;;;209    tLCDDEV_Index2Color * LCD_L0_GetpfIndex2Color(void) {
000000  4800              LDR      r0,|L4.4|
;;;210      tLCDDEV_Index2Color * Result = INDEX2COLOR_FUNC;
;;;211      return Result;
;;;212    }
000002  4770              BX       lr
;;;213    
                          ENDP

                  |L4.4|
                          DCD      LCD_Index2Color_M565

                          AREA ||i.LCD_L0_Index2Color||, CODE, READONLY, ALIGN=1

                  LCD_L0_Index2Color PROC
;;;230    */
;;;231    LCD_COLOR LCD_L0_Index2Color(int Index) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;232      #if LCD_REVERSE
;;;233        Index ^= ((1<<LCD_BITSPERPIXEL)-1);
;;;234      #endif
;;;235      return INDEX2COLOR(Index);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       LCD_Index2Color_M565
;;;236    }
00000a  bd10              POP      {r4,pc}
;;;237    
                          ENDP

