; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\gui_drawpolyline.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\gui_drawpolyline.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Core\GUI_DrawPolyline.c]
                          THUMB

                          AREA ||i.GUI_DrawPolyLine||, CODE, READONLY, ALIGN=2

                  GUI_DrawPolyLine PROC
;;;54     */
;;;55     void GUI_DrawPolyLine(const GUI_POINT* pPoints, int NumPoints, int x0, int y0) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
000008  4614              MOV      r4,r2
00000a  461d              MOV      r5,r3
;;;56       GUI_LOCK();
00000c  f7fffffe          BL       GUI_Lock
;;;57       #if (GUI_WINSUPPORT)
;;;58         WM_ADDORG(x0,y0);
000010  480c              LDR      r0,|L1.68|
000012  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
000014  4404              ADD      r4,r4,r0
000016  480b              LDR      r0,|L1.68|
000018  6c80              LDR      r0,[r0,#0x48]  ; GUI_Context
00001a  4405              ADD      r5,r5,r0
;;;59         WM_ITERATE_START(NULL); {
00001c  2000              MOVS     r0,#0
00001e  f7fffffe          BL       WM__InitIVRSearch
000022  b150              CBZ      r0,|L1.58|
000024  bf00              NOP      
                  |L1.38|
;;;60       #endif
;;;61       _DrawPolyLine (pPoints, NumPoints, x0, y0);
000026  462b              MOV      r3,r5
000028  4622              MOV      r2,r4
00002a  4639              MOV      r1,r7
00002c  4630              MOV      r0,r6
00002e  f7fffffe          BL       _DrawPolyLine
;;;62       #if (GUI_WINSUPPORT)
;;;63         } WM_ITERATE_END();
000032  f7fffffe          BL       WM__GetNextIVR
000036  2800              CMP      r0,#0
000038  d1f5              BNE      |L1.38|
                  |L1.58|
;;;64       #endif
;;;65       GUI_UNLOCK();
00003a  f7fffffe          BL       GUI_Unlock
;;;66     }
00003e  e8bd81f0          POP      {r4-r8,pc}
;;;67     
                          ENDP

000042  0000              DCW      0x0000
                  |L1.68|
                          DCD      GUI_Context

                          AREA ||i._DrawPolyLine||, CODE, READONLY, ALIGN=1

                  _DrawPolyLine PROC
;;;34     */
;;;35     static void _DrawPolyLine(const GUI_POINT*pPoints, int NumPoints, int x0, int y0) {
000000  b5f8              PUSH     {r3-r7,lr}
000002  4604              MOV      r4,r0
000004  460f              MOV      r7,r1
000006  4615              MOV      r5,r2
000008  461e              MOV      r6,r3
;;;36       unsigned PixelCnt;
;;;37       PixelCnt = 0;
00000a  2000              MOVS     r0,#0
00000c  9000              STR      r0,[sp,#0]
;;;38       GL_MoveTo(pPoints->x+x0, pPoints->y+y0);
00000e  f9b42002          LDRSH    r2,[r4,#2]
000012  1991              ADDS     r1,r2,r6
000014  f9b42000          LDRSH    r2,[r4,#0]
000018  1950              ADDS     r0,r2,r5
00001a  f7fffffe          BL       GL_MoveTo
;;;39       while (--NumPoints >0) {
00001e  e009              B        |L2.52|
                  |L2.32|
;;;40         pPoints++;
000020  1d24              ADDS     r4,r4,#4
;;;41         GL_DrawLineToEx(pPoints->x+x0, pPoints->y+y0, &PixelCnt);
000022  f9b42002          LDRSH    r2,[r4,#2]
000026  1991              ADDS     r1,r2,r6
000028  f9b42000          LDRSH    r2,[r4,#0]
00002c  1950              ADDS     r0,r2,r5
00002e  466a              MOV      r2,sp
000030  f7fffffe          BL       GL_DrawLineToEx
                  |L2.52|
000034  1e78              SUBS     r0,r7,#1              ;39
000036  1e07              SUBS     r7,r0,#0              ;39
000038  dcf2              BGT      |L2.32|
;;;42       }
;;;43     }
00003a  bdf8              POP      {r3-r7,pc}
;;;44     
                          ENDP

