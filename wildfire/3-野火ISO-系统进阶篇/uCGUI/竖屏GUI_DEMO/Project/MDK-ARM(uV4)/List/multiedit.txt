; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\multiedit.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\multiedit.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Widget\MULTIEDIT.c]
                          THUMB

                          AREA ||i.MULTIEDIT_AddKey||, CODE, READONLY, ALIGN=1

                  MULTIEDIT_AddKey PROC
;;;1607   */
;;;1608   int MULTIEDIT_AddKey(MULTIEDIT_HANDLE hObj, U16 Key) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;1609     int r = 0;
000006  2600              MOVS     r6,#0
;;;1610     if (hObj) {
000008  b144              CBZ      r4,|L1.28|
;;;1611       WM_LOCK();
00000a  f7fffffe          BL       GUI_Lock
;;;1612       r = _AddKey(hObj, Key);
00000e  4629              MOV      r1,r5
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       _AddKey
000016  4606              MOV      r6,r0
;;;1613       WM_UNLOCK();
000018  f7fffffe          BL       GUI_Unlock
                  |L1.28|
;;;1614     }
;;;1615     return r;
00001c  4630              MOV      r0,r6
;;;1616   }
00001e  bd70              POP      {r4-r6,pc}
;;;1617   
                          ENDP


                          AREA ||i.MULTIEDIT_AddText||, CODE, READONLY, ALIGN=1

                  MULTIEDIT_AddText PROC
;;;1621   */
;;;1622   int MULTIEDIT_AddText(MULTIEDIT_HANDLE hObj, const char * s) {
000000  e92d4ff8          PUSH     {r3-r11,lr}
000004  4682              MOV      r10,r0
000006  4688              MOV      r8,r1
;;;1623     int Result;
;;;1624     Result = 1;
000008  2001              MOVS     r0,#1
00000a  9000              STR      r0,[sp,#0]
;;;1625     if (hObj && s) {
00000c  f1ba0f00          CMP      r10,#0
000010  d076              BEQ      |L2.256|
000012  f1b80f00          CMP      r8,#0
000016  d073              BEQ      |L2.256|
;;;1626       MULTIEDIT_OBJ * pObj;
;;;1627       WM_LOCK();
000018  f7fffffe          BL       GUI_Lock
;;;1628       pObj = MULTIEDIT_H2P(hObj);
00001c  4650              MOV      r0,r10
00001e  f7fffffe          BL       GUI_ALLOC_h2p
000022  4604              MOV      r4,r0
;;;1629       if (!pObj->hText) {
000024  8f20              LDRH     r0,[r4,#0x38]
000026  b928              CBNZ     r0,|L2.52|
;;;1630         _SetText(hObj, pObj, s);
000028  4642              MOV      r2,r8
00002a  4621              MOV      r1,r4
00002c  4650              MOV      r0,r10
00002e  f7fffffe          BL       _SetText
000032  e062              B        |L2.250|
                  |L2.52|
;;;1631       } else {
;;;1632         char * pText;
;;;1633         int NumCharsNew, NumCharsOld, NumBytesNew, NumBytesOld;
;;;1634         pText = (char *)GUI_ALLOC_h2p(pObj->hText);
000034  f9b40038          LDRSH    r0,[r4,#0x38]
000038  f7fffffe          BL       GUI_ALLOC_h2p
00003c  4605              MOV      r5,r0
;;;1635         NumCharsOld = GUI__GetNumChars(pText);
00003e  4628              MOV      r0,r5
000040  f7fffffe          BL       GUI__GetNumChars
000044  4681              MOV      r9,r0
;;;1636         NumBytesOld = GUI_UC__NumChars2NumBytes(pText, NumCharsOld);
000046  4649              MOV      r1,r9
000048  4628              MOV      r0,r5
00004a  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00004e  4683              MOV      r11,r0
;;;1637         NumCharsNew = GUI__GetNumChars(s);
000050  4640              MOV      r0,r8
000052  f7fffffe          BL       GUI__GetNumChars
000056  4606              MOV      r6,r0
;;;1638         if (pObj->MaxNumChars > 0) {
000058  8f60              LDRH     r0,[r4,#0x3a]
00005a  2800              CMP      r0,#0
00005c  dd07              BLE      |L2.110|
;;;1639           if ((NumCharsOld + NumCharsNew) > pObj->MaxNumChars) {
00005e  eb090006          ADD      r0,r9,r6
000062  8f61              LDRH     r1,[r4,#0x3a]
000064  4288              CMP      r0,r1
000066  dd02              BLE      |L2.110|
;;;1640             NumCharsNew = pObj->MaxNumChars - NumCharsOld;
000068  8f60              LDRH     r0,[r4,#0x3a]
00006a  eba00609          SUB      r6,r0,r9
                  |L2.110|
;;;1641           }
;;;1642         }
;;;1643         if (NumCharsNew > 0) {
00006e  2e00              CMP      r6,#0
000070  dd42              BLE      |L2.248|
;;;1644           NumBytesNew = GUI_UC__NumChars2NumBytes(s, NumCharsNew);
000072  4631              MOV      r1,r6
000074  4640              MOV      r0,r8
000076  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00007a  4607              MOV      r7,r0
;;;1645           if (_IsSpaceInBuffer(pObj, NumBytesNew)) {
00007c  4639              MOV      r1,r7
00007e  4620              MOV      r0,r4
000080  f7fffffe          BL       _IsSpaceInBuffer
000084  2800              CMP      r0,#0
000086  d037              BEQ      |L2.248|
;;;1646             pText = (char *)GUI_ALLOC_h2p(pObj->hText);
000088  f9340f38          LDRSH    r0,[r4,#0x38]!
00008c  f7fffffe          BL       GUI_ALLOC_h2p
000090  4605              MOV      r5,r0
;;;1647             memmove(pText + pObj->CursorPosByte + NumBytesNew, 
000092  8a63              LDRH     r3,[r4,#0x12]
000094  ebab0203          SUB      r2,r11,r3
000098  1959              ADDS     r1,r3,r5
00009a  442b              ADD      r3,r3,r5
00009c  19d8              ADDS     r0,r3,r7
00009e  f7fffffe          BL       __aeabi_memmove
;;;1648                     pText + pObj->CursorPosByte, 
;;;1649                     NumBytesOld - pObj->CursorPosByte);
;;;1650             memcpy(pText + pObj->CursorPosByte, s, NumBytesNew);
0000a2  8a61              LDRH     r1,[r4,#0x12]
0000a4  1948              ADDS     r0,r1,r5
0000a6  463a              MOV      r2,r7
0000a8  4641              MOV      r1,r8
0000aa  f7fffffe          BL       __aeabi_memcpy
;;;1651             *(pText + NumBytesOld + NumBytesNew) = 0;
0000ae  2000              MOVS     r0,#0
0000b0  eb05010b          ADD      r1,r5,r11
0000b4  55c8              STRB     r0,[r1,r7]
;;;1652             pObj->NumChars += NumCharsNew;
0000b6  88a0              LDRH     r0,[r4,#4]
0000b8  4430              ADD      r0,r0,r6
0000ba  80a0              STRH     r0,[r4,#4]
;;;1653             _SetCursorPos(hObj, pObj, pObj->CursorPosChar + NumCharsNew);
0000bc  8a20              LDRH     r0,[r4,#0x10]
0000be  f1a40438          SUB      r4,r4,#0x38
0000c2  eb000206          ADD      r2,r0,r6
0000c6  4621              MOV      r1,r4
0000c8  4650              MOV      r0,r10
0000ca  f7fffffe          BL       _SetCursorPos
;;;1654             _InvalidateNumLines(pObj);
0000ce  4620              MOV      r0,r4
0000d0  f7fffffe          BL       _InvalidateNumLines
;;;1655             _InvalidateTextSizeX(pObj);
0000d4  4620              MOV      r0,r4
0000d6  f7fffffe          BL       _InvalidateTextSizeX
;;;1656             _InvalidateTextArea(hObj);
0000da  4650              MOV      r0,r10
0000dc  f7fffffe          BL       _InvalidateTextArea
;;;1657             _InvalidateCursorXY(pObj);
0000e0  4620              MOV      r0,r4
0000e2  f7fffffe          BL       _InvalidateCursorXY
;;;1658             _ClearCache(pObj);
0000e6  4620              MOV      r0,r4
0000e8  f7fffffe          BL       _ClearCache
;;;1659             WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
0000ec  2105              MOVS     r1,#5
0000ee  4650              MOV      r0,r10
0000f0  f7fffffe          BL       WM_NotifyParent
;;;1660             Result = 0;
0000f4  2000              MOVS     r0,#0
0000f6  9000              STR      r0,[sp,#0]
                  |L2.248|
;;;1661           }
;;;1662         }
;;;1663       }
0000f8  bf00              NOP      
                  |L2.250|
;;;1664       WM_UNLOCK();
0000fa  f7fffffe          BL       GUI_Unlock
;;;1665     }
0000fe  bf00              NOP      
                  |L2.256|
;;;1666     return Result;
000100  9800              LDR      r0,[sp,#0]
;;;1667   }
000102  e8bd8ff8          POP      {r3-r11,pc}
;;;1668   
                          ENDP


                          AREA ||i.MULTIEDIT_Callback||, CODE, READONLY, ALIGN=1

                  MULTIEDIT_Callback PROC
;;;1448   */
;;;1449   void MULTIEDIT_Callback (WM_MESSAGE *pMsg) {
000000  b5fe              PUSH     {r1-r7,lr}
000002  4604              MOV      r4,r0
;;;1450     MULTIEDIT_HANDLE hObj;
;;;1451     MULTIEDIT_OBJ* pObj;
;;;1452     WM_SCROLL_STATE ScrollState;
;;;1453     hObj = pMsg->hWin;
000004  f9b46004          LDRSH    r6,[r4,#4]
;;;1454     /* Let widget handle the standard messages */
;;;1455     if (WIDGET_HandleActive(hObj, pMsg) == 0) {
000008  4621              MOV      r1,r4
00000a  4630              MOV      r0,r6
00000c  f7fffffe          BL       WIDGET_HandleActive
000010  b900              CBNZ     r0,|L3.20|
                  |L3.18|
;;;1456       return;
;;;1457     }
;;;1458     pObj = (MULTIEDIT_OBJ *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
;;;1459     switch (pMsg->MsgId) {
;;;1460     case WM_NOTIFY_CLIENTCHANGE:
;;;1461       _InvalidateCursorXY(pObj);
;;;1462       _InvalidateNumLines(pObj);
;;;1463       _InvalidateTextSizeX(pObj);
;;;1464       _ClearCache(pObj);
;;;1465       _CalcScrollParas(hObj);
;;;1466       break;
;;;1467     case WM_SIZE:
;;;1468       _InvalidateCursorXY(pObj);
;;;1469       _InvalidateNumLines(pObj);
;;;1470       _InvalidateTextSizeX(pObj);
;;;1471       _ClearCache(pObj);
;;;1472       _Invalidate(hObj);
;;;1473       break;
;;;1474     case WM_NOTIFY_PARENT:
;;;1475       switch (pMsg->Data.v) {
;;;1476       case WM_NOTIFICATION_VALUE_CHANGED:
;;;1477         if (pMsg->hWinSrc  == WM_GetScrollbarV(hObj)) {
;;;1478           WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
;;;1479           pObj->ScrollStateV.v = ScrollState.v;
;;;1480           WM_InvalidateWindow(hObj);
;;;1481           WM_NotifyParent(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
;;;1482         } else if (pMsg->hWinSrc == WM_GetScrollbarH(hObj)) {
;;;1483           WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
;;;1484           pObj->ScrollStateH.v = ScrollState.v;
;;;1485           WM_InvalidateWindow(hObj);
;;;1486           WM_NotifyParent(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
;;;1487         }
;;;1488         break;
;;;1489       case WM_NOTIFICATION_SCROLLBAR_ADDED:
;;;1490         #if WIDGET_USE_PARENT_EFFECT
;;;1491           WIDGET_SetEffect(pMsg->hWinSrc, pObj->Widget.pEffect);
;;;1492         #endif
;;;1493         _SetScrollState(hObj);
;;;1494         break;
;;;1495       }
;;;1496       break;
;;;1497     case WM_PAINT:
;;;1498       _MULTIEDIT_Paint(hObj, pObj);
;;;1499       return;
;;;1500     case WM_TOUCH:
;;;1501       _OnTouch(hObj, pObj, pMsg);
;;;1502       break;
;;;1503     case WM_DELETE:
;;;1504       GUI_ALLOC_FreePtr(&pObj->hText);
;;;1505       break;
;;;1506     case WM_KEY:
;;;1507       if (((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt >0) {
;;;1508         int Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
;;;1509         /* Leave code for test purpose
;;;1510         switch (Key) {
;;;1511         case '1': Key = GUI_KEY_LEFT;  break;
;;;1512         case '2': Key = GUI_KEY_UP;    break;
;;;1513         case '3': Key = GUI_KEY_RIGHT; break;
;;;1514         case '4': Key = GUI_KEY_DOWN;  break;
;;;1515         }
;;;1516         */
;;;1517         if (_AddKey(hObj, Key)) {
;;;1518           return;
;;;1519         }
;;;1520       } else {
;;;1521         if (!(pObj->Flags & MULTIEDIT_SF_READONLY)) {
;;;1522           return;                /* Key release is consumed (not sent to parent) */
;;;1523         }
;;;1524       }
;;;1525     }
;;;1526     WM_DefaultProc(pMsg);
;;;1527   }
000012  bdfe              POP      {r1-r7,pc}
                  |L3.20|
000014  4630              MOV      r0,r6                 ;1458
000016  f7fffffe          BL       GUI_ALLOC_h2p
00001a  4605              MOV      r5,r0                 ;1458
00001c  6820              LDR      r0,[r4,#0]            ;1459
00001e  280e              CMP      r0,#0xe               ;1459
000020  d078              BEQ      |L3.276|
000022  dc06              BGT      |L3.50|
000024  2805              CMP      r0,#5                 ;1459
000026  d01b              BEQ      |L3.96|
000028  280b              CMP      r0,#0xb               ;1459
00002a  d06e              BEQ      |L3.266|
00002c  280c              CMP      r0,#0xc               ;1459
00002e  d116              BNE      |L3.94|
000030  e063              B        |L3.250|
                  |L3.50|
000032  280f              CMP      r0,#0xf               ;1459
000034  d05c              BEQ      |L3.240|
000036  2825              CMP      r0,#0x25              ;1459
000038  d002              BEQ      |L3.64|
00003a  2826              CMP      r0,#0x26              ;1459
00003c  d17d              BNE      |L3.314|
00003e  e01f              B        |L3.128|
                  |L3.64|
000040  4628              MOV      r0,r5                 ;1461
000042  f7fffffe          BL       _InvalidateCursorXY
000046  4628              MOV      r0,r5                 ;1462
000048  f7fffffe          BL       _InvalidateNumLines
00004c  4628              MOV      r0,r5                 ;1463
00004e  f7fffffe          BL       _InvalidateTextSizeX
000052  4628              MOV      r0,r5                 ;1464
000054  f7fffffe          BL       _ClearCache
000058  4630              MOV      r0,r6                 ;1465
00005a  f7fffffe          BL       _CalcScrollParas
                  |L3.94|
00005e  e06c              B        |L3.314|
                  |L3.96|
000060  4628              MOV      r0,r5                 ;1468
000062  f7fffffe          BL       _InvalidateCursorXY
000066  4628              MOV      r0,r5                 ;1469
000068  f7fffffe          BL       _InvalidateNumLines
00006c  4628              MOV      r0,r5                 ;1470
00006e  f7fffffe          BL       _InvalidateTextSizeX
000072  4628              MOV      r0,r5                 ;1471
000074  f7fffffe          BL       _ClearCache
000078  4630              MOV      r0,r6                 ;1472
00007a  f7fffffe          BL       _Invalidate
00007e  e05c              B        |L3.314|
                  |L3.128|
000080  68a0              LDR      r0,[r4,#8]            ;1475
000082  2805              CMP      r0,#5                 ;1475
000084  d002              BEQ      |L3.140|
000086  2806              CMP      r0,#6                 ;1475
000088  d130              BNE      |L3.236|
00008a  e02b              B        |L3.228|
                  |L3.140|
00008c  4630              MOV      r0,r6                 ;1477
00008e  f7fffffe          BL       WM_GetScrollbarV
000092  f9b41006          LDRSH    r1,[r4,#6]            ;1477
000096  4288              CMP      r0,r1                 ;1477
000098  d10e              BNE      |L3.184|
00009a  f9b40006          LDRSH    r0,[r4,#6]            ;1478
00009e  4669              MOV      r1,sp                 ;1478
0000a0  f7fffffe          BL       WM_GetScrollState
0000a4  9901              LDR      r1,[sp,#4]            ;1479
0000a6  6629              STR      r1,[r5,#0x60]         ;1479
0000a8  4630              MOV      r0,r6                 ;1480
0000aa  f7fffffe          BL       WM_InvalidateWindow
0000ae  210a              MOVS     r1,#0xa               ;1481
0000b0  4630              MOV      r0,r6                 ;1481
0000b2  f7fffffe          BL       WM_NotifyParent
0000b6  e014              B        |L3.226|
                  |L3.184|
0000b8  4630              MOV      r0,r6                 ;1482
0000ba  f7fffffe          BL       WM_GetScrollbarH
0000be  f9b41006          LDRSH    r1,[r4,#6]            ;1482
0000c2  4288              CMP      r0,r1                 ;1482
0000c4  d10d              BNE      |L3.226|
0000c6  f9b40006          LDRSH    r0,[r4,#6]            ;1483
0000ca  4669              MOV      r1,sp                 ;1483
0000cc  f7fffffe          BL       WM_GetScrollState
0000d0  9901              LDR      r1,[sp,#4]            ;1484
0000d2  66e9              STR      r1,[r5,#0x6c]         ;1484
0000d4  4630              MOV      r0,r6                 ;1485
0000d6  f7fffffe          BL       WM_InvalidateWindow
0000da  210a              MOVS     r1,#0xa               ;1486
0000dc  4630              MOV      r0,r6                 ;1486
0000de  f7fffffe          BL       WM_NotifyParent
                  |L3.226|
0000e2  e003              B        |L3.236|
                  |L3.228|
0000e4  4630              MOV      r0,r6                 ;1493
0000e6  f7fffffe          BL       _SetScrollState
0000ea  bf00              NOP                            ;1494
                  |L3.236|
0000ec  bf00              NOP                            ;1488
0000ee  e024              B        |L3.314|
                  |L3.240|
0000f0  4629              MOV      r1,r5                 ;1498
0000f2  4630              MOV      r0,r6                 ;1498
0000f4  f7fffffe          BL       _MULTIEDIT_Paint
0000f8  e78b              B        |L3.18|
                  |L3.250|
0000fa  4622              MOV      r2,r4                 ;1501
0000fc  4629              MOV      r1,r5                 ;1501
0000fe  4630              MOV      r0,r6                 ;1501
000100  f7fffffe          BL       _OnTouch
000104  e019              B        |L3.314|
000106  e005              B        |L3.276|
000108  e7ff              B        |L3.266|
                  |L3.266|
00010a  f1050038          ADD      r0,r5,#0x38           ;1504
00010e  f7fffffe          BL       GUI_ALLOC_FreePtr
000112  e012              B        |L3.314|
                  |L3.276|
000114  68a0              LDR      r0,[r4,#8]            ;1507
000116  6840              LDR      r0,[r0,#4]            ;1507
000118  2800              CMP      r0,#0                 ;1507
00011a  dd08              BLE      |L3.302|
00011c  68a0              LDR      r0,[r4,#8]            ;1508
00011e  6807              LDR      r7,[r0,#0]            ;1508
000120  b2b9              UXTH     r1,r7                 ;1517
000122  4630              MOV      r0,r6                 ;1517
000124  f7fffffe          BL       _AddKey
000128  b100              CBZ      r0,|L3.300|
00012a  e772              B        |L3.18|
                  |L3.300|
00012c  e005              B        |L3.314|
                  |L3.302|
00012e  f8950078          LDRB     r0,[r5,#0x78]         ;1521
000132  f0100f01          TST      r0,#1                 ;1521
000136  d100              BNE      |L3.314|
000138  e76b              B        |L3.18|
                  |L3.314|
00013a  bf00              NOP                            ;1466
00013c  4620              MOV      r0,r4                 ;1526
00013e  f7fffffe          BL       WM_DefaultProc
000142  bf00              NOP      
000144  e765              B        |L3.18|
;;;1528   
                          ENDP


                          AREA ||i.MULTIEDIT_CreateEx||, CODE, READONLY, ALIGN=2

                  MULTIEDIT_CreateEx PROC
;;;1542   */
;;;1543   MULTIEDIT_HANDLE MULTIEDIT_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent, int WinFlags, int ExFlags,
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;1544                                       int Id, int BufferSize, const char* pText)
;;;1545   {
000004  4680              MOV      r8,r0
000006  4689              MOV      r9,r1
000008  4692              MOV      r10,r2
00000a  469b              MOV      r11,r3
00000c  9e12              LDR      r6,[sp,#0x48]
;;;1546     MULTIEDIT_HANDLE hObj;
;;;1547     /* Create the window */
;;;1548     WM_LOCK();
00000e  f7fffffe          BL       GUI_Lock
;;;1549     if ((xsize == 0) && (ysize == 0) && (x0 == 0) && (y0 == 0)) {
000012  f1ba0f00          CMP      r10,#0
000016  d11b              BNE      |L4.80|
000018  f1bb0f00          CMP      r11,#0
00001c  d118              BNE      |L4.80|
00001e  f1b80f00          CMP      r8,#0
000022  d115              BNE      |L4.80|
000024  f1b90f00          CMP      r9,#0
000028  d112              BNE      |L4.80|
;;;1550       GUI_RECT Rect;
;;;1551       WM_GetClientRectEx(hParent, &Rect);
00002a  a902              ADD      r1,sp,#8
00002c  980e              LDR      r0,[sp,#0x38]
00002e  f7fffffe          BL       WM_GetClientRectEx
;;;1552       xsize = Rect.x1 - Rect.x0 + 1;
000032  f9bd000c          LDRSH    r0,[sp,#0xc]
000036  f9bd1008          LDRSH    r1,[sp,#8]
00003a  1a40              SUBS     r0,r0,r1
00003c  f1000a01          ADD      r10,r0,#1
;;;1553       ysize = Rect.y1 - Rect.y0 + 1;
000040  f9bd000e          LDRSH    r0,[sp,#0xe]
000044  f9bd100a          LDRSH    r1,[sp,#0xa]
000048  1a40              SUBS     r0,r0,r1
00004a  f1000b01          ADD      r11,r0,#1
;;;1554     }
00004e  bf00              NOP      
                  |L4.80|
;;;1555     hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, &MULTIEDIT_Callback,
000050  2260              MOVS     r2,#0x60
000052  4b31              LDR      r3,|L4.280|
000054  980f              LDR      r0,[sp,#0x3c]
000056  b280              UXTH     r0,r0
000058  990e              LDR      r1,[sp,#0x38]
00005a  e9cd3202          STRD     r3,r2,[sp,#8]
00005e  e9cd1000          STRD     r1,r0,[sp,#0]
000062  465b              MOV      r3,r11
000064  4652              MOV      r2,r10
000066  4649              MOV      r1,r9
000068  4640              MOV      r0,r8
00006a  f7fffffe          BL       WM_CreateWindowAsChild
00006e  4607              MOV      r7,r0
;;;1556                                   sizeof(MULTIEDIT_OBJ) - sizeof(WM_Obj));
;;;1557     if (hObj) {
000070  2f00              CMP      r7,#0
000072  d04b              BEQ      |L4.268|
;;;1558       int i;
;;;1559       MULTIEDIT_OBJ * pObj;
;;;1560       pObj = (MULTIEDIT_OBJ *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000074  4638              MOV      r0,r7
000076  f7fffffe          BL       GUI_ALLOC_h2p
00007a  4604              MOV      r4,r0
;;;1561       /* init widget specific variables */
;;;1562       WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE);
00007c  2210              MOVS     r2,#0x10
00007e  4620              MOV      r0,r4
000080  9911              LDR      r1,[sp,#0x44]
000082  f7fffffe          BL       WIDGET__Init
;;;1563       /* init member variables */
;;;1564       MULTIEDIT_INIT_ID(pObj);
;;;1565       for (i = 0; i < NUM_DISP_MODES; i++) {
000086  2500              MOVS     r5,#0
000088  e00e              B        |L4.168|
                  |L4.138|
;;;1566         pObj->aBkColor[i]  = _aDefaultBkColor[i];
00008a  4824              LDR      r0,|L4.284|
00008c  f8501025          LDR      r1,[r0,r5,LSL #2]
000090  f1040028          ADD      r0,r4,#0x28
000094  f8401025          STR      r1,[r0,r5,LSL #2]
;;;1567         pObj->aColor[i]    = _aDefaultColor[i];
000098  4821              LDR      r0,|L4.288|
00009a  f8501025          LDR      r1,[r0,r5,LSL #2]
00009e  f1040030          ADD      r0,r4,#0x30
0000a2  f8401025          STR      r1,[r0,r5,LSL #2]
0000a6  1c6d              ADDS     r5,r5,#1              ;1565
                  |L4.168|
0000a8  2d02              CMP      r5,#2                 ;1565
0000aa  dbee              BLT      |L4.138|
;;;1568       }
;;;1569       pObj->pFont          = _pDefaultFont;
0000ac  481d              LDR      r0,|L4.292|
0000ae  6800              LDR      r0,[r0,#0]  ; _pDefaultFont
0000b0  f1040438          ADD      r4,r4,#0x38
0000b4  63e0              STR      r0,[r4,#0x3c]
;;;1570       pObj->Flags          = ExFlags;
0000b6  9810              LDR      r0,[sp,#0x40]
0000b8  f8840040          STRB     r0,[r4,#0x40]
;;;1571       pObj->CursorPosChar  = 0;
0000bc  f04f0000          MOV      r0,#0
0000c0  8220              STRH     r0,[r4,#0x10]
;;;1572       pObj->CursorPosByte  = 0;
0000c2  8260              STRH     r0,[r4,#0x12]
;;;1573       pObj->HBorder        = 1;
0000c4  f04f0001          MOV      r0,#1
0000c8  f8840043          STRB     r0,[r4,#0x43]
;;;1574       pObj->MaxNumChars    = 0;
0000cc  f04f0000          MOV      r0,#0
0000d0  8060              STRH     r0,[r4,#2]
;;;1575       pObj->NumCharsPrompt = 0;
0000d2  80e0              STRH     r0,[r4,#6]
;;;1576       pObj->BufferSize     = 0;
0000d4  81a0              STRH     r0,[r4,#0xc]
;;;1577       pObj->hText          = 0;
0000d6  f8240938          STRH     r0,[r4],#-0x38
;;;1578       if (BufferSize > 0) {
0000da  2e00              CMP      r6,#0
0000dc  dd0e              BLE      |L4.252|
;;;1579         WM_HWIN hText;
;;;1580         if ((hText = GUI_ALLOC_AllocZero(BufferSize)) != 0) {
0000de  b230              SXTH     r0,r6
0000e0  f7fffffe          BL       GUI_ALLOC_AllocZero
0000e4  9003              STR      r0,[sp,#0xc]
0000e6  b120              CBZ      r0,|L4.242|
;;;1581           pObj->BufferSize = BufferSize;
0000e8  f8a46044          STRH     r6,[r4,#0x44]
;;;1582           pObj->hText      = hText;
0000ec  9803              LDR      r0,[sp,#0xc]
0000ee  8720              STRH     r0,[r4,#0x38]
0000f0  e003              B        |L4.250|
                  |L4.242|
;;;1583         } else {
;;;1584           GUI_DEBUG_ERROROUT("MULTIEDIT_CreateEx failed to alloc buffer");
;;;1585           WM_DeleteWindow(hObj);
0000f2  4638              MOV      r0,r7
0000f4  f7fffffe          BL       WM_DeleteWindow
;;;1586           hObj = 0;
0000f8  2700              MOVS     r7,#0
                  |L4.250|
;;;1587         }
;;;1588       }
0000fa  bf00              NOP      
                  |L4.252|
;;;1589       MULTIEDIT_SetText(hObj, pText);
0000fc  4638              MOV      r0,r7
0000fe  9913              LDR      r1,[sp,#0x4c]
000100  f7fffffe          BL       MULTIEDIT_SetText
;;;1590       _ManageScrollers(hObj);
000104  4638              MOV      r0,r7
000106  f7fffffe          BL       _ManageScrollers
;;;1591     } else {
00010a  bf00              NOP      
                  |L4.268|
;;;1592       GUI_DEBUG_ERROROUT_IF(hObj==0, "MULTIEDIT_CreateEx failed")
;;;1593     }
;;;1594     WM_UNLOCK();
00010c  f7fffffe          BL       GUI_Unlock
;;;1595     return hObj;
000110  4638              MOV      r0,r7
;;;1596   }
000112  b004              ADD      sp,sp,#0x10
000114  e8bd9ff0          POP      {r4-r12,pc}
;;;1597   
                          ENDP

                  |L4.280|
                          DCD      MULTIEDIT_Callback
                  |L4.284|
                          DCD      _aDefaultBkColor
                  |L4.288|
                          DCD      _aDefaultColor
                  |L4.292|
                          DCD      _pDefaultFont

                          AREA ||i.MULTIEDIT_GetCursorCharPos||, CODE, READONLY, ALIGN=1

                  MULTIEDIT_GetCursorCharPos PROC
;;;2035   */
;;;2036   int MULTIEDIT_GetCursorCharPos(MULTIEDIT_HANDLE hObj) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;2037     int r = 0;
000004  2500              MOVS     r5,#0
;;;2038     if (hObj) {
000006  b154              CBZ      r4,|L5.30|
;;;2039       MULTIEDIT_OBJ* pObj;
;;;2040       WM_LOCK();
000008  f7fffffe          BL       GUI_Lock
;;;2041       pObj = MULTIEDIT_H2P(hObj);
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       GUI_ALLOC_h2p
000012  4606              MOV      r6,r0
;;;2042       r = pObj->CursorPosChar;
000014  f8b65048          LDRH     r5,[r6,#0x48]
;;;2043       WM_UNLOCK();
000018  f7fffffe          BL       GUI_Unlock
;;;2044     }
00001c  bf00              NOP      
                  |L5.30|
;;;2045     return r;
00001e  4628              MOV      r0,r5
;;;2046   }
000020  bd70              POP      {r4-r6,pc}
;;;2047   
                          ENDP


                          AREA ||i.MULTIEDIT_GetCursorPixelPos||, CODE, READONLY, ALIGN=1

                  MULTIEDIT_GetCursorPixelPos PROC
;;;2051   */
;;;2052   void MULTIEDIT_GetCursorPixelPos(MULTIEDIT_HANDLE hObj, int * pxPos, int * pyPos) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4607              MOV      r7,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
;;;2053     if (hObj) {
00000a  b327              CBZ      r7,|L6.86|
;;;2054       MULTIEDIT_OBJ* pObj;
;;;2055       int FontSizeY, EffectSize;
;;;2056       WM_LOCK();
00000c  f7fffffe          BL       GUI_Lock
;;;2057       pObj = MULTIEDIT_H2P(hObj);
000010  4638              MOV      r0,r7
000012  f7fffffe          BL       GUI_ALLOC_h2p
000016  4604              MOV      r4,r0
;;;2058       FontSizeY  = GUI_GetYSizeOfFont(pObj->pFont);
000018  6f60              LDR      r0,[r4,#0x74]
00001a  f7fffffe          BL       GUI_GetYSizeOfFont
00001e  4681              MOV      r9,r0
;;;2059       EffectSize = pObj->Widget.pEffect->EffectSize;
000020  6a20              LDR      r0,[r4,#0x20]
000022  f8d08014          LDR      r8,[r0,#0x14]
;;;2060       _GetCursorXY(hObj, pObj, pxPos, pyPos);
000026  4633              MOV      r3,r6
000028  462a              MOV      r2,r5
00002a  4621              MOV      r1,r4
00002c  4638              MOV      r0,r7
00002e  f7fffffe          BL       _GetCursorXY
;;;2061       *pxPos += EffectSize - pObj->ScrollStateH.v + pObj->HBorder;
000032  6ee0              LDR      r0,[r4,#0x6c]
000034  eba80000          SUB      r0,r8,r0
000038  f894107b          LDRB     r1,[r4,#0x7b]
00003c  4408              ADD      r0,r0,r1
00003e  6829              LDR      r1,[r5,#0]
000040  4408              ADD      r0,r0,r1
000042  6028              STR      r0,[r5,#0]
;;;2062       *pyPos += EffectSize - pObj->ScrollStateV.v * FontSizeY;
000044  6831              LDR      r1,[r6,#0]
000046  6e20              LDR      r0,[r4,#0x60]
000048  fb008019          MLS      r0,r0,r9,r8
00004c  4408              ADD      r0,r0,r1
00004e  6030              STR      r0,[r6,#0]
;;;2063       WM_UNLOCK();
000050  f7fffffe          BL       GUI_Unlock
;;;2064     }
000054  bf00              NOP      
                  |L6.86|
;;;2065   }
000056  e8bd87f0          POP      {r4-r10,pc}
;;;2066   
                          ENDP


                          AREA ||i.MULTIEDIT_GetPrompt||, CODE, READONLY, ALIGN=1

                  MULTIEDIT_GetPrompt PROC
;;;1713   */
;;;1714   void MULTIEDIT_GetPrompt(MULTIEDIT_HANDLE hObj, char * sDest, int MaxLen) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4680              MOV      r8,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
;;;1715     if (hObj) {
00000a  f1b80f00          CMP      r8,#0
00000e  d01f              BEQ      |L7.80|
;;;1716       MULTIEDIT_OBJ * pObj;
;;;1717       WM_LOCK();
000010  f7fffffe          BL       GUI_Lock
;;;1718       pObj = MULTIEDIT_H2P(hObj);
000014  4640              MOV      r0,r8
000016  f7fffffe          BL       GUI_ALLOC_h2p
00001a  4606              MOV      r6,r0
;;;1719       if (pObj) {
00001c  b1ae              CBZ      r6,|L7.74|
;;;1720         char* sSource = (char*)GUI_ALLOC_h2p(pObj->hText);
00001e  f9b60038          LDRSH    r0,[r6,#0x38]
000022  f7fffffe          BL       GUI_ALLOC_h2p
000026  4681              MOV      r9,r0
;;;1721         int Len = GUI_UC__NumChars2NumBytes(sSource, pObj->NumCharsPrompt);
000028  8ff1              LDRH     r1,[r6,#0x3e]
00002a  4648              MOV      r0,r9
00002c  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000030  4607              MOV      r7,r0
;;;1722         if (Len > (MaxLen - 1)) {
000032  1e68              SUBS     r0,r5,#1
000034  42b8              CMP      r0,r7
000036  da00              BGE      |L7.58|
;;;1723           Len = MaxLen - 1;
000038  1e6f              SUBS     r7,r5,#1
                  |L7.58|
;;;1724         }
;;;1725         memcpy(sDest, sSource, Len);
00003a  463a              MOV      r2,r7
00003c  4649              MOV      r1,r9
00003e  4620              MOV      r0,r4
000040  f7fffffe          BL       __aeabi_memcpy
;;;1726         *(sDest + Len) = 0;
000044  2000              MOVS     r0,#0
000046  55e0              STRB     r0,[r4,r7]
;;;1727       }
000048  bf00              NOP      
                  |L7.74|
;;;1728       WM_UNLOCK();
00004a  f7fffffe          BL       GUI_Unlock
;;;1729     }
00004e  bf00              NOP      
                  |L7.80|
;;;1730   }
000050  e8bd87f0          POP      {r4-r10,pc}
;;;1731   
                          ENDP


                          AREA ||i.MULTIEDIT_GetText||, CODE, READONLY, ALIGN=1

                  MULTIEDIT_GetText PROC
;;;1688   */
;;;1689   void MULTIEDIT_GetText(MULTIEDIT_HANDLE hObj, char* sDest, int MaxLen) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4681              MOV      r9,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
;;;1690     if (hObj) {
00000a  f1b90f00          CMP      r9,#0
00000e  d024              BEQ      |L8.90|
;;;1691       MULTIEDIT_OBJ* pObj;
;;;1692       WM_LOCK();
000010  f7fffffe          BL       GUI_Lock
;;;1693       pObj = MULTIEDIT_H2P(hObj);
000014  4648              MOV      r0,r9
000016  f7fffffe          BL       GUI_ALLOC_h2p
00001a  4606              MOV      r6,r0
;;;1694       if (pObj) {
00001c  b1d6              CBZ      r6,|L8.84|
;;;1695         char* pText;
;;;1696         int Len;
;;;1697         pText  = (char*) GUI_ALLOC_h2p(pObj->hText);
00001e  f9b60038          LDRSH    r0,[r6,#0x38]
000022  f7fffffe          BL       GUI_ALLOC_h2p
000026  4607              MOV      r7,r0
;;;1698         pText += GUI_UC__NumChars2NumBytes(pText, pObj->NumCharsPrompt);
000028  8ff1              LDRH     r1,[r6,#0x3e]
00002a  4638              MOV      r0,r7
00002c  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000030  4407              ADD      r7,r7,r0
;;;1699         Len    = strlen(pText);
000032  4638              MOV      r0,r7
000034  f7fffffe          BL       strlen
000038  4680              MOV      r8,r0
;;;1700         if (Len > (MaxLen - 1)) {
00003a  1e68              SUBS     r0,r5,#1
00003c  4540              CMP      r0,r8
00003e  da00              BGE      |L8.66|
;;;1701           Len = MaxLen - 1;
000040  4680              MOV      r8,r0
                  |L8.66|
;;;1702         }
;;;1703         memcpy(sDest, pText, Len);
000042  4642              MOV      r2,r8
000044  4639              MOV      r1,r7
000046  4620              MOV      r0,r4
000048  f7fffffe          BL       __aeabi_memcpy
;;;1704         *(sDest + Len) = 0;
00004c  2000              MOVS     r0,#0
00004e  f8040008          STRB     r0,[r4,r8]
;;;1705       }
000052  bf00              NOP      
                  |L8.84|
;;;1706       WM_UNLOCK();
000054  f7fffffe          BL       GUI_Unlock
;;;1707     }
000058  bf00              NOP      
                  |L8.90|
;;;1708   }
00005a  e8bd87f0          POP      {r4-r10,pc}
;;;1709   
                          ENDP


                          AREA ||i.MULTIEDIT_GetTextSize||, CODE, READONLY, ALIGN=1

                  MULTIEDIT_GetTextSize PROC
;;;1993   */
;;;1994   int MULTIEDIT_GetTextSize(MULTIEDIT_HANDLE hObj) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4605              MOV      r5,r0
;;;1995     int r = 0;
000006  2700              MOVS     r7,#0
;;;1996     if (hObj) {
000008  b1cd              CBZ      r5,|L9.62|
;;;1997       MULTIEDIT_OBJ* pObj;
;;;1998       WM_LOCK();
00000a  f7fffffe          BL       GUI_Lock
;;;1999       pObj = MULTIEDIT_H2P(hObj);
00000e  4628              MOV      r0,r5
000010  f7fffffe          BL       GUI_ALLOC_h2p
000014  4604              MOV      r4,r0
;;;2000       if (pObj->hText) {
000016  8f20              LDRH     r0,[r4,#0x38]
000018  b170              CBZ      r0,|L9.56|
;;;2001         const char* s;
;;;2002         s = (const char*)GUI_ALLOC_h2p(pObj->hText);
00001a  f9b40038          LDRSH    r0,[r4,#0x38]
00001e  f7fffffe          BL       GUI_ALLOC_h2p
000022  4606              MOV      r6,r0
;;;2003         s += GUI_UC__NumChars2NumBytes(s, pObj->NumCharsPrompt);
000024  8fe1              LDRH     r1,[r4,#0x3e]
000026  4630              MOV      r0,r6
000028  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00002c  4406              ADD      r6,r6,r0
;;;2004         r = 1 + strlen(s);
00002e  4630              MOV      r0,r6
000030  f7fffffe          BL       strlen
000034  1c47              ADDS     r7,r0,#1
;;;2005       }
000036  bf00              NOP      
                  |L9.56|
;;;2006       WM_UNLOCK();
000038  f7fffffe          BL       GUI_Unlock
;;;2007     }
00003c  bf00              NOP      
                  |L9.62|
;;;2008     return r;
00003e  4638              MOV      r0,r7
;;;2009   }
000040  e8bd81f0          POP      {r4-r8,pc}
;;;2010   
                          ENDP


                          AREA ||i.MULTIEDIT_SetAutoScrollH||, CODE, READONLY, ALIGN=1

                  MULTIEDIT_SetAutoScrollH PROC
;;;1800   */
;;;1801   void MULTIEDIT_SetAutoScrollH(MULTIEDIT_HANDLE hObj, int OnOff) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;1802     _SetFlag(hObj, OnOff, MULTIEDIT_SF_AUTOSCROLLBAR_H);
000006  2210              MOVS     r2,#0x10
000008  4629              MOV      r1,r5
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       _SetFlag
;;;1803   }
000010  bd70              POP      {r4-r6,pc}
;;;1804   
                          ENDP


                          AREA ||i.MULTIEDIT_SetAutoScrollV||, CODE, READONLY, ALIGN=1

                  MULTIEDIT_SetAutoScrollV PROC
;;;1792   */
;;;1793   void MULTIEDIT_SetAutoScrollV(MULTIEDIT_HANDLE hObj, int OnOff) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;1794     _SetFlag(hObj, OnOff, MULTIEDIT_SF_AUTOSCROLLBAR_V);
000006  2208              MOVS     r2,#8
000008  4629              MOV      r1,r5
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       _SetFlag
;;;1795   }
000010  bd70              POP      {r4-r6,pc}
;;;1796   
                          ENDP


                          AREA ||i.MULTIEDIT_SetBkColor||, CODE, READONLY, ALIGN=1

                  MULTIEDIT_SetBkColor PROC
;;;1845   */
;;;1846   void MULTIEDIT_SetBkColor(MULTIEDIT_HANDLE hObj, unsigned Index, GUI_COLOR color) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
000008  4616              MOV      r6,r2
;;;1847     if (hObj && (Index < NUM_DISP_MODES)) {
00000a  b18d              CBZ      r5,|L12.48|
00000c  2c02              CMP      r4,#2
00000e  d20f              BCS      |L12.48|
;;;1848       MULTIEDIT_OBJ* pObj;
;;;1849       WM_LOCK();
000010  f7fffffe          BL       GUI_Lock
;;;1850       pObj = MULTIEDIT_H2P(hObj);
000014  4628              MOV      r0,r5
000016  f7fffffe          BL       GUI_ALLOC_h2p
00001a  4607              MOV      r7,r0
;;;1851       pObj->aBkColor[Index] = color;
00001c  f1070028          ADD      r0,r7,#0x28
000020  f8406024          STR      r6,[r0,r4,LSL #2]
;;;1852       _InvalidateTextArea(hObj);
000024  4628              MOV      r0,r5
000026  f7fffffe          BL       _InvalidateTextArea
;;;1853       WM_UNLOCK();
00002a  f7fffffe          BL       GUI_Unlock
;;;1854     }
00002e  bf00              NOP      
                  |L12.48|
;;;1855   }
000030  e8bd81f0          POP      {r4-r8,pc}
;;;1856   
                          ENDP


                          AREA ||i.MULTIEDIT_SetBufferSize||, CODE, READONLY, ALIGN=1

                  MULTIEDIT_SetBufferSize PROC
;;;1930   */
;;;1931   void MULTIEDIT_SetBufferSize(MULTIEDIT_HANDLE hObj, int BufferSize) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
000006  460d              MOV      r5,r1
;;;1932     if (hObj) {
000008  b356              CBZ      r6,|L13.96|
;;;1933       MULTIEDIT_OBJ* pObj;
;;;1934       WM_HMEM hText;
;;;1935       WM_LOCK();
00000a  f7fffffe          BL       GUI_Lock
;;;1936       pObj = MULTIEDIT_H2P(hObj);
00000e  4630              MOV      r0,r6
000010  f7fffffe          BL       GUI_ALLOC_h2p
000014  4604              MOV      r4,r0
;;;1937       if ((hText = GUI_ALLOC_AllocZero(BufferSize)) == 0) {
000016  b228              SXTH     r0,r5
000018  f7fffffe          BL       GUI_ALLOC_AllocZero
00001c  0007              MOVS     r7,r0
00001e  d019              BEQ      |L13.84|
;;;1938         GUI_DEBUG_ERROROUT("MULTIEDIT_SetBufferSize failed to alloc buffer");
;;;1939       } else {
;;;1940         GUI_ALLOC_FreePtr(&pObj->hText);
000020  f1040038          ADD      r0,r4,#0x38
000024  f7fffffe          BL       GUI_ALLOC_FreePtr
;;;1941         pObj->hText          = hText;
000028  8727              STRH     r7,[r4,#0x38]
;;;1942         pObj->BufferSize     = BufferSize;
00002a  f8a45044          STRH     r5,[r4,#0x44]
;;;1943         pObj->NumCharsPrompt = 0;
00002e  2000              MOVS     r0,#0
000030  87e0              STRH     r0,[r4,#0x3e]
;;;1944         _SetCursorPos(hObj, pObj, 0);
000032  2200              MOVS     r2,#0
000034  4621              MOV      r1,r4
000036  4630              MOV      r0,r6
000038  f7fffffe          BL       _SetCursorPos
;;;1945         _InvalidateNumChars(pObj);
00003c  4620              MOV      r0,r4
00003e  f7fffffe          BL       _InvalidateNumChars
;;;1946         _InvalidateCursorXY(pObj);
000042  4620              MOV      r0,r4
000044  f7fffffe          BL       _InvalidateCursorXY
;;;1947         _InvalidateNumLines(pObj);
000048  4620              MOV      r0,r4
00004a  f7fffffe          BL       _InvalidateNumLines
;;;1948         _InvalidateTextSizeX(pObj);
00004e  4620              MOV      r0,r4
000050  f7fffffe          BL       _InvalidateTextSizeX
                  |L13.84|
;;;1949       }
;;;1950       _InvalidateTextArea(hObj);
000054  4630              MOV      r0,r6
000056  f7fffffe          BL       _InvalidateTextArea
;;;1951       WM_UNLOCK();
00005a  f7fffffe          BL       GUI_Unlock
;;;1952     }
00005e  bf00              NOP      
                  |L13.96|
;;;1953   }
000060  e8bd81f0          POP      {r4-r8,pc}
;;;1954   
                          ENDP


                          AREA ||i.MULTIEDIT_SetCursorOffset||, CODE, READONLY, ALIGN=1

                  MULTIEDIT_SetCursorOffset PROC
;;;1860   */
;;;1861   void MULTIEDIT_SetCursorOffset(MULTIEDIT_HANDLE hObj, int Offset) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;1862     if (hObj) {
000006  b184              CBZ      r4,|L14.42|
;;;1863       MULTIEDIT_OBJ* pObj;
;;;1864       WM_LOCK();
000008  f7fffffe          BL       GUI_Lock
;;;1865       pObj = MULTIEDIT_H2P(hObj);
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       GUI_ALLOC_h2p
000012  4606              MOV      r6,r0
;;;1866       _SetCursorPos(hObj, pObj, Offset);
000014  462a              MOV      r2,r5
000016  4631              MOV      r1,r6
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       _SetCursorPos
;;;1867       WM_Invalidate(hObj);
00001e  4620              MOV      r0,r4
000020  f7fffffe          BL       WM_InvalidateWindow
;;;1868       WM_UNLOCK();
000024  f7fffffe          BL       GUI_Unlock
;;;1869     }
000028  bf00              NOP      
                  |L14.42|
;;;1870   }
00002a  bd70              POP      {r4-r6,pc}
;;;1871   
                          ENDP


                          AREA ||i.MULTIEDIT_SetFont||, CODE, READONLY, ALIGN=1

                  MULTIEDIT_SetFont PROC
;;;1825   */
;;;1826   void MULTIEDIT_SetFont(MULTIEDIT_HANDLE hObj, const GUI_FONT GUI_UNI_PTR * pFont) {
000000  b570              PUSH     {r4-r6,lr}
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
;;;1827     if (hObj) {
000006  b1c6              CBZ      r6,|L15.58|
;;;1828       MULTIEDIT_OBJ* pObj;
;;;1829       WM_LOCK();
000008  f7fffffe          BL       GUI_Lock
;;;1830       pObj = MULTIEDIT_H2P(hObj);
00000c  4630              MOV      r0,r6
00000e  f7fffffe          BL       GUI_ALLOC_h2p
000012  4605              MOV      r5,r0
;;;1831       if (pObj->pFont != pFont) {
000014  6f68              LDR      r0,[r5,#0x74]
000016  42a0              CMP      r0,r4
000018  d00c              BEQ      |L15.52|
;;;1832         pObj->pFont = pFont;
00001a  676c              STR      r4,[r5,#0x74]
;;;1833         _InvalidateTextArea(hObj);
00001c  4630              MOV      r0,r6
00001e  f7fffffe          BL       _InvalidateTextArea
;;;1834         _InvalidateCursorXY(pObj);
000022  4628              MOV      r0,r5
000024  f7fffffe          BL       _InvalidateCursorXY
;;;1835         _InvalidateNumLines(pObj);
000028  4628              MOV      r0,r5
00002a  f7fffffe          BL       _InvalidateNumLines
;;;1836         _InvalidateTextSizeX(pObj);
00002e  4628              MOV      r0,r5
000030  f7fffffe          BL       _InvalidateTextSizeX
                  |L15.52|
;;;1837       }
;;;1838       WM_UNLOCK();
000034  f7fffffe          BL       GUI_Unlock
;;;1839     }
000038  bf00              NOP      
                  |L15.58|
;;;1840   }
00003a  bd70              POP      {r4-r6,pc}
;;;1841   
                          ENDP


                          AREA ||i.MULTIEDIT_SetHBorder||, CODE, READONLY, ALIGN=1

                  MULTIEDIT_SetHBorder PROC
;;;1808   */
;;;1809   void MULTIEDIT_SetHBorder(MULTIEDIT_HANDLE hObj, unsigned HBorder) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;1810     if (hObj) {
000006  b18d              CBZ      r5,|L16.44|
;;;1811       MULTIEDIT_OBJ* pObj;
;;;1812       WM_LOCK();
000008  f7fffffe          BL       GUI_Lock
;;;1813       pObj = MULTIEDIT_H2P(hObj);
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       GUI_ALLOC_h2p
000012  4606              MOV      r6,r0
;;;1814       if ((unsigned)pObj->HBorder != HBorder) {
000014  f896007b          LDRB     r0,[r6,#0x7b]
000018  42a0              CMP      r0,r4
00001a  d004              BEQ      |L16.38|
;;;1815         pObj->HBorder = HBorder;
00001c  f886407b          STRB     r4,[r6,#0x7b]
;;;1816         _Invalidate(hObj);
000020  4628              MOV      r0,r5
000022  f7fffffe          BL       _Invalidate
                  |L16.38|
;;;1817       }
;;;1818       WM_UNLOCK();
000026  f7fffffe          BL       GUI_Unlock
;;;1819     }
00002a  bf00              NOP      
                  |L16.44|
;;;1820   }
00002c  bd70              POP      {r4-r6,pc}
;;;1821   
                          ENDP


                          AREA ||i.MULTIEDIT_SetInsertMode||, CODE, READONLY, ALIGN=1

                  MULTIEDIT_SetInsertMode PROC
;;;1759   */
;;;1760   void MULTIEDIT_SetInsertMode(MULTIEDIT_HANDLE hObj, int OnOff) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;1761     _SetFlag(hObj, OnOff, MULTIEDIT_SF_INSERT);
000006  2204              MOVS     r2,#4
000008  4629              MOV      r1,r5
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       _SetFlag
;;;1762   }
000010  bd70              POP      {r4-r6,pc}
;;;1763   
                          ENDP


                          AREA ||i.MULTIEDIT_SetMaxNumChars||, CODE, READONLY, ALIGN=1

                  MULTIEDIT_SetMaxNumChars PROC
;;;1958   */
;;;1959   void MULTIEDIT_SetMaxNumChars(MULTIEDIT_HANDLE hObj, unsigned MaxNumChars) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4680              MOV      r8,r0
000006  460d              MOV      r5,r1
;;;1960     if (hObj) {
000008  f1b80f00          CMP      r8,#0
00000c  d02d              BEQ      |L18.106|
;;;1961       MULTIEDIT_OBJ* pObj;
;;;1962       WM_LOCK();
00000e  f7fffffe          BL       GUI_Lock
;;;1963       pObj = MULTIEDIT_H2P(hObj);
000012  4640              MOV      r0,r8
000014  f7fffffe          BL       GUI_ALLOC_h2p
000018  4604              MOV      r4,r0
;;;1964       pObj->MaxNumChars = MaxNumChars;
00001a  8765              STRH     r5,[r4,#0x3a]
;;;1965       if (MaxNumChars < (unsigned)pObj->NumCharsPrompt) {
00001c  8fe0              LDRH     r0,[r4,#0x3e]
00001e  42a8              CMP      r0,r5
000020  d900              BLS      |L18.36|
;;;1966         pObj->NumCharsPrompt = MaxNumChars;
000022  87e5              STRH     r5,[r4,#0x3e]
                  |L18.36|
;;;1967       }
;;;1968       if (pObj->hText && MaxNumChars) {
000024  8f20              LDRH     r0,[r4,#0x38]
000026  b1e8              CBZ      r0,|L18.100|
000028  b1e5              CBZ      r5,|L18.100|
;;;1969         char* pText;
;;;1970         int Offset;
;;;1971         pText = (char*) GUI_ALLOC_h2p(pObj->hText);
00002a  f9b40038          LDRSH    r0,[r4,#0x38]
00002e  f7fffffe          BL       GUI_ALLOC_h2p
000032  4606              MOV      r6,r0
;;;1972         Offset = GUI_UC__NumChars2NumBytes(pText, MaxNumChars);
000034  4629              MOV      r1,r5
000036  4630              MOV      r0,r6
000038  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00003c  4607              MOV      r7,r0
;;;1973         if (Offset < pObj->BufferSize) {
00003e  f8b40044          LDRH     r0,[r4,#0x44]
000042  42b8              CMP      r0,r7
000044  dd0d              BLE      |L18.98|
;;;1974           pText += Offset;
000046  443e              ADD      r6,r6,r7
;;;1975           *pText = 0;
000048  2000              MOVS     r0,#0
00004a  7030              STRB     r0,[r6,#0]
;;;1976           _SetCursorPos(hObj, pObj, Offset);
00004c  463a              MOV      r2,r7
00004e  4621              MOV      r1,r4
000050  4640              MOV      r0,r8
000052  f7fffffe          BL       _SetCursorPos
;;;1977           _InvalidateTextArea(hObj);
000056  4640              MOV      r0,r8
000058  f7fffffe          BL       _InvalidateTextArea
;;;1978           _InvalidateNumChars(pObj);
00005c  4620              MOV      r0,r4
00005e  f7fffffe          BL       _InvalidateNumChars
                  |L18.98|
;;;1979         }
;;;1980       }
000062  bf00              NOP      
                  |L18.100|
;;;1981       WM_UNLOCK();
000064  f7fffffe          BL       GUI_Unlock
;;;1982     }
000068  bf00              NOP      
                  |L18.106|
;;;1983   }
00006a  e8bd81f0          POP      {r4-r8,pc}
;;;1984   
                          ENDP


                          AREA ||i.MULTIEDIT_SetPasswordMode||, CODE, READONLY, ALIGN=1

                  MULTIEDIT_SetPasswordMode PROC
;;;1775   */
;;;1776   void MULTIEDIT_SetPasswordMode(MULTIEDIT_HANDLE hObj, int OnOff) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;1777     if (hObj) {
000006  b1b4              CBZ      r4,|L19.54|
;;;1778       MULTIEDIT_OBJ* pObj;
;;;1779       WM_LOCK();
000008  f7fffffe          BL       GUI_Lock
;;;1780       pObj = MULTIEDIT_H2P(hObj);
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       GUI_ALLOC_h2p
000012  4606              MOV      r6,r0
;;;1781       _SetFlag(hObj, OnOff, MULTIEDIT_SF_PASSWORD);
000014  2220              MOVS     r2,#0x20
000016  4629              MOV      r1,r5
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       _SetFlag
;;;1782       _InvalidateCursorXY(pObj);
00001e  4630              MOV      r0,r6
000020  f7fffffe          BL       _InvalidateCursorXY
;;;1783       _InvalidateNumLines(pObj);
000024  4630              MOV      r0,r6
000026  f7fffffe          BL       _InvalidateNumLines
;;;1784       _InvalidateTextSizeX(pObj);
00002a  4630              MOV      r0,r6
00002c  f7fffffe          BL       _InvalidateTextSizeX
;;;1785       WM_UNLOCK();
000030  f7fffffe          BL       GUI_Unlock
;;;1786     }
000034  bf00              NOP      
                  |L19.54|
;;;1787   }
000036  bd70              POP      {r4-r6,pc}
;;;1788   
                          ENDP


                          AREA ||i.MULTIEDIT_SetPrompt||, CODE, READONLY, ALIGN=1

                  MULTIEDIT_SetPrompt PROC
;;;1890   */
;;;1891   void MULTIEDIT_SetPrompt(MULTIEDIT_HANDLE hObj, const char* pPrompt) {
000000  e92d4ff8          PUSH     {r3-r11,lr}
000004  4682              MOV      r10,r0
000006  460e              MOV      r6,r1
;;;1892     if (hObj) {
000008  f1ba0f00          CMP      r10,#0
00000c  d05a              BEQ      |L20.196|
;;;1893       MULTIEDIT_OBJ* pObj;
;;;1894       int NumCharsNew = 0, NumCharsOld = 0;
00000e  2700              MOVS     r7,#0
000010  46bb              MOV      r11,r7
;;;1895       int NumBytesNew = 0, NumBytesOld = 0;
000012  46b8              MOV      r8,r7
000014  46b9              MOV      r9,r7
;;;1896       char* pText;
;;;1897       WM_LOCK();
000016  f7fffffe          BL       GUI_Lock
;;;1898       pObj = MULTIEDIT_H2P(hObj);
00001a  4650              MOV      r0,r10
00001c  f7fffffe          BL       GUI_ALLOC_h2p
000020  4604              MOV      r4,r0
;;;1899       if (pObj->hText) {
000022  8f20              LDRH     r0,[r4,#0x38]
000024  b158              CBZ      r0,|L20.62|
;;;1900         pText = (char*) GUI_ALLOC_h2p(pObj->hText);
000026  f9b40038          LDRSH    r0,[r4,#0x38]
00002a  f7fffffe          BL       GUI_ALLOC_h2p
00002e  4605              MOV      r5,r0
;;;1901         NumCharsOld = pObj->NumCharsPrompt;
000030  f8b4b03e          LDRH     r11,[r4,#0x3e]
;;;1902         NumBytesOld = GUI_UC__NumChars2NumBytes(pText, NumCharsOld);
000034  4659              MOV      r1,r11
000036  4628              MOV      r0,r5
000038  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00003c  4681              MOV      r9,r0
                  |L20.62|
;;;1903       }
;;;1904       if (pPrompt) {
00003e  b146              CBZ      r6,|L20.82|
;;;1905         NumCharsNew = GUI__GetNumChars(pPrompt);
000040  4630              MOV      r0,r6
000042  f7fffffe          BL       GUI__GetNumChars
000046  4607              MOV      r7,r0
;;;1906         NumBytesNew = GUI_UC__NumChars2NumBytes(pPrompt, NumCharsNew);
000048  4639              MOV      r1,r7
00004a  4630              MOV      r0,r6
00004c  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000050  4680              MOV      r8,r0
                  |L20.82|
;;;1907       }
;;;1908       if (_IsCharsAvailable(pObj, NumCharsNew - NumCharsOld)) {
000052  eba7010b          SUB      r1,r7,r11
000056  4620              MOV      r0,r4
000058  f7fffffe          BL       _IsCharsAvailable
00005c  b378              CBZ      r0,|L20.190|
;;;1909         if (_IsSpaceInBuffer(pObj, NumBytesNew - NumBytesOld)) {
00005e  eba80109          SUB      r1,r8,r9
000062  4620              MOV      r0,r4
000064  f7fffffe          BL       _IsSpaceInBuffer
000068  b348              CBZ      r0,|L20.190|
;;;1910           pText = (char*) GUI_ALLOC_h2p(pObj->hText);
00006a  f9b40038          LDRSH    r0,[r4,#0x38]
00006e  f7fffffe          BL       GUI_ALLOC_h2p
000072  4605              MOV      r5,r0
;;;1911           memmove(pText + NumBytesNew, pText + NumBytesOld, strlen(pText + NumBytesOld) + 1);
000074  eb050009          ADD      r0,r5,r9
000078  f7fffffe          BL       strlen
00007c  1c40              ADDS     r0,r0,#1
00007e  eb050109          ADD      r1,r5,r9
000082  9000              STR      r0,[sp,#0]
000084  eb050008          ADD      r0,r5,r8
000088  9a00              LDR      r2,[sp,#0]
00008a  f7fffffe          BL       __aeabi_memmove
;;;1912           if (pPrompt) {
00008e  b126              CBZ      r6,|L20.154|
;;;1913             memcpy(pText, pPrompt, NumBytesNew);
000090  4642              MOV      r2,r8
000092  4631              MOV      r1,r6
000094  4628              MOV      r0,r5
000096  f7fffffe          BL       __aeabi_memcpy
                  |L20.154|
;;;1914           }
;;;1915           pObj->NumCharsPrompt = NumCharsNew;
00009a  87e7              STRH     r7,[r4,#0x3e]
;;;1916           _SetCursorPos(hObj, pObj, NumCharsNew);
00009c  463a              MOV      r2,r7
00009e  4621              MOV      r1,r4
0000a0  4650              MOV      r0,r10
0000a2  f7fffffe          BL       _SetCursorPos
;;;1917           _InvalidateTextArea(hObj);
0000a6  4650              MOV      r0,r10
0000a8  f7fffffe          BL       _InvalidateTextArea
;;;1918           _InvalidateNumChars(pObj);
0000ac  4620              MOV      r0,r4
0000ae  f7fffffe          BL       _InvalidateNumChars
;;;1919           _InvalidateNumLines(pObj);
0000b2  4620              MOV      r0,r4
0000b4  f7fffffe          BL       _InvalidateNumLines
;;;1920           _InvalidateTextSizeX(pObj);
0000b8  4620              MOV      r0,r4
0000ba  f7fffffe          BL       _InvalidateTextSizeX
                  |L20.190|
;;;1921         }
;;;1922       }
;;;1923       WM_UNLOCK();
0000be  f7fffffe          BL       GUI_Unlock
;;;1924     }
0000c2  bf00              NOP      
                  |L20.196|
;;;1925   }
0000c4  e8bd8ff8          POP      {r3-r11,pc}
;;;1926   
                          ENDP


                          AREA ||i.MULTIEDIT_SetReadOnly||, CODE, READONLY, ALIGN=1

                  MULTIEDIT_SetReadOnly PROC
;;;1767   */
;;;1768   void MULTIEDIT_SetReadOnly(MULTIEDIT_HANDLE hObj, int OnOff) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;1769     _SetFlag(hObj, OnOff, MULTIEDIT_SF_READONLY);
000006  2201              MOVS     r2,#1
000008  4629              MOV      r1,r5
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       _SetFlag
;;;1770   }
000010  bd70              POP      {r4-r6,pc}
;;;1771   
                          ENDP


                          AREA ||i.MULTIEDIT_SetText||, CODE, READONLY, ALIGN=1

                  MULTIEDIT_SetText PROC
;;;1674   */
;;;1675   void MULTIEDIT_SetText(MULTIEDIT_HANDLE hObj, const char* pNew) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;1676     if (hObj) {
000006  b16c              CBZ      r4,|L22.36|
;;;1677       MULTIEDIT_OBJ * pObj;
;;;1678       WM_LOCK();
000008  f7fffffe          BL       GUI_Lock
;;;1679       pObj = MULTIEDIT_H2P(hObj);
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       GUI_ALLOC_h2p
000012  4606              MOV      r6,r0
;;;1680       _SetText(hObj, pObj, pNew);
000014  462a              MOV      r2,r5
000016  4631              MOV      r1,r6
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       _SetText
;;;1681       WM_UNLOCK();
00001e  f7fffffe          BL       GUI_Unlock
;;;1682     }
000022  bf00              NOP      
                  |L22.36|
;;;1683   }
000024  bd70              POP      {r4-r6,pc}
;;;1684   
                          ENDP


                          AREA ||i.MULTIEDIT_SetTextAlign||, CODE, READONLY, ALIGN=1

                  MULTIEDIT_SetTextAlign PROC
;;;2015   */
;;;2016   void MULTIEDIT_SetTextAlign(MULTIEDIT_HANDLE hObj, int Align) {
000000  b570              PUSH     {r4-r6,lr}
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
;;;2017     if (hObj) {
000006  b1be              CBZ      r6,|L23.56|
;;;2018       MULTIEDIT_OBJ* pObj;
;;;2019       WM_LOCK();
000008  f7fffffe          BL       GUI_Lock
;;;2020       pObj = MULTIEDIT_H2P(hObj);
00000c  4630              MOV      r0,r6
00000e  f7fffffe          BL       GUI_ALLOC_h2p
000012  4605              MOV      r5,r0
;;;2021       if (pObj->Align != Align) {
000014  f8b50058          LDRH     r0,[r5,#0x58]
000018  42a0              CMP      r0,r4
00001a  d00a              BEQ      |L23.50|
;;;2022         pObj->Align = Align;
00001c  f8a54058          STRH     r4,[r5,#0x58]
;;;2023         _InvalidateTextArea(hObj);
000020  4630              MOV      r0,r6
000022  f7fffffe          BL       _InvalidateTextArea
;;;2024         _InvalidateCursorXY(pObj);
000026  4628              MOV      r0,r5
000028  f7fffffe          BL       _InvalidateCursorXY
;;;2025         //_InvalidateNumLines(pObj);
;;;2026         _InvalidateTextSizeX(pObj);
00002c  4628              MOV      r0,r5
00002e  f7fffffe          BL       _InvalidateTextSizeX
                  |L23.50|
;;;2027       }
;;;2028       WM_UNLOCK();
000032  f7fffffe          BL       GUI_Unlock
;;;2029     }
000036  bf00              NOP      
                  |L23.56|
;;;2030   }
000038  bd70              POP      {r4-r6,pc}
;;;2031   
                          ENDP


                          AREA ||i.MULTIEDIT_SetTextColor||, CODE, READONLY, ALIGN=1

                  MULTIEDIT_SetTextColor PROC
;;;1875   */
;;;1876   void MULTIEDIT_SetTextColor(MULTIEDIT_HANDLE hObj, unsigned Index, GUI_COLOR color) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
000008  4616              MOV      r6,r2
;;;1877     if (hObj && (Index < NUM_DISP_MODES)) {
00000a  b18d              CBZ      r5,|L24.48|
00000c  2c02              CMP      r4,#2
00000e  d20f              BCS      |L24.48|
;;;1878       MULTIEDIT_OBJ* pObj;
;;;1879       WM_LOCK();
000010  f7fffffe          BL       GUI_Lock
;;;1880       pObj = MULTIEDIT_H2P(hObj);
000014  4628              MOV      r0,r5
000016  f7fffffe          BL       GUI_ALLOC_h2p
00001a  4607              MOV      r7,r0
;;;1881       pObj->aColor[Index] = color;
00001c  f1070030          ADD      r0,r7,#0x30
000020  f8406024          STR      r6,[r0,r4,LSL #2]
;;;1882       WM_Invalidate(hObj);
000024  4628              MOV      r0,r5
000026  f7fffffe          BL       WM_InvalidateWindow
;;;1883       WM_UNLOCK();
00002a  f7fffffe          BL       GUI_Unlock
;;;1884     }
00002e  bf00              NOP      
                  |L24.48|
;;;1885   }
000030  e8bd81f0          POP      {r4-r8,pc}
;;;1886   
                          ENDP


                          AREA ||i.MULTIEDIT_SetWrapChar||, CODE, READONLY, ALIGN=1

                  MULTIEDIT_SetWrapChar PROC
;;;1743   */
;;;1744   void MULTIEDIT_SetWrapChar(MULTIEDIT_HANDLE hObj) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;1745     _SetWrapMode(hObj, GUI_WRAPMODE_CHAR);
000004  2102              MOVS     r1,#2
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       _SetWrapMode
;;;1746   }
00000c  bd10              POP      {r4,pc}
;;;1747   
                          ENDP


                          AREA ||i.MULTIEDIT_SetWrapNone||, CODE, READONLY, ALIGN=1

                  MULTIEDIT_SetWrapNone PROC
;;;1751   */
;;;1752   void MULTIEDIT_SetWrapNone(MULTIEDIT_HANDLE hObj) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;1753     _SetWrapMode(hObj, GUI_WRAPMODE_NONE);
000004  2100              MOVS     r1,#0
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       _SetWrapMode
;;;1754   }
00000c  bd10              POP      {r4,pc}
;;;1755   
                          ENDP


                          AREA ||i.MULTIEDIT_SetWrapWord||, CODE, READONLY, ALIGN=1

                  MULTIEDIT_SetWrapWord PROC
;;;1735   */
;;;1736   void MULTIEDIT_SetWrapWord(MULTIEDIT_HANDLE hObj) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;1737     _SetWrapMode(hObj, GUI_WRAPMODE_WORD);
000004  2101              MOVS     r1,#1
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       _SetWrapMode
;;;1738   }
00000c  bd10              POP      {r4,pc}
;;;1739   
                          ENDP


                          AREA ||i._AddKey||, CODE, READONLY, ALIGN=1

                  _AddKey PROC
;;;1295   */
;;;1296   static int _AddKey(MULTIEDIT_HANDLE hObj, U16 Key) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
000006  460d              MOV      r5,r1
;;;1297     int r = 0;               /* Key has not been consumed */
000008  2700              MOVS     r7,#0
;;;1298     MULTIEDIT_OBJ* pObj;
;;;1299     pObj = MULTIEDIT_H2P(hObj);
00000a  4630              MOV      r0,r6
00000c  f7fffffe          BL       GUI_ALLOC_h2p
000010  4604              MOV      r4,r0
;;;1300     switch (Key) {
000012  4628              MOV      r0,r5
000014  2d13              CMP      r5,#0x13
000016  d01c              BEQ      |L28.82|
000018  dc0c              BGT      |L28.52|
00001a  2810              CMP      r0,#0x10
00001c  d028              BEQ      |L28.112|
00001e  dc04              BGT      |L28.42|
000020  2808              CMP      r0,#8
000022  d03a              BEQ      |L28.154|
000024  280d              CMP      r0,#0xd
                  |L28.38|
000026  d16e              BNE      |L28.262|
000028  e06e              B        |L28.264|
                  |L28.42|
00002a  2811              CMP      r0,#0x11
00002c  d00b              BEQ      |L28.70|
00002e  2812              CMP      r0,#0x12
000030  d1f9              BNE      |L28.38|
000032  e014              B        |L28.94|
                  |L28.52|
000034  3817              SUBS     r0,r0,#0x17
000036  2808              CMP      r0,#8
000038  d265              BCS      |L28.262|
00003a  e8dff000          TBB      [pc,r0]
00003e  2822              DCB      0x28,0x22
000040  89898889          DCB      0x89,0x89,0x88,0x89
000044  5045              DCB      0x50,0x45
                  |L28.70|
;;;1301     case GUI_KEY_UP:
;;;1302       _MoveCursorUp(hObj, pObj);
000046  4621              MOV      r1,r4
000048  4630              MOV      r0,r6
00004a  f7fffffe          BL       _MoveCursorUp
;;;1303       r = 1;               /* Key has been consumed */
00004e  2701              MOVS     r7,#1
;;;1304       break;
000050  e09d              B        |L28.398|
                  |L28.82|
;;;1305     case GUI_KEY_DOWN:
;;;1306       _MoveCursorDown(hObj, pObj);
000052  4621              MOV      r1,r4
000054  4630              MOV      r0,r6
000056  f7fffffe          BL       _MoveCursorDown
;;;1307       r = 1;               /* Key has been consumed */
00005a  2701              MOVS     r7,#1
;;;1308       break;
00005c  e097              B        |L28.398|
                  |L28.94|
;;;1309     case GUI_KEY_RIGHT:
;;;1310       _SetCursorPos(hObj, pObj, pObj->CursorPosChar + 1);
00005e  f8b40048          LDRH     r0,[r4,#0x48]
000062  1c42              ADDS     r2,r0,#1
000064  4621              MOV      r1,r4
000066  4630              MOV      r0,r6
000068  f7fffffe          BL       _SetCursorPos
;;;1311       r = 1;               /* Key has been consumed */
00006c  2701              MOVS     r7,#1
;;;1312       break;
00006e  e08e              B        |L28.398|
                  |L28.112|
;;;1313     case GUI_KEY_LEFT:
;;;1314       _SetCursorPos(hObj, pObj, pObj->CursorPosChar - 1);
000070  f8b40048          LDRH     r0,[r4,#0x48]
000074  1e42              SUBS     r2,r0,#1
000076  4621              MOV      r1,r4
000078  4630              MOV      r0,r6
00007a  f7fffffe          BL       _SetCursorPos
;;;1315       r = 1;               /* Key has been consumed */
00007e  2701              MOVS     r7,#1
;;;1316       break;
000080  e085              B        |L28.398|
;;;1317     case GUI_KEY_END:
;;;1318       _MoveCursor2LineEnd(hObj, pObj);
000082  4621              MOV      r1,r4
000084  4630              MOV      r0,r6
000086  f7fffffe          BL       _MoveCursor2LineEnd
;;;1319       r = 1;               /* Key has been consumed */
00008a  2701              MOVS     r7,#1
;;;1320       break;
00008c  e07f              B        |L28.398|
;;;1321     case GUI_KEY_HOME:
;;;1322       _MoveCursor2LinePos1(hObj, pObj);
00008e  4621              MOV      r1,r4
000090  4630              MOV      r0,r6
000092  f7fffffe          BL       _MoveCursor2LinePos1
;;;1323       r = 1;               /* Key has been consumed */
000096  2701              MOVS     r7,#1
;;;1324       break;
000098  e079              B        |L28.398|
                  |L28.154|
;;;1325     case GUI_KEY_BACKSPACE:
;;;1326       if (!(pObj->Flags & MULTIEDIT_SF_READONLY)) {
00009a  f8940078          LDRB     r0,[r4,#0x78]
00009e  f0100f01          TST      r0,#1
0000a2  d110              BNE      |L28.198|
;;;1327         if (pObj->CursorPosChar > pObj->NumCharsPrompt) {
0000a4  f8b40048          LDRH     r0,[r4,#0x48]
0000a8  8fe1              LDRH     r1,[r4,#0x3e]
0000aa  4288              CMP      r0,r1
0000ac  dd0a              BLE      |L28.196|
;;;1328           _SetCursorPos(hObj, pObj, pObj->CursorPosChar - 1);
0000ae  f8b40048          LDRH     r0,[r4,#0x48]
0000b2  1e42              SUBS     r2,r0,#1
0000b4  4621              MOV      r1,r4
0000b6  4630              MOV      r0,r6
0000b8  f7fffffe          BL       _SetCursorPos
;;;1329           _DeleteChar(hObj, pObj);
0000bc  4621              MOV      r1,r4
0000be  4630              MOV      r0,r6
0000c0  f7fffffe          BL       _DeleteChar
                  |L28.196|
;;;1330         }
;;;1331         r = 1;               /* Key has been consumed */
0000c4  2701              MOVS     r7,#1
                  |L28.198|
;;;1332       }
;;;1333       break;
0000c6  e062              B        |L28.398|
;;;1334     case GUI_KEY_DELETE:
;;;1335       if (!(pObj->Flags & MULTIEDIT_SF_READONLY)) {
0000c8  f8940078          LDRB     r0,[r4,#0x78]
0000cc  f0100f01          TST      r0,#1
0000d0  d104              BNE      |L28.220|
;;;1336         _DeleteChar(hObj, pObj);
0000d2  4621              MOV      r1,r4
0000d4  4630              MOV      r0,r6
0000d6  f7fffffe          BL       _DeleteChar
;;;1337         r = 1;               /* Key has been consumed */
0000da  2701              MOVS     r7,#1
                  |L28.220|
;;;1338       }
;;;1339       break;
0000dc  e057              B        |L28.398|
;;;1340     case GUI_KEY_INSERT:
;;;1341       if (!(pObj->Flags & MULTIEDIT_CF_INSERT)) {
0000de  f8940078          LDRB     r0,[r4,#0x78]
0000e2  f0100f04          TST      r0,#4
0000e6  d106              BNE      |L28.246|
;;;1342         pObj->Flags |= MULTIEDIT_CF_INSERT;
0000e8  f8940078          LDRB     r0,[r4,#0x78]
0000ec  f0400004          ORR      r0,r0,#4
0000f0  f8840078          STRB     r0,[r4,#0x78]
0000f4  e005              B        |L28.258|
                  |L28.246|
;;;1343       } else {
;;;1344         pObj->Flags &= ~MULTIEDIT_CF_INSERT;
0000f6  f8940078          LDRB     r0,[r4,#0x78]
0000fa  f0200004          BIC      r0,r0,#4
0000fe  f8840078          STRB     r0,[r4,#0x78]
                  |L28.258|
;;;1345       }
;;;1346       r = 1;               /* Key has been consumed */
000102  2701              MOVS     r7,#1
;;;1347       break;
000104  e043              B        |L28.398|
                  |L28.262|
000106  e023              B        |L28.336|
                  |L28.264|
;;;1348     case GUI_KEY_ENTER:
;;;1349       if (pObj->Flags & MULTIEDIT_SF_READONLY) {
000108  f8940078          LDRB     r0,[r4,#0x78]
00010c  f0100f01          TST      r0,#1
000110  d004              BEQ      |L28.284|
;;;1350         _MoveCursor2NextLine(hObj, pObj);
000112  4621              MOV      r1,r4
000114  4630              MOV      r0,r6
000116  f7fffffe          BL       _MoveCursor2NextLine
00011a  e016              B        |L28.330|
                  |L28.284|
;;;1351       } else {
;;;1352         if (_InsertChar(hObj, pObj, (U8)('\n'))) {
00011c  220a              MOVS     r2,#0xa
00011e  4621              MOV      r1,r4
000120  4630              MOV      r0,r6
000122  f7fffffe          BL       _InsertChar
000126  b180              CBZ      r0,|L28.330|
;;;1353           if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
000128  f8940078          LDRB     r0,[r4,#0x78]
00012c  f0100f20          TST      r0,#0x20
000130  d007              BEQ      |L28.322|
;;;1354             _SetCursorPos(hObj, pObj, pObj->CursorPosChar + 1);
000132  f8b40048          LDRH     r0,[r4,#0x48]
000136  1c42              ADDS     r2,r0,#1
000138  4621              MOV      r1,r4
00013a  4630              MOV      r0,r6
00013c  f7fffffe          BL       _SetCursorPos
000140  e003              B        |L28.330|
                  |L28.322|
;;;1355           } else {
;;;1356             _MoveCursor2NextLine(hObj, pObj);
000142  4621              MOV      r1,r4
000144  4630              MOV      r0,r6
000146  f7fffffe          BL       _MoveCursor2NextLine
                  |L28.330|
;;;1357           }
;;;1358         }
;;;1359       }
;;;1360       r = 1;               /* Key has been consumed */
00014a  2701              MOVS     r7,#1
;;;1361       break;
00014c  e01f              B        |L28.398|
;;;1362     case GUI_KEY_ESCAPE:
;;;1363       break;
00014e  e01e              B        |L28.398|
                  |L28.336|
;;;1364     default:
;;;1365       if (!(pObj->Flags & MULTIEDIT_SF_READONLY) && (Key >= 0x20)) {
000150  f8940078          LDRB     r0,[r4,#0x78]
000154  f0100f01          TST      r0,#1
000158  d118              BNE      |L28.396|
00015a  2d20              CMP      r5,#0x20
00015c  db16              BLT      |L28.396|
;;;1366         if (_IsOverwriteAtThisChar(hObj, pObj)) {
00015e  4621              MOV      r1,r4
000160  4630              MOV      r0,r6
000162  f7fffffe          BL       _IsOverwriteAtThisChar
000166  b118              CBZ      r0,|L28.368|
;;;1367           _DeleteChar(hObj, pObj);
000168  4621              MOV      r1,r4
00016a  4630              MOV      r0,r6
00016c  f7fffffe          BL       _DeleteChar
                  |L28.368|
;;;1368         }
;;;1369         if (_InsertChar(hObj, pObj, Key)) {
000170  462a              MOV      r2,r5
000172  4621              MOV      r1,r4
000174  4630              MOV      r0,r6
000176  f7fffffe          BL       _InsertChar
00017a  b130              CBZ      r0,|L28.394|
;;;1370           _SetCursorPos(hObj, pObj, pObj->CursorPosChar + 1);
00017c  f8b40048          LDRH     r0,[r4,#0x48]
000180  1c42              ADDS     r2,r0,#1
000182  4621              MOV      r1,r4
000184  4630              MOV      r0,r6
000186  f7fffffe          BL       _SetCursorPos
                  |L28.394|
;;;1371         }
;;;1372         r = 1;               /* Key has been consumed */
00018a  2701              MOVS     r7,#1
                  |L28.396|
00018c  bf00              NOP                            ;1300
                  |L28.398|
00018e  bf00              NOP                            ;1304
;;;1373       }
;;;1374     }
;;;1375     _InvalidateTextArea(hObj);
000190  4630              MOV      r0,r6
000192  f7fffffe          BL       _InvalidateTextArea
;;;1376     return r;
000196  4638              MOV      r0,r7
;;;1377   }
000198  e8bd81f0          POP      {r4-r8,pc}
;;;1378   
                          ENDP


                          AREA ||i._CalcNextValidCursorPos||, CODE, READONLY, ALIGN=1

                  _CalcNextValidCursorPos PROC
;;;705    */
;;;706    static int _CalcNextValidCursorPos(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, int CursorPosChar, int * pCursorPosByte, int * pCursorLine) {
000000  e92d4fff          PUSH     {r0-r11,lr}
000004  b083              SUB      sp,sp,#0xc
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  469a              MOV      r10,r3
;;;707      if (pObj->hText) {
00000c  8f20              LDRH     r0,[r4,#0x38]
00000e  2800              CMP      r0,#0
000010  d062              BEQ      |L29.216|
;;;708        char *pNextLine, *pCursor, *pText;
;;;709        int CursorLine, NumChars, CursorPosByte;
;;;710        pText    = (char*) GUI_ALLOC_h2p(pObj->hText);
000012  f9b40038          LDRSH    r0,[r4,#0x38]
000016  f7fffffe          BL       GUI_ALLOC_h2p
00001a  4607              MOV      r7,r0
;;;711        NumChars = _GetNumChars(pObj);
00001c  4620              MOV      r0,r4
00001e  f7fffffe          BL       _GetNumChars
000022  9002              STR      r0,[sp,#8]
;;;712        /* Set offset in valid range */
;;;713        if (CursorPosChar < pObj->NumCharsPrompt) {
000024  8fe0              LDRH     r0,[r4,#0x3e]
000026  42a8              CMP      r0,r5
000028  dd00              BLE      |L29.44|
;;;714          CursorPosChar = pObj->NumCharsPrompt;
00002a  8fe5              LDRH     r5,[r4,#0x3e]
                  |L29.44|
;;;715        }
;;;716        if (CursorPosChar > NumChars) {
00002c  9802              LDR      r0,[sp,#8]
00002e  4285              CMP      r5,r0
000030  dd00              BLE      |L29.52|
;;;717          CursorPosChar = NumChars;
000032  9d02              LDR      r5,[sp,#8]
                  |L29.52|
;;;718        }
;;;719        CursorPosByte = GUI_UC__NumChars2NumBytes(pText, CursorPosChar);
000034  4629              MOV      r1,r5
000036  4638              MOV      r0,r7
000038  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00003c  9001              STR      r0,[sp,#4]
;;;720        CursorLine    = _GetCursorLine(hObj, pObj, pText, CursorPosChar);
00003e  462b              MOV      r3,r5
000040  463a              MOV      r2,r7
000042  4621              MOV      r1,r4
000044  9803              LDR      r0,[sp,#0xc]
000046  f7fffffe          BL       _GetCursorLine
00004a  4680              MOV      r8,r0
;;;721        pCursor       = pText + CursorPosByte;
00004c  9801              LDR      r0,[sp,#4]
00004e  eb070b00          ADD      r11,r7,r0
;;;722        pNextLine     = _GetpLine(hObj, pObj, CursorLine);
000052  4642              MOV      r2,r8
000054  4621              MOV      r1,r4
000056  9803              LDR      r0,[sp,#0xc]
000058  f7fffffe          BL       _GetpLine
00005c  4606              MOV      r6,r0
;;;723        if (pNextLine > pCursor) {
00005e  455e              CMP      r6,r11
000060  d92b              BLS      |L29.186|
;;;724          if (pObj->CursorPosChar < CursorPosChar) {
000062  f8b40048          LDRH     r0,[r4,#0x48]
000066  42a8              CMP      r0,r5
000068  da01              BGE      |L29.110|
;;;725            pCursor = pNextLine;
00006a  46b3              MOV      r11,r6
00006c  e013              B        |L29.150|
                  |L29.110|
;;;726          } else {
;;;727            char *pPrevLine;
;;;728            int NumChars;
;;;729            pPrevLine  = _GetpLine(hObj, pObj, CursorLine - 1);
00006e  f1a80201          SUB      r2,r8,#1
000072  4621              MOV      r1,r4
000074  9803              LDR      r0,[sp,#0xc]
000076  f7fffffe          BL       _GetpLine
00007a  4681              MOV      r9,r0
;;;730            NumChars   = _WrapGetNumCharsDisp(hObj, pObj, pPrevLine);
00007c  464a              MOV      r2,r9
00007e  4621              MOV      r1,r4
000080  9803              LDR      r0,[sp,#0xc]
000082  f7fffffe          BL       _WrapGetNumCharsDisp
000086  9000              STR      r0,[sp,#0]
;;;731            pPrevLine += GUI_UC__NumChars2NumBytes(pPrevLine, NumChars);
000088  4648              MOV      r0,r9
00008a  9900              LDR      r1,[sp,#0]
00008c  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000090  4481              ADD      r9,r9,r0
;;;732            pCursor = pPrevLine;
000092  46cb              MOV      r11,r9
;;;733          }
000094  bf00              NOP      
                  |L29.150|
;;;734          CursorPosChar = GUI_UC__NumBytes2NumChars(pText, pCursor - pText);
000096  ebab0107          SUB      r1,r11,r7
00009a  4638              MOV      r0,r7
00009c  f7fffffe          BL       GUI_UC__NumBytes2NumChars
0000a0  4605              MOV      r5,r0
;;;735          CursorPosByte = GUI_UC__NumChars2NumBytes(pText, CursorPosChar);
0000a2  4629              MOV      r1,r5
0000a4  4638              MOV      r0,r7
0000a6  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0000aa  9001              STR      r0,[sp,#4]
;;;736          CursorLine    = _GetCursorLine(hObj, pObj, pText, CursorPosChar);
0000ac  462b              MOV      r3,r5
0000ae  463a              MOV      r2,r7
0000b0  4621              MOV      r1,r4
0000b2  9803              LDR      r0,[sp,#0xc]
0000b4  f7fffffe          BL       _GetCursorLine
0000b8  4680              MOV      r8,r0
                  |L29.186|
;;;737        }
;;;738        if (pCursorPosByte) {
0000ba  f1ba0f00          CMP      r10,#0
0000be  d002              BEQ      |L29.198|
;;;739          *pCursorPosByte = CursorPosByte;
0000c0  9801              LDR      r0,[sp,#4]
0000c2  f8ca0000          STR      r0,[r10,#0]
                  |L29.198|
;;;740        }
;;;741        if (pCursorLine) {
0000c6  9810              LDR      r0,[sp,#0x40]
0000c8  b110              CBZ      r0,|L29.208|
;;;742          *pCursorLine = CursorLine;
0000ca  9810              LDR      r0,[sp,#0x40]
0000cc  f8c08000          STR      r8,[r0,#0]
                  |L29.208|
;;;743        }
;;;744        return CursorPosChar;
0000d0  4628              MOV      r0,r5
                  |L29.210|
;;;745      }
;;;746      return 0;
;;;747    }
0000d2  b007              ADD      sp,sp,#0x1c
0000d4  e8bd8ff0          POP      {r4-r11,pc}
                  |L29.216|
0000d8  2000              MOVS     r0,#0                 ;746
0000da  e7fa              B        |L29.210|
;;;748    
                          ENDP


                          AREA ||i._CalcScrollParas||, CODE, READONLY, ALIGN=1

                  _CalcScrollParas PROC
;;;584    */
;;;585    static void _CalcScrollParas(MULTIEDIT_HANDLE hObj) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
;;;586      MULTIEDIT_OBJ* pObj = MULTIEDIT_H2P(hObj);
000004  4628              MOV      r0,r5
000006  f7fffffe          BL       GUI_ALLOC_h2p
00000a  4604              MOV      r4,r0
;;;587      /* Calc vertical scroll parameters */
;;;588      pObj->ScrollStateV.NumItems = _GetNumLines(hObj, pObj);
00000c  4621              MOV      r1,r4
00000e  4628              MOV      r0,r5
000010  f7fffffe          BL       _GetNumLines
000014  65e0              STR      r0,[r4,#0x5c]
;;;589      pObj->ScrollStateV.PageSize = _GetNumVisLines(hObj, pObj);
000016  4621              MOV      r1,r4
000018  4628              MOV      r0,r5
00001a  f7fffffe          BL       _GetNumVisLines
00001e  6660              STR      r0,[r4,#0x64]
;;;590      /* Calc horizontal scroll parameters */
;;;591      pObj->ScrollStateH.NumItems = _GetTextSizeX(hObj, pObj);
000020  4621              MOV      r1,r4
000022  4628              MOV      r0,r5
000024  f7fffffe          BL       _GetTextSizeX
000028  66a0              STR      r0,[r4,#0x68]
;;;592      pObj->ScrollStateH.PageSize = _GetXSize(hObj, pObj);
00002a  4621              MOV      r1,r4
00002c  4628              MOV      r0,r5
00002e  f7fffffe          BL       _GetXSize
000032  6720              STR      r0,[r4,#0x70]
;;;593      _CalcScrollPos(hObj, pObj);
000034  4621              MOV      r1,r4
000036  4628              MOV      r0,r5
000038  f7fffffe          BL       _CalcScrollPos
;;;594    }
00003c  bd70              POP      {r4-r6,pc}
;;;595    
                          ENDP


                          AREA ||i._CalcScrollPos||, CODE, READONLY, ALIGN=1

                  _CalcScrollPos PROC
;;;467    */
;;;468    static void _CalcScrollPos(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000000  b57c              PUSH     {r2-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;469      int xCursor, yCursor;
;;;470      _GetCursorXY(hObj, pObj, &xCursor, &yCursor);
000006  466b              MOV      r3,sp
000008  aa01              ADD      r2,sp,#4
00000a  4621              MOV      r1,r4
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       _GetCursorXY
;;;471      yCursor /= GUI_GetYDistOfFont(pObj->pFont);
000012  6f60              LDR      r0,[r4,#0x74]
000014  f7fffffe          BL       GUI_GetYDistOfFont
000018  9900              LDR      r1,[sp,#0]
00001a  fb91f0f0          SDIV     r0,r1,r0
00001e  9000              STR      r0,[sp,#0]
;;;472      WM_CheckScrollPos(&pObj->ScrollStateV, yCursor, 0, 0);       /* Vertical */
000020  2300              MOVS     r3,#0
000022  461a              MOV      r2,r3
000024  f104005c          ADD      r0,r4,#0x5c
000028  9900              LDR      r1,[sp,#0]
00002a  f7fffffe          BL       WM_CheckScrollPos
;;;473      if (pObj->Align == GUI_TA_RIGHT) {
00002e  f8b40058          LDRH     r0,[r4,#0x58]
000032  2801              CMP      r0,#1
000034  d106              BNE      |L31.68|
;;;474        xCursor = _GetXSize(hObj, pObj) - xCursor;
000036  4621              MOV      r1,r4
000038  4628              MOV      r0,r5
00003a  f7fffffe          BL       _GetXSize
00003e  9901              LDR      r1,[sp,#4]
000040  1a40              SUBS     r0,r0,r1
000042  9001              STR      r0,[sp,#4]
                  |L31.68|
;;;475      }
;;;476      WM_CheckScrollPos(&pObj->ScrollStateH, xCursor, 30, 30);     /* Horizontal */
000044  231e              MOVS     r3,#0x1e
000046  461a              MOV      r2,r3
000048  f1040068          ADD      r0,r4,#0x68
00004c  9901              LDR      r1,[sp,#4]
00004e  f7fffffe          BL       WM_CheckScrollPos
;;;477      _SetScrollState(hObj);
000052  4628              MOV      r0,r5
000054  f7fffffe          BL       _SetScrollState
;;;478    }
000058  bd7c              POP      {r2-r6,pc}
;;;479    
                          ENDP


                          AREA ||i._ClearCache||, CODE, READONLY, ALIGN=1

                  _ClearCache PROC
;;;356    */
;;;357    static void _ClearCache(MULTIEDIT_OBJ* pObj) {
000000  2100              MOVS     r1,#0
;;;358      pObj->CacheLineNumber = 0;
000002  f1000050          ADD      r0,r0,#0x50
000006  8041              STRH     r1,[r0,#2]
;;;359      pObj->CacheLinePosByte = 0;
000008  8001              STRH     r1,[r0,#0]
;;;360      pObj->CacheFirstVisibleByte = 0;
00000a  80c1              STRH     r1,[r0,#6]
;;;361      pObj->CacheFirstVisibleLine = 0;
00000c  8081              STRH     r1,[r0,#4]
00000e  f1a00050          SUB      r0,r0,#0x50
;;;362    }
000012  4770              BX       lr
;;;363    
                          ENDP


                          AREA ||i._DeleteChar||, CODE, READONLY, ALIGN=1

                  _DeleteChar PROC
;;;1100   */
;;;1101   static void _DeleteChar(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000000  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
000004  b081              SUB      sp,sp,#4
000006  460c              MOV      r4,r1
;;;1102     if (pObj->hText) {
000008  8f20              LDRH     r0,[r4,#0x38]
00000a  2800              CMP      r0,#0
00000c  d05a              BEQ      |L33.196|
;;;1103       unsigned CursorOffset;
;;;1104       char* s;
;;;1105       s = (char*) GUI_ALLOC_h2p(pObj->hText);
00000e  f9b40038          LDRSH    r0,[r4,#0x38]
000012  f7fffffe          BL       GUI_ALLOC_h2p
000016  4607              MOV      r7,r0
;;;1106       CursorOffset = pObj->CursorPosByte;
000018  f8b4904a          LDRH     r9,[r4,#0x4a]
;;;1107       if (CursorOffset < strlen(s)) {
00001c  4638              MOV      r0,r7
00001e  f7fffffe          BL       strlen
000022  4548              CMP      r0,r9
000024  d94d              BLS      |L33.194|
;;;1108         char *pCursor, *pLine, *pEndLine;
;;;1109         int CursorLine, NumChars, NumBytes;
;;;1110         pCursor    = s + CursorOffset;
000026  eb070809          ADD      r8,r7,r9
;;;1111         CursorLine = pObj->CursorLine;
00002a  f8b40046          LDRH     r0,[r4,#0x46]
00002e  9000              STR      r0,[sp,#0]
;;;1112         pLine      = _GetpLine(hObj, pObj, CursorLine);
000030  4621              MOV      r1,r4
000032  e9dd2000          LDRD     r2,r0,[sp,#0]
000036  f7fffffe          BL       _GetpLine
00003a  4605              MOV      r5,r0
;;;1113         NumChars   = _WrapGetNumCharsDisp(hObj, pObj, pLine);
00003c  462a              MOV      r2,r5
00003e  4621              MOV      r1,r4
000040  9801              LDR      r0,[sp,#4]
000042  f7fffffe          BL       _WrapGetNumCharsDisp
000046  4683              MOV      r11,r0
;;;1114         pEndLine   = pLine + GUI_UC__NumChars2NumBytes(pLine, NumChars);
000048  4659              MOV      r1,r11
00004a  4628              MOV      r0,r5
00004c  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000050  eb000a05          ADD      r10,r0,r5
;;;1115         pLine      = pLine + _WrapGetNumBytesToNextLine(hObj, pObj, pLine);
000054  462a              MOV      r2,r5
000056  4621              MOV      r1,r4
000058  9801              LDR      r0,[sp,#4]
00005a  f7fffffe          BL       _WrapGetNumBytesToNextLine
00005e  4405              ADD      r5,r5,r0
;;;1116         if (pCursor == pEndLine) {
000060  45d0              CMP      r8,r10
000062  d102              BNE      |L33.106|
;;;1117           NumBytes = pLine - pEndLine;
000064  eba5060a          SUB      r6,r5,r10
000068  e003              B        |L33.114|
                  |L33.106|
;;;1118         } else {
;;;1119           NumBytes = GUI_UC_GetCharSize(pCursor);
00006a  4640              MOV      r0,r8
00006c  f7fffffe          BL       GUI_UC_GetCharSize
000070  4606              MOV      r6,r0
                  |L33.114|
;;;1120         }
;;;1121         NumChars = GUI_UC__NumBytes2NumChars(pCursor, NumBytes);
000072  4631              MOV      r1,r6
000074  4640              MOV      r0,r8
000076  f7fffffe          BL       GUI_UC__NumBytes2NumChars
00007a  4683              MOV      r11,r0
;;;1122         strcpy(pCursor, pCursor + NumBytes);
00007c  eb080106          ADD      r1,r8,r6
000080  4640              MOV      r0,r8
000082  f7fffffe          BL       strcpy
;;;1123         WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
000086  2105              MOVS     r1,#5
000088  9801              LDR      r0,[sp,#4]
00008a  f7fffffe          BL       WM_NotifyParent
;;;1124         pObj->NumChars -= NumChars;
00008e  8fa0              LDRH     r0,[r4,#0x3c]
000090  eba0000b          SUB      r0,r0,r11
000094  87a0              STRH     r0,[r4,#0x3c]
;;;1125         _InvalidateNumLines(pObj);
000096  4620              MOV      r0,r4
000098  f7fffffe          BL       _InvalidateNumLines
;;;1126         _InvalidateTextSizeX(pObj);
00009c  4620              MOV      r0,r4
00009e  f7fffffe          BL       _InvalidateTextSizeX
;;;1127         _InvalidateCursorXY(pObj); /* Invalidate X/Y position */
0000a2  4620              MOV      r0,r4
0000a4  f7fffffe          BL       _InvalidateCursorXY
;;;1128         _ClearCache(pObj);
0000a8  4620              MOV      r0,r4
0000aa  f7fffffe          BL       _ClearCache
;;;1129         pObj->CursorLine = _GetCursorLine(hObj, pObj, s, pObj->CursorPosChar);
0000ae  f8b43048          LDRH     r3,[r4,#0x48]
0000b2  463a              MOV      r2,r7
0000b4  4621              MOV      r1,r4
0000b6  9801              LDR      r0,[sp,#4]
0000b8  f7fffffe          BL       _GetCursorLine
0000bc  f8a40046          STRH     r0,[r4,#0x46]
;;;1130       }
0000c0  bf00              NOP      
                  |L33.194|
;;;1131     }
0000c2  bf00              NOP      
                  |L33.196|
;;;1132   }
0000c4  e8bd8ffe          POP      {r1-r11,pc}
;;;1133   
                          ENDP


                          AREA ||i._DispString||, CODE, READONLY, ALIGN=1

                  _DispString PROC
;;;291    */
;;;292    static void _DispString(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj, const char* pText, GUI_RECT* pRect) {
000000  e92d5ff0          PUSH     {r4-r12,lr}
000004  4683              MOV      r11,r0
000006  460c              MOV      r4,r1
000008  4690              MOV      r8,r2
00000a  461d              MOV      r5,r3
;;;293      int NumCharsDisp;
;;;294      NumCharsDisp = _WrapGetNumCharsDisp(hObj, pObj, pText);
00000c  4642              MOV      r2,r8
00000e  4621              MOV      r1,r4
000010  4658              MOV      r0,r11
000012  f7fffffe          BL       _WrapGetNumCharsDisp
000016  4606              MOV      r6,r0
;;;295      if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
000018  f8940078          LDRB     r0,[r4,#0x78]
00001c  f0100f20          TST      r0,#0x20
000020  d02a              BEQ      |L34.120|
;;;296        int x, NumCharsPrompt, NumCharsLeft = 0;
000022  f04f0a00          MOV      r10,#0
;;;297        NumCharsPrompt = _GetNumCharsInPrompt(pObj, pText);
000026  4641              MOV      r1,r8
000028  4620              MOV      r0,r4
00002a  f7fffffe          BL       _GetNumCharsInPrompt
00002e  4607              MOV      r7,r0
;;;298        if (NumCharsDisp < NumCharsPrompt) {
000030  42be              CMP      r6,r7
000032  da01              BGE      |L34.56|
;;;299          NumCharsPrompt = NumCharsDisp;
000034  4637              MOV      r7,r6
000036  e001              B        |L34.60|
                  |L34.56|
;;;300        } else {
;;;301          NumCharsLeft = NumCharsDisp - NumCharsPrompt;
000038  eba60a07          SUB      r10,r6,r7
                  |L34.60|
;;;302        }
;;;303        GUI_DispStringInRectMax(pText, pRect, GUI_TA_LEFT, NumCharsPrompt);
00003c  463b              MOV      r3,r7
00003e  2200              MOVS     r2,#0
000040  4629              MOV      r1,r5
000042  4640              MOV      r0,r8
000044  f7fffffe          BL       GUI_DispStringInRectMax
;;;304        x = pRect->x0 + GUI__GetLineDistX(pText, NumCharsPrompt);
000048  4639              MOV      r1,r7
00004a  4640              MOV      r0,r8
00004c  f7fffffe          BL       GUI__GetLineDistX
000050  f9b51000          LDRSH    r1,[r5,#0]
000054  eb000901          ADD      r9,r0,r1
;;;305        if (NumCharsLeft) {
000058  f1ba0f00          CMP      r10,#0
00005c  d00b              BEQ      |L34.118|
;;;306          GUI_DispCharAt(MULTIEDIT_PASSWORD_CHAR, x, pRect->y0);
00005e  f9b52002          LDRSH    r2,[r5,#2]
000062  fa0ff189          SXTH     r1,r9
000066  202a              MOVS     r0,#0x2a
000068  f7fffffe          BL       GUI_DispCharAt
;;;307          GUI_DispChars(MULTIEDIT_PASSWORD_CHAR, NumCharsLeft - 1);
00006c  f1aa0101          SUB      r1,r10,#1
000070  202a              MOVS     r0,#0x2a
000072  f7fffffe          BL       GUI_DispChars
                  |L34.118|
;;;308        }
;;;309      } else {
000076  e006              B        |L34.134|
                  |L34.120|
;;;310        GUI_DispStringInRectMax(pText, pRect, pObj->Align, NumCharsDisp);
000078  f8b42058          LDRH     r2,[r4,#0x58]
00007c  4633              MOV      r3,r6
00007e  4629              MOV      r1,r5
000080  4640              MOV      r0,r8
000082  f7fffffe          BL       GUI_DispStringInRectMax
                  |L34.134|
;;;311      }
;;;312    }
000086  e8bd9ff0          POP      {r4-r12,pc}
;;;313    
                          ENDP


                          AREA ||i._GetCharDistX||, CODE, READONLY, ALIGN=1

                  _GetCharDistX PROC
;;;275    */
;;;276    static int _GetCharDistX(const MULTIEDIT_OBJ* pObj, const char* pText) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;277      int r;
;;;278      if ((pObj->Flags & MULTIEDIT_SF_PASSWORD) && (_GetNumCharsInPrompt(pObj, pText) == 0)) {
000008  f8940078          LDRB     r0,[r4,#0x78]
00000c  f0100f20          TST      r0,#0x20
000010  d009              BEQ      |L35.38|
000012  4629              MOV      r1,r5
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       _GetNumCharsInPrompt
00001a  b920              CBNZ     r0,|L35.38|
;;;279        r = GUI_GetCharDistX(MULTIEDIT_PASSWORD_CHAR);
00001c  202a              MOVS     r0,#0x2a
00001e  f7fffffe          BL       GUI_GetCharDistX
000022  4606              MOV      r6,r0
000024  e008              B        |L35.56|
                  |L35.38|
;;;280      } else {
;;;281        U16 c;
;;;282        c = GUI_UC_GetCharCode(pText);
000026  4628              MOV      r0,r5
000028  f7fffffe          BL       GUI_UC_GetCharCode
00002c  4607              MOV      r7,r0
;;;283        r = GUI_GetCharDistX(c);
00002e  4638              MOV      r0,r7
000030  f7fffffe          BL       GUI_GetCharDistX
000034  4606              MOV      r6,r0
;;;284      }
000036  bf00              NOP      
                  |L35.56|
;;;285      return r;
000038  4630              MOV      r0,r6
;;;286    }
00003a  e8bd81f0          POP      {r4-r8,pc}
;;;287    
                          ENDP


                          AREA ||i._GetCursorLine||, CODE, READONLY, ALIGN=1

                  _GetCursorLine PROC
;;;369    */
;;;370    static int _GetCursorLine(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj, const char* pText, int CursorPosChar) {
000000  e92d4ff8          PUSH     {r3-r11,lr}
000004  4683              MOV      r11,r0
000006  460d              MOV      r5,r1
000008  4614              MOV      r4,r2
00000a  4699              MOV      r9,r3
;;;371      const char *pCursor;
;;;372      const char *pEndLine;
;;;373      int NumChars, ByteOffsetNewCursor, LineNumber = 0;
00000c  2700              MOVS     r7,#0
;;;374      ByteOffsetNewCursor = GUI_UC__NumChars2NumBytes(pText, CursorPosChar);
00000e  4649              MOV      r1,r9
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000016  4682              MOV      r10,r0
;;;375      pCursor = pText + ByteOffsetNewCursor;
000018  eb04080a          ADD      r8,r4,r10
;;;376      if (pObj->CacheLinePosByte < ByteOffsetNewCursor) {
00001c  f8b50050          LDRH     r0,[r5,#0x50]
000020  4550              CMP      r0,r10
000022  da05              BGE      |L36.48|
;;;377        /* If cache pos < new position we can use it as start position */
;;;378        pText      += pObj->CacheLinePosByte;
000024  f8b50050          LDRH     r0,[r5,#0x50]
000028  4404              ADD      r4,r4,r0
;;;379        LineNumber += pObj->CacheLineNumber;
00002a  f8b50052          LDRH     r0,[r5,#0x52]
00002e  4407              ADD      r7,r7,r0
                  |L36.48|
;;;380      }
;;;381      while (*pText && (pCursor > pText)) {
000030  e01b              B        |L36.106|
                  |L36.50|
;;;382        NumChars = _WrapGetNumCharsDisp(hObj, pObj, pText);
000032  4622              MOV      r2,r4
000034  4629              MOV      r1,r5
000036  4658              MOV      r0,r11
000038  f7fffffe          BL       _WrapGetNumCharsDisp
00003c  9000              STR      r0,[sp,#0]
;;;383        pEndLine = pText + GUI_UC__NumChars2NumBytes(pText, NumChars);
00003e  4620              MOV      r0,r4
000040  9900              LDR      r1,[sp,#0]
000042  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000046  1906              ADDS     r6,r0,r4
;;;384        pText   += _WrapGetNumBytesToNextLine(hObj, pObj, pText);
000048  4622              MOV      r2,r4
00004a  4629              MOV      r1,r5
00004c  4658              MOV      r0,r11
00004e  f7fffffe          BL       _WrapGetNumBytesToNextLine
000052  4404              ADD      r4,r4,r0
;;;385        if (pCursor <= pEndLine) {
000054  45b0              CMP      r8,r6
000056  d807              BHI      |L36.104|
;;;386          if ((pCursor == pEndLine) && (pEndLine == pText) && *pText) {
000058  45b0              CMP      r8,r6
00005a  d104              BNE      |L36.102|
00005c  42a6              CMP      r6,r4
00005e  d102              BNE      |L36.102|
000060  7820              LDRB     r0,[r4,#0]
000062  b100              CBZ      r0,|L36.102|
;;;387            LineNumber++;
000064  1c7f              ADDS     r7,r7,#1
                  |L36.102|
;;;388          }
;;;389          break;
000066  e004              B        |L36.114|
                  |L36.104|
;;;390        }
;;;391        LineNumber++;
000068  1c7f              ADDS     r7,r7,#1
                  |L36.106|
00006a  7820              LDRB     r0,[r4,#0]            ;381
00006c  b108              CBZ      r0,|L36.114|
00006e  45a0              CMP      r8,r4                 ;381
000070  d8df              BHI      |L36.50|
                  |L36.114|
000072  bf00              NOP                            ;389
;;;392      }
;;;393      return LineNumber;
000074  4638              MOV      r0,r7
;;;394    }
000076  e8bd8ff8          POP      {r3-r11,pc}
;;;395    
                          ENDP


                          AREA ||i._GetCursorSizeX||, CODE, READONLY, ALIGN=1

                  _GetCursorSizeX PROC
;;;942    */
;;;943    static int _GetCursorSizeX(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, int * pIsRTL) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
;;;944      if (_IsOverwriteAtThisChar(hObj, pObj)) {
00000a  4621              MOV      r1,r4
00000c  4638              MOV      r0,r7
00000e  f7fffffe          BL       _IsOverwriteAtThisChar
000012  b178              CBZ      r0,|L37.52|
;;;945        #if (GUI_SUPPORT_ARABIC)
;;;946          if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
;;;947            const char *pText;
;;;948            pText  = (const char *)GUI_ALLOC_h2p(pObj->hText);
;;;949            pText += pObj->CursorPosByte;
;;;950            return _GetCharDistX(pObj, pText);
;;;951          } else {
;;;952            const char * pText;
;;;953            U16 Prev = 0, Char, Next = 0, Glyph;
;;;954            pText = (const char *)GUI_ALLOC_h2p(pObj->hText);
;;;955            if (pObj->CursorPosChar) {
;;;956              int NumChars = pObj->CursorPosChar;
;;;957              while (--NumChars) {
;;;958                pText += GUI_UC_GetCharSize(pText);
;;;959              }
;;;960              Prev = GUI_UC__GetCharCodeInc(&pText);
;;;961              Char = GUI_UC__GetCharCodeInc(&pText);
;;;962            } else {
;;;963              pText += pObj->CursorPosByte;
;;;964              Char = GUI_UC__GetCharCodeInc(&pText);
;;;965            }
;;;966            if (pObj->CursorPosChar < (pObj->NumChars - 1)) {
;;;967              Next = GUI_UC_GetCharCode(pText);
;;;968            }
;;;969            Glyph = GUI__GetPresentationForm(Char, Next, Prev, 0);
;;;970            if (Char != 0x20) {
;;;971              *pIsRTL = GUI__IsArabicCharacter(Char) ? 1 : 0;
;;;972            } else {
;;;973              *pIsRTL = GUI__IsArabicCharacter(Prev) ? 1 : 0;
;;;974            }
;;;975            return GUI_GetCharDistX(Glyph);
;;;976          }
;;;977        #else
;;;978          const char *pText;
;;;979          *pIsRTL = 0;
000014  2000              MOVS     r0,#0
000016  6028              STR      r0,[r5,#0]
;;;980          pText  = (const char *)GUI_ALLOC_h2p(pObj->hText);
000018  f9b40038          LDRSH    r0,[r4,#0x38]
00001c  f7fffffe          BL       GUI_ALLOC_h2p
000020  4606              MOV      r6,r0
;;;981          pText += pObj->CursorPosByte;
000022  f8b4004a          LDRH     r0,[r4,#0x4a]
000026  4406              ADD      r6,r6,r0
;;;982          return _GetCharDistX(pObj, pText);
000028  4631              MOV      r1,r6
00002a  4620              MOV      r0,r4
00002c  f7fffffe          BL       _GetCharDistX
                  |L37.48|
;;;983        #endif
;;;984      } else {
;;;985        #if (GUI_SUPPORT_ARABIC)
;;;986          const char * pText;
;;;987          U16 Prev = 0, Char;
;;;988          pText = (const char *)GUI_ALLOC_h2p(pObj->hText);
;;;989          if (pObj->CursorPosChar) {
;;;990            int NumChars = pObj->CursorPosChar;
;;;991            while (--NumChars) {
;;;992              pText += GUI_UC_GetCharSize(pText);
;;;993            }
;;;994            Prev = GUI_UC__GetCharCodeInc(&pText);
;;;995            Char = GUI_UC_GetCharCode(pText);
;;;996          } else {
;;;997            pText += pObj->CursorPosByte;
;;;998            Char = GUI_UC_GetCharCode(pText);
;;;999          }
;;;1000         if (Char != 0x20) {
;;;1001           *pIsRTL = GUI__IsArabicCharacter(Char) ? 1 : 0;
;;;1002         } else {
;;;1003           *pIsRTL = GUI__IsArabicCharacter(Prev) ? 1 : 0;
;;;1004         }
;;;1005       #endif
;;;1006       return 2;
;;;1007     }
;;;1008   }
000030  e8bd81f0          POP      {r4-r8,pc}
                  |L37.52|
000034  2002              MOVS     r0,#2                 ;1006
000036  e7fb              B        |L37.48|
;;;1009   
                          ENDP


                          AREA ||i._GetCursorXY||, CODE, READONLY, ALIGN=1

                  _GetCursorXY PROC
;;;399    */
;;;400    static void _GetCursorXY(MULTIEDIT_HANDLE hObj, /*const*/ MULTIEDIT_OBJ* pObj, int* px, int* py) {
000000  e92d4fff          PUSH     {r0-r11,lr}
000004  b083              SUB      sp,sp,#0xc
000006  460c              MOV      r4,r1
000008  4617              MOV      r7,r2
00000a  4698              MOV      r8,r3
;;;401      if (pObj->InvalidFlags & INVALID_CURSORXY) {
00000c  f8940079          LDRB     r0,[r4,#0x79]
000010  f0100f08          TST      r0,#8
000014  d065              BEQ      |L38.226|
;;;402        int CursorLine = 0, x = 0;
000016  f04f0900          MOV      r9,#0
00001a  2600              MOVS     r6,#0
;;;403        GUI_SetFont(pObj->pFont);
00001c  6f60              LDR      r0,[r4,#0x74]
00001e  f7fffffe          BL       GUI_SetFont
;;;404        if (pObj->hText) {
000022  8f20              LDRH     r0,[r4,#0x38]
000024  2800              CMP      r0,#0
000026  d04c              BEQ      |L38.194|
;;;405          const char *pLine;
;;;406          const char *pCursor;
;;;407          pLine      = (const char *)GUI_ALLOC_h2p(pObj->hText);
000028  f9b40038          LDRSH    r0,[r4,#0x38]
00002c  f7fffffe          BL       GUI_ALLOC_h2p
000030  4605              MOV      r5,r0
;;;408          pCursor    = pLine + pObj->CursorPosByte;
000032  f8b4004a          LDRH     r0,[r4,#0x4a]
000036  eb000a05          ADD      r10,r0,r5
;;;409          CursorLine = pObj->CursorLine;
00003a  f8b49046          LDRH     r9,[r4,#0x46]
;;;410          pLine      = _GetpLine(hObj, pObj, CursorLine);
00003e  464a              MOV      r2,r9
000040  4621              MOV      r1,r4
000042  9803              LDR      r0,[sp,#0xc]
000044  f7fffffe          BL       _GetpLine
000048  4605              MOV      r5,r0
;;;411          if ((pObj->Flags & MULTIEDIT_SF_PASSWORD)) {
00004a  f8940078          LDRB     r0,[r4,#0x78]
00004e  f0100f20          TST      r0,#0x20
000052  d00c              BEQ      |L38.110|
;;;412            while (pLine < pCursor) {
000054  e008              B        |L38.104|
                  |L38.86|
;;;413              x     += _GetCharDistX(pObj, pLine);
000056  4629              MOV      r1,r5
000058  4620              MOV      r0,r4
00005a  f7fffffe          BL       _GetCharDistX
00005e  4406              ADD      r6,r6,r0
;;;414              pLine += GUI_UC_GetCharSize(pLine);
000060  4628              MOV      r0,r5
000062  f7fffffe          BL       GUI_UC_GetCharSize
000066  4405              ADD      r5,r5,r0
                  |L38.104|
000068  4555              CMP      r5,r10                ;412
00006a  d3f4              BCC      |L38.86|
00006c  e028              B        |L38.192|
                  |L38.110|
;;;415            }
;;;416          } else {
;;;417            int xSize;
;;;418            const char *p;
;;;419            int NumChars = 0, NumCharsToNextLine;
00006e  f04f0b00          MOV      r11,#0
;;;420            xSize = _GetXSize(hObj, pObj);
000072  4621              MOV      r1,r4
000074  9803              LDR      r0,[sp,#0xc]
000076  f7fffffe          BL       _GetXSize
00007a  9002              STR      r0,[sp,#8]
;;;421            p = pLine;
00007c  9501              STR      r5,[sp,#4]
;;;422            while (pLine < pCursor) {
00007e  e005              B        |L38.140|
                  |L38.128|
;;;423              NumChars++;
000080  f10b0b01          ADD      r11,r11,#1
;;;424              pLine += GUI_UC_GetCharSize(pLine);
000084  4628              MOV      r0,r5
000086  f7fffffe          BL       GUI_UC_GetCharSize
00008a  4405              ADD      r5,r5,r0
                  |L38.140|
00008c  4555              CMP      r5,r10                ;422
00008e  d3f7              BCC      |L38.128|
;;;425            }
;;;426            NumCharsToNextLine = _WrapGetNumCharsDisp(hObj, pObj, p);
000090  4621              MOV      r1,r4
000092  9a01              LDR      r2,[sp,#4]
000094  9803              LDR      r0,[sp,#0xc]
000096  f7fffffe          BL       _WrapGetNumCharsDisp
00009a  9000              STR      r0,[sp,#0]
;;;427            x = GUI__GetCursorPosX(p, NumChars, NumCharsToNextLine);
00009c  4659              MOV      r1,r11
00009e  e9dd2000          LDRD     r2,r0,[sp,#0]
0000a2  f7fffffe          BL       GUI__GetCursorPosX
0000a6  4606              MOV      r6,r0
;;;428            if (pObj->Align == GUI_TA_RIGHT) {
0000a8  f8b40058          LDRH     r0,[r4,#0x58]
0000ac  2801              CMP      r0,#1
0000ae  d106              BNE      |L38.190|
;;;429              x += xSize - GUI__GetLineDistX(p, NumCharsToNextLine);
0000b0  e9dd1000          LDRD     r1,r0,[sp,#0]
0000b4  f7fffffe          BL       GUI__GetLineDistX
0000b8  9902              LDR      r1,[sp,#8]
0000ba  1a08              SUBS     r0,r1,r0
0000bc  4406              ADD      r6,r6,r0
                  |L38.190|
;;;430            }
;;;431          }
0000be  bf00              NOP      
                  |L38.192|
;;;432        }
0000c0  bf00              NOP      
                  |L38.194|
;;;433        pObj->CursorPosX = x;
0000c2  b230              SXTH     r0,r6
0000c4  f8a4004c          STRH     r0,[r4,#0x4c]
;;;434        pObj->CursorPosY = CursorLine * GUI_GetFontDistY();
0000c8  f7fffffe          BL       GUI_GetFontDistY
0000cc  fb00f009          MUL      r0,r0,r9
0000d0  f8a4004e          STRH     r0,[r4,#0x4e]
;;;435        pObj->InvalidFlags &= ~INVALID_CURSORXY;
0000d4  f8940079          LDRB     r0,[r4,#0x79]
0000d8  f0200008          BIC      r0,r0,#8
0000dc  f8840079          STRB     r0,[r4,#0x79]
;;;436      }
0000e0  bf00              NOP      
                  |L38.226|
;;;437      *px = pObj->CursorPosX;
0000e2  f9b4004c          LDRSH    r0,[r4,#0x4c]
0000e6  6038              STR      r0,[r7,#0]
;;;438      *py = pObj->CursorPosY;
0000e8  f8b4004e          LDRH     r0,[r4,#0x4e]
0000ec  f8c80000          STR      r0,[r8,#0]
;;;439    }
0000f0  b007              ADD      sp,sp,#0x1c
0000f2  e8bd8ff0          POP      {r4-r11,pc}
;;;440    
                          ENDP


                          AREA ||i._GetNumChars||, CODE, READONLY, ALIGN=1

                  _GetNumChars PROC
;;;174    */
;;;175    static int _GetNumChars(MULTIEDIT_OBJ * pObj) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;176      if (pObj->InvalidFlags & INVALID_NUMCHARS) {
000004  f8940079          LDRB     r0,[r4,#0x79]
000008  f0100f01          TST      r0,#1
00000c  d00f              BEQ      |L39.46|
;;;177        char * pText;
;;;178        pText = (char*) GUI_ALLOC_h2p(pObj->hText);
00000e  f9b40038          LDRSH    r0,[r4,#0x38]
000012  f7fffffe          BL       GUI_ALLOC_h2p
000016  4605              MOV      r5,r0
;;;179        pObj->NumChars = GUI__GetNumChars(pText);
000018  4628              MOV      r0,r5
00001a  f7fffffe          BL       GUI__GetNumChars
00001e  87a0              STRH     r0,[r4,#0x3c]
;;;180        pObj->InvalidFlags &= ~INVALID_NUMCHARS;
000020  f8940079          LDRB     r0,[r4,#0x79]
000024  f0200001          BIC      r0,r0,#1
000028  f8840079          STRB     r0,[r4,#0x79]
;;;181      }
00002c  bf00              NOP      
                  |L39.46|
;;;182      return pObj->NumChars;
00002e  8fa0              LDRH     r0,[r4,#0x3c]
;;;183    }
000030  bd70              POP      {r4-r6,pc}
;;;184    
                          ENDP


                          AREA ||i._GetNumCharsInPrompt||, CODE, READONLY, ALIGN=1

                  _GetNumCharsInPrompt PROC
;;;200    */
;;;201    static int _GetNumCharsInPrompt(const MULTIEDIT_OBJ* pObj, const char GUI_UNI_PTR * pText) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
;;;202      char *pString, *pEndPrompt;
;;;203      int r = 0;
000008  f04f0800          MOV      r8,#0
;;;204      pString = (char*) GUI_ALLOC_h2p(pObj->hText);
00000c  f9b50038          LDRSH    r0,[r5,#0x38]
000010  f7fffffe          BL       GUI_ALLOC_h2p
000014  4606              MOV      r6,r0
;;;205      pEndPrompt = pString + GUI_UC__NumChars2NumBytes(pString, pObj->NumCharsPrompt);
000016  8fe9              LDRH     r1,[r5,#0x3e]
000018  4630              MOV      r0,r6
00001a  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00001e  1987              ADDS     r7,r0,r6
;;;206      if (pText < pEndPrompt) {
000020  42bc              CMP      r4,r7
000022  d204              BCS      |L40.46|
;;;207        r = GUI_UC__NumBytes2NumChars(pText, pEndPrompt - pText);
000024  1b39              SUBS     r1,r7,r4
000026  4620              MOV      r0,r4
000028  f7fffffe          BL       GUI_UC__NumBytes2NumChars
00002c  4680              MOV      r8,r0
                  |L40.46|
;;;208      }
;;;209      return r;
00002e  4640              MOV      r0,r8
;;;210    }
000030  e8bd81f0          POP      {r4-r8,pc}
;;;211    
                          ENDP


                          AREA ||i._GetNumLines||, CODE, READONLY, ALIGN=1

                  _GetNumLines PROC
;;;532    */
;;;533    static int _GetNumLines(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ * pObj) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4681              MOV      r9,r0
000006  460c              MOV      r4,r1
;;;534      if (pObj->InvalidFlags & INVALID_NUMLINES) {
000008  f8940079          LDRB     r0,[r4,#0x79]
00000c  f0100f02          TST      r0,#2
000010  d030              BEQ      |L41.116|
;;;535        int NumLines = 0;
000012  2700              MOVS     r7,#0
;;;536        if (pObj->hText) {
000014  8f20              LDRH     r0,[r4,#0x38]
000016  b318              CBZ      r0,|L41.96|
;;;537          int NumChars, NumBytes;
;;;538          char *pText;
;;;539          U16 Char;
;;;540          pText = (char*) GUI_ALLOC_h2p(pObj->hText);
000018  f9b40038          LDRSH    r0,[r4,#0x38]
00001c  f7fffffe          BL       GUI_ALLOC_h2p
000020  4605              MOV      r5,r0
;;;541          GUI_SetFont(pObj->pFont);
000022  6f60              LDR      r0,[r4,#0x74]
000024  f7fffffe          BL       GUI_SetFont
;;;542          do {
000028  bf00              NOP      
                  |L41.42|
;;;543            NumChars = _WrapGetNumCharsDisp(hObj, pObj, pText);
00002a  462a              MOV      r2,r5
00002c  4621              MOV      r1,r4
00002e  4648              MOV      r0,r9
000030  f7fffffe          BL       _WrapGetNumCharsDisp
000034  4682              MOV      r10,r0
;;;544            NumBytes = GUI_UC__NumChars2NumBytes(pText, NumChars);
000036  4651              MOV      r1,r10
000038  4628              MOV      r0,r5
00003a  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00003e  4680              MOV      r8,r0
;;;545            Char     = GUI_UC_GetCharCode(pText + NumBytes);
000040  eb050008          ADD      r0,r5,r8
000044  f7fffffe          BL       GUI_UC_GetCharCode
000048  4606              MOV      r6,r0
;;;546            if (Char) {
00004a  b106              CBZ      r6,|L41.78|
;;;547              NumLines++;
00004c  1c7f              ADDS     r7,r7,#1
                  |L41.78|
;;;548            }
;;;549            pText += _WrapGetNumBytesToNextLine(hObj, pObj, pText);
00004e  462a              MOV      r2,r5
000050  4621              MOV      r1,r4
000052  4648              MOV      r0,r9
000054  f7fffffe          BL       _WrapGetNumBytesToNextLine
000058  4405              ADD      r5,r5,r0
;;;550          } while (Char);
00005a  2e00              CMP      r6,#0
00005c  d1e5              BNE      |L41.42|
;;;551        }
00005e  bf00              NOP      
                  |L41.96|
;;;552        pObj->NumLines = NumLines + 1;
000060  1c78              ADDS     r0,r7,#1
000062  f8a40040          STRH     r0,[r4,#0x40]
;;;553        pObj->InvalidFlags &= ~INVALID_NUMLINES;
000066  f8940079          LDRB     r0,[r4,#0x79]
00006a  f0200002          BIC      r0,r0,#2
00006e  f8840079          STRB     r0,[r4,#0x79]
;;;554      }
000072  bf00              NOP      
                  |L41.116|
;;;555      return pObj->NumLines;
000074  f8b40040          LDRH     r0,[r4,#0x40]
;;;556    }
000078  e8bd87f0          POP      {r4-r10,pc}
;;;557    
                          ENDP


                          AREA ||i._GetNumVisLines||, CODE, READONLY, ALIGN=1

                  _GetNumVisLines PROC
;;;520    */
;;;521    static int _GetNumVisLines(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj) {
000000  b57c              PUSH     {r2-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;522      GUI_RECT Rect;
;;;523      WM_GetInsideRectExScrollbar(hObj, &Rect);
000006  4669              MOV      r1,sp
000008  4628              MOV      r0,r5
00000a  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;524      return (Rect.y1 - Rect.y0 + 1) / GUI_GetYDistOfFont(pObj->pFont);
00000e  6f60              LDR      r0,[r4,#0x74]
000010  f7fffffe          BL       GUI_GetYDistOfFont
000014  f9bd1006          LDRSH    r1,[sp,#6]
000018  f9bd2002          LDRSH    r2,[sp,#2]
00001c  1a89              SUBS     r1,r1,r2
00001e  1c49              ADDS     r1,r1,#1
000020  fb91f0f0          SDIV     r0,r1,r0
;;;525    }
000024  bd7c              POP      {r2-r6,pc}
;;;526    
                          ENDP


                          AREA ||i._GetTextSizeX||, CODE, READONLY, ALIGN=1

                  _GetTextSizeX PROC
;;;485    */
;;;486    static int _GetTextSizeX(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4681              MOV      r9,r0
000006  460c              MOV      r4,r1
;;;487      if (pObj->InvalidFlags & INVALID_TEXTSIZE) {
000008  f8940079          LDRB     r0,[r4,#0x79]
00000c  f0100f04          TST      r0,#4
000010  d046              BEQ      |L43.160|
;;;488        pObj->TextSizeX = 0;
000012  2000              MOVS     r0,#0
000014  f8a40042          STRH     r0,[r4,#0x42]
;;;489        if (pObj->hText) {
000018  8f20              LDRH     r0,[r4,#0x38]
00001a  2800              CMP      r0,#0
00001c  d03a              BEQ      |L43.148|
;;;490          int NumChars, xSizeLine;
;;;491          char *pText, *pLine;
;;;492          GUI_SetFont(pObj->pFont);
00001e  6f60              LDR      r0,[r4,#0x74]
000020  f7fffffe          BL       GUI_SetFont
;;;493          pText = (char*) GUI_ALLOC_h2p(pObj->hText);
000024  f9b40038          LDRSH    r0,[r4,#0x38]
000028  f7fffffe          BL       GUI_ALLOC_h2p
00002c  4606              MOV      r6,r0
;;;494          do {
00002e  bf00              NOP      
                  |L43.48|
;;;495            NumChars = _WrapGetNumCharsDisp(hObj, pObj, pText);
000030  4632              MOV      r2,r6
000032  4621              MOV      r1,r4
000034  4648              MOV      r0,r9
000036  f7fffffe          BL       _WrapGetNumCharsDisp
00003a  4680              MOV      r8,r0
;;;496            xSizeLine = 0;
00003c  2500              MOVS     r5,#0
;;;497            pLine = pText;
00003e  4637              MOV      r7,r6
;;;498            if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
000040  f8940078          LDRB     r0,[r4,#0x78]
000044  f0100f20          TST      r0,#0x20
000048  d00f              BEQ      |L43.106|
;;;499              while (NumChars--) {
00004a  e008              B        |L43.94|
                  |L43.76|
;;;500                xSizeLine += _GetCharDistX(pObj, pLine);
00004c  4639              MOV      r1,r7
00004e  4620              MOV      r0,r4
000050  f7fffffe          BL       _GetCharDistX
000054  4405              ADD      r5,r5,r0
;;;501                pLine     += GUI_UC_GetCharSize(pLine);
000056  4638              MOV      r0,r7
000058  f7fffffe          BL       GUI_UC_GetCharSize
00005c  4407              ADD      r7,r7,r0
                  |L43.94|
00005e  ea5f0008          MOVS     r0,r8                 ;499
000062  f1a80801          SUB      r8,r8,#1              ;499
000066  d1f1              BNE      |L43.76|
000068  e004              B        |L43.116|
                  |L43.106|
;;;502              }
;;;503            } else {
;;;504              xSizeLine += GUI__GetLineDistX(pLine, NumChars);
00006a  4641              MOV      r1,r8
00006c  4638              MOV      r0,r7
00006e  f7fffffe          BL       GUI__GetLineDistX
000072  4405              ADD      r5,r5,r0
                  |L43.116|
;;;505            }
;;;506            if (xSizeLine > pObj->TextSizeX) {
000074  f8b40042          LDRH     r0,[r4,#0x42]
000078  42a8              CMP      r0,r5
00007a  da01              BGE      |L43.128|
;;;507              pObj->TextSizeX = xSizeLine;
00007c  f8a45042          STRH     r5,[r4,#0x42]
                  |L43.128|
;;;508            }
;;;509            pText += _WrapGetNumBytesToNextLine(hObj, pObj, pText);
000080  4632              MOV      r2,r6
000082  4621              MOV      r1,r4
000084  4648              MOV      r0,r9
000086  f7fffffe          BL       _WrapGetNumBytesToNextLine
00008a  4406              ADD      r6,r6,r0
;;;510          } while (*pText);
00008c  7830              LDRB     r0,[r6,#0]
00008e  2800              CMP      r0,#0
000090  d1ce              BNE      |L43.48|
;;;511        }
000092  bf00              NOP      
                  |L43.148|
;;;512        pObj->InvalidFlags &= ~INVALID_TEXTSIZE;
000094  f8940079          LDRB     r0,[r4,#0x79]
000098  f0200004          BIC      r0,r0,#4
00009c  f8840079          STRB     r0,[r4,#0x79]
                  |L43.160|
;;;513      }
;;;514      return pObj->TextSizeX;
0000a0  f8b40042          LDRH     r0,[r4,#0x42]
;;;515    }
0000a4  e8bd87f0          POP      {r4-r10,pc}
;;;516    
                          ENDP


                          AREA ||i._GetXSize||, CODE, READONLY, ALIGN=1

                  _GetXSize PROC
;;;190    */
;;;191    static int _GetXSize(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj) {
000000  b57c              PUSH     {r2-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;192      GUI_RECT Rect;
;;;193      WM_GetInsideRectExScrollbar(hObj, &Rect);
000006  4669              MOV      r1,sp
000008  4628              MOV      r0,r5
00000a  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;194      return Rect.x1 - Rect.x0 - (pObj->HBorder * 2) - 1;
00000e  f9bd0004          LDRSH    r0,[sp,#4]
000012  f9bd1000          LDRSH    r1,[sp,#0]
000016  1a41              SUBS     r1,r0,r1
000018  f894007b          LDRB     r0,[r4,#0x7b]
00001c  eba10040          SUB      r0,r1,r0,LSL #1
000020  1e40              SUBS     r0,r0,#1
;;;195    }
000022  bd7c              POP      {r2-r6,pc}
;;;196    
                          ENDP


                          AREA ||i._GetpLine||, CODE, READONLY, ALIGN=1

                  _GetpLine PROC
;;;326    */
;;;327    static char * _GetpLine(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, unsigned LineNumber) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4680              MOV      r8,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
;;;328      char * pText, * pLine;
;;;329      pText = (char*) GUI_ALLOC_h2p(pObj->hText);
00000a  f9b40038          LDRSH    r0,[r4,#0x38]
00000e  f7fffffe          BL       GUI_ALLOC_h2p
000012  4607              MOV      r7,r0
;;;330      if ((unsigned)pObj->CacheLineNumber != LineNumber) {
000014  f8b40052          LDRH     r0,[r4,#0x52]
000018  42a8              CMP      r0,r5
00001a  d020              BEQ      |L45.94|
;;;331        if (LineNumber > (unsigned)pObj->CacheLineNumber) {
00001c  f8b40052          LDRH     r0,[r4,#0x52]
000020  42a8              CMP      r0,r5
000022  d20b              BCS      |L45.60|
;;;332          /* If new line number > cache we can start with old pointer */
;;;333          int OldNumber = pObj->CacheLineNumber;
000024  f1040450          ADD      r4,r4,#0x50
000028  8860              LDRH     r0,[r4,#2]
;;;334          pLine = pText + pObj->CacheLinePosByte;
00002a  8821              LDRH     r1,[r4,#0]
00002c  eb010607          ADD      r6,r1,r7
;;;335          pObj->CacheLineNumber  = LineNumber;
000030  8065              STRH     r5,[r4,#2]
000032  f1a40450          SUB      r4,r4,#0x50
;;;336          LineNumber -= OldNumber;
000036  eba50500          SUB      r5,r5,r0
;;;337        } else {
00003a  e002              B        |L45.66|
                  |L45.60|
;;;338          /* If new line number < cache we need to start with first byte */
;;;339          pLine = pText;
00003c  463e              MOV      r6,r7
;;;340          pObj->CacheLineNumber  = LineNumber;
00003e  f8a45052          STRH     r5,[r4,#0x52]
                  |L45.66|
;;;341        }
;;;342        while (LineNumber--) {
000042  e005              B        |L45.80|
                  |L45.68|
;;;343          pLine += _WrapGetNumBytesToNextLine(hObj, pObj, pLine);
000044  4632              MOV      r2,r6
000046  4621              MOV      r1,r4
000048  4640              MOV      r0,r8
00004a  f7fffffe          BL       _WrapGetNumBytesToNextLine
00004e  4406              ADD      r6,r6,r0
                  |L45.80|
000050  0028              MOVS     r0,r5                 ;342
000052  f1a50501          SUB      r5,r5,#1              ;342
000056  d1f5              BNE      |L45.68|
;;;344        }
;;;345        pObj->CacheLinePosByte = pLine - pText;
000058  1bf0              SUBS     r0,r6,r7
00005a  f8a40050          STRH     r0,[r4,#0x50]
                  |L45.94|
;;;346      }
;;;347      return pText + pObj->CacheLinePosByte;
00005e  f8b40050          LDRH     r0,[r4,#0x50]
000062  4438              ADD      r0,r0,r7
;;;348    }
000064  e8bd81f0          POP      {r4-r8,pc}
;;;349    
                          ENDP


                          AREA ||i._IncrementBuffer||, CODE, READONLY, ALIGN=1

                  _IncrementBuffer PROC
;;;1021   */
;;;1022   static int _IncrementBuffer(MULTIEDIT_OBJ* pObj, unsigned AddBytes) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
;;;1023     WM_HMEM hNew;
;;;1024     int NewSize;
;;;1025     NewSize = pObj->BufferSize + AddBytes;
000008  f8b40044          LDRH     r0,[r4,#0x44]
00000c  1987              ADDS     r7,r0,r6
;;;1026     hNew    = GUI_ALLOC_Realloc(pObj->hText, NewSize);
00000e  f9b40038          LDRSH    r0,[r4,#0x38]
000012  4639              MOV      r1,r7
000014  f7fffffe          BL       GUI_ALLOC_Realloc
000018  4605              MOV      r5,r0
;;;1027     if (hNew) {
00001a  b17d              CBZ      r5,|L46.60|
;;;1028       if (!(pObj->hText)) {
00001c  8f20              LDRH     r0,[r4,#0x38]
00001e  b938              CBNZ     r0,|L46.48|
;;;1029         char* pText;
;;;1030         pText  = (char*) GUI_ALLOC_h2p(hNew);
000020  4628              MOV      r0,r5
000022  f7fffffe          BL       GUI_ALLOC_h2p
000026  4680              MOV      r8,r0
;;;1031         *pText = 0;
000028  2000              MOVS     r0,#0
00002a  f8880000          STRB     r0,[r8,#0]
;;;1032       }
00002e  bf00              NOP      
                  |L46.48|
;;;1033       pObj->BufferSize = NewSize;
000030  f8a47044          STRH     r7,[r4,#0x44]
;;;1034       pObj->hText = hNew;
000034  8725              STRH     r5,[r4,#0x38]
;;;1035       return 1;
000036  2001              MOVS     r0,#1
                  |L46.56|
;;;1036     }
;;;1037     return 0;
;;;1038   }
000038  e8bd81f0          POP      {r4-r8,pc}
                  |L46.60|
00003c  2000              MOVS     r0,#0                 ;1037
00003e  e7fb              B        |L46.56|
;;;1039   
                          ENDP


                          AREA ||i._InsertChar||, CODE, READONLY, ALIGN=1

                  _InsertChar PROC
;;;1139   */
;;;1140   static int _InsertChar(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, U16 Char) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4680              MOV      r8,r0
000006  460c              MOV      r4,r1
000008  4616              MOV      r6,r2
;;;1141     if (_IsCharsAvailable(pObj, 1)) {
00000a  2101              MOVS     r1,#1
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       _IsCharsAvailable
000012  2800              CMP      r0,#0
000014  d032              BEQ      |L47.124|
;;;1142       int BytesNeeded;
;;;1143       BytesNeeded = GUI_UC__CalcSizeOfChar(Char);
000016  4630              MOV      r0,r6
000018  f7fffffe          BL       GUI_UC__CalcSizeOfChar
00001c  4607              MOV      r7,r0
;;;1144       if (_IsSpaceInBuffer(pObj, BytesNeeded)) {
00001e  4639              MOV      r1,r7
000020  4620              MOV      r0,r4
000022  f7fffffe          BL       _IsSpaceInBuffer
000026  b340              CBZ      r0,|L47.122|
;;;1145         int CursorOffset;
;;;1146         char* pText;
;;;1147         pText = (char*) GUI_ALLOC_h2p(pObj->hText);
000028  f9b40038          LDRSH    r0,[r4,#0x38]
00002c  f7fffffe          BL       GUI_ALLOC_h2p
000030  4605              MOV      r5,r0
;;;1148         CursorOffset = pObj->CursorPosByte;
000032  f8b4904a          LDRH     r9,[r4,#0x4a]
;;;1149         pText += CursorOffset;
000036  444d              ADD      r5,r5,r9
;;;1150         memmove(pText + BytesNeeded, pText, strlen(pText) + 1);
000038  4628              MOV      r0,r5
00003a  f7fffffe          BL       strlen
00003e  f1000a01          ADD      r10,r0,#1
000042  19e8              ADDS     r0,r5,r7
000044  4652              MOV      r2,r10
000046  4629              MOV      r1,r5
000048  f7fffffe          BL       __aeabi_memmove
;;;1151         GUI_UC_Encode(pText, Char);
00004c  4631              MOV      r1,r6
00004e  4628              MOV      r0,r5
000050  f7fffffe          BL       GUI_UC_Encode
;;;1152         WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
000054  2105              MOVS     r1,#5
000056  4640              MOV      r0,r8
000058  f7fffffe          BL       WM_NotifyParent
;;;1153         pObj->NumChars += 1;
00005c  8fa0              LDRH     r0,[r4,#0x3c]
00005e  1c40              ADDS     r0,r0,#1
000060  87a0              STRH     r0,[r4,#0x3c]
;;;1154         _InvalidateNumLines(pObj);
000062  4620              MOV      r0,r4
000064  f7fffffe          BL       _InvalidateNumLines
;;;1155         _InvalidateTextSizeX(pObj);
000068  4620              MOV      r0,r4
00006a  f7fffffe          BL       _InvalidateTextSizeX
;;;1156         _ClearCache(pObj);
00006e  4620              MOV      r0,r4
000070  f7fffffe          BL       _ClearCache
;;;1157         return 1;
000074  2001              MOVS     r0,#1
                  |L47.118|
;;;1158       }
;;;1159     }
;;;1160     return 0;
;;;1161   }
000076  e8bd87f0          POP      {r4-r10,pc}
                  |L47.122|
00007a  bf00              NOP                            ;1159
                  |L47.124|
00007c  2000              MOVS     r0,#0                 ;1160
00007e  e7fa              B        |L47.118|
;;;1162   
                          ENDP


                          AREA ||i._Invalidate||, CODE, READONLY, ALIGN=1

                  _Invalidate PROC
;;;642    */
;;;643    static void _Invalidate(MULTIEDIT_HANDLE hObj) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;644      _ManageScrollers(hObj);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       _ManageScrollers
;;;645      WM_Invalidate(hObj);
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       WM_InvalidateWindow
;;;646    }
000010  bd10              POP      {r4,pc}
;;;647    
                          ENDP


                          AREA ||i._InvalidateCursorPos||, CODE, READONLY, ALIGN=1

                  _InvalidateCursorPos PROC
;;;666    */
;;;667    static int _InvalidateCursorPos(MULTIEDIT_OBJ * pObj) {
000000  4601              MOV      r1,r0
;;;668      int Value;
;;;669      Value = pObj->CursorPosChar;
000002  f8b10048          LDRH     r0,[r1,#0x48]
;;;670      pObj->CursorPosChar = 0xffff;
000006  f64f72ff          MOV      r2,#0xffff
00000a  f8a12048          STRH     r2,[r1,#0x48]
;;;671      return Value;
;;;672    }
00000e  4770              BX       lr
;;;673    
                          ENDP


                          AREA ||i._InvalidateCursorXY||, CODE, READONLY, ALIGN=1

                  _InvalidateCursorXY PROC
;;;444    */
;;;445    static void _InvalidateCursorXY(MULTIEDIT_OBJ * pObj) {
000000  f8901079          LDRB     r1,[r0,#0x79]
;;;446      pObj->InvalidFlags |= INVALID_CURSORXY;
000004  f0410108          ORR      r1,r1,#8
000008  f8801079          STRB     r1,[r0,#0x79]
;;;447    }
00000c  4770              BX       lr
;;;448    
                          ENDP


                          AREA ||i._InvalidateNumChars||, CODE, READONLY, ALIGN=1

                  _InvalidateNumChars PROC
;;;164    */
;;;165    static void _InvalidateNumChars(MULTIEDIT_OBJ * pObj) {
000000  f8901079          LDRB     r1,[r0,#0x79]
;;;166      pObj->InvalidFlags |= INVALID_NUMCHARS;
000004  f0410101          ORR      r1,r1,#1
000008  f8801079          STRB     r1,[r0,#0x79]
;;;167    }
00000c  4770              BX       lr
;;;168    
                          ENDP


                          AREA ||i._InvalidateNumLines||, CODE, READONLY, ALIGN=1

                  _InvalidateNumLines PROC
;;;563    */
;;;564    static void _InvalidateNumLines(MULTIEDIT_OBJ * pObj) {
000000  f8901079          LDRB     r1,[r0,#0x79]
;;;565      pObj->InvalidFlags |= INVALID_NUMLINES;
000004  f0410102          ORR      r1,r1,#2
000008  f8801079          STRB     r1,[r0,#0x79]
;;;566    }
00000c  4770              BX       lr
;;;567    
                          ENDP


                          AREA ||i._InvalidateTextArea||, CODE, READONLY, ALIGN=1

                  _InvalidateTextArea PROC
;;;653    */
;;;654    static void _InvalidateTextArea(MULTIEDIT_HANDLE hObj) {
000000  b51c              PUSH     {r2-r4,lr}
000002  4604              MOV      r4,r0
;;;655      GUI_RECT rInsideRect;
;;;656      _ManageScrollers(hObj);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       _ManageScrollers
;;;657      WM_GetInsideRectExScrollbar(hObj, &rInsideRect);
00000a  4669              MOV      r1,sp
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;658      WM_InvalidateRect(hObj, &rInsideRect);
000012  4669              MOV      r1,sp
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       WM_InvalidateRect
;;;659    }
00001a  bd1c              POP      {r2-r4,pc}
;;;660    
                          ENDP


                          AREA ||i._InvalidateTextSizeX||, CODE, READONLY, ALIGN=1

                  _InvalidateTextSizeX PROC
;;;573    */
;;;574    static void _InvalidateTextSizeX(MULTIEDIT_OBJ * pObj) {
000000  f8901079          LDRB     r1,[r0,#0x79]
;;;575      pObj->InvalidFlags |= INVALID_TEXTSIZE;
000004  f0410104          ORR      r1,r1,#4
000008  f8801079          STRB     r1,[r0,#0x79]
;;;576    }
00000c  4770              BX       lr
;;;577    
                          ENDP


                          AREA ||i._IsCharsAvailable||, CODE, READONLY, ALIGN=1

                  _IsCharsAvailable PROC
;;;1074   */
;;;1075   static int _IsCharsAvailable(MULTIEDIT_OBJ* pObj, int CharsNeeded) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;1076     if ((CharsNeeded > 0) && (pObj->MaxNumChars > 0)) {
000006  2d00              CMP      r5,#0
000008  dd10              BLE      |L55.44|
00000a  8f60              LDRH     r0,[r4,#0x3a]
00000c  2800              CMP      r0,#0
00000e  dd0d              BLE      |L55.44|
;;;1077       int NumChars = 0;
000010  2600              MOVS     r6,#0
;;;1078       if (pObj->hText) {
000012  8f20              LDRH     r0,[r4,#0x38]
000014  b118              CBZ      r0,|L55.30|
;;;1079         NumChars = _GetNumChars(pObj);
000016  4620              MOV      r0,r4
000018  f7fffffe          BL       _GetNumChars
00001c  4606              MOV      r6,r0
                  |L55.30|
;;;1080       }
;;;1081       if ((CharsNeeded + NumChars) > pObj->MaxNumChars) {
00001e  19a8              ADDS     r0,r5,r6
000020  8f61              LDRH     r1,[r4,#0x3a]
000022  4288              CMP      r0,r1
000024  dd01              BLE      |L55.42|
;;;1082         return 0;
000026  2000              MOVS     r0,#0
                  |L55.40|
;;;1083       }
;;;1084     }
;;;1085     return 1;
;;;1086   }
000028  bd70              POP      {r4-r6,pc}
                  |L55.42|
00002a  bf00              NOP                            ;1084
                  |L55.44|
00002c  2001              MOVS     r0,#1                 ;1085
00002e  e7fb              B        |L55.40|
;;;1087   
                          ENDP


                          AREA ||i._IsOverwriteAtThisChar||, CODE, READONLY, ALIGN=1

                  _IsOverwriteAtThisChar PROC
;;;908    */
;;;909    static int _IsOverwriteAtThisChar(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000000  e92d4ff8          PUSH     {r3-r11,lr}
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
;;;910      int r = 0;
000008  f04f0800          MOV      r8,#0
;;;911      if (pObj->hText && !(pObj->Flags & MULTIEDIT_CF_INSERT)) {
00000c  8f20              LDRH     r0,[r4,#0x38]
00000e  2800              CMP      r0,#0
000010  d03a              BEQ      |L56.136|
000012  f8940078          LDRB     r0,[r4,#0x78]
000016  f0100f04          TST      r0,#4
00001a  d135              BNE      |L56.136|
;;;912        const char *pText;
;;;913        int CurPos, Line1, Line2;
;;;914        U16 Char;
;;;915        pText  = (const char *)GUI_ALLOC_h2p(pObj->hText);
00001c  f9b40038          LDRSH    r0,[r4,#0x38]
000020  f7fffffe          BL       GUI_ALLOC_h2p
000024  4605              MOV      r5,r0
;;;916        Line1  = pObj->CursorLine;
000026  f8b4a046          LDRH     r10,[r4,#0x46]
;;;917        CurPos = _CalcNextValidCursorPos(hObj, pObj, pObj->CursorPosChar + 1, 0, 0);
00002a  2000              MOVS     r0,#0
00002c  9000              STR      r0,[sp,#0]
00002e  f8b40048          LDRH     r0,[r4,#0x48]
000032  1c42              ADDS     r2,r0,#1
000034  2300              MOVS     r3,#0
000036  4621              MOV      r1,r4
000038  4638              MOV      r0,r7
00003a  f7fffffe          BL       _CalcNextValidCursorPos
00003e  4681              MOV      r9,r0
;;;918        Line2  = _GetCursorLine(hObj, pObj, pText, CurPos);
000040  464b              MOV      r3,r9
000042  462a              MOV      r2,r5
000044  4621              MOV      r1,r4
000046  4638              MOV      r0,r7
000048  f7fffffe          BL       _GetCursorLine
00004c  4683              MOV      r11,r0
;;;919        pText += pObj->CursorPosByte;
00004e  f8b4004a          LDRH     r0,[r4,#0x4a]
000052  4405              ADD      r5,r5,r0
;;;920        Char   = GUI_UC_GetCharCode(pText);
000054  4628              MOV      r0,r5
000056  f7fffffe          BL       GUI_UC_GetCharCode
00005a  4606              MOV      r6,r0
;;;921        if (Char) {
00005c  b19e              CBZ      r6,|L56.134|
;;;922          if ((Line1 == Line2) || (pObj->Flags & MULTIEDIT_SF_PASSWORD)) {
00005e  45da              CMP      r10,r11
000060  d004              BEQ      |L56.108|
000062  f8940078          LDRB     r0,[r4,#0x78]
000066  f0100f20          TST      r0,#0x20
00006a  d002              BEQ      |L56.114|
                  |L56.108|
;;;923            r = 1;
00006c  f04f0801          MOV      r8,#1
000070  e009              B        |L56.134|
                  |L56.114|
;;;924          } else {
;;;925            if (Char != '\n') {
000072  2e0a              CMP      r6,#0xa
000074  d007              BEQ      |L56.134|
;;;926              if ((Char != ' ') || (pObj->WrapMode == GUI_WRAPMODE_CHAR)) {
000076  2e20              CMP      r6,#0x20
000078  d103              BNE      |L56.130|
00007a  f894007c          LDRB     r0,[r4,#0x7c]
00007e  2802              CMP      r0,#2
000080  d101              BNE      |L56.134|
                  |L56.130|
;;;927                r = 1;
000082  f04f0801          MOV      r8,#1
                  |L56.134|
;;;928              }
;;;929            }
;;;930          }
;;;931        }
;;;932      }
000086  bf00              NOP      
                  |L56.136|
;;;933      return r;
000088  4640              MOV      r0,r8
;;;934    }
00008a  e8bd8ff8          POP      {r3-r11,pc}
;;;935    
                          ENDP


                          AREA ||i._IsSpaceInBuffer||, CODE, READONLY, ALIGN=1

                  _IsSpaceInBuffer PROC
;;;1050   */
;;;1051   static int _IsSpaceInBuffer(MULTIEDIT_OBJ* pObj, int BytesNeeded) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;1052     int NumBytes = 0;
000008  2600              MOVS     r6,#0
;;;1053     if (pObj->hText) {
00000a  8f20              LDRH     r0,[r4,#0x38]
00000c  b138              CBZ      r0,|L57.30|
;;;1054       NumBytes = strlen((char*)GUI_ALLOC_h2p(pObj->hText));
00000e  f9b40038          LDRSH    r0,[r4,#0x38]
000012  f7fffffe          BL       GUI_ALLOC_h2p
000016  4607              MOV      r7,r0
000018  f7fffffe          BL       strlen
00001c  4606              MOV      r6,r0
                  |L57.30|
;;;1055     }
;;;1056     BytesNeeded = (BytesNeeded + NumBytes + 1) - pObj->BufferSize;
00001e  19a8              ADDS     r0,r5,r6
000020  1c40              ADDS     r0,r0,#1
000022  f8b41044          LDRH     r1,[r4,#0x44]
000026  1a45              SUBS     r5,r0,r1
;;;1057     if (BytesNeeded > 0) {
000028  2d00              CMP      r5,#0
00002a  dd08              BLE      |L57.62|
;;;1058       if (!_IncrementBuffer(pObj, BytesNeeded + MULTIEDIT_REALLOC_SIZE)) {
00002c  f1050110          ADD      r1,r5,#0x10
000030  4620              MOV      r0,r4
000032  f7fffffe          BL       _IncrementBuffer
000036  b910              CBNZ     r0,|L57.62|
;;;1059         return 0;
000038  2000              MOVS     r0,#0
                  |L57.58|
;;;1060       }
;;;1061     }
;;;1062     return 1;
;;;1063   }
00003a  e8bd81f0          POP      {r4-r8,pc}
                  |L57.62|
00003e  2001              MOVS     r0,#1                 ;1062
000040  e7fb              B        |L57.58|
;;;1064   
                          ENDP


                          AREA ||i._MULTIEDIT_Paint||, CODE, READONLY, ALIGN=1

                  _MULTIEDIT_Paint PROC
;;;1172   */
;;;1173   static void _MULTIEDIT_Paint(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ * pObj) {
000000  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
000004  b08d              SUB      sp,sp,#0x34
000006  460c              MOV      r4,r1
;;;1174     int ScrollPosX, ScrollPosY, EffectSize, HBorder, IsRTL = 0;
000008  2000              MOVS     r0,#0
00000a  900c              STR      r0,[sp,#0x30]
;;;1175     int x, y, xOff, yOff, ColorIndex, FontSizeY;
;;;1176     GUI_RECT r, rClip;
;;;1177     const GUI_RECT *prOldClip;
;;;1178     /* Init some values */
;;;1179     GUI_SetFont(pObj->pFont);
00000c  6f60              LDR      r0,[r4,#0x74]
00000e  f7fffffe          BL       GUI_SetFont
;;;1180     FontSizeY  = GUI_GetFontDistY();
000012  f7fffffe          BL       GUI_GetFontDistY
000016  9007              STR      r0,[sp,#0x1c]
;;;1181     ScrollPosX = pObj->ScrollStateH.v;
000018  6ee7              LDR      r7,[r4,#0x6c]
;;;1182     ScrollPosY = pObj->ScrollStateV.v;
00001a  6e25              LDR      r5,[r4,#0x60]
;;;1183     EffectSize = pObj->Widget.pEffect->EffectSize;
00001c  6a20              LDR      r0,[r4,#0x20]
00001e  6946              LDR      r6,[r0,#0x14]
;;;1184     HBorder    = pObj->HBorder;
000020  f894a07b          LDRB     r10,[r4,#0x7b]
;;;1185     xOff       = EffectSize + HBorder - ScrollPosX;
000024  eb06000a          ADD      r0,r6,r10
000028  eba00b07          SUB      r11,r0,r7
;;;1186     yOff       = EffectSize - ScrollPosY * FontSizeY;
00002c  9807              LDR      r0,[sp,#0x1c]
00002e  fb056010          MLS      r0,r5,r0,r6
000032  9009              STR      r0,[sp,#0x24]
;;;1187     ColorIndex = ((pObj->Flags & MULTIEDIT_SF_READONLY) ? 1 : 0);
000034  f8940078          LDRB     r0,[r4,#0x78]
000038  f0000001          AND      r0,r0,#1
00003c  9008              STR      r0,[sp,#0x20]
;;;1188     /* Set colors and draw the background */
;;;1189     LCD_SetBkColor(pObj->aBkColor[ColorIndex]);
00003e  f1040128          ADD      r1,r4,#0x28
000042  9a08              LDR      r2,[sp,#0x20]
000044  f8510022          LDR      r0,[r1,r2,LSL #2]
000048  f7fffffe          BL       LCD_SetBkColor
;;;1190     LCD_SetColor(pObj->aColor[ColorIndex]);
00004c  f1040130          ADD      r1,r4,#0x30
000050  9a08              LDR      r2,[sp,#0x20]
000052  f8510022          LDR      r0,[r1,r2,LSL #2]
000056  f7fffffe          BL       LCD_SetColor
;;;1191     GUI_Clear();
00005a  f7fffffe          BL       GUI_Clear
;;;1192     /* Draw the text if necessary */
;;;1193     rClip.x0 = EffectSize + HBorder;
00005e  eb06000a          ADD      r0,r6,r10
000062  b200              SXTH     r0,r0
000064  f8ad000c          STRH     r0,[sp,#0xc]
;;;1194     rClip.y0 = EffectSize;
000068  b230              SXTH     r0,r6
00006a  f8ad000e          STRH     r0,[sp,#0xe]
;;;1195     rClip.x1 = WM_GetWindowSizeX(hObj) - EffectSize - HBorder - 1;
00006e  980d              LDR      r0,[sp,#0x34]
000070  f7fffffe          BL       WM_GetWindowSizeX
000074  1b80              SUBS     r0,r0,r6
000076  eba0000a          SUB      r0,r0,r10
00007a  1e40              SUBS     r0,r0,#1
00007c  b200              SXTH     r0,r0
00007e  f8ad0010          STRH     r0,[sp,#0x10]
;;;1196     rClip.y1 = WM_GetWindowSizeY(hObj) - EffectSize - 1;
000082  980d              LDR      r0,[sp,#0x34]
000084  f7fffffe          BL       WM_GetWindowSizeY
000088  1b80              SUBS     r0,r0,r6
00008a  1e40              SUBS     r0,r0,#1
00008c  b200              SXTH     r0,r0
00008e  f8ad0012          STRH     r0,[sp,#0x12]
;;;1197     prOldClip = WM_SetUserClipRect(&rClip);
000092  a803              ADD      r0,sp,#0xc
000094  f7fffffe          BL       WM_SetUserClipRect
000098  9002              STR      r0,[sp,#8]
;;;1198     if (pObj->hText) {
00009a  8f20              LDRH     r0,[r4,#0x38]
00009c  2800              CMP      r0,#0
00009e  d078              BEQ      |L58.402|
;;;1199       const char* pText;
;;;1200       int Line = 0;
0000a0  f04f0900          MOV      r9,#0
;;;1201       int xSize       = _GetXSize(hObj, pObj);
0000a4  4621              MOV      r1,r4
0000a6  980d              LDR      r0,[sp,#0x34]
0000a8  f7fffffe          BL       _GetXSize
0000ac  9001              STR      r0,[sp,#4]
;;;1202       int NumVisLines = _GetNumVisLines(hObj, pObj);
0000ae  4621              MOV      r1,r4
0000b0  980d              LDR      r0,[sp,#0x34]
0000b2  f7fffffe          BL       _GetNumVisLines
0000b6  9000              STR      r0,[sp,#0]
;;;1203       /* Get the text */
;;;1204       pText = (const char *)GUI_ALLOC_h2p(pObj->hText);
0000b8  f9b40038          LDRSH    r0,[r4,#0x38]
0000bc  f7fffffe          BL       GUI_ALLOC_h2p
0000c0  4680              MOV      r8,r0
;;;1205       /* Set the rectangle for drawing */
;;;1206       r.x0 = xOff;
0000c2  fa0ff08b          SXTH     r0,r11
0000c6  f8ad0014          STRH     r0,[sp,#0x14]
;;;1207       r.y0 = EffectSize;
0000ca  b230              SXTH     r0,r6
0000cc  f8ad0016          STRH     r0,[sp,#0x16]
;;;1208       r.x1 = xSize + EffectSize + HBorder - 1;
0000d0  9801              LDR      r0,[sp,#4]
0000d2  4430              ADD      r0,r0,r6
0000d4  4450              ADD      r0,r0,r10
0000d6  1e40              SUBS     r0,r0,#1
0000d8  b200              SXTH     r0,r0
0000da  f8ad0018          STRH     r0,[sp,#0x18]
;;;1209       r.y1 = pObj->Widget.Win.Rect.y1 - pObj->Widget.Win.Rect.y0 + 1;
0000de  88e0              LDRH     r0,[r4,#6]
0000e0  8861              LDRH     r1,[r4,#2]
0000e2  1a40              SUBS     r0,r0,r1
0000e4  1c40              ADDS     r0,r0,#1
0000e6  b200              SXTH     r0,r0
0000e8  f8ad001a          STRH     r0,[sp,#0x1a]
;;;1210       /* Use cached position of first visible byte if possible */
;;;1211       if (ScrollPosY >= pObj->CacheFirstVisibleLine) {
0000ec  f8b40054          LDRH     r0,[r4,#0x54]
0000f0  42a8              CMP      r0,r5
0000f2  dc07              BGT      |L58.260|
;;;1212         if (pObj->CacheFirstVisibleByte) {
0000f4  f8b40056          LDRH     r0,[r4,#0x56]
0000f8  b120              CBZ      r0,|L58.260|
;;;1213           pText += pObj->CacheFirstVisibleByte;
0000fa  f8b40056          LDRH     r0,[r4,#0x56]
0000fe  4480              ADD      r8,r8,r0
;;;1214           Line   = pObj->CacheFirstVisibleLine;
000100  f8b49054          LDRH     r9,[r4,#0x54]
                  |L58.260|
;;;1215         }
;;;1216       }
;;;1217       if (pObj->Align == GUI_TA_RIGHT) {
000104  f8b40058          LDRH     r0,[r4,#0x58]
000108  2801              CMP      r0,#1
00010a  d10b              BNE      |L58.292|
;;;1218         r.x0 += ScrollPosX;
00010c  f8bd0014          LDRH     r0,[sp,#0x14]
000110  4438              ADD      r0,r0,r7
000112  b200              SXTH     r0,r0
000114  f8ad0014          STRH     r0,[sp,#0x14]
;;;1219         r.x1 += ScrollPosX;
000118  f8bd0018          LDRH     r0,[sp,#0x18]
00011c  4438              ADD      r0,r0,r7
00011e  b200              SXTH     r0,r0
000120  f8ad0018          STRH     r0,[sp,#0x18]
                  |L58.292|
;;;1220       }
;;;1221       /* Do the drawing of the text */
;;;1222       do {
000124  bf00              NOP      
                  |L58.294|
;;;1223         /* Cache the position of the first visible byte and the depending line number */
;;;1224         if (pObj->CacheFirstVisibleLine != ScrollPosY) {
000126  f8b40054          LDRH     r0,[r4,#0x54]
00012a  42a8              CMP      r0,r5
00012c  d00b              BEQ      |L58.326|
;;;1225           if (Line == ScrollPosY) {
00012e  45a9              CMP      r9,r5
000130  d109              BNE      |L58.326|
;;;1226             pObj->CacheFirstVisibleByte = pText - (const char *)GUI_ALLOC_h2p(pObj->hText);
000132  f9b40038          LDRSH    r0,[r4,#0x38]
000136  f7fffffe          BL       GUI_ALLOC_h2p
00013a  eba80000          SUB      r0,r8,r0
00013e  f8a40056          STRH     r0,[r4,#0x56]
;;;1227             pObj->CacheFirstVisibleLine = ScrollPosY;
000142  f8a45054          STRH     r5,[r4,#0x54]
                  |L58.326|
;;;1228           }
;;;1229         }
;;;1230         /* Draw it */
;;;1231         if ((Line >= ScrollPosY) && ((Line - ScrollPosY) <= NumVisLines)) {
000146  45a9              CMP      r9,r5
000148  db11              BLT      |L58.366|
00014a  eba90105          SUB      r1,r9,r5
00014e  9800              LDR      r0,[sp,#0]
000150  4281              CMP      r1,r0
000152  dc0c              BGT      |L58.366|
;;;1232           _DispString(hObj, pObj, pText, &r);
000154  ab05              ADD      r3,sp,#0x14
000156  4642              MOV      r2,r8
000158  4621              MOV      r1,r4
00015a  980d              LDR      r0,[sp,#0x34]
00015c  f7fffffe          BL       _DispString
;;;1233           r.y0 += FontSizeY;  /* Next line */
000160  f8bd1016          LDRH     r1,[sp,#0x16]
000164  9807              LDR      r0,[sp,#0x1c]
000166  4408              ADD      r0,r0,r1
000168  b200              SXTH     r0,r0
00016a  f8ad0016          STRH     r0,[sp,#0x16]
                  |L58.366|
;;;1234         }
;;;1235         pText += _WrapGetNumBytesToNextLine(hObj, pObj, pText);
00016e  4642              MOV      r2,r8
000170  4621              MOV      r1,r4
000172  980d              LDR      r0,[sp,#0x34]
000174  f7fffffe          BL       _WrapGetNumBytesToNextLine
000178  4480              ADD      r8,r8,r0
;;;1236         Line++;
00017a  f1090901          ADD      r9,r9,#1
;;;1237       } while (GUI_UC_GetCharCode(pText) && ((Line - ScrollPosY) <= NumVisLines));
00017e  4640              MOV      r0,r8
000180  f7fffffe          BL       GUI_UC_GetCharCode
000184  b120              CBZ      r0,|L58.400|
000186  eba90105          SUB      r1,r9,r5
00018a  9800              LDR      r0,[sp,#0]
00018c  4281              CMP      r1,r0
00018e  ddca              BLE      |L58.294|
                  |L58.400|
;;;1238     }
000190  bf00              NOP      
                  |L58.402|
;;;1239     /* Draw cursor if necessary */
;;;1240     if (WM_HasFocus(hObj)) {
000192  980d              LDR      r0,[sp,#0x34]
000194  f7fffffe          BL       WM_HasFocus
000198  2800              CMP      r0,#0
00019a  d053              BEQ      |L58.580|
;;;1241       int CursorSize;
;;;1242       _GetCursorXY(hObj, pObj, &x, &y);
00019c  ab0a              ADD      r3,sp,#0x28
00019e  aa0b              ADD      r2,sp,#0x2c
0001a0  4621              MOV      r1,r4
0001a2  980d              LDR      r0,[sp,#0x34]
0001a4  f7fffffe          BL       _GetCursorXY
;;;1243       CursorSize = _GetCursorSizeX(hObj, pObj, &IsRTL);
0001a8  aa0c              ADD      r2,sp,#0x30
0001aa  4621              MOV      r1,r4
0001ac  980d              LDR      r0,[sp,#0x34]
0001ae  f7fffffe          BL       _GetCursorSizeX
0001b2  4680              MOV      r8,r0
;;;1244       if (IsRTL) {
0001b4  980c              LDR      r0,[sp,#0x30]
0001b6  b170              CBZ      r0,|L58.470|
;;;1245         r.x0 = x + xOff - CursorSize;
0001b8  980b              LDR      r0,[sp,#0x2c]
0001ba  4458              ADD      r0,r0,r11
0001bc  eba00008          SUB      r0,r0,r8
0001c0  b200              SXTH     r0,r0
0001c2  f8ad0014          STRH     r0,[sp,#0x14]
;;;1246         r.x1 = r.x0 + CursorSize - 1;
0001c6  f8bd0014          LDRH     r0,[sp,#0x14]
0001ca  4440              ADD      r0,r0,r8
0001cc  1e40              SUBS     r0,r0,#1
0001ce  b200              SXTH     r0,r0
0001d0  f8ad0018          STRH     r0,[sp,#0x18]
0001d4  e00b              B        |L58.494|
                  |L58.470|
;;;1247       } else {
;;;1248         r.x0 = x + xOff;
0001d6  980b              LDR      r0,[sp,#0x2c]
0001d8  4458              ADD      r0,r0,r11
0001da  b200              SXTH     r0,r0
0001dc  f8ad0014          STRH     r0,[sp,#0x14]
;;;1249         r.x1 = r.x0 + CursorSize - 1;
0001e0  f8bd0014          LDRH     r0,[sp,#0x14]
0001e4  4440              ADD      r0,r0,r8
0001e6  1e40              SUBS     r0,r0,#1
0001e8  b200              SXTH     r0,r0
0001ea  f8ad0018          STRH     r0,[sp,#0x18]
                  |L58.494|
;;;1250       }
;;;1251       r.y0 = y + yOff;
0001ee  e9dd0109          LDRD     r0,r1,[sp,#0x24]
0001f2  4408              ADD      r0,r0,r1
0001f4  b200              SXTH     r0,r0
0001f6  f8ad0016          STRH     r0,[sp,#0x16]
;;;1252       r.y1 = r.y0 + FontSizeY - 1;
0001fa  f8bd1016          LDRH     r1,[sp,#0x16]
0001fe  9807              LDR      r0,[sp,#0x1c]
000200  4408              ADD      r0,r0,r1
000202  1e40              SUBS     r0,r0,#1
000204  b200              SXTH     r0,r0
000206  f8ad001a          STRH     r0,[sp,#0x1a]
;;;1253       if (pObj->Align == GUI_TA_RIGHT) {
00020a  f8b40058          LDRH     r0,[r4,#0x58]
00020e  2801              CMP      r0,#1
000210  d10d              BNE      |L58.558|
;;;1254         r.x0 += ScrollPosX << 1;
000212  f8bd0014          LDRH     r0,[sp,#0x14]
000216  eb000047          ADD      r0,r0,r7,LSL #1
00021a  b200              SXTH     r0,r0
00021c  f8ad0014          STRH     r0,[sp,#0x14]
;;;1255         r.x1 += ScrollPosX << 1;
000220  f8bd0018          LDRH     r0,[sp,#0x18]
000224  eb000047          ADD      r0,r0,r7,LSL #1
000228  b200              SXTH     r0,r0
00022a  f8ad0018          STRH     r0,[sp,#0x18]
                  |L58.558|
;;;1256       }
;;;1257       GUI_InvertRect(r.x0, r.y0, r.x1, r.y1);
00022e  f9bd301a          LDRSH    r3,[sp,#0x1a]
000232  f9bd2018          LDRSH    r2,[sp,#0x18]
000236  f9bd1016          LDRSH    r1,[sp,#0x16]
00023a  f9bd0014          LDRSH    r0,[sp,#0x14]
00023e  f7fffffe          BL       GUI_InvertRect
;;;1258     }
000242  bf00              NOP      
                  |L58.580|
;;;1259     WM_SetUserClipRect(prOldClip);
000244  9802              LDR      r0,[sp,#8]
000246  f7fffffe          BL       WM_SetUserClipRect
;;;1260     /* Draw the 3D effect (if configured) */
;;;1261     WIDGET__EFFECT_DrawDown(&pObj->Widget);
00024a  4620              MOV      r0,r4
00024c  f7fffffe          BL       WIDGET__EFFECT_DrawDown
;;;1262   }
000250  b00f              ADD      sp,sp,#0x3c
000252  e8bd8ff0          POP      {r4-r11,pc}
;;;1263   
                          ENDP


                          AREA ||i._ManageAutoScrollV||, CODE, READONLY, ALIGN=1

                  _ManageAutoScrollV PROC
;;;599    */
;;;600    static void _ManageAutoScrollV(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
;;;601      if (pObj->Flags & MULTIEDIT_SF_AUTOSCROLLBAR_V) {
000008  f8940078          LDRB     r0,[r4,#0x78]
00000c  f0100f08          TST      r0,#8
000010  d021              BEQ      |L59.86|
;;;602        char IsRequired = _GetNumVisLines(hObj, pObj) < _GetNumLines(hObj, pObj);
000012  4621              MOV      r1,r4
000014  4630              MOV      r0,r6
000016  f7fffffe          BL       _GetNumVisLines
00001a  4607              MOV      r7,r0
00001c  4621              MOV      r1,r4
00001e  4630              MOV      r0,r6
000020  f7fffffe          BL       _GetNumLines
000024  4287              CMP      r7,r0
000026  da01              BGE      |L59.44|
000028  2001              MOVS     r0,#1
00002a  e000              B        |L59.46|
                  |L59.44|
00002c  2000              MOVS     r0,#0
                  |L59.46|
00002e  4605              MOV      r5,r0
;;;603        if (WM_SetScrollbarV(hObj, IsRequired) != IsRequired) {
000030  4629              MOV      r1,r5
000032  4630              MOV      r0,r6
000034  f7fffffe          BL       WM_SetScrollbarV
000038  42a8              CMP      r0,r5
00003a  d00b              BEQ      |L59.84|
;;;604          _InvalidateNumLines(pObj);
00003c  4620              MOV      r0,r4
00003e  f7fffffe          BL       _InvalidateNumLines
;;;605          _InvalidateTextSizeX(pObj);
000042  4620              MOV      r0,r4
000044  f7fffffe          BL       _InvalidateTextSizeX
;;;606          _InvalidateCursorXY(pObj);
000048  4620              MOV      r0,r4
00004a  f7fffffe          BL       _InvalidateCursorXY
;;;607          _ClearCache(pObj);
00004e  4620              MOV      r0,r4
000050  f7fffffe          BL       _ClearCache
                  |L59.84|
;;;608        }
;;;609      }
000054  bf00              NOP      
                  |L59.86|
;;;610    }
000056  e8bd81f0          POP      {r4-r8,pc}
;;;611    
                          ENDP


                          AREA ||i._ManageScrollers||, CODE, READONLY, ALIGN=1

                  _ManageScrollers PROC
;;;621    */
;;;622    static void _ManageScrollers(MULTIEDIT_HANDLE hObj) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
;;;623      MULTIEDIT_OBJ* pObj;
;;;624      pObj = MULTIEDIT_H2P(hObj);
000006  4630              MOV      r0,r6
000008  f7fffffe          BL       GUI_ALLOC_h2p
00000c  4604              MOV      r4,r0
;;;625      /* 1. Step: Check if vertical scrollbar is required */
;;;626      _ManageAutoScrollV(hObj, pObj);
00000e  4621              MOV      r1,r4
000010  4630              MOV      r0,r6
000012  f7fffffe          BL       _ManageAutoScrollV
;;;627      /* 2. Step: Check if horizontal scrollbar is required */
;;;628      if (pObj->Flags & MULTIEDIT_SF_AUTOSCROLLBAR_H) {
000016  f8940078          LDRB     r0,[r4,#0x78]
00001a  f0100f10          TST      r0,#0x10
00001e  d019              BEQ      |L60.84|
;;;629        char IsRequired;
;;;630        IsRequired = (_GetXSize(hObj, pObj) < _GetTextSizeX(hObj, pObj));
000020  4621              MOV      r1,r4
000022  4630              MOV      r0,r6
000024  f7fffffe          BL       _GetXSize
000028  4607              MOV      r7,r0
00002a  4621              MOV      r1,r4
00002c  4630              MOV      r0,r6
00002e  f7fffffe          BL       _GetTextSizeX
000032  4287              CMP      r7,r0
000034  da01              BGE      |L60.58|
000036  2001              MOVS     r0,#1
000038  e000              B        |L60.60|
                  |L60.58|
00003a  2000              MOVS     r0,#0
                  |L60.60|
00003c  4605              MOV      r5,r0
;;;631        if (WM_SetScrollbarH(hObj, IsRequired) != IsRequired) {
00003e  4629              MOV      r1,r5
000040  4630              MOV      r0,r6
000042  f7fffffe          BL       WM_SetScrollbarH
000046  42a8              CMP      r0,r5
000048  d003              BEQ      |L60.82|
;;;632          /* 3. Step: Check vertical scrollbar again if horizontal has changed */
;;;633          _ManageAutoScrollV(hObj, pObj);
00004a  4621              MOV      r1,r4
00004c  4630              MOV      r0,r6
00004e  f7fffffe          BL       _ManageAutoScrollV
                  |L60.82|
;;;634        }
;;;635      }
000052  bf00              NOP      
                  |L60.84|
;;;636      _CalcScrollParas(hObj);
000054  4630              MOV      r0,r6
000056  f7fffffe          BL       _CalcScrollParas
;;;637    }
00005a  e8bd81f0          POP      {r4-r8,pc}
;;;638    
                          ENDP


                          AREA ||i._MoveCursor2LineEnd||, CODE, READONLY, ALIGN=1

                  _MoveCursor2LineEnd PROC
;;;888    */
;;;889    static void _MoveCursor2LineEnd(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000000  b57c              PUSH     {r2-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;890      int xPos, yPos;
;;;891      _GetCursorXY(hObj, pObj, &xPos, &yPos);
000006  466b              MOV      r3,sp
000008  aa01              ADD      r2,sp,#4
00000a  4629              MOV      r1,r5
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       _GetCursorXY
;;;892      _SetCursorXY(hObj, pObj, 0x7FFF, yPos);
000012  f64772ff          MOV      r2,#0x7fff
000016  4629              MOV      r1,r5
000018  4620              MOV      r0,r4
00001a  9b00              LDR      r3,[sp,#0]
00001c  f7fffffe          BL       _SetCursorXY
;;;893    }
000020  bd7c              POP      {r2-r6,pc}
;;;894    
                          ENDP


                          AREA ||i._MoveCursor2LinePos1||, CODE, READONLY, ALIGN=1

                  _MoveCursor2LinePos1 PROC
;;;898    */
;;;899    static void _MoveCursor2LinePos1(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000000  b57c              PUSH     {r2-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;900      int xPos, yPos;
;;;901      _GetCursorXY(hObj, pObj, &xPos, &yPos);
000006  466b              MOV      r3,sp
000008  aa01              ADD      r2,sp,#4
00000a  4629              MOV      r1,r5
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       _GetCursorXY
;;;902      _SetCursorXY(hObj, pObj, 0, yPos);
000012  2200              MOVS     r2,#0
000014  4629              MOV      r1,r5
000016  4620              MOV      r0,r4
000018  9b00              LDR      r3,[sp,#0]
00001a  f7fffffe          BL       _SetCursorXY
;;;903    }
00001e  bd7c              POP      {r2-r6,pc}
;;;904    
                          ENDP


                          AREA ||i._MoveCursor2NextLine||, CODE, READONLY, ALIGN=1

                  _MoveCursor2NextLine PROC
;;;877    */
;;;878    static void _MoveCursor2NextLine(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000000  b57c              PUSH     {r2-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;879      int xPos, yPos;
;;;880      _GetCursorXY(hObj, pObj, &xPos, &yPos);
000006  466b              MOV      r3,sp
000008  aa01              ADD      r2,sp,#4
00000a  4621              MOV      r1,r4
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       _GetCursorXY
;;;881      yPos += GUI_GetYDistOfFont(pObj->pFont);
000012  6f60              LDR      r0,[r4,#0x74]
000014  f7fffffe          BL       GUI_GetYDistOfFont
000018  9900              LDR      r1,[sp,#0]
00001a  4408              ADD      r0,r0,r1
00001c  9000              STR      r0,[sp,#0]
;;;882      _SetCursorXY(hObj, pObj, 0, yPos);
00001e  2200              MOVS     r2,#0
000020  4621              MOV      r1,r4
000022  4628              MOV      r0,r5
000024  9b00              LDR      r3,[sp,#0]
000026  f7fffffe          BL       _SetCursorXY
;;;883    }
00002a  bd7c              POP      {r2-r6,pc}
;;;884    
                          ENDP


                          AREA ||i._MoveCursorDown||, CODE, READONLY, ALIGN=1

                  _MoveCursorDown PROC
;;;866    */
;;;867    static void _MoveCursorDown(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000000  b57c              PUSH     {r2-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;868      int xPos, yPos;
;;;869      _GetCursorXY(hObj, pObj, &xPos, &yPos);
000006  466b              MOV      r3,sp
000008  aa01              ADD      r2,sp,#4
00000a  4621              MOV      r1,r4
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       _GetCursorXY
;;;870      yPos += GUI_GetYDistOfFont(pObj->pFont);
000012  6f60              LDR      r0,[r4,#0x74]
000014  f7fffffe          BL       GUI_GetYDistOfFont
000018  9900              LDR      r1,[sp,#0]
00001a  4408              ADD      r0,r0,r1
00001c  9000              STR      r0,[sp,#0]
;;;871      _SetCursorXY(hObj, pObj, xPos, yPos);
00001e  4621              MOV      r1,r4
000020  4628              MOV      r0,r5
000022  e9dd3200          LDRD     r3,r2,[sp,#0]
000026  f7fffffe          BL       _SetCursorXY
;;;872    }
00002a  bd7c              POP      {r2-r6,pc}
;;;873    
                          ENDP


                          AREA ||i._MoveCursorUp||, CODE, READONLY, ALIGN=1

                  _MoveCursorUp PROC
;;;855    */
;;;856    static void _MoveCursorUp(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000000  b57c              PUSH     {r2-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;857      int xPos, yPos;
;;;858      _GetCursorXY(hObj, pObj, &xPos, &yPos);
000006  466b              MOV      r3,sp
000008  aa01              ADD      r2,sp,#4
00000a  4621              MOV      r1,r4
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       _GetCursorXY
;;;859      yPos -= GUI_GetYDistOfFont(pObj->pFont);
000012  6f60              LDR      r0,[r4,#0x74]
000014  f7fffffe          BL       GUI_GetYDistOfFont
000018  9900              LDR      r1,[sp,#0]
00001a  1a08              SUBS     r0,r1,r0
00001c  9000              STR      r0,[sp,#0]
;;;860      _SetCursorXY(hObj, pObj, xPos, yPos);
00001e  4621              MOV      r1,r4
000020  4628              MOV      r0,r5
000022  e9dd3200          LDRD     r3,r2,[sp,#0]
000026  f7fffffe          BL       _SetCursorXY
;;;861    }
00002a  bd7c              POP      {r2-r6,pc}
;;;862    
                          ENDP


                          AREA ||i._OnTouch||, CODE, READONLY, ALIGN=1

                  _OnTouch PROC
;;;1267   */
;;;1268   static void _OnTouch(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, WM_MESSAGE*pMsg) {
000000  e92d5ff0          PUSH     {r4-r12,lr}
000004  4681              MOV      r9,r0
000006  460c              MOV      r4,r1
000008  4616              MOV      r6,r2
;;;1269     int Notification;
;;;1270     const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
00000a  68b7              LDR      r7,[r6,#8]
;;;1271     if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
00000c  68b0              LDR      r0,[r6,#8]
00000e  b318              CBZ      r0,|L66.88|
;;;1272       if (pState->Pressed) {
000010  7a38              LDRB     r0,[r7,#8]
000012  b1f8              CBZ      r0,|L66.84|
;;;1273         int Effect, xPos, yPos;
;;;1274         Effect = pObj->Widget.pEffect->EffectSize;
000014  6a20              LDR      r0,[r4,#0x20]
000016  f8d08014          LDR      r8,[r0,#0x14]
;;;1275         xPos   = pState->x + pObj->ScrollStateH.v - Effect - pObj->HBorder;
00001a  6839              LDR      r1,[r7,#0]
00001c  6ee0              LDR      r0,[r4,#0x6c]
00001e  4408              ADD      r0,r0,r1
000020  eba00008          SUB      r0,r0,r8
000024  f894107b          LDRB     r1,[r4,#0x7b]
000028  eba00a01          SUB      r10,r0,r1
;;;1276         yPos   = pState->y + pObj->ScrollStateV.v * GUI_GetYDistOfFont(pObj->pFont) - Effect;
00002c  6f60              LDR      r0,[r4,#0x74]
00002e  f7fffffe          BL       GUI_GetYDistOfFont
000032  687a              LDR      r2,[r7,#4]
000034  6e21              LDR      r1,[r4,#0x60]
000036  fb012000          MLA      r0,r1,r0,r2
00003a  eba00b08          SUB      r11,r0,r8
;;;1277         _SetCursorXY(hObj, pObj, xPos, yPos);
00003e  465b              MOV      r3,r11
000040  4652              MOV      r2,r10
000042  4621              MOV      r1,r4
000044  4648              MOV      r0,r9
000046  f7fffffe          BL       _SetCursorXY
;;;1278         _Invalidate(hObj);
00004a  4648              MOV      r0,r9
00004c  f7fffffe          BL       _Invalidate
;;;1279         Notification = WM_NOTIFICATION_CLICKED;
000050  2501              MOVS     r5,#1
;;;1280       } else {
000052  e002              B        |L66.90|
                  |L66.84|
;;;1281         Notification = WM_NOTIFICATION_RELEASED;
000054  2502              MOVS     r5,#2
000056  e000              B        |L66.90|
                  |L66.88|
;;;1282       }
;;;1283     } else {
;;;1284       Notification = WM_NOTIFICATION_MOVED_OUT;
000058  2503              MOVS     r5,#3
                  |L66.90|
;;;1285     }
;;;1286     WM_NotifyParent(hObj, Notification);
00005a  4629              MOV      r1,r5
00005c  4648              MOV      r0,r9
00005e  f7fffffe          BL       WM_NotifyParent
;;;1287   }
000062  e8bd9ff0          POP      {r4-r12,pc}
;;;1288   
                          ENDP


                          AREA ||i._SetCursorPos||, CODE, READONLY, ALIGN=1

                  _SetCursorPos PROC
;;;754    */
;;;755    static void _SetCursorPos(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, int CursorPosChar) {
000000  b5fe              PUSH     {r1-r7,lr}
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
;;;756      int CursorPosByte, CursorLine;
;;;757      CursorPosChar = _CalcNextValidCursorPos(hObj, pObj, CursorPosChar, &CursorPosByte, &CursorLine);
000008  a801              ADD      r0,sp,#4
00000a  ab02              ADD      r3,sp,#8
00000c  462a              MOV      r2,r5
00000e  4621              MOV      r1,r4
000010  9000              STR      r0,[sp,#0]
000012  4630              MOV      r0,r6
000014  f7fffffe          BL       _CalcNextValidCursorPos
000018  4605              MOV      r5,r0
;;;758      /* Assign value and recalc whatever necessary */
;;;759      if (pObj->CursorPosChar != CursorPosChar) {
00001a  f8b40048          LDRH     r0,[r4,#0x48]
00001e  42a8              CMP      r0,r5
000020  d00e              BEQ      |L67.64|
;;;760        /* Save values */
;;;761        pObj->CursorPosByte = CursorPosByte;
000022  f1040446          ADD      r4,r4,#0x46
000026  9802              LDR      r0,[sp,#8]
000028  80a0              STRH     r0,[r4,#4]
;;;762        pObj->CursorPosChar = CursorPosChar;
00002a  8065              STRH     r5,[r4,#2]
;;;763        pObj->CursorLine = CursorLine;
00002c  9801              LDR      r0,[sp,#4]
00002e  f8240946          STRH     r0,[r4],#-0x46
;;;764        _InvalidateCursorXY(pObj); /* Invalidate X/Y position */
000032  4620              MOV      r0,r4
000034  f7fffffe          BL       _InvalidateCursorXY
;;;765        _CalcScrollPos(hObj, pObj);
000038  4621              MOV      r1,r4
00003a  4630              MOV      r0,r6
00003c  f7fffffe          BL       _CalcScrollPos
                  |L67.64|
;;;766      }
;;;767    }
000040  bdfe              POP      {r1-r7,pc}
;;;768    
                          ENDP


                          AREA ||i._SetCursorXY||, CODE, READONLY, ALIGN=2

                  _SetCursorXY PROC
;;;801    */
;;;802    static void _SetCursorXY(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, int x, int y) {
000000  e92d4fff          PUSH     {r0-r11,lr}
000004  b083              SUB      sp,sp,#0xc
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  4699              MOV      r9,r3
;;;803      int CursorPosChar = 0;
00000c  2000              MOVS     r0,#0
00000e  9002              STR      r0,[sp,#8]
;;;804      if ((x < 0) || (y < 0)) {
000010  2d00              CMP      r5,#0
000012  db02              BLT      |L68.26|
000014  f1b90f00          CMP      r9,#0
000018  da02              BGE      |L68.32|
                  |L68.26|
;;;805        return;
;;;806      }
;;;807      if (pObj->hText) {
;;;808        char *pLine, *pText;
;;;809        int CursorLine, WrapChars;
;;;810        int SizeX = 0;
;;;811        U16 Char;
;;;812        GUI_SetFont(pObj->pFont);
;;;813        CursorLine = y / GUI_GetFontDistY();
;;;814        pLine      = _GetpLine(hObj, pObj, CursorLine);
;;;815        pText      = (char*) GUI_ALLOC_h2p(pObj->hText);
;;;816        WrapChars  = _WrapGetNumCharsDisp(hObj, pObj, pLine);
;;;817        Char       = GUI_UC__GetCharCode(pLine + GUI_UC__NumChars2NumBytes(pLine, WrapChars));
;;;818        if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
;;;819          if (!Char) {
;;;820            WrapChars++;
;;;821          }
;;;822        } else {
;;;823          if (!Char || (Char == '\n') || ((Char == ' ') && (pObj->WrapMode == GUI_WRAPMODE_WORD))) {
;;;824            WrapChars++;
;;;825          }
;;;826        }
;;;827        if (pObj->Align == GUI_TA_RIGHT) {
;;;828          x -= _GetXSize(hObj, pObj) - GUI__GetLineDistX(pLine, WrapChars);
;;;829          x -= pObj->ScrollStateH.v << 1;
;;;830          if (x < 0) {
;;;831            x = 0;
;;;832          }
;;;833        }
;;;834    
;;;835        if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
;;;836          while (--WrapChars > 0) {
;;;837            Char   = GUI_UC_GetCharCode(pLine);
;;;838            SizeX += _GetCharDistX(pObj, pLine);
;;;839            if (!Char || (SizeX > x)) {
;;;840              break;
;;;841            }
;;;842            pLine += GUI_UC_GetCharSize(pLine);
;;;843          }
;;;844          CursorPosChar = GUI_UC__NumBytes2NumChars(pText, pLine - pText);
;;;845        } else {
;;;846          CursorPosChar = GUI_UC__NumBytes2NumChars(pText, pLine - pText) + GUI__GetCursorPosChar(pLine, x, WrapChars);
;;;847        }
;;;848      }
;;;849      _SetCursorPos(hObj, pObj, CursorPosChar);
;;;850    }
00001a  b007              ADD      sp,sp,#0x1c
00001c  e8bd8ff0          POP      {r4-r11,pc}
                  |L68.32|
000020  8f20              LDRH     r0,[r4,#0x38]         ;807
000022  2800              CMP      r0,#0                 ;807
000024  d07b              BEQ      |L68.286|
000026  2000              MOVS     r0,#0                 ;810
000028  9000              STR      r0,[sp,#0]            ;810
00002a  6f60              LDR      r0,[r4,#0x74]         ;812
00002c  f7fffffe          BL       GUI_SetFont
000030  f7fffffe          BL       GUI_GetFontDistY
000034  fb99f0f0          SDIV     r0,r9,r0              ;813
000038  9001              STR      r0,[sp,#4]            ;813
00003a  4621              MOV      r1,r4                 ;814
00003c  9a01              LDR      r2,[sp,#4]            ;814
00003e  9803              LDR      r0,[sp,#0xc]          ;814
000040  f7fffffe          BL       _GetpLine
000044  4606              MOV      r6,r0                 ;814
000046  f9b40038          LDRSH    r0,[r4,#0x38]         ;815
00004a  f7fffffe          BL       GUI_ALLOC_h2p
00004e  4682              MOV      r10,r0                ;815
000050  4632              MOV      r2,r6                 ;816
000052  4621              MOV      r1,r4                 ;816
000054  9803              LDR      r0,[sp,#0xc]          ;816
000056  f7fffffe          BL       _WrapGetNumCharsDisp
00005a  4607              MOV      r7,r0                 ;816
00005c  4639              MOV      r1,r7                 ;817
00005e  4630              MOV      r0,r6                 ;817
000060  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000064  eb000b06          ADD      r11,r0,r6             ;817
000068  4838              LDR      r0,|L68.332|
00006a  6a00              LDR      r0,[r0,#0x20]         ;817  ; GUI_Context
00006c  6801              LDR      r1,[r0,#0]            ;817
00006e  4658              MOV      r0,r11                ;817
000070  4788              BLX      r1                    ;817
000072  4680              MOV      r8,r0                 ;817
000074  f8940078          LDRB     r0,[r4,#0x78]         ;818
000078  f0100f20          TST      r0,#0x20              ;818
00007c  d004              BEQ      |L68.136|
00007e  f1b80f00          CMP      r8,#0                 ;819
000082  d10f              BNE      |L68.164|
000084  1c7f              ADDS     r7,r7,#1              ;820
000086  e00d              B        |L68.164|
                  |L68.136|
000088  f1b80f00          CMP      r8,#0                 ;823
00008c  d009              BEQ      |L68.162|
00008e  f1b80f0a          CMP      r8,#0xa               ;823
000092  d006              BEQ      |L68.162|
000094  f1b80f20          CMP      r8,#0x20              ;823
000098  d104              BNE      |L68.164|
00009a  f894007c          LDRB     r0,[r4,#0x7c]         ;823
00009e  2801              CMP      r0,#1                 ;823
0000a0  d100              BNE      |L68.164|
                  |L68.162|
0000a2  1c7f              ADDS     r7,r7,#1              ;824
                  |L68.164|
0000a4  f8b40058          LDRH     r0,[r4,#0x58]         ;827
0000a8  2801              CMP      r0,#1                 ;827
0000aa  d111              BNE      |L68.208|
0000ac  4621              MOV      r1,r4                 ;828
0000ae  9803              LDR      r0,[sp,#0xc]          ;828
0000b0  f7fffffe          BL       _GetXSize
0000b4  4683              MOV      r11,r0                ;828
0000b6  4639              MOV      r1,r7                 ;828
0000b8  4630              MOV      r0,r6                 ;828
0000ba  f7fffffe          BL       GUI__GetLineDistX
0000be  ebab0000          SUB      r0,r11,r0             ;828
0000c2  1a2d              SUBS     r5,r5,r0              ;828
0000c4  6ee0              LDR      r0,[r4,#0x6c]         ;829
0000c6  eba50540          SUB      r5,r5,r0,LSL #1       ;829
0000ca  2d00              CMP      r5,#0                 ;830
0000cc  da00              BGE      |L68.208|
0000ce  2500              MOVS     r5,#0                 ;831
                  |L68.208|
0000d0  f8940078          LDRB     r0,[r4,#0x78]         ;835
0000d4  f0100f20          TST      r0,#0x20              ;835
0000d8  d022              BEQ      |L68.288|
0000da  e015              B        |L68.264|
                  |L68.220|
0000dc  4630              MOV      r0,r6                 ;837
0000de  f7fffffe          BL       GUI_UC_GetCharCode
0000e2  4680              MOV      r8,r0                 ;837
0000e4  4631              MOV      r1,r6                 ;838
0000e6  4620              MOV      r0,r4                 ;838
0000e8  f7fffffe          BL       _GetCharDistX
0000ec  9900              LDR      r1,[sp,#0]            ;838
0000ee  4408              ADD      r0,r0,r1              ;838
0000f0  9000              STR      r0,[sp,#0]            ;838
0000f2  f1b80f00          CMP      r8,#0                 ;839
0000f6  d002              BEQ      |L68.254|
0000f8  9800              LDR      r0,[sp,#0]            ;839
0000fa  42a8              CMP      r0,r5                 ;839
0000fc  dd00              BLE      |L68.256|
                  |L68.254|
0000fe  e006              B        |L68.270|
                  |L68.256|
000100  4630              MOV      r0,r6                 ;842
000102  f7fffffe          BL       GUI_UC_GetCharSize
000106  4406              ADD      r6,r6,r0              ;842
                  |L68.264|
000108  1e78              SUBS     r0,r7,#1              ;836
00010a  1e07              SUBS     r7,r0,#0              ;836
00010c  dce6              BGT      |L68.220|
                  |L68.270|
00010e  bf00              NOP                            ;840
000110  eba6010a          SUB      r1,r6,r10             ;844
000114  4650              MOV      r0,r10                ;844
000116  f7fffffe          BL       GUI_UC__NumBytes2NumChars
00011a  9002              STR      r0,[sp,#8]            ;844
00011c  e00d              B        |L68.314|
                  |L68.286|
00011e  e00d              B        |L68.316|
                  |L68.288|
000120  eba6010a          SUB      r1,r6,r10             ;846
000124  4650              MOV      r0,r10                ;846
000126  f7fffffe          BL       GUI_UC__NumBytes2NumChars
00012a  4683              MOV      r11,r0                ;846
00012c  463a              MOV      r2,r7                 ;846
00012e  4629              MOV      r1,r5                 ;846
000130  4630              MOV      r0,r6                 ;846
000132  f7fffffe          BL       GUI__GetCursorPosChar
000136  4458              ADD      r0,r0,r11             ;846
000138  9002              STR      r0,[sp,#8]            ;846
                  |L68.314|
00013a  bf00              NOP                            ;848
                  |L68.316|
00013c  4621              MOV      r1,r4                 ;849
00013e  e9dd2002          LDRD     r2,r0,[sp,#8]         ;849
000142  f7fffffe          BL       _SetCursorPos
000146  bf00              NOP      
000148  e767              B        |L68.26|
;;;851    
                          ENDP

00014a  0000              DCW      0x0000
                  |L68.332|
                          DCD      GUI_Context

                          AREA ||i._SetFlag||, CODE, READONLY, ALIGN=1

                  _SetFlag PROC
;;;677    */
;;;678    static void _SetFlag(MULTIEDIT_HANDLE hObj, int OnOff, U8 Flag) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
000008  4615              MOV      r5,r2
;;;679      if (hObj) {
00000a  b1be              CBZ      r6,|L69.60|
;;;680        MULTIEDIT_OBJ * pObj;
;;;681        WM_LOCK();
00000c  f7fffffe          BL       GUI_Lock
;;;682        pObj = MULTIEDIT_H2P(hObj);
000010  4630              MOV      r0,r6
000012  f7fffffe          BL       GUI_ALLOC_h2p
000016  4604              MOV      r4,r0
;;;683        if (OnOff) {
000018  b12f              CBZ      r7,|L69.38|
;;;684          pObj->Flags |= Flag;
00001a  f8940078          LDRB     r0,[r4,#0x78]
00001e  4328              ORRS     r0,r0,r5
000020  f8840078          STRB     r0,[r4,#0x78]
000024  e004              B        |L69.48|
                  |L69.38|
;;;685        } else {
;;;686          pObj->Flags &= ~Flag;
000026  f8940078          LDRB     r0,[r4,#0x78]
00002a  43a8              BICS     r0,r0,r5
00002c  f8840078          STRB     r0,[r4,#0x78]
                  |L69.48|
;;;687        }
;;;688        _InvalidateTextArea(hObj);
000030  4630              MOV      r0,r6
000032  f7fffffe          BL       _InvalidateTextArea
;;;689        WM_UNLOCK();
000036  f7fffffe          BL       GUI_Unlock
;;;690      }
00003a  bf00              NOP      
                  |L69.60|
;;;691    }
00003c  e8bd81f0          POP      {r4-r8,pc}
;;;692    
                          ENDP


                          AREA ||i._SetScrollState||, CODE, READONLY, ALIGN=1

                  _SetScrollState PROC
;;;452    */
;;;453    static void _SetScrollState(WM_HWIN hObj) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
;;;454      MULTIEDIT_OBJ* pObj = MULTIEDIT_H2P(hObj);
000004  4628              MOV      r0,r5
000006  f7fffffe          BL       GUI_ALLOC_h2p
00000a  4604              MOV      r4,r0
;;;455      WIDGET__SetScrollState(hObj, &pObj->ScrollStateV, &pObj->ScrollStateH);
00000c  f1040268          ADD      r2,r4,#0x68
000010  f104015c          ADD      r1,r4,#0x5c
000014  4628              MOV      r0,r5
000016  f7fffffe          BL       WIDGET__SetScrollState
;;;456    }
00001a  bd70              POP      {r4-r6,pc}
;;;457    
                          ENDP


                          AREA ||i._SetText||, CODE, READONLY, ALIGN=1

                  _SetText PROC
;;;1382   */
;;;1383   static void _SetText(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ * pObj, const char * pNew) {
000000  e92d5ff0          PUSH     {r4-r12,lr}
000004  4681              MOV      r9,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
;;;1384     int NumCharsNew, NumCharsOld, NumBytesNew, NumBytesOld;
;;;1385     char * pText;
;;;1386     NumCharsNew = NumCharsOld = NumBytesNew = NumBytesOld = 0;
00000a  2000              MOVS     r0,#0
00000c  4683              MOV      r11,r0
00000e  4682              MOV      r10,r0
000010  4680              MOV      r8,r0
000012  4607              MOV      r7,r0
;;;1387     if (pObj->hText) {
000014  8f20              LDRH     r0,[r4,#0x38]
000016  b190              CBZ      r0,|L71.62|
;;;1388       pText  = (char*) GUI_ALLOC_h2p(pObj->hText);
000018  f9b40038          LDRSH    r0,[r4,#0x38]
00001c  f7fffffe          BL       GUI_ALLOC_h2p
000020  4606              MOV      r6,r0
;;;1389       pText += GUI_UC__NumChars2NumBytes(pText, pObj->NumCharsPrompt);
000022  8fe1              LDRH     r1,[r4,#0x3e]
000024  4630              MOV      r0,r6
000026  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00002a  4406              ADD      r6,r6,r0
;;;1390       NumCharsOld = GUI__GetNumChars(pText);
00002c  4630              MOV      r0,r6
00002e  f7fffffe          BL       GUI__GetNumChars
000032  4680              MOV      r8,r0
;;;1391       NumBytesOld = GUI_UC__NumChars2NumBytes(pText, NumCharsOld);
000034  4641              MOV      r1,r8
000036  4630              MOV      r0,r6
000038  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00003c  4683              MOV      r11,r0
                  |L71.62|
;;;1392     }
;;;1393     if (pNew) {
00003e  b145              CBZ      r5,|L71.82|
;;;1394       NumCharsNew = GUI__GetNumChars(pNew);
000040  4628              MOV      r0,r5
000042  f7fffffe          BL       GUI__GetNumChars
000046  4607              MOV      r7,r0
;;;1395       NumBytesNew = GUI_UC__NumChars2NumBytes(pNew, NumCharsNew);
000048  4639              MOV      r1,r7
00004a  4628              MOV      r0,r5
00004c  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000050  4682              MOV      r10,r0
                  |L71.82|
;;;1396     }
;;;1397     if (_IsCharsAvailable(pObj, NumCharsNew - NumCharsOld)) {
000052  eba70108          SUB      r1,r7,r8
000056  4620              MOV      r0,r4
000058  f7fffffe          BL       _IsCharsAvailable
00005c  b358              CBZ      r0,|L71.182|
;;;1398       if (_IsSpaceInBuffer(pObj, NumBytesNew - NumBytesOld)) {
00005e  ebaa010b          SUB      r1,r10,r11
000062  4620              MOV      r0,r4
000064  f7fffffe          BL       _IsSpaceInBuffer
000068  b328              CBZ      r0,|L71.182|
;;;1399         pText  = (char*) GUI_ALLOC_h2p(pObj->hText);
00006a  f9b40038          LDRSH    r0,[r4,#0x38]
00006e  f7fffffe          BL       GUI_ALLOC_h2p
000072  4606              MOV      r6,r0
;;;1400         pText += GUI_UC__NumChars2NumBytes(pText, pObj->NumCharsPrompt);
000074  8fe1              LDRH     r1,[r4,#0x3e]
000076  4630              MOV      r0,r6
000078  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00007c  4406              ADD      r6,r6,r0
;;;1401         if (pNew) {
00007e  b125              CBZ      r5,|L71.138|
;;;1402           strcpy(pText, pNew);
000080  4629              MOV      r1,r5
000082  4630              MOV      r0,r6
000084  f7fffffe          BL       strcpy
000088  e001              B        |L71.142|
                  |L71.138|
;;;1403         } else {
;;;1404           *pText = 0;
00008a  2000              MOVS     r0,#0
00008c  7030              STRB     r0,[r6,#0]
                  |L71.142|
;;;1405         }
;;;1406         _SetCursorPos(hObj, pObj, pObj->NumCharsPrompt);
00008e  8fe2              LDRH     r2,[r4,#0x3e]
000090  4621              MOV      r1,r4
000092  4648              MOV      r0,r9
000094  f7fffffe          BL       _SetCursorPos
;;;1407         _InvalidateNumChars(pObj);
000098  4620              MOV      r0,r4
00009a  f7fffffe          BL       _InvalidateNumChars
;;;1408         _InvalidateNumLines(pObj);
00009e  4620              MOV      r0,r4
0000a0  f7fffffe          BL       _InvalidateNumLines
;;;1409         _InvalidateTextSizeX(pObj);
0000a4  4620              MOV      r0,r4
0000a6  f7fffffe          BL       _InvalidateTextSizeX
;;;1410         _InvalidateTextArea(hObj);
0000aa  4648              MOV      r0,r9
0000ac  f7fffffe          BL       _InvalidateTextArea
;;;1411         _InvalidateCursorXY(pObj); /* Invalidate X/Y position */
0000b0  4620              MOV      r0,r4
0000b2  f7fffffe          BL       _InvalidateCursorXY
                  |L71.182|
;;;1412       }
;;;1413     }
;;;1414   }
0000b6  e8bd9ff0          POP      {r4-r12,pc}
;;;1415   
                          ENDP


                          AREA ||i._SetWrapMode||, CODE, READONLY, ALIGN=1

                  _SetWrapMode PROC
;;;772    */
;;;773    static int _SetWrapMode(MULTIEDIT_HANDLE hObj, GUI_WRAPMODE WrapMode) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
000006  460d              MOV      r5,r1
;;;774      int r;
;;;775      r = 0;
000008  2700              MOVS     r7,#0
;;;776      if (hObj) {
00000a  b336              CBZ      r6,|L72.90|
;;;777        MULTIEDIT_OBJ * pObj;
;;;778        WM_LOCK();
00000c  f7fffffe          BL       GUI_Lock
;;;779        pObj = MULTIEDIT_H2P(hObj);
000010  4630              MOV      r0,r6
000012  f7fffffe          BL       GUI_ALLOC_h2p
000016  4604              MOV      r4,r0
;;;780        r = pObj->WrapMode;
000018  f894707c          LDRB     r7,[r4,#0x7c]
;;;781        if (pObj->WrapMode != WrapMode) {
00001c  f894007c          LDRB     r0,[r4,#0x7c]
000020  42a8              CMP      r0,r5
000022  d017              BEQ      |L72.84|
;;;782          int Position;
;;;783          pObj->WrapMode = WrapMode;
000024  f884507c          STRB     r5,[r4,#0x7c]
;;;784          _ClearCache(pObj);
000028  4620              MOV      r0,r4
00002a  f7fffffe          BL       _ClearCache
;;;785          _InvalidateNumLines(pObj);
00002e  4620              MOV      r0,r4
000030  f7fffffe          BL       _InvalidateNumLines
;;;786          _InvalidateTextSizeX(pObj);
000034  4620              MOV      r0,r4
000036  f7fffffe          BL       _InvalidateTextSizeX
;;;787          _InvalidateTextArea(hObj);
00003a  4630              MOV      r0,r6
00003c  f7fffffe          BL       _InvalidateTextArea
;;;788          Position = _InvalidateCursorPos(pObj);
000040  4620              MOV      r0,r4
000042  f7fffffe          BL       _InvalidateCursorPos
000046  4680              MOV      r8,r0
;;;789          _SetCursorPos(hObj, pObj, Position);
000048  4642              MOV      r2,r8
00004a  4621              MOV      r1,r4
00004c  4630              MOV      r0,r6
00004e  f7fffffe          BL       _SetCursorPos
;;;790        }
000052  bf00              NOP      
                  |L72.84|
;;;791        WM_UNLOCK();
000054  f7fffffe          BL       GUI_Unlock
;;;792      }
000058  bf00              NOP      
                  |L72.90|
;;;793      return r;
00005a  4638              MOV      r0,r7
;;;794    }
00005c  e8bd81f0          POP      {r4-r8,pc}
;;;795    
                          ENDP


                          AREA ||i._WrapGetNumBytesToNextLine||, CODE, READONLY, ALIGN=1

                  _WrapGetNumBytesToNextLine PROC
;;;252    */
;;;253    static int _WrapGetNumBytesToNextLine(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj, const char* pText) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4680              MOV      r8,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
;;;254      int xSize, r;
;;;255      xSize = _GetXSize(hObj, pObj);
00000a  4629              MOV      r1,r5
00000c  4640              MOV      r0,r8
00000e  f7fffffe          BL       _GetXSize
000012  4681              MOV      r9,r0
;;;256      if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
000014  f8950078          LDRB     r0,[r5,#0x78]
000018  f0100f20          TST      r0,#0x20
00001c  d016              BEQ      |L73.76|
;;;257        int NumChars, NumCharsPrompt;
;;;258        NumCharsPrompt = _GetNumCharsInPrompt(pObj, pText);
00001e  4631              MOV      r1,r6
000020  4628              MOV      r0,r5
000022  f7fffffe          BL       _GetNumCharsInPrompt
000026  4682              MOV      r10,r0
;;;259        NumChars = _WrapGetNumCharsDisp(hObj, pObj, pText);
000028  4632              MOV      r2,r6
00002a  4629              MOV      r1,r5
00002c  4640              MOV      r0,r8
00002e  f7fffffe          BL       _WrapGetNumCharsDisp
000032  4607              MOV      r7,r0
;;;260        r        = GUI_UC__NumChars2NumBytes(pText, NumChars);
000034  4639              MOV      r1,r7
000036  4630              MOV      r0,r6
000038  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00003c  4604              MOV      r4,r0
;;;261        if (NumChars < NumCharsPrompt) {
00003e  4557              CMP      r7,r10
000040  da03              BGE      |L73.74|
;;;262          if (*(pText + r) == '\n') {
000042  5d30              LDRB     r0,[r6,r4]
000044  280a              CMP      r0,#0xa
000046  d100              BNE      |L73.74|
;;;263            r++;
000048  1c64              ADDS     r4,r4,#1
                  |L73.74|
;;;264          }
;;;265        }
;;;266      } else {
00004a  e006              B        |L73.90|
                  |L73.76|
;;;267        r = GUI__WrapGetNumBytesToNextLine(pText, xSize, pObj->WrapMode);
00004c  f895207c          LDRB     r2,[r5,#0x7c]
000050  4649              MOV      r1,r9
000052  4630              MOV      r0,r6
000054  f7fffffe          BL       GUI__WrapGetNumBytesToNextLine
000058  4604              MOV      r4,r0
                  |L73.90|
;;;268      }
;;;269      return r;
00005a  4620              MOV      r0,r4
;;;270    }
00005c  e8bd87f0          POP      {r4-r10,pc}
;;;271    
                          ENDP


                          AREA ||i._WrapGetNumCharsDisp||, CODE, READONLY, ALIGN=1

                  _WrapGetNumCharsDisp PROC
;;;215    */
;;;216    static int _WrapGetNumCharsDisp(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj, const char GUI_UNI_PTR * pText) {
000000  e92d43f7          PUSH     {r0-r2,r4-r9,lr}
000004  4681              MOV      r9,r0
000006  460c              MOV      r4,r1
;;;217      int xSize, r;
;;;218      xSize = _GetXSize(hObj, pObj);
000008  4621              MOV      r1,r4
00000a  4648              MOV      r0,r9
00000c  f7fffffe          BL       _GetXSize
000010  4680              MOV      r8,r0
;;;219      if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
000012  f8940078          LDRB     r0,[r4,#0x78]
000016  f0100f20          TST      r0,#0x20
00001a  d036              BEQ      |L74.138|
;;;220        int NumCharsPrompt;
;;;221        NumCharsPrompt = _GetNumCharsInPrompt(pObj, pText);
00001c  4620              MOV      r0,r4
00001e  9902              LDR      r1,[sp,#8]
000020  f7fffffe          BL       _GetNumCharsInPrompt
000024  4606              MOV      r6,r0
;;;222        r = GUI__WrapGetNumCharsDisp(pText, xSize, pObj->WrapMode);
000026  f894207c          LDRB     r2,[r4,#0x7c]
00002a  4641              MOV      r1,r8
00002c  9802              LDR      r0,[sp,#8]
00002e  f7fffffe          BL       GUI__WrapGetNumCharsDisp
000032  4605              MOV      r5,r0
;;;223        if (r >= NumCharsPrompt) {
000034  42b5              CMP      r5,r6
000036  db27              BLT      |L74.136|
;;;224          int x;
;;;225          switch (pObj->WrapMode) {
000038  f894007c          LDRB     r0,[r4,#0x7c]
00003c  b920              CBNZ     r0,|L74.72|
;;;226          case GUI_WRAPMODE_NONE:
;;;227            r = GUI__GetNumChars(pText);
00003e  9802              LDR      r0,[sp,#8]
000040  f7fffffe          BL       GUI__GetNumChars
000044  4605              MOV      r5,r0
;;;228            break;
000046  e01d              B        |L74.132|
                  |L74.72|
;;;229          default:
;;;230            r = NumCharsPrompt;
000048  4635              MOV      r5,r6
;;;231            x = GUI__GetLineDistX(pText, NumCharsPrompt);
00004a  4631              MOV      r1,r6
00004c  9802              LDR      r0,[sp,#8]
00004e  f7fffffe          BL       GUI__GetLineDistX
000052  4607              MOV      r7,r0
;;;232            pText += GUI_UC__NumChars2NumBytes(pText, NumCharsPrompt);
000054  4631              MOV      r1,r6
000056  9802              LDR      r0,[sp,#8]
000058  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00005c  9902              LDR      r1,[sp,#8]
00005e  4408              ADD      r0,r0,r1
000060  9002              STR      r0,[sp,#8]
;;;233            while (GUI_UC__GetCharCodeInc(&pText) != 0) {
000062  e008              B        |L74.118|
                  |L74.100|
;;;234              x += GUI_GetCharDistX(MULTIEDIT_PASSWORD_CHAR);
000064  202a              MOVS     r0,#0x2a
000066  f7fffffe          BL       GUI_GetCharDistX
00006a  4407              ADD      r7,r7,r0
;;;235              if (r && (x > xSize)) {
00006c  b115              CBZ      r5,|L74.116|
00006e  4547              CMP      r7,r8
000070  dd00              BLE      |L74.116|
;;;236                break;
000072  e005              B        |L74.128|
                  |L74.116|
;;;237              }
;;;238              r++;
000074  1c6d              ADDS     r5,r5,#1
                  |L74.118|
000076  a802              ADD      r0,sp,#8              ;233
000078  f7fffffe          BL       GUI_UC__GetCharCodeInc
00007c  2800              CMP      r0,#0                 ;233
00007e  d1f1              BNE      |L74.100|
                  |L74.128|
000080  bf00              NOP                            ;236
;;;239            }
;;;240            break;
000082  bf00              NOP      
                  |L74.132|
000084  bf00              NOP                            ;228
;;;241          }
;;;242        }
000086  bf00              NOP      
                  |L74.136|
;;;243      } else {
000088  e006              B        |L74.152|
                  |L74.138|
;;;244        r = GUI__WrapGetNumCharsDisp(pText, xSize, pObj->WrapMode);
00008a  f894207c          LDRB     r2,[r4,#0x7c]
00008e  4641              MOV      r1,r8
000090  9802              LDR      r0,[sp,#8]
000092  f7fffffe          BL       GUI__WrapGetNumCharsDisp
000096  4605              MOV      r5,r0
                  |L74.152|
;;;245      }
;;;246      return r;
000098  4628              MOV      r0,r5
;;;247    }
00009a  e8bd83fe          POP      {r1-r9,pc}
;;;248    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  _aDefaultBkColor
                          DCD      0x00ffffff
                          DCD      0x00c0c0c0
                  _aDefaultColor
                          DCD      0x00000000
                          DCD      0x00000000
                  _pDefaultFont
                          DCD      GUI_Font13_1
