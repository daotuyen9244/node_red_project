; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\guidemo_graph.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\guidemo_graph.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\uCGUIDemo\GUIDEMO_Graph.c]
                          THUMB

                          AREA ||i.GUIDEMO_Graph||, CODE, READONLY, ALIGN=2

                  GUIDEMO_Graph PROC
;;;354    
;;;355    void GUIDEMO_Graph(void) {
000000  b510              PUSH     {r4,lr}
;;;356      #if GUIDEMO_LARGE
;;;357        _YSize = (LCD_YSIZE - 100);
000002  20dc              MOVS     r0,#0xdc
000004  490a              LDR      r1,|L1.48|
000006  6008              STR      r0,[r1,#0]  ; _YSize
;;;358      #else
;;;359        _YSize = (LCD_YSIZE -  30);
;;;360      #endif
;;;361      GUIDEMO_ShowIntro("Drawing a graph",
000008  a10a              ADR      r1,|L1.52|
00000a  a017              ADR      r0,|L1.104|
00000c  f7fffffe          BL       GUIDEMO_ShowIntro
;;;362                        "\nOptimized drawing routine"
;;;363                        "\nfor drawing graph data");
;;;364      GUI_Clear();
000010  f7fffffe          BL       GUI_Clear
;;;365      _Label();
000014  f7fffffe          BL       _Label
;;;366      _DemoRandomGraph();
000018  f7fffffe          BL       _DemoRandomGraph
;;;367      GUIDEMO_NotifyStartNext();
00001c  f7fffffe          BL       GUIDEMO_NotifyStartNext
;;;368      _DemoSineWave();
000020  f7fffffe          BL       _DemoSineWave
;;;369      GUIDEMO_NotifyStartNext();
000024  f7fffffe          BL       GUIDEMO_NotifyStartNext
;;;370      _DemoOrData();
000028  f7fffffe          BL       _DemoOrData
;;;371    }
00002c  bd10              POP      {r4,pc}
;;;372    
                          ENDP

00002e  0000              DCW      0x0000
                  |L1.48|
                          DCD      _YSize
                  |L1.52|
000034  0a4f7074          DCB      "\nOptimized drawing routine\nfor drawing graph data",0
000038  696d697a
00003c  65642064
000040  72617769
000044  6e672072
000048  6f757469
00004c  6e650a66
000050  6f722064
000054  72617769
000058  6e672067
00005c  72617068
000060  20646174
000064  6100    
000066  00                DCB      0
000067  00                DCB      0
                  |L1.104|
000068  44726177          DCB      "Drawing a graph",0
00006c  696e6720
000070  61206772
000074  61706800

                          AREA ||i._DemoOrData||, CODE, READONLY, ALIGN=2

                  _DemoOrData PROC
;;;324    
;;;325    static void _DemoOrData(void) {
000000  b57f              PUSH     {r0-r6,lr}
;;;326      int i;
;;;327      PARAM Param;
;;;328      GUI_RECT Rect;
;;;329      GUI_HMEM hMem;
;;;330      Rect.x0  = 19;
000002  2013              MOVS     r0,#0x13
000004  f8ad0004          STRH     r0,[sp,#4]
;;;331      Rect.y0  = (LCD_YSIZE - 20) - _YSize;
000008  4821              LDR      r0,|L2.144|
00000a  6800              LDR      r0,[r0,#0]  ; _YSize
00000c  f5c07096          RSB      r0,r0,#0x12c
000010  b200              SXTH     r0,r0
000012  f8ad0006          STRH     r0,[sp,#6]
;;;332      Rect.x1  = LCD_XSIZE - 2;
000016  20ee              MOVS     r0,#0xee
000018  f8ad0008          STRH     r0,[sp,#8]
;;;333      Rect.y1  = LCD_YSIZE - 21;
00001c  f240102b          MOV      r0,#0x12b
000020  f8ad000a          STRH     r0,[sp,#0xa]
;;;334      hMem     = GUI_ALLOC_AllocZero((LCD_XSIZE + 90) * sizeof(I16));
000024  f44f7025          MOV      r0,#0x294
000028  f7fffffe          BL       GUI_ALLOC_AllocZero
00002c  4605              MOV      r5,r0
;;;335      _ShowText("Several waves...");
00002e  a019              ADR      r0,|L2.148|
000030  f7fffffe          BL       _ShowText
;;;336      GUI_LOCK();
000034  f7fffffe          BL       GUI_Lock
;;;337      Param.aY = (I16*)GUI_ALLOC_h2p(hMem);
000038  4628              MOV      r0,r5
00003a  f7fffffe          BL       GUI_ALLOC_h2p
00003e  9003              STR      r0,[sp,#0xc]
;;;338      GUI_UNLOCK();
000040  f7fffffe          BL       GUI_Unlock
;;;339      _GetSineData(Param.aY, LCD_XSIZE + 90);
000044  f44f71a5          MOV      r1,#0x14a
000048  9803              LDR      r0,[sp,#0xc]
00004a  f7fffffe          BL       _GetSineData
;;;340      GUI_MEMDEV_Draw(&Rect, _Draw, &Param, 0, GUI_MEMDEV_NOTRANS);
00004e  2001              MOVS     r0,#1
000050  2300              MOVS     r3,#0
000052  aa03              ADD      r2,sp,#0xc
000054  4914              LDR      r1,|L2.168|
000056  9000              STR      r0,[sp,#0]
000058  a801              ADD      r0,sp,#4
00005a  f7fffffe          BL       GUI_MEMDEV_Draw
;;;341      for (i = 0; (i < 90) && !GUIDEMO_CheckCancel(); i++) {
00005e  2400              MOVS     r4,#0
000060  e00b              B        |L2.122|
                  |L2.98|
;;;342        _DrawOrData(GUI_GREEN, ++Param.aY);
000062  9803              LDR      r0,[sp,#0xc]
000064  1c80              ADDS     r0,r0,#2
000066  4601              MOV      r1,r0
000068  9003              STR      r0,[sp,#0xc]
00006a  f44f407f          MOV      r0,#0xff00
00006e  f7fffffe          BL       _DrawOrData
;;;343        GUI_Delay(10);
000072  200a              MOVS     r0,#0xa
000074  f7fffffe          BL       GUI_Delay
000078  1c64              ADDS     r4,r4,#1              ;341
                  |L2.122|
00007a  2c5a              CMP      r4,#0x5a              ;341
00007c  da03              BGE      |L2.134|
00007e  f7fffffe          BL       GUIDEMO_CheckCancel
000082  2800              CMP      r0,#0                 ;341
000084  d0ed              BEQ      |L2.98|
                  |L2.134|
;;;344      }
;;;345      GUI_ALLOC_Free(hMem);
000086  4628              MOV      r0,r5
000088  f7fffffe          BL       GUI_ALLOC_Free
;;;346    }
00008c  bd7f              POP      {r0-r6,pc}
;;;347    
                          ENDP

00008e  0000              DCW      0x0000
                  |L2.144|
                          DCD      _YSize
                  |L2.148|
000094  53657665          DCB      "Several waves...",0
000098  72616c20
00009c  77617665
0000a0  732e2e2e
0000a4  00      
0000a5  00                DCB      0
0000a6  00                DCB      0
0000a7  00                DCB      0
                  |L2.168|
                          DCD      _Draw

                          AREA ||i._DemoRandomGraph||, CODE, READONLY, ALIGN=2

                  _DemoRandomGraph PROC
;;;206    
;;;207    static void _DemoRandomGraph(void) {
000000  e92d47ff          PUSH     {r0-r10,lr}
;;;208      PARAM Param;
;;;209      int tDiff, t0;
;;;210      int Cnt = 0;
000004  2700              MOVS     r7,#0
;;;211      GUI_HMEM hMem;
;;;212      GUI_RECT Rect;
;;;213      Rect.x0 = 19;
000006  2013              MOVS     r0,#0x13
000008  f8ad0004          STRH     r0,[sp,#4]
;;;214      Rect.y0 = (LCD_YSIZE - 20) - _YSize;
00000c  482c              LDR      r0,|L3.192|
00000e  6800              LDR      r0,[r0,#0]  ; _YSize
000010  f5c07096          RSB      r0,r0,#0x12c
000014  b200              SXTH     r0,r0
000016  f8ad0006          STRH     r0,[sp,#6]
;;;215      Rect.x1 = LCD_XSIZE - 2;
00001a  20ee              MOVS     r0,#0xee
00001c  f8ad0008          STRH     r0,[sp,#8]
;;;216      Rect.y1 = LCD_YSIZE - 21;
000020  f240102b          MOV      r0,#0x12b
000024  f8ad000a          STRH     r0,[sp,#0xa]
;;;217      hMem = GUI_ALLOC_AllocZero((LCD_XSIZE - 20) * sizeof(I16));
000028  f44f70dc          MOV      r0,#0x1b8
00002c  f7fffffe          BL       GUI_ALLOC_AllocZero
000030  4681              MOV      r9,r0
;;;218      _ShowText("Random graph");
000032  a024              ADR      r0,|L3.196|
000034  f7fffffe          BL       _ShowText
;;;219      GUI_LOCK();
000038  f7fffffe          BL       GUI_Lock
;;;220      Param.aY = (I16*)GUI_ALLOC_h2p(hMem);
00003c  4648              MOV      r0,r9
00003e  f7fffffe          BL       GUI_ALLOC_h2p
000042  9003              STR      r0,[sp,#0xc]
;;;221      GUI_UNLOCK();    /* Note: unlocking is permitted only if no further allocation is done so hMem stays valid */
000044  f7fffffe          BL       GUI_Unlock
;;;222      /*
;;;223      GUI_SetFont(&GUI_Font6x8);
;;;224      GUI_DispStringAt("msec/graph:", 10, 50);
;;;225      */
;;;226      _LabelMS();
000048  f7fffffe          BL       _LabelMS
;;;227      t0 = GUI_GetTime();
00004c  f7fffffe          BL       GUI_GetTime
000050  4606              MOV      r6,r0
;;;228      while(((tDiff = (GUI_GetTime() - t0)) < 10000) && !GUIDEMO_CheckCancel()) {
000052  e025              B        |L3.160|
                  |L3.84|
;;;229        U32 t1, tDiff2;
;;;230        _GetRandomData(Param.aY, tDiff, (LCD_XSIZE - 20));
000054  22dc              MOVS     r2,#0xdc
000056  4629              MOV      r1,r5
000058  9803              LDR      r0,[sp,#0xc]
00005a  f7fffffe          BL       _GetRandomData
;;;231        t1 = GUI_GetTime();
00005e  f7fffffe          BL       GUI_GetTime
000062  4680              MOV      r8,r0
;;;232        GUI_MEMDEV_Draw(&Rect, _Draw, &Param, 0, GUI_MEMDEV_NOTRANS);
000064  2001              MOVS     r0,#1
000066  2300              MOVS     r3,#0
000068  aa03              ADD      r2,sp,#0xc
00006a  491a              LDR      r1,|L3.212|
00006c  9000              STR      r0,[sp,#0]
00006e  a801              ADD      r0,sp,#4
000070  f7fffffe          BL       GUI_MEMDEV_Draw
;;;233        tDiff2 = GUI_GetTime() - t1;
000074  f7fffffe          BL       GUI_GetTime
000078  eba00408          SUB      r4,r0,r8
;;;234        if (tDiff2 < 100) {
00007c  2c64              CMP      r4,#0x64
00007e  d203              BCS      |L3.136|
;;;235          GUI_Delay(100 - tDiff2);
000080  f1c40064          RSB      r0,r4,#0x64
000084  f7fffffe          BL       GUI_Delay
                  |L3.136|
;;;236        }
;;;237        if(!((++Cnt)%10)) {
000088  1c78              ADDS     r0,r7,#1
00008a  4607              MOV      r7,r0
00008c  210a              MOVS     r1,#0xa
00008e  fb90f2f1          SDIV     r2,r0,r1
000092  fb010012          MLS      r0,r1,r2,r0
000096  b910              CBNZ     r0,|L3.158|
;;;238          _DisplayTime(tDiff2);
000098  4620              MOV      r0,r4
00009a  f7fffffe          BL       _DisplayTime
                  |L3.158|
;;;239          /*
;;;240          GUI_GotoXY(80, 50);
;;;241          GUI_SetColor(GUI_WHITE);
;;;242          GUI_SetBkColor(GUI_RED);
;;;243          GUI_DispDecSpace(tDiff2, 3);
;;;244          */
;;;245        }
;;;246      }
00009e  bf00              NOP      
                  |L3.160|
0000a0  f7fffffe          BL       GUI_GetTime
0000a4  1b85              SUBS     r5,r0,r6              ;228
0000a6  f2427010          MOV      r0,#0x2710            ;228
0000aa  4285              CMP      r5,r0                 ;228
0000ac  da03              BGE      |L3.182|
0000ae  f7fffffe          BL       GUIDEMO_CheckCancel
0000b2  2800              CMP      r0,#0                 ;228
0000b4  d0ce              BEQ      |L3.84|
                  |L3.182|
;;;247      GUI_ALLOC_Free(hMem);
0000b6  4648              MOV      r0,r9
0000b8  f7fffffe          BL       GUI_ALLOC_Free
;;;248    }
0000bc  e8bd87ff          POP      {r0-r10,pc}
;;;249    
                          ENDP

                  |L3.192|
                          DCD      _YSize
                  |L3.196|
0000c4  52616e64          DCB      "Random graph",0
0000c8  6f6d2067
0000cc  72617068
0000d0  00      
0000d1  00                DCB      0
0000d2  00                DCB      0
0000d3  00                DCB      0
                  |L3.212|
                          DCD      _Draw

                          AREA ||i._DemoSineWave||, CODE, READONLY, ALIGN=2

                  _DemoSineWave PROC
;;;264    
;;;265    static void _DemoSineWave(void) {
000000  e92d47ff          PUSH     {r0-r10,lr}
;;;266      PARAM Param;
;;;267      I16 * pStart;
;;;268      int t0, Cnt = 0;
000004  2600              MOVS     r6,#0
;;;269      GUI_HMEM hMem;
;;;270      GUI_RECT Rect;
;;;271      Rect.x0 = 19;
000006  2013              MOVS     r0,#0x13
000008  f8ad0004          STRH     r0,[sp,#4]
;;;272      Rect.y0 = (LCD_YSIZE - 20) - _YSize;
00000c  4832              LDR      r0,|L4.216|
00000e  6800              LDR      r0,[r0,#0]  ; _YSize
000010  f5c07096          RSB      r0,r0,#0x12c
000014  b200              SXTH     r0,r0
000016  f8ad0006          STRH     r0,[sp,#6]
;;;273      Rect.x1 = LCD_XSIZE - 2;
00001a  20ee              MOVS     r0,#0xee
00001c  f8ad0008          STRH     r0,[sp,#8]
;;;274      Rect.y1 = LCD_YSIZE - 21;
000020  f240102b          MOV      r0,#0x12b
000024  f8ad000a          STRH     r0,[sp,#0xa]
;;;275      hMem = GUI_ALLOC_AllocZero((LCD_XSIZE + 90) * sizeof(I16));
000028  f44f7025          MOV      r0,#0x294
00002c  f7fffffe          BL       GUI_ALLOC_AllocZero
000030  4681              MOV      r9,r0
;;;276      _ShowText("Sine wave");
000032  a02a              ADR      r0,|L4.220|
000034  f7fffffe          BL       _ShowText
;;;277      GUI_LOCK();
000038  f7fffffe          BL       GUI_Lock
;;;278      pStart = (I16*)GUI_ALLOC_h2p(hMem);
00003c  4648              MOV      r0,r9
00003e  f7fffffe          BL       GUI_ALLOC_h2p
000042  4605              MOV      r5,r0
;;;279      GUI_UNLOCK();    /* Note: unlocking is permitted only if no further allocation is done so hMem stays valid */
000044  f7fffffe          BL       GUI_Unlock
;;;280      _GetSineData(pStart, LCD_XSIZE + 90);
000048  f44f71a5          MOV      r1,#0x14a
00004c  4628              MOV      r0,r5
00004e  f7fffffe          BL       _GetSineData
;;;281      /*
;;;282      GUI_SetFont(&GUI_Font6x8);
;;;283      GUI_DispStringAt("msec/graph:", 10, 50);
;;;284      */
;;;285      _LabelMS();
000052  f7fffffe          BL       _LabelMS
;;;286      t0 = GUI_GetTime();
000056  f7fffffe          BL       GUI_GetTime
00005a  4680              MOV      r8,r0
;;;287      while(((GUI_GetTime() - t0) < 10000) && !GUIDEMO_CheckCancel()) {
00005c  e02a              B        |L4.180|
                  |L4.94|
;;;288        U32 t1, tDiff2;
;;;289        if (Cnt % 90) {
00005e  205a              MOVS     r0,#0x5a
000060  fb96f1f0          SDIV     r1,r6,r0
000064  fb006011          MLS      r0,r0,r1,r6
000068  b118              CBZ      r0,|L4.114|
;;;290          Param.aY++;
00006a  9803              LDR      r0,[sp,#0xc]
00006c  1c80              ADDS     r0,r0,#2
00006e  9003              STR      r0,[sp,#0xc]
000070  e000              B        |L4.116|
                  |L4.114|
;;;291        } else {
;;;292          Param.aY = pStart;
000072  9503              STR      r5,[sp,#0xc]
                  |L4.116|
;;;293        }
;;;294        t1 = GUI_GetTime();
000074  f7fffffe          BL       GUI_GetTime
000078  4607              MOV      r7,r0
;;;295        GUI_MEMDEV_Draw(&Rect, _Draw2, &Param, 0, GUI_MEMDEV_NOTRANS);
00007a  2001              MOVS     r0,#1
00007c  2300              MOVS     r3,#0
00007e  aa03              ADD      r2,sp,#0xc
000080  4919              LDR      r1,|L4.232|
000082  9000              STR      r0,[sp,#0]
000084  a801              ADD      r0,sp,#4
000086  f7fffffe          BL       GUI_MEMDEV_Draw
;;;296        tDiff2 = GUI_GetTime() - t1;
00008a  f7fffffe          BL       GUI_GetTime
00008e  1bc4              SUBS     r4,r0,r7
;;;297        if (tDiff2 < 100) {
000090  2c64              CMP      r4,#0x64
000092  d203              BCS      |L4.156|
;;;298          GUI_Delay(100 - tDiff2);
000094  f1c40064          RSB      r0,r4,#0x64
000098  f7fffffe          BL       GUI_Delay
                  |L4.156|
;;;299        }
;;;300        if(!((++Cnt) % 10)) {
00009c  1c70              ADDS     r0,r6,#1
00009e  4606              MOV      r6,r0
0000a0  210a              MOVS     r1,#0xa
0000a2  fb90f2f1          SDIV     r2,r0,r1
0000a6  fb010012          MLS      r0,r1,r2,r0
0000aa  b910              CBNZ     r0,|L4.178|
;;;301          _DisplayTime(tDiff2);
0000ac  4620              MOV      r0,r4
0000ae  f7fffffe          BL       _DisplayTime
                  |L4.178|
;;;302          /*
;;;303          GUI_GotoXY(80, 50);
;;;304          GUI_SetColor(GUI_WHITE);
;;;305          GUI_SetBkColor(GUI_RED);
;;;306          GUI_DispDecSpace(tDiff2, 3);
;;;307          */
;;;308        }
;;;309      }
0000b2  bf00              NOP      
                  |L4.180|
0000b4  f7fffffe          BL       GUI_GetTime
0000b8  eba00008          SUB      r0,r0,r8              ;287
0000bc  f2427110          MOV      r1,#0x2710            ;287
0000c0  4288              CMP      r0,r1                 ;287
0000c2  da03              BGE      |L4.204|
0000c4  f7fffffe          BL       GUIDEMO_CheckCancel
0000c8  2800              CMP      r0,#0                 ;287
0000ca  d0c8              BEQ      |L4.94|
                  |L4.204|
;;;310      GUI_ALLOC_Free(hMem);
0000cc  4648              MOV      r0,r9
0000ce  f7fffffe          BL       GUI_ALLOC_Free
;;;311    }
0000d2  e8bd87ff          POP      {r0-r10,pc}
;;;312    
                          ENDP

0000d6  0000              DCW      0x0000
                  |L4.216|
                          DCD      _YSize
                  |L4.220|
0000dc  53696e65          DCB      "Sine wave",0
0000e0  20776176
0000e4  6500    
0000e6  00                DCB      0
0000e7  00                DCB      0
                  |L4.232|
                          DCD      _Draw2

                          AREA ||i._DisplayTime||, CODE, READONLY, ALIGN=1

                  _DisplayTime PROC
;;;195    
;;;196    static void _DisplayTime(int tDiff) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;197      #if GUIDEMO_LARGE
;;;198        GUI_GotoXY(80, 50);
000004  2132              MOVS     r1,#0x32
000006  2050              MOVS     r0,#0x50
000008  f7fffffe          BL       GUI_GotoXY
;;;199        GUIDEMO_SetColor(GUI_WHITE);
00000c  f06f407f          MVN      r0,#0xff000000
000010  f7fffffe          BL       GUIDEMO_SetColor
;;;200        GUIDEMO_SetBkColor(GUI_RED);
000014  20ff              MOVS     r0,#0xff
000016  f7fffffe          BL       GUIDEMO_SetBkColor
;;;201        GUI_DispDecSpace(tDiff, 3);
00001a  2103              MOVS     r1,#3
00001c  4620              MOV      r0,r4
00001e  f7fffffe          BL       GUI_DispDecSpace
;;;202      #else
;;;203        tDiff = tDiff; /* Avoid warning */
;;;204      #endif
;;;205    }
000022  bd10              POP      {r4,pc}
;;;206    
                          ENDP


                          AREA ||i._Draw||, CODE, READONLY, ALIGN=2

                  _Draw PROC
;;;77     
;;;78     static void _Draw(void * p) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4605              MOV      r5,r0
;;;79       int i;
;;;80       PARAM * pParam = (PARAM *)p;
000006  462e              MOV      r6,r5
;;;81       GUI_SetBkColor(GUI_BLACK);
000008  2000              MOVS     r0,#0
00000a  f7fffffe          BL       GUI_SetBkColor
;;;82       GUI_SetColor(GUI_DARKGRAY);
00000e  4827              LDR      r0,|L6.172|
000010  f7fffffe          BL       GUI_SetColor
;;;83       GUI_ClearRect(19, (LCD_YSIZE - 20) - _YSize, (LCD_XSIZE - 2), (LCD_YSIZE - 21));
000014  4826              LDR      r0,|L6.176|
000016  6800              LDR      r0,[r0,#0]  ; _YSize
000018  f5c07196          RSB      r1,r0,#0x12c
00001c  f240132b          MOV      r3,#0x12b
000020  22ee              MOVS     r2,#0xee
000022  2013              MOVS     r0,#0x13
000024  f7fffffe          BL       GUI_ClearRect
;;;84       for (i = 0; i < (_YSize / 2); i += 20) {
000028  2400              MOVS     r4,#0
00002a  e019              B        |L6.96|
                  |L6.44|
;;;85         GUI_DrawHLine((LCD_YSIZE - 20) - (_YSize / 2) + i, 19, (LCD_XSIZE - 2));
00002c  4920              LDR      r1,|L6.176|
00002e  680f              LDR      r7,[r1,#0]  ; _YSize
000030  eb0771d7          ADD      r1,r7,r7,LSR #31
000034  1049              ASRS     r1,r1,#1
000036  f5c17196          RSB      r1,r1,#0x12c
00003a  1908              ADDS     r0,r1,r4
00003c  22ee              MOVS     r2,#0xee
00003e  2113              MOVS     r1,#0x13
000040  f7fffffe          BL       GUI_DrawHLine
;;;86         if (i) {
000044  b15c              CBZ      r4,|L6.94|
;;;87           GUI_DrawHLine((LCD_YSIZE - 20) - (_YSize / 2) - i, 19, (LCD_XSIZE - 2));
000046  491a              LDR      r1,|L6.176|
000048  680f              LDR      r7,[r1,#0]  ; _YSize
00004a  eb0771d7          ADD      r1,r7,r7,LSR #31
00004e  1049              ASRS     r1,r1,#1
000050  f5c17196          RSB      r1,r1,#0x12c
000054  1b08              SUBS     r0,r1,r4
000056  22ee              MOVS     r2,#0xee
000058  2113              MOVS     r1,#0x13
00005a  f7fffffe          BL       GUI_DrawHLine
                  |L6.94|
00005e  3414              ADDS     r4,r4,#0x14           ;84
                  |L6.96|
000060  4913              LDR      r1,|L6.176|
000062  6808              LDR      r0,[r1,#0]            ;84  ; _YSize
000064  eb0071d0          ADD      r1,r0,r0,LSR #31      ;84
000068  ebb40f61          CMP      r4,r1,ASR #1          ;84
00006c  dbde              BLT      |L6.44|
;;;88         }
;;;89       }
;;;90       for (i = 40; i < (LCD_XSIZE - 20); i += 40) {
00006e  2428              MOVS     r4,#0x28
000070  e00a              B        |L6.136|
                  |L6.114|
;;;91         GUI_DrawVLine(18 + i, (LCD_YSIZE - 20) - _YSize, (LCD_YSIZE - 21));
000072  4a0f              LDR      r2,|L6.176|
000074  6812              LDR      r2,[r2,#0]  ; _YSize
000076  f5c27196          RSB      r1,r2,#0x12c
00007a  f1040012          ADD      r0,r4,#0x12
00007e  f240122b          MOV      r2,#0x12b
000082  f7fffffe          BL       GUI_DrawVLine
000086  3428              ADDS     r4,r4,#0x28           ;90
                  |L6.136|
000088  2cdc              CMP      r4,#0xdc              ;90
00008a  dbf2              BLT      |L6.114|
;;;92       }
;;;93       GUIDEMO_SetColor(COLOR_GRAPH0);
00008c  f44f407f          MOV      r0,#0xff00
000090  f7fffffe          BL       GUIDEMO_SetColor
;;;94       GUI_DrawGraph(pParam->aY, (LCD_XSIZE - 20), 19, (LCD_YSIZE - 20) - _YSize);
000094  4906              LDR      r1,|L6.176|
000096  6809              LDR      r1,[r1,#0]  ; _YSize
000098  f5c17396          RSB      r3,r1,#0x12c
00009c  2213              MOVS     r2,#0x13
00009e  21dc              MOVS     r1,#0xdc
0000a0  6830              LDR      r0,[r6,#0]
0000a2  f7fffffe          BL       GUI_DrawGraph
;;;95     }
0000a6  e8bd81f0          POP      {r4-r8,pc}
;;;96     
                          ENDP

0000aa  0000              DCW      0x0000
                  |L6.172|
                          DCD      0x00404040
                  |L6.176|
                          DCD      _YSize

                          AREA ||i._Draw2||, CODE, READONLY, ALIGN=2

                  _Draw2 PROC
;;;96     
;;;97     static void _Draw2(void * p) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;98       PARAM * pParam = (PARAM *)p;
000004  4625              MOV      r5,r4
;;;99       _Draw(p);
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       _Draw
;;;100      GUI_SetColor(COLOR_GRAPH1);
00000c  f64f70ff          MOV      r0,#0xffff
000010  f7fffffe          BL       GUI_SetColor
;;;101      GUI_DrawGraph(pParam->aY+15, (LCD_XSIZE - 20), 19, (LCD_YSIZE - 20) - _YSize);
000014  4905              LDR      r1,|L7.44|
000016  6809              LDR      r1,[r1,#0]  ; _YSize
000018  f5c17396          RSB      r3,r1,#0x12c
00001c  6829              LDR      r1,[r5,#0]
00001e  f101001e          ADD      r0,r1,#0x1e
000022  2213              MOVS     r2,#0x13
000024  21dc              MOVS     r1,#0xdc
000026  f7fffffe          BL       GUI_DrawGraph
;;;102    }
00002a  bd70              POP      {r4-r6,pc}
;;;103    
                          ENDP

                  |L7.44|
                          DCD      _YSize

                          AREA ||i._DrawOrData||, CODE, READONLY, ALIGN=2

                  _DrawOrData PROC
;;;319    
;;;320    static void _DrawOrData(GUI_COLOR Color, I16 * paY) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;321      GUIDEMO_SetColor(Color);
000006  4628              MOV      r0,r5
000008  f7fffffe          BL       GUIDEMO_SetColor
;;;322      GUI_DrawGraph(paY, (LCD_XSIZE - 20), 19, (LCD_YSIZE - 20) - _YSize);
00000c  4804              LDR      r0,|L8.32|
00000e  6800              LDR      r0,[r0,#0]  ; _YSize
000010  f5c07396          RSB      r3,r0,#0x12c
000014  2213              MOVS     r2,#0x13
000016  21dc              MOVS     r1,#0xdc
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       GUI_DrawGraph
;;;323    }
00001e  bd70              POP      {r4-r6,pc}
;;;324    
                          ENDP

                  |L8.32|
                          DCD      _YSize

                          AREA ||i._GetRandomData||, CODE, READONLY, ALIGN=2

                  _GetRandomData PROC
;;;144    
;;;145    static void _GetRandomData(I16 * paY, int Time, int n) {
000000  e92d4ff8          PUSH     {r3-r11,lr}
000004  4607              MOV      r7,r0
000006  460d              MOV      r5,r1
000008  4692              MOV      r10,r2
;;;146      int aDiff, i;
;;;147      if (Time > 5000)
00000a  f2413088          MOV      r0,#0x1388
00000e  4285              CMP      r5,r0
000010  dd00              BLE      |L9.20|
;;;148        Time -= 5000;
000012  1a2d              SUBS     r5,r5,r0
                  |L9.20|
;;;149      if (Time > 2500)
000014  f64010c4          MOV      r0,#0x9c4
000018  4285              CMP      r5,r0
00001a  dd01              BLE      |L9.32|
;;;150        Time = 5000 - Time;
00001c  0040              LSLS     r0,r0,#1
00001e  1b45              SUBS     r5,r0,r5
                  |L9.32|
;;;151      Time /= 200;
000020  20c8              MOVS     r0,#0xc8
000022  fb95f5f0          SDIV     r5,r5,r0
;;;152      aDiff = Time * Time + 1;
000026  fb05f005          MUL      r0,r5,r5
00002a  f1000901          ADD      r9,r0,#1
;;;153      for (i = 0; i < n; i++) {
00002e  2400              MOVS     r4,#0
000030  e038              B        |L9.164|
                  |L9.50|
;;;154        if (!i) {
000032  b95c              CBNZ     r4,|L9.76|
;;;155          paY[i] = rand() % _YSize;
000034  f7fffffe          BL       rand
000038  491c              LDR      r1,|L9.172|
00003a  6809              LDR      r1,[r1,#0]  ; _YSize
00003c  fb90f2f1          SDIV     r2,r0,r1
000040  fb010012          MLS      r0,r1,r2,r0
000044  b200              SXTH     r0,r0
000046  f8270014          STRH     r0,[r7,r4,LSL #1]
00004a  e02a              B        |L9.162|
                  |L9.76|
;;;156        } else {
;;;157          int Rnd0, Rnd1, yD;
;;;158          I16 yNew;
;;;159          Rnd0 = rand();
00004c  f7fffffe          BL       rand
000050  4683              MOV      r11,r0
;;;160          yD = aDiff - (Rnd0 % aDiff);
000052  fb9bf0f9          SDIV     r0,r11,r9
000056  fb09b010          MLS      r0,r9,r0,r11
00005a  eba90800          SUB      r8,r9,r0
;;;161          Rnd1 = rand();
00005e  f7fffffe          BL       rand
000062  9000              STR      r0,[sp,#0]
;;;162          if (Rnd1 > Rnd0) {
000064  9800              LDR      r0,[sp,#0]
000066  4558              CMP      r0,r11
000068  dd05              BLE      |L9.118|
;;;163            yNew = paY[i-1] + yD;
00006a  1e60              SUBS     r0,r4,#1
00006c  f8370010          LDRH     r0,[r7,r0,LSL #1]
000070  4440              ADD      r0,r0,r8
000072  b206              SXTH     r6,r0
000074  e005              B        |L9.130|
                  |L9.118|
;;;164          } else {
;;;165            yNew = paY[i-1] - yD;
000076  1e60              SUBS     r0,r4,#1
000078  f8370010          LDRH     r0,[r7,r0,LSL #1]
00007c  eba00008          SUB      r0,r0,r8
000080  b206              SXTH     r6,r0
                  |L9.130|
;;;166          }
;;;167          if (yNew > _YSize) {
000082  480a              LDR      r0,|L9.172|
000084  6800              LDR      r0,[r0,#0]  ; _YSize
000086  4286              CMP      r6,r0
000088  dd03              BLE      |L9.146|
;;;168            yNew -= yD;
00008a  eba60008          SUB      r0,r6,r8
00008e  b206              SXTH     r6,r0
000090  e004              B        |L9.156|
                  |L9.146|
;;;169          } else { if (yNew < 0)
000092  2e00              CMP      r6,#0
000094  da02              BGE      |L9.156|
;;;170            yNew += yD;
000096  eb060008          ADD      r0,r6,r8
00009a  b206              SXTH     r6,r0
                  |L9.156|
;;;171          }
;;;172          paY[i] = yNew;
00009c  f8276014          STRH     r6,[r7,r4,LSL #1]
;;;173        }
0000a0  bf00              NOP      
                  |L9.162|
0000a2  1c64              ADDS     r4,r4,#1              ;153
                  |L9.164|
0000a4  4554              CMP      r4,r10                ;153
0000a6  dbc4              BLT      |L9.50|
;;;174      }
;;;175    }
0000a8  e8bd8ff8          POP      {r3-r11,pc}
;;;176    
                          ENDP

                  |L9.172|
                          DCD      _YSize

                          AREA ||i._GetSineData||, CODE, READONLY, ALIGN=2

                  _GetSineData PROC
;;;256    
;;;257    static void _GetSineData(I16 * paY, int n) {
000000  e92d4ffe          PUSH     {r1-r11,lr}
000004  4681              MOV      r9,r0
000006  468a              MOV      r10,r1
;;;258      int i;
;;;259      for (i = 0; i < n; i++) {
000008  2400              MOVS     r4,#0
00000a  e035              B        |L10.120|
                  |L10.12|
;;;260        float s = sin(i * DEG2RAD * 4);
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       __aeabi_i2f
000012  491b              LDR      r1,|L10.128|
000014  9000              STR      r0,[sp,#0]
000016  f7fffffe          BL       __aeabi_fmul
00001a  f04f4181          MOV      r1,#0x40800000
00001e  9001              STR      r0,[sp,#4]
000020  f7fffffe          BL       __aeabi_fmul
000024  9002              STR      r0,[sp,#8]
000026  f7fffffe          BL       __aeabi_f2d
00002a  4607              MOV      r7,r0
00002c  f7fffffe          BL       ||sin||
000030  4605              MOV      r5,r0
000032  f7fffffe          BL       __aeabi_d2f
000036  4683              MOV      r11,r0
;;;261        paY[i] = s * _YSize / 2 + _YSize / 2;
000038  4812              LDR      r0,|L10.132|
00003a  6805              LDR      r5,[r0,#0]  ; _YSize
00003c  eb0571d5          ADD      r1,r5,r5,LSR #31
000040  1048              ASRS     r0,r1,#1
000042  f7fffffe          BL       __aeabi_i2f
000046  9002              STR      r0,[sp,#8]
000048  480e              LDR      r0,|L10.132|
00004a  6800              LDR      r0,[r0,#0]  ; _YSize
00004c  f7fffffe          BL       __aeabi_i2f
000050  4659              MOV      r1,r11
000052  9001              STR      r0,[sp,#4]
000054  f7fffffe          BL       __aeabi_fmul
000058  4680              MOV      r8,r0
00005a  f04f4180          MOV      r1,#0x40000000
00005e  f7fffffe          BL       __aeabi_fdiv
000062  4607              MOV      r7,r0
000064  9902              LDR      r1,[sp,#8]
000066  f7fffffe          BL       __aeabi_fadd
00006a  4606              MOV      r6,r0
00006c  f7fffffe          BL       __aeabi_f2iz
000070  b200              SXTH     r0,r0
000072  f8290014          STRH     r0,[r9,r4,LSL #1]
000076  1c64              ADDS     r4,r4,#1              ;259
                  |L10.120|
000078  4554              CMP      r4,r10                ;259
00007a  dbc7              BLT      |L10.12|
;;;262      }
;;;263    }
00007c  e8bd8ffe          POP      {r1-r11,pc}
;;;264    
                          ENDP

                  |L10.128|
                          DCD      0x3c8efa35
                  |L10.132|
                          DCD      _YSize

                          AREA ||i._Label||, CODE, READONLY, ALIGN=2

                  _Label PROC
;;;110    
;;;111    static void _Label(void) {
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;112      int x, y;
;;;113      GUI_SetPenSize(1);
000004  2001              MOVS     r0,#1
000006  f7fffffe          BL       GUI_SetPenSize
;;;114      GUI_ClearRect(0, (LCD_YSIZE - 21) - _YSize, (LCD_XSIZE - 1), (LCD_YSIZE - 1));
00000a  483a              LDR      r0,|L11.244|
00000c  6800              LDR      r0,[r0,#0]  ; _YSize
00000e  f240122b          MOV      r2,#0x12b
000012  1a11              SUBS     r1,r2,r0
000014  f240133f          MOV      r3,#0x13f
000018  22ef              MOVS     r2,#0xef
00001a  2000              MOVS     r0,#0
00001c  f7fffffe          BL       GUI_ClearRect
;;;115      GUI_DrawRect(18, (LCD_YSIZE - 21) - _YSize, (LCD_XSIZE - 1), (LCD_YSIZE - 20));
000020  4834              LDR      r0,|L11.244|
000022  6800              LDR      r0,[r0,#0]  ; _YSize
000024  f240122b          MOV      r2,#0x12b
000028  1a11              SUBS     r1,r2,r0
00002a  1c53              ADDS     r3,r2,#1
00002c  22ef              MOVS     r2,#0xef
00002e  2012              MOVS     r0,#0x12
000030  f7fffffe          BL       GUI_DrawRect
;;;116      GUI_SetFont(&GUI_Font6x8);
000034  4830              LDR      r0,|L11.248|
000036  f7fffffe          BL       GUI_SetFont
;;;117      for (x = 0; x < (LCD_XSIZE - 20); x += 40) {
00003a  2500              MOVS     r5,#0
00003c  e013              B        |L11.102|
                  |L11.62|
;;;118        int xPos = x + 18;
00003e  f1050612          ADD      r6,r5,#0x12
;;;119        GUI_DrawVLine(xPos, (LCD_YSIZE - 20), (LCD_YSIZE - 14));
000042  f44f7299          MOV      r2,#0x132
000046  1f91              SUBS     r1,r2,#6
000048  4630              MOV      r0,r6
00004a  f7fffffe          BL       GUI_DrawVLine
;;;120        GUI_DispDecAt(x / 40, xPos - 2, (LCD_YSIZE - 9), 1);
00004e  2028              MOVS     r0,#0x28
000050  fb95f7f0          SDIV     r7,r5,r0
000054  1eb0              SUBS     r0,r6,#2
000056  b201              SXTH     r1,r0
000058  2301              MOVS     r3,#1
00005a  f2401237          MOV      r2,#0x137
00005e  4638              MOV      r0,r7
000060  f7fffffe          BL       GUI_DispDecAt
000064  3528              ADDS     r5,r5,#0x28           ;117
                  |L11.102|
000066  2ddc              CMP      r5,#0xdc              ;117
000068  dbe9              BLT      |L11.62|
;;;121      }
;;;122      for (y = 0; y < _YSize / 2; y += 20) {
00006a  2400              MOVS     r4,#0
00006c  e039              B        |L11.226|
                  |L11.110|
;;;123        int yPos = (LCD_YSIZE - 20) - _YSize / 2 + y;
00006e  4921              LDR      r1,|L11.244|
000070  6808              LDR      r0,[r1,#0]  ; _YSize
000072  eb0071d0          ADD      r1,r0,r0,LSR #31
000076  1049              ASRS     r1,r1,#1
000078  f5c17196          RSB      r1,r1,#0x12c
00007c  190e              ADDS     r6,r1,r4
;;;124        GUI_DrawHLine(yPos, 13, 18);
00007e  2212              MOVS     r2,#0x12
000080  210d              MOVS     r1,#0xd
000082  4630              MOV      r0,r6
000084  f7fffffe          BL       GUI_DrawHLine
;;;125        if (y) {
000088  b324              CBZ      r4,|L11.212|
;;;126          GUI_GotoXY(1, yPos - 4);
00008a  1f31              SUBS     r1,r6,#4
00008c  2001              MOVS     r0,#1
00008e  f7fffffe          BL       GUI_GotoXY
;;;127          GUI_DispSDec(-y / 20, 2);
000092  4260              RSBS     r0,r4,#0
000094  2114              MOVS     r1,#0x14
000096  fb90f7f1          SDIV     r7,r0,r1
00009a  2102              MOVS     r1,#2
00009c  4638              MOV      r0,r7
00009e  f7fffffe          BL       GUI_DispSDec
;;;128          yPos = (LCD_YSIZE - 20) - _YSize / 2 - y;
0000a2  4914              LDR      r1,|L11.244|
0000a4  6808              LDR      r0,[r1,#0]  ; _YSize
0000a6  eb0071d0          ADD      r1,r0,r0,LSR #31
0000aa  1049              ASRS     r1,r1,#1
0000ac  f5c17196          RSB      r1,r1,#0x12c
0000b0  1b0e              SUBS     r6,r1,r4
;;;129          GUI_DrawHLine(yPos, 13, 18);
0000b2  2212              MOVS     r2,#0x12
0000b4  210d              MOVS     r1,#0xd
0000b6  4630              MOV      r0,r6
0000b8  f7fffffe          BL       GUI_DrawHLine
;;;130          GUI_GotoXY(1, yPos - 4);
0000bc  1f31              SUBS     r1,r6,#4
0000be  2001              MOVS     r0,#1
0000c0  f7fffffe          BL       GUI_GotoXY
;;;131          GUI_DispSDec(y / 20, 2);
0000c4  2014              MOVS     r0,#0x14
0000c6  fb94f7f0          SDIV     r7,r4,r0
0000ca  2102              MOVS     r1,#2
0000cc  4638              MOV      r0,r7
0000ce  f7fffffe          BL       GUI_DispSDec
0000d2  e005              B        |L11.224|
                  |L11.212|
;;;132        } else {
;;;133          GUI_DispCharAt('0', 7, yPos - 4);
0000d4  1f30              SUBS     r0,r6,#4
0000d6  b202              SXTH     r2,r0
0000d8  2107              MOVS     r1,#7
0000da  2030              MOVS     r0,#0x30
0000dc  f7fffffe          BL       GUI_DispCharAt
                  |L11.224|
0000e0  3414              ADDS     r4,r4,#0x14           ;122
                  |L11.226|
0000e2  4904              LDR      r1,|L11.244|
0000e4  6808              LDR      r0,[r1,#0]            ;122  ; _YSize
0000e6  eb0071d0          ADD      r1,r0,r0,LSR #31      ;122
0000ea  ebb40f61          CMP      r4,r1,ASR #1          ;122
0000ee  dbbe              BLT      |L11.110|
;;;134        }
;;;135      }
;;;136    }
0000f0  e8bd81f0          POP      {r4-r8,pc}
;;;137    
                          ENDP

                  |L11.244|
                          DCD      _YSize
                  |L11.248|
                          DCD      GUI_Font6x8

                          AREA ||i._LabelMS||, CODE, READONLY, ALIGN=2

                  _LabelMS PROC
;;;188    
;;;189    static void _LabelMS(void) {
000000  b510              PUSH     {r4,lr}
;;;190      GUI_SetFont(&GUI_Font6x8);
000002  4804              LDR      r0,|L12.20|
000004  f7fffffe          BL       GUI_SetFont
;;;191      #if GUIDEMO_LARGE
;;;192        GUI_DispStringAt("msec/graph:", 10, 50);
000008  2232              MOVS     r2,#0x32
00000a  210a              MOVS     r1,#0xa
00000c  a002              ADR      r0,|L12.24|
00000e  f7fffffe          BL       GUI_DispStringAt
;;;193      #endif
;;;194    }
000012  bd10              POP      {r4,pc}
;;;195    
                          ENDP

                  |L12.20|
                          DCD      GUI_Font6x8
                  |L12.24|
000018  6d736563          DCB      "msec/graph:",0
00001c  2f677261
000020  70683a00

                          AREA ||i._ShowText||, CODE, READONLY, ALIGN=2

                  _ShowText PROC
;;;176    
;;;177    static void _ShowText(const char * sText) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;178      GUIDEMO_SetColor(GUI_WHITE);
000004  f06f407f          MVN      r0,#0xff000000
000008  f7fffffe          BL       GUIDEMO_SetColor
;;;179      GUIDEMO_SetBkColor(GUI_RED);
00000c  20ff              MOVS     r0,#0xff
00000e  f7fffffe          BL       GUIDEMO_SetBkColor
;;;180      #if GUIDEMO_LARGE
;;;181        GUI_ClearRect(0, 0, LCD_XSIZE, 60);
000012  233c              MOVS     r3,#0x3c
000014  22f0              MOVS     r2,#0xf0
000016  2100              MOVS     r1,#0
000018  4608              MOV      r0,r1
00001a  f7fffffe          BL       GUI_ClearRect
;;;182        GUI_SetFont(&GUI_FontComic18B_ASCII);
00001e  4804              LDR      r0,|L13.48|
000020  f7fffffe          BL       GUI_SetFont
;;;183        GUI_DispStringAt(sText, 10, 20);
000024  2214              MOVS     r2,#0x14
000026  210a              MOVS     r1,#0xa
000028  4620              MOV      r0,r4
00002a  f7fffffe          BL       GUI_DispStringAt
;;;184      #else
;;;185        sText = sText;  /* Avoid warning */
;;;186      #endif
;;;187    }
00002e  bd10              POP      {r4,pc}
;;;188    
                          ENDP

                  |L13.48|
                          DCD      GUI_FontComic18B_ASCII

                          AREA ||.data||, DATA, ALIGN=2

                  _YSize
                          DCD      0x00000000
