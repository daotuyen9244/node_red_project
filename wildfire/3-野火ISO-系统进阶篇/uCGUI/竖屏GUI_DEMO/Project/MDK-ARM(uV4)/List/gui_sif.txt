; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\gui_sif.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\gui_sif.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Core\GUI_SIF.c]
                          THUMB

                          AREA ||i.GUI_SIF_CreateFont||, CODE, READONLY, ALIGN=2

                  GUI_SIF_CreateFont PROC
;;;119    */
;;;120    void GUI_SIF_CreateFont(void * pFontData, GUI_FONT * pFont, const GUI_SIF_TYPE * pFontType) {
000000  b5f8              PUSH     {r3-r7,lr}
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
;;;121      const U8 * pSrc = (const U8 *)pFontData;
000008  9600              STR      r6,[sp,#0]
;;;122      U32 ID;
;;;123      /* Set pFontData of GUI_FONT structure to the first byte */
;;;124      pFont->p.pFontData = pFontData;
00000a  61a6              STR      r6,[r4,#0x18]
;;;125      /* Check ID */
;;;126      ID = GUI__Read32(&pSrc);
00000c  4668              MOV      r0,sp
00000e  f7fffffe          BL       GUI__Read32
000012  4607              MOV      r7,r0
;;;127      if (ID != 0x50495547) { /* 'GUIP' */
000014  4814              LDR      r0,|L1.104|
000016  4287              CMP      r7,r0
000018  d000              BEQ      |L1.28|
                  |L1.26|
;;;128        GUI_DEBUG_ERROROUT("ID of downloaded font wrong!");
;;;129        return;
;;;130      }
;;;131      /* Read properties of the font */
;;;132      pFont->YSize    = GUI__Read16(&pSrc);
;;;133      pFont->YDist    = GUI__Read16(&pSrc);
;;;134      pFont->Baseline = GUI__Read16(&pSrc);
;;;135      pFont->LHeight  = GUI__Read16(&pSrc);
;;;136      pFont->CHeight  = GUI__Read16(&pSrc);
;;;137      /* Magnification is always 1 */
;;;138      pFont->XMag = 1;
;;;139      pFont->YMag = 1;
;;;140      /* Set function pointers */
;;;141      pFont->pfDispChar     = pFontType->pDispChar;
;;;142      pFont->pfGetCharDistX = pFontType->pGetCharDistX;
;;;143      pFont->pfGetFontInfo  = pFontType->pGetFontInfo;
;;;144      pFont->pfIsInFont     = pFontType->pIsInFont;
;;;145      pFont->pafEncode      = 0;
;;;146      /* Use the new font */
;;;147      GUI_SetFont(pFont);
;;;148    }
00001a  bdf8              POP      {r3-r7,pc}
                  |L1.28|
00001c  4668              MOV      r0,sp                 ;132
00001e  f7fffffe          BL       GUI__Read16
000022  7520              STRB     r0,[r4,#0x14]         ;132
000024  4668              MOV      r0,sp                 ;133
000026  f7fffffe          BL       GUI__Read16
00002a  7560              STRB     r0,[r4,#0x15]         ;133
00002c  4668              MOV      r0,sp                 ;134
00002e  f7fffffe          BL       GUI__Read16
000032  7720              STRB     r0,[r4,#0x1c]         ;134
000034  4668              MOV      r0,sp                 ;135
000036  f7fffffe          BL       GUI__Read16
00003a  7760              STRB     r0,[r4,#0x1d]         ;135
00003c  4668              MOV      r0,sp                 ;136
00003e  f7fffffe          BL       GUI__Read16
000042  77a0              STRB     r0,[r4,#0x1e]         ;136
000044  2001              MOVS     r0,#1                 ;138
000046  75a0              STRB     r0,[r4,#0x16]         ;138
000048  75e0              STRB     r0,[r4,#0x17]         ;139
00004a  6828              LDR      r0,[r5,#0]            ;141
00004c  6020              STR      r0,[r4,#0]            ;141
00004e  6868              LDR      r0,[r5,#4]            ;142
000050  6060              STR      r0,[r4,#4]            ;142
000052  68a8              LDR      r0,[r5,#8]            ;143
000054  60a0              STR      r0,[r4,#8]            ;143
000056  68e8              LDR      r0,[r5,#0xc]          ;144
000058  60e0              STR      r0,[r4,#0xc]          ;144
00005a  2000              MOVS     r0,#0                 ;145
00005c  6120              STR      r0,[r4,#0x10]         ;145
00005e  4620              MOV      r0,r4                 ;147
000060  f7fffffe          BL       GUI_SetFont
000064  bf00              NOP      
000066  e7d8              B        |L1.26|
;;;149    
                          ENDP

                  |L1.104|
                          DCD      0x50495547

                          AREA ||i.GUI_SIF_DeleteFont||, CODE, READONLY, ALIGN=1

                  GUI_SIF_DeleteFont PROC
;;;153    */
;;;154    void GUI_SIF_DeleteFont(GUI_FONT * pFont) {
000000  bf00              NOP      
;;;155      GUI_USE_PARA(pFont);
;;;156    }
000002  4770              BX       lr
;;;157    	 	 			 		    	 				 	  			   	 	 	 	 	 	  	  	      	   		 	 	 		  		  	 		 	  	  			     			       	   	 			  		    	 	     	 				  	 					 	 			   	  	  			 				 		 	 	 			     			 
                          ENDP


                          AREA ||i.GUI_SIF__GetCharDistX||, CODE, READONLY, ALIGN=2

                  GUI_SIF__GetCharDistX PROC
;;;74     */
;;;75     int GUI_SIF__GetCharDistX(U16P c) {
000000  b538              PUSH     {r3-r5,lr}
000002  4604              MOV      r4,r0
;;;76       const U8 * pCharInfo;
;;;77       U16 DistX = 0;
000004  2500              MOVS     r5,#0
;;;78       pCharInfo = GUI_SIF__GetpCharInfo(GUI_Context.pAFont, c); /* Get pointer to char info data */
000006  4908              LDR      r1,|L3.40|
000008  69c8              LDR      r0,[r1,#0x1c]  ; GUI_Context
00000a  4621              MOV      r1,r4
00000c  f7fffffe          BL       GUI_SIF__GetpCharInfo
000010  9000              STR      r0,[sp,#0]
;;;79       if (pCharInfo) {
000012  9800              LDR      r0,[sp,#0]
000014  b130              CBZ      r0,|L3.36|
;;;80         pCharInfo += 2;
000016  9800              LDR      r0,[sp,#0]
000018  1c80              ADDS     r0,r0,#2
00001a  9000              STR      r0,[sp,#0]
;;;81         DistX = GUI__Read16(&pCharInfo);
00001c  4668              MOV      r0,sp
00001e  f7fffffe          BL       GUI__Read16
000022  4605              MOV      r5,r0
                  |L3.36|
;;;82       }
;;;83       return DistX;
000024  4628              MOV      r0,r5
;;;84     }
000026  bd38              POP      {r3-r5,pc}
;;;85     
                          ENDP

                  |L3.40|
                          DCD      GUI_Context

                          AREA ||i.GUI_SIF__GetFontInfo||, CODE, READONLY, ALIGN=1

                  GUI_SIF__GetFontInfo PROC
;;;89     */
;;;90     void GUI_SIF__GetFontInfo(const GUI_FONT GUI_UNI_PTR * pFont, GUI_FONTINFO * pfi) {
000000  b538              PUSH     {r3-r5,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;91       const U8 * pData;
;;;92       pData = (const U8 *)pFont->p.pFontData + 4 /* Skip XSize and XDist */;
000006  69a8              LDR      r0,[r5,#0x18]
000008  1d00              ADDS     r0,r0,#4
00000a  9000              STR      r0,[sp,#0]
;;;93       pfi->Baseline = GUI__Read16(&pData);
00000c  4668              MOV      r0,sp
00000e  f7fffffe          BL       GUI__Read16
000012  70a0              STRB     r0,[r4,#2]
;;;94       pfi->LHeight  = GUI__Read16(&pData);
000014  4668              MOV      r0,sp
000016  f7fffffe          BL       GUI__Read16
00001a  70e0              STRB     r0,[r4,#3]
;;;95       pfi->CHeight  = GUI__Read16(&pData);
00001c  4668              MOV      r0,sp
00001e  f7fffffe          BL       GUI__Read16
000022  7120              STRB     r0,[r4,#4]
;;;96       pfi->Flags    = GUI_FONTINFO_FLAG_PROP;
000024  2001              MOVS     r0,#1
000026  8020              STRH     r0,[r4,#0]
;;;97     }
000028  bd38              POP      {r3-r5,pc}
;;;98     
                          ENDP


                          AREA ||i.GUI_SIF__GetpCharInfo||, CODE, READONLY, ALIGN=1

                  GUI_SIF__GetpCharInfo PROC
;;;49     */
;;;50     const U8 * GUI_SIF__GetpCharInfo(const GUI_FONT GUI_UNI_PTR * pFont, U16P c) {
000000  e92d41fc          PUSH     {r2-r8,lr}
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
;;;51       const U8 * pCharArea, * pCharInfo;
;;;52       int NumCharAreas;
;;;53       NumCharAreas = _GetNumCharAreas(pFont);                 /* Get # of char areas */
000008  4630              MOV      r0,r6
00000a  f7fffffe          BL       _GetNumCharAreas
00000e  4607              MOV      r7,r0
;;;54       pCharArea = (const U8 *)pFont->p.pFontData 
000010  69b0              LDR      r0,[r6,#0x18]
000012  3010              ADDS     r0,r0,#0x10
000014  9001              STR      r0,[sp,#4]
;;;55                   + sizeof(GUI_SI_FONT);                      /* Set char area pointer to first char area */
;;;56       pCharInfo = pCharArea
000016  2104              MOVS     r1,#4
000018  9801              LDR      r0,[sp,#4]
00001a  fb010507          MLA      r5,r1,r7,r0
;;;57                   + sizeof(GUI_SIF_CHAR_AREA) * NumCharAreas; /* Set char info pointer to first character info */
;;;58       do {
00001e  bf00              NOP      
                  |L5.32|
;;;59         GUI_SIF_CHAR_AREA CharArea;
;;;60         CharArea.First    = GUI__Read16(&pCharArea);
000020  a801              ADD      r0,sp,#4
000022  f7fffffe          BL       GUI__Read16
000026  f8ad0000          STRH     r0,[sp,#0]
;;;61         CharArea.Last     = GUI__Read16(&pCharArea);
00002a  a801              ADD      r0,sp,#4
00002c  f7fffffe          BL       GUI__Read16
000030  f8ad0002          STRH     r0,[sp,#2]
;;;62         if ((c >= CharArea.First) && (c <= CharArea.Last)) {
000034  f8bd0000          LDRH     r0,[sp,#0]
000038  42a0              CMP      r0,r4
00003a  dc0c              BGT      |L5.86|
00003c  f8bd0002          LDRH     r0,[sp,#2]
000040  42a0              CMP      r0,r4
000042  db08              BLT      |L5.86|
;;;63           pCharInfo += sizeof(GUI_SIF_CHARINFO) * (c - CharArea.First);
000044  f8bd0000          LDRH     r0,[sp,#0]
000048  1a20              SUBS     r0,r4,r0
00004a  210c              MOVS     r1,#0xc
00004c  fb015500          MLA      r5,r1,r0,r5
;;;64           return pCharInfo;
000050  4628              MOV      r0,r5
                  |L5.82|
;;;65         }
;;;66         pCharInfo += sizeof(GUI_SIF_CHARINFO) * (CharArea.Last - CharArea.First + 1);
;;;67       } while(--NumCharAreas);
;;;68       return 0;
;;;69     }
000052  e8bd81fc          POP      {r2-r8,pc}
                  |L5.86|
000056  f8bd0002          LDRH     r0,[sp,#2]            ;66
00005a  f8bd1000          LDRH     r1,[sp,#0]            ;66
00005e  1a40              SUBS     r0,r0,r1              ;66
000060  1c40              ADDS     r0,r0,#1              ;66
000062  210c              MOVS     r1,#0xc               ;66
000064  fb015500          MLA      r5,r1,r0,r5           ;66
000068  1e78              SUBS     r0,r7,#1              ;67
00006a  0007              MOVS     r7,r0                 ;67
00006c  d1d8              BNE      |L5.32|
00006e  bf00              NOP                            ;68
000070  e7ef              B        |L5.82|
;;;70     
                          ENDP


                          AREA ||i.GUI_SIF__IsInFont||, CODE, READONLY, ALIGN=2

                  GUI_SIF__IsInFont PROC
;;;102    */
;;;103    char GUI_SIF__IsInFont(const GUI_FONT GUI_UNI_PTR * pFont, U16 c) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;104      const U8 * pCharInfo;
;;;105      GUI_USE_PARA(pFont);
000006  bf00              NOP      
;;;106      pCharInfo = GUI_SIF__GetpCharInfo(GUI_Context.pAFont, c);
000008  4905              LDR      r1,|L6.32|
00000a  69c8              LDR      r0,[r1,#0x1c]  ; GUI_Context
00000c  4629              MOV      r1,r5
00000e  f7fffffe          BL       GUI_SIF__GetpCharInfo
000012  4606              MOV      r6,r0
;;;107      return (pCharInfo) ? 1 : 0;
000014  b10e              CBZ      r6,|L6.26|
000016  2001              MOVS     r0,#1
                  |L6.24|
;;;108    }
000018  bd70              POP      {r4-r6,pc}
                  |L6.26|
00001a  2000              MOVS     r0,#0                 ;107
00001c  e7fc              B        |L6.24|
;;;109    
                          ENDP

00001e  0000              DCW      0x0000
                  |L6.32|
                          DCD      GUI_Context

                          AREA ||i._GetNumCharAreas||, CODE, READONLY, ALIGN=1

                  _GetNumCharAreas PROC
;;;31     */
;;;32     static int _GetNumCharAreas(const GUI_FONT GUI_UNI_PTR * pFont) {
000000  b538              PUSH     {r3-r5,lr}
000002  4604              MOV      r4,r0
;;;33       U16 NumCharAreas;
;;;34       const U8 * pData;
;;;35       pData = (const U8 *)pFont->p.pFontData + 14 /* Skip ID, YSize, YDist, Baseline, LHeight and CHeight */;
000004  69a0              LDR      r0,[r4,#0x18]
000006  300e              ADDS     r0,r0,#0xe
000008  9000              STR      r0,[sp,#0]
;;;36       NumCharAreas = GUI__Read16(&pData);
00000a  4668              MOV      r0,sp
00000c  f7fffffe          BL       GUI__Read16
000010  4605              MOV      r5,r0
;;;37       return NumCharAreas;
000012  4628              MOV      r0,r5
;;;38     }
000014  bd38              POP      {r3-r5,pc}
;;;39     
                          ENDP

