; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\guiarc.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\guiarc.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Core\GUIArc.c]
                          THUMB

                          AREA ||i.GL_DrawArc||, CODE, READONLY, ALIGN=1

                  GL_DrawArc PROC
;;;161    */
;;;162    void GL_DrawArc(int x0, int y0, int rx, int ry, int a0, int a1) {
000000  e92d47ff          PUSH     {r0-r10,lr}
000004  4607              MOV      r7,r0
000006  4688              MOV      r8,r1
000008  4691              MOV      r9,r2
00000a  469a              MOV      r10,r3
00000c  e9dd450c          LDRD     r4,r5,[sp,#0x30]
;;;163      int aEnd;
;;;164      a0+=360;
000010  f50474b4          ADD      r4,r4,#0x168
;;;165    	a1+=360;
000014  f50575b4          ADD      r5,r5,#0x168
;;;166    	while (a0>=360) {
000018  e003              B        |L1.34|
                  |L1.26|
;;;167        a0 -= 360;
00001a  f5a474b4          SUB      r4,r4,#0x168
;;;168        a1 -= 360;
00001e  f5a575b4          SUB      r5,r5,#0x168
                  |L1.34|
000022  f5b47fb4          CMP      r4,#0x168             ;166
000026  daf8              BGE      |L1.26|
;;;169    	}
;;;170    /* Do first quadrant 0-90 degree */
;;;171    DoFirst:
000028  bf00              NOP      
                  |L1.42|
;;;172      if (a1<=0)
00002a  2d00              CMP      r5,#0
00002c  dc01              BGT      |L1.50|
                  |L1.46|
;;;173    	  return;
;;;174    	if (a0<90) {
;;;175        if (a0<0)
;;;176    		  a0=0;
;;;177        aEnd = (a1<90) ? a1 : 90;
;;;178        _DrawArc(x0,y0,rx,ry,a0,aEnd, 1, -1);
;;;179    	}
;;;180      a1-=90;
;;;181    	a0-=90;
;;;182    /* Do second quadrant 90-180 degree */
;;;183      if (a1<=0)
;;;184    	  return;
;;;185    	if (a0<90) {
;;;186        if (a0<0)
;;;187    		  a0=0;
;;;188        aEnd = (a1<90) ? a1 : 90;
;;;189        _DrawArc(x0,y0,rx,ry,90-aEnd, 90-a0,-1,-1);
;;;190    	}
;;;191      a1-=90;
;;;192    	a0-=90;
;;;193    /* Do third quadrant 180-270 degree */
;;;194      if (a1<=0)
;;;195    	  return;
;;;196    	if (a0<90) {
;;;197        if (a0<0)
;;;198    		  a0=0;
;;;199        aEnd = (a1<90) ? a1 : 90;
;;;200        _DrawArc(x0,y0,rx,ry,a0,aEnd, -1, 1);
;;;201    	}
;;;202      a1-=90;
;;;203    	a0-=90;
;;;204    /* Do last quadrant 270-360 degree */
;;;205      if (a1<=0)
;;;206    	  return;
;;;207    	if (a0<90) {
;;;208        if (a0<0)
;;;209    		  a0=0;
;;;210        aEnd = (a1<90) ? a1 : 90;
;;;211        _DrawArc(x0,y0,rx,ry,90-aEnd, 90-a0,1,1);
;;;212    	}
;;;213      a1-=90;
;;;214    	a0-=90;
;;;215    goto DoFirst;
;;;216    }
00002e  e8bd87ff          POP      {r0-r10,pc}
                  |L1.50|
000032  2c5a              CMP      r4,#0x5a              ;174
000034  da15              BGE      |L1.98|
000036  2c00              CMP      r4,#0                 ;175
000038  da00              BGE      |L1.60|
00003a  2400              MOVS     r4,#0                 ;176
                  |L1.60|
00003c  2d5a              CMP      r5,#0x5a              ;177
00003e  da01              BGE      |L1.68|
000040  4628              MOV      r0,r5                 ;177
000042  e000              B        |L1.70|
                  |L1.68|
000044  205a              MOVS     r0,#0x5a              ;177
                  |L1.70|
000046  4606              MOV      r6,r0                 ;177
000048  f04f30ff          MOV      r0,#0xffffffff        ;178
00004c  2101              MOVS     r1,#1                 ;178
00004e  4653              MOV      r3,r10                ;178
000050  464a              MOV      r2,r9                 ;178
000052  e9cd4600          STRD     r4,r6,[sp,#0]         ;178
000056  e9cd1002          STRD     r1,r0,[sp,#8]         ;178
00005a  4641              MOV      r1,r8                 ;178
00005c  4638              MOV      r0,r7                 ;178
00005e  f7fffffe          BL       _DrawArc
                  |L1.98|
000062  3d5a              SUBS     r5,r5,#0x5a           ;180
000064  3c5a              SUBS     r4,r4,#0x5a           ;181
000066  2d00              CMP      r5,#0                 ;183
000068  dc00              BGT      |L1.108|
00006a  e7e0              B        |L1.46|
                  |L1.108|
00006c  2c5a              CMP      r4,#0x5a              ;185
00006e  da18              BGE      |L1.162|
000070  2c00              CMP      r4,#0                 ;186
000072  da00              BGE      |L1.118|
000074  2400              MOVS     r4,#0                 ;187
                  |L1.118|
000076  2d5a              CMP      r5,#0x5a              ;188
000078  da01              BGE      |L1.126|
00007a  4628              MOV      r0,r5                 ;188
00007c  e000              B        |L1.128|
                  |L1.126|
00007e  205a              MOVS     r0,#0x5a              ;188
                  |L1.128|
000080  4606              MOV      r6,r0                 ;188
000082  f04f32ff          MOV      r2,#0xffffffff        ;189
000086  f1c4005a          RSB      r0,r4,#0x5a           ;189
00008a  f1c6015a          RSB      r1,r6,#0x5a           ;189
00008e  e9cd0201          STRD     r0,r2,[sp,#4]         ;189
000092  4653              MOV      r3,r10                ;189
000094  9203              STR      r2,[sp,#0xc]          ;189
000096  9100              STR      r1,[sp,#0]            ;189
000098  464a              MOV      r2,r9                 ;189
00009a  4641              MOV      r1,r8                 ;189
00009c  4638              MOV      r0,r7                 ;189
00009e  f7fffffe          BL       _DrawArc
                  |L1.162|
0000a2  3d5a              SUBS     r5,r5,#0x5a           ;191
0000a4  3c5a              SUBS     r4,r4,#0x5a           ;192
0000a6  2d00              CMP      r5,#0                 ;194
0000a8  dc00              BGT      |L1.172|
0000aa  e7c0              B        |L1.46|
                  |L1.172|
0000ac  2c5a              CMP      r4,#0x5a              ;196
0000ae  da14              BGE      |L1.218|
0000b0  2c00              CMP      r4,#0                 ;197
0000b2  da00              BGE      |L1.182|
0000b4  2400              MOVS     r4,#0                 ;198
                  |L1.182|
0000b6  2d5a              CMP      r5,#0x5a              ;199
0000b8  da01              BGE      |L1.190|
0000ba  4628              MOV      r0,r5                 ;199
0000bc  e000              B        |L1.192|
                  |L1.190|
0000be  205a              MOVS     r0,#0x5a              ;199
                  |L1.192|
0000c0  4606              MOV      r6,r0                 ;199
0000c2  2001              MOVS     r0,#1                 ;200
0000c4  1e81              SUBS     r1,r0,#2              ;200
0000c6  4653              MOV      r3,r10                ;200
0000c8  464a              MOV      r2,r9                 ;200
0000ca  e9cd4600          STRD     r4,r6,[sp,#0]         ;200
0000ce  e9cd1002          STRD     r1,r0,[sp,#8]         ;200
0000d2  4641              MOV      r1,r8                 ;200
0000d4  4638              MOV      r0,r7                 ;200
0000d6  f7fffffe          BL       _DrawArc
                  |L1.218|
0000da  3d5a              SUBS     r5,r5,#0x5a           ;202
0000dc  3c5a              SUBS     r4,r4,#0x5a           ;203
0000de  2d00              CMP      r5,#0                 ;205
0000e0  dc00              BGT      |L1.228|
0000e2  e7a4              B        |L1.46|
                  |L1.228|
0000e4  2c5a              CMP      r4,#0x5a              ;207
0000e6  da17              BGE      |L1.280|
0000e8  2c00              CMP      r4,#0                 ;208
0000ea  da00              BGE      |L1.238|
0000ec  2400              MOVS     r4,#0                 ;209
                  |L1.238|
0000ee  2d5a              CMP      r5,#0x5a              ;210
0000f0  da01              BGE      |L1.246|
0000f2  4628              MOV      r0,r5                 ;210
0000f4  e000              B        |L1.248|
                  |L1.246|
0000f6  205a              MOVS     r0,#0x5a              ;210
                  |L1.248|
0000f8  4606              MOV      r6,r0                 ;210
0000fa  2201              MOVS     r2,#1                 ;211
0000fc  f1c4005a          RSB      r0,r4,#0x5a           ;211
000100  f1c6015a          RSB      r1,r6,#0x5a           ;211
000104  e9cd0201          STRD     r0,r2,[sp,#4]         ;211
000108  4653              MOV      r3,r10                ;211
00010a  9203              STR      r2,[sp,#0xc]          ;211
00010c  9100              STR      r1,[sp,#0]            ;211
00010e  464a              MOV      r2,r9                 ;211
000110  4641              MOV      r1,r8                 ;211
000112  4638              MOV      r0,r7                 ;211
000114  f7fffffe          BL       _DrawArc
                  |L1.280|
000118  3d5a              SUBS     r5,r5,#0x5a           ;213
00011a  3c5a              SUBS     r4,r4,#0x5a           ;214
00011c  e785              B        |L1.42|
;;;217    
                          ENDP


                          AREA ||i.GUI_DrawArc||, CODE, READONLY, ALIGN=2

                  GUI_DrawArc PROC
;;;221    */
;;;222    void GUI_DrawArc(int x0, int y0, int rx, int ry, int a0, int a1) {
000000  e92d47fc          PUSH     {r2-r10,lr}
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
00000c  e9dd890a          LDRD     r8,r9,[sp,#0x28]
;;;223      GUI_LOCK();
000010  f7fffffe          BL       GUI_Lock
;;;224      #if (GUI_WINSUPPORT)
;;;225        WM_ADDORG(x0,y0);
000014  480d              LDR      r0,|L2.76|
000016  6c40              LDR      r0,[r0,#0x44]  ; GUI_Context
000018  4404              ADD      r4,r4,r0
00001a  480c              LDR      r0,|L2.76|
00001c  6c80              LDR      r0,[r0,#0x48]  ; GUI_Context
00001e  4405              ADD      r5,r5,r0
;;;226        WM_ITERATE_START(NULL) {
000020  2000              MOVS     r0,#0
000022  f7fffffe          BL       WM__InitIVRSearch
000026  b160              CBZ      r0,|L2.66|
000028  bf00              NOP      
                  |L2.42|
;;;227      #endif
;;;228      GL_DrawArc( x0, y0, rx, ry, a0, a1);
00002a  463b              MOV      r3,r7
00002c  4632              MOV      r2,r6
00002e  4629              MOV      r1,r5
000030  4620              MOV      r0,r4
000032  e9cd8900          STRD     r8,r9,[sp,#0]
000036  f7fffffe          BL       GL_DrawArc
;;;229      #if (GUI_WINSUPPORT)
;;;230        } WM_ITERATE_END();
00003a  f7fffffe          BL       WM__GetNextIVR
00003e  2800              CMP      r0,#0
000040  d1f3              BNE      |L2.42|
                  |L2.66|
;;;231      #endif
;;;232      GUI_UNLOCK();
000042  f7fffffe          BL       GUI_Unlock
;;;233    }
000046  e8bd87fc          POP      {r2-r10,pc}
;;;234    
                          ENDP

00004a  0000              DCW      0x0000
                  |L2.76|
                          DCD      GUI_Context

                          AREA ||i._CalcInterSectLin||, CODE, READONLY, ALIGN=1

                  _CalcInterSectLin PROC
;;;66     */
;;;67     static float _CalcInterSectLin(float y, float y0, float y1, float x0, float x1) {
000000  e92d5ff0          PUSH     {r4-r12,lr}
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461e              MOV      r6,r3
00000c  f8dd8028          LDR      r8,[sp,#0x28]
;;;68       if (y1==y0) {
000010  4621              MOV      r1,r4
000012  4628              MOV      r0,r5
000014  f7fffffe          BL       __aeabi_cfcmpeq
000018  d102              BNE      |L3.32|
;;;69     	  return y0;
00001a  4620              MOV      r0,r4
                  |L3.28|
;;;70     	} else {
;;;71         float Slope = (x1-x0)/(y1-y0);
;;;72        return (y-y0)*Slope+x0;
;;;73     	}
;;;74     }
00001c  e8bd9ff0          POP      {r4-r12,pc}
                  |L3.32|
000020  4621              MOV      r1,r4                 ;71
000022  4628              MOV      r0,r5                 ;71
000024  f7fffffe          BL       __aeabi_fsub
000028  4682              MOV      r10,r0                ;71
00002a  4631              MOV      r1,r6                 ;71
00002c  4640              MOV      r0,r8                 ;71
00002e  f7fffffe          BL       __aeabi_fsub
000032  4683              MOV      r11,r0                ;71
000034  4651              MOV      r1,r10                ;71
000036  f7fffffe          BL       __aeabi_fdiv
00003a  4681              MOV      r9,r0                 ;71
00003c  4621              MOV      r1,r4                 ;72
00003e  4638              MOV      r0,r7                 ;72
000040  f7fffffe          BL       __aeabi_fsub
000044  4683              MOV      r11,r0                ;72
000046  4649              MOV      r1,r9                 ;72
000048  f7fffffe          BL       __aeabi_fmul
00004c  4682              MOV      r10,r0                ;72
00004e  4631              MOV      r1,r6                 ;72
000050  f7fffffe          BL       __aeabi_fadd
000054  e7e2              B        |L3.28|
;;;75     
                          ENDP


                          AREA ||i._CalcX||, CODE, READONLY, ALIGN=1

                  _CalcX PROC
;;;45     */
;;;46     static void _CalcX(int*px, int y, U32 r2) {
000000  b5f0              PUSH     {r4-r7,lr}
000002  460b              MOV      r3,r1
;;;47       int x =*px;
000004  6801              LDR      r1,[r0,#0]
;;;48       U32 y2 = (U32)y*(U32)y;
000006  fb03f403          MUL      r4,r3,r3
;;;49       U32 r2y2 = r2-y2;
00000a  1b16              SUBS     r6,r2,r4
;;;50       U32 x2;
;;;51       if (y2>=r2) {
00000c  4294              CMP      r4,r2
00000e  d302              BCC      |L4.22|
;;;52         *px=0;
000010  2700              MOVS     r7,#0
000012  6007              STR      r7,[r0,#0]
                  |L4.20|
;;;53     		return;
;;;54     	}
;;;55       /* x2 = r2-y2 */
;;;56       do {
;;;57         x++;
;;;58         x2 =(U32)x*(U32)x;
;;;59     	} while (x2 < r2y2);
;;;60     	*px = x-1;
;;;61     }
000014  bdf0              POP      {r4-r7,pc}
                  |L4.22|
000016  bf00              NOP                            ;56
                  |L4.24|
000018  1c49              ADDS     r1,r1,#1              ;57
00001a  fb01f501          MUL      r5,r1,r1              ;58
00001e  42b5              CMP      r5,r6                 ;59
000020  d3fa              BCC      |L4.24|
000022  1e4f              SUBS     r7,r1,#1              ;60
000024  6007              STR      r7,[r0,#0]            ;60
000026  bf00              NOP      
000028  e7f4              B        |L4.20|
;;;62     
                          ENDP


                          AREA ||i._DrawArc||, CODE, READONLY, ALIGN=2

                  _DrawArc PROC
;;;79     */
;;;80     static void _DrawArc(int x0, int y0, int rx, int ry, int Angle0, int Angle1, int xMul, int yMul) {
000000  e92d4fff          PUSH     {r0-r11,lr}
000004  b09d              SUB      sp,sp,#0x74
000006  4606              MOV      r6,r0
000008  460c              MOV      r4,r1
00000a  4692              MOV      r10,r2
00000c  9f2d              LDR      r7,[sp,#0xb4]
;;;81       float afx[4];
;;;82       float afy[4];
;;;83     	float ri = rx-(GUI_Context.PenSize+1.5)/2;
00000e  49cc              LDR      r1,|L5.832|
000010  7e08              LDRB     r0,[r1,#0x18]  ; GUI_Context
000012  f7fffffe          BL       __aeabi_ui2d
000016  2200              MOVS     r2,#0
000018  4bca              LDR      r3,|L5.836|
00001a  e9cd0100          STRD     r0,r1,[sp,#0]
00001e  f7fffffe          BL       __aeabi_dadd
000022  2200              MOVS     r2,#0
000024  f04f4380          MOV      r3,#0x40000000
000028  e9cd0102          STRD     r0,r1,[sp,#8]
00002c  f7fffffe          BL       __aeabi_ddiv
000030  e9cd0106          STRD     r0,r1,[sp,#0x18]
000034  4650              MOV      r0,r10
000036  f7fffffe          BL       __aeabi_i2d
00003a  e9cd0104          STRD     r0,r1,[sp,#0x10]
00003e  e9dd2306          LDRD     r2,r3,[sp,#0x18]
000042  f7fffffe          BL       __aeabi_dsub
000046  e9cd0108          STRD     r0,r1,[sp,#0x20]
00004a  f7fffffe          BL       __aeabi_d2f
00004e  9013              STR      r0,[sp,#0x4c]
;;;84     	float ro = rx+(GUI_Context.PenSize+1.5)/2;
000050  49bb              LDR      r1,|L5.832|
000052  7e08              LDRB     r0,[r1,#0x18]  ; GUI_Context
000054  f7fffffe          BL       __aeabi_ui2d
000058  2200              MOVS     r2,#0
00005a  4bba              LDR      r3,|L5.836|
00005c  e9cd0100          STRD     r0,r1,[sp,#0]
000060  f7fffffe          BL       __aeabi_dadd
000064  2200              MOVS     r2,#0
000066  f04f4380          MOV      r3,#0x40000000
00006a  e9cd0102          STRD     r0,r1,[sp,#8]
00006e  f7fffffe          BL       __aeabi_ddiv
000072  e9cd0106          STRD     r0,r1,[sp,#0x18]
000076  4650              MOV      r0,r10
000078  f7fffffe          BL       __aeabi_i2d
00007c  e9cd0104          STRD     r0,r1,[sp,#0x10]
000080  e9dd2306          LDRD     r2,r3,[sp,#0x18]
000084  f7fffffe          BL       __aeabi_dadd
000088  e9cd0108          STRD     r0,r1,[sp,#0x20]
00008c  f7fffffe          BL       __aeabi_d2f
000090  9012              STR      r0,[sp,#0x48]
;;;85       float fAngle0 = Angle0*3.1415926/180;
000092  982a              LDR      r0,[sp,#0xa8]
000094  f7fffffe          BL       __aeabi_i2d
000098  4aab              LDR      r2,|L5.840|
00009a  4bac              LDR      r3,|L5.844|
00009c  e9cd0104          STRD     r0,r1,[sp,#0x10]
0000a0  f7fffffe          BL       __aeabi_dmul
0000a4  2200              MOVS     r2,#0
0000a6  4baa              LDR      r3,|L5.848|
0000a8  e9cd0106          STRD     r0,r1,[sp,#0x18]
0000ac  f7fffffe          BL       __aeabi_ddiv
0000b0  e9cd0108          STRD     r0,r1,[sp,#0x20]
0000b4  f7fffffe          BL       __aeabi_d2f
0000b8  9011              STR      r0,[sp,#0x44]
;;;86       float fAngle1 = Angle1*3.1415926/180;
0000ba  982b              LDR      r0,[sp,#0xac]
0000bc  f7fffffe          BL       __aeabi_i2d
0000c0  4aa1              LDR      r2,|L5.840|
0000c2  4ba2              LDR      r3,|L5.844|
0000c4  e9cd0104          STRD     r0,r1,[sp,#0x10]
0000c8  f7fffffe          BL       __aeabi_dmul
0000cc  2200              MOVS     r2,#0
0000ce  4ba0              LDR      r3,|L5.848|
0000d0  e9cd0106          STRD     r0,r1,[sp,#0x18]
0000d4  f7fffffe          BL       __aeabi_ddiv
0000d8  e9cd0108          STRD     r0,r1,[sp,#0x20]
0000dc  f7fffffe          BL       __aeabi_d2f
0000e0  9010              STR      r0,[sp,#0x40]
;;;87       float sin0 = sin(fAngle0); 
0000e2  9811              LDR      r0,[sp,#0x44]
0000e4  f7fffffe          BL       __aeabi_f2d
0000e8  e9cd0106          STRD     r0,r1,[sp,#0x18]
0000ec  f7fffffe          BL       ||sin||
0000f0  e9cd0108          STRD     r0,r1,[sp,#0x20]
0000f4  f7fffffe          BL       __aeabi_d2f
0000f8  900f              STR      r0,[sp,#0x3c]
;;;88       float sin1 = sin(fAngle1); 
0000fa  9810              LDR      r0,[sp,#0x40]
0000fc  f7fffffe          BL       __aeabi_f2d
000100  e9cd0106          STRD     r0,r1,[sp,#0x18]
000104  f7fffffe          BL       ||sin||
000108  e9cd0108          STRD     r0,r1,[sp,#0x20]
00010c  f7fffffe          BL       __aeabi_d2f
000110  900e              STR      r0,[sp,#0x38]
;;;89       float cos0 = cos(fAngle0); 
000112  9811              LDR      r0,[sp,#0x44]
000114  f7fffffe          BL       __aeabi_f2d
000118  e9cd0106          STRD     r0,r1,[sp,#0x18]
00011c  f7fffffe          BL       ||cos||
000120  e9cd0108          STRD     r0,r1,[sp,#0x20]
000124  f7fffffe          BL       __aeabi_d2f
000128  900d              STR      r0,[sp,#0x34]
;;;90       float cos1 = cos(fAngle1); 
00012a  9810              LDR      r0,[sp,#0x40]
00012c  f7fffffe          BL       __aeabi_f2d
000130  e9cd0106          STRD     r0,r1,[sp,#0x18]
000134  f7fffffe          BL       ||cos||
000138  e9cd0108          STRD     r0,r1,[sp,#0x20]
00013c  f7fffffe          BL       __aeabi_d2f
000140  900c              STR      r0,[sp,#0x30]
;;;91       U32   ri2 = ri*ri;
000142  9913              LDR      r1,[sp,#0x4c]
000144  4608              MOV      r0,r1
000146  f7fffffe          BL       __aeabi_fmul
00014a  4683              MOV      r11,r0
00014c  f7fffffe          BL       __aeabi_f2uiz
000150  900b              STR      r0,[sp,#0x2c]
;;;92       U32   ro2 = ro*ro;
000152  9912              LDR      r1,[sp,#0x48]
000154  4608              MOV      r0,r1
000156  f7fffffe          BL       __aeabi_fmul
00015a  4683              MOV      r11,r0
00015c  f7fffffe          BL       __aeabi_f2uiz
000160  900a              STR      r0,[sp,#0x28]
;;;93     	int y, yMax, yMin;
;;;94     	afy[0] = ri*sin0;
000162  990f              LDR      r1,[sp,#0x3c]
000164  9813              LDR      r0,[sp,#0x4c]
000166  f7fffffe          BL       __aeabi_fmul
00016a  9014              STR      r0,[sp,#0x50]
;;;95     	afy[1] = ro*sin0;
00016c  990f              LDR      r1,[sp,#0x3c]
00016e  9812              LDR      r0,[sp,#0x48]
000170  f7fffffe          BL       __aeabi_fmul
000174  9015              STR      r0,[sp,#0x54]
;;;96     	afy[2] = ri*sin1;
000176  990e              LDR      r1,[sp,#0x38]
000178  9813              LDR      r0,[sp,#0x4c]
00017a  f7fffffe          BL       __aeabi_fmul
00017e  9016              STR      r0,[sp,#0x58]
;;;97     	afy[3] = ro*sin1;
000180  990e              LDR      r1,[sp,#0x38]
000182  9812              LDR      r0,[sp,#0x48]
000184  f7fffffe          BL       __aeabi_fmul
000188  9017              STR      r0,[sp,#0x5c]
;;;98     	afx[0] = ri*cos0;
00018a  990d              LDR      r1,[sp,#0x34]
00018c  9813              LDR      r0,[sp,#0x4c]
00018e  f7fffffe          BL       __aeabi_fmul
000192  9018              STR      r0,[sp,#0x60]
;;;99     	afx[1] = ro*cos0;
000194  990d              LDR      r1,[sp,#0x34]
000196  9812              LDR      r0,[sp,#0x48]
000198  f7fffffe          BL       __aeabi_fmul
00019c  9019              STR      r0,[sp,#0x64]
;;;100    	afx[2] = ri*cos1;
00019e  990c              LDR      r1,[sp,#0x30]
0001a0  9813              LDR      r0,[sp,#0x4c]
0001a2  f7fffffe          BL       __aeabi_fmul
0001a6  901a              STR      r0,[sp,#0x68]
;;;101    	afx[3] = ro*cos1;
0001a8  990c              LDR      r1,[sp,#0x30]
0001aa  9812              LDR      r0,[sp,#0x48]
0001ac  f7fffffe          BL       __aeabi_fmul
0001b0  901b              STR      r0,[sp,#0x6c]
;;;102    	yMin = ceil(afy[0]);
0001b2  9814              LDR      r0,[sp,#0x50]
0001b4  f7fffffe          BL       __aeabi_f2d
0001b8  e9cd0106          STRD     r0,r1,[sp,#0x18]
0001bc  f7fffffe          BL       ceil
0001c0  e9cd0108          STRD     r0,r1,[sp,#0x20]
0001c4  f7fffffe          BL       __aeabi_d2iz
0001c8  4681              MOV      r9,r0
;;;103      yMax = floor(afy[3]);
0001ca  9817              LDR      r0,[sp,#0x5c]
0001cc  f7fffffe          BL       __aeabi_f2d
0001d0  e9cd0106          STRD     r0,r1,[sp,#0x18]
0001d4  f7fffffe          BL       floor
0001d8  e9cd0108          STRD     r0,r1,[sp,#0x20]
0001dc  f7fffffe          BL       __aeabi_d2iz
0001e0  4680              MOV      r8,r0
;;;104      /* Use Clipping rect to reduce calculation (if possible) */
;;;105      if (GUI_Context.pClipRect_HL) {
0001e2  4857              LDR      r0,|L5.832|
0001e4  6940              LDR      r0,[r0,#0x14]  ; GUI_Context
0001e6  b3b8              CBZ      r0,|L5.600|
;;;106        if (yMul ==1) {
0001e8  2f01              CMP      r7,#1
0001ea  d119              BNE      |L5.544|
;;;107          if (yMax > (GUI_Context.pClipRect_HL->y1 -y0))
0001ec  4854              LDR      r0,|L5.832|
0001ee  6940              LDR      r0,[r0,#0x14]  ; GUI_Context
0001f0  f9b00006          LDRSH    r0,[r0,#6]
0001f4  1b00              SUBS     r0,r0,r4
0001f6  4540              CMP      r0,r8
0001f8  da05              BGE      |L5.518|
;;;108            yMax = (GUI_Context.pClipRect_HL->y1 -y0);
0001fa  4851              LDR      r0,|L5.832|
0001fc  6940              LDR      r0,[r0,#0x14]  ; GUI_Context
0001fe  f9b00006          LDRSH    r0,[r0,#6]
000202  eba00804          SUB      r8,r0,r4
                  |L5.518|
;;;109          if (yMin < (GUI_Context.pClipRect_HL->y0 -y0))
000206  484e              LDR      r0,|L5.832|
000208  6940              LDR      r0,[r0,#0x14]  ; GUI_Context
00020a  f9b00002          LDRSH    r0,[r0,#2]
00020e  1b00              SUBS     r0,r0,r4
000210  4548              CMP      r0,r9
000212  dd05              BLE      |L5.544|
;;;110            yMin = (GUI_Context.pClipRect_HL->y0 -y0);
000214  484a              LDR      r0,|L5.832|
000216  6940              LDR      r0,[r0,#0x14]  ; GUI_Context
000218  f9b00002          LDRSH    r0,[r0,#2]
00021c  eba00904          SUB      r9,r0,r4
                  |L5.544|
;;;111        }
;;;112        if (yMul == -1) {
000220  1c78              ADDS     r0,r7,#1
000222  d119              BNE      |L5.600|
;;;113          if (yMin > (GUI_Context.pClipRect_HL->y1 -y0))
000224  4846              LDR      r0,|L5.832|
000226  6940              LDR      r0,[r0,#0x14]  ; GUI_Context
000228  f9b00006          LDRSH    r0,[r0,#6]
00022c  1b00              SUBS     r0,r0,r4
00022e  4548              CMP      r0,r9
000230  da05              BGE      |L5.574|
;;;114            yMin = (GUI_Context.pClipRect_HL->y1 -y0);
000232  4843              LDR      r0,|L5.832|
000234  6940              LDR      r0,[r0,#0x14]  ; GUI_Context
000236  f9b00006          LDRSH    r0,[r0,#6]
00023a  eba00904          SUB      r9,r0,r4
                  |L5.574|
;;;115          if (yMax < (GUI_Context.pClipRect_HL->y0 -y0))
00023e  4840              LDR      r0,|L5.832|
000240  6940              LDR      r0,[r0,#0x14]  ; GUI_Context
000242  f9b00002          LDRSH    r0,[r0,#2]
000246  1b00              SUBS     r0,r0,r4
000248  4540              CMP      r0,r8
00024a  dd05              BLE      |L5.600|
;;;116            yMax = (GUI_Context.pClipRect_HL->y0 -y0);
00024c  483c              LDR      r0,|L5.832|
00024e  6940              LDR      r0,[r0,#0x14]  ; GUI_Context
000250  f9b00002          LDRSH    r0,[r0,#2]
000254  eba00804          SUB      r8,r0,r4
                  |L5.600|
;;;117        }
;;;118      }
;;;119      /* Start drawing lines ... */
;;;120      {
;;;121      int xMinDisp, xMaxDisp, xMin=0,xMax=0;
000258  2000              MOVS     r0,#0
00025a  9008              STR      r0,[sp,#0x20]
00025c  9007              STR      r0,[sp,#0x1c]
;;;122        for (y=yMax; y>=yMin; y--) {
00025e  4645              MOV      r5,r8
000260  e066              B        |L5.816|
                  |L5.610|
;;;123          _CalcX(&xMin, y, ri2);
000262  4629              MOV      r1,r5
000264  a808              ADD      r0,sp,#0x20
000266  9a0b              LDR      r2,[sp,#0x2c]
000268  f7fffffe          BL       _CalcX
;;;124          _CalcX(&xMax, y, ro2);
00026c  4629              MOV      r1,r5
00026e  a807              ADD      r0,sp,#0x1c
000270  9a0a              LDR      r2,[sp,#0x28]
000272  f7fffffe          BL       _CalcX
;;;125          if ((float)y< afy[1]) {
000276  4628              MOV      r0,r5
000278  f7fffffe          BL       __aeabi_i2f
00027c  9006              STR      r0,[sp,#0x18]
00027e  9915              LDR      r1,[sp,#0x54]
000280  f7fffffe          BL       __aeabi_cfcmple
000284  d210              BCS      |L5.680|
;;;126            xMaxDisp = _CalcInterSectLin(y,afy[0], afy[1], afx[0], afx[1]);
000286  4628              MOV      r0,r5
000288  f7fffffe          BL       __aeabi_i2f
00028c  9005              STR      r0,[sp,#0x14]
00028e  9819              LDR      r0,[sp,#0x64]
000290  9000              STR      r0,[sp,#0]
000292  9b18              LDR      r3,[sp,#0x60]
000294  e9dd1214          LDRD     r1,r2,[sp,#0x50]
000298  9805              LDR      r0,[sp,#0x14]
00029a  f7fffffe          BL       _CalcInterSectLin
00029e  9006              STR      r0,[sp,#0x18]
0002a0  f7fffffe          BL       __aeabi_f2iz
0002a4  9009              STR      r0,[sp,#0x24]
0002a6  e001              B        |L5.684|
                  |L5.680|
;;;127    			} else {
;;;128            xMaxDisp = xMax;			
0002a8  9807              LDR      r0,[sp,#0x1c]
0002aa  9009              STR      r0,[sp,#0x24]
                  |L5.684|
;;;129    			}
;;;130          if ((float)y > afy[2]) {
0002ac  4628              MOV      r0,r5
0002ae  f7fffffe          BL       __aeabi_i2f
0002b2  9006              STR      r0,[sp,#0x18]
0002b4  9916              LDR      r1,[sp,#0x58]
0002b6  f7fffffe          BL       __aeabi_cfrcmple
0002ba  d210              BCS      |L5.734|
;;;131            xMinDisp = _CalcInterSectLin(y,afy[2], afy[3], afx[2], afx[3]);
0002bc  4628              MOV      r0,r5
0002be  f7fffffe          BL       __aeabi_i2f
0002c2  9005              STR      r0,[sp,#0x14]
0002c4  981b              LDR      r0,[sp,#0x6c]
0002c6  9000              STR      r0,[sp,#0]
0002c8  9b1a              LDR      r3,[sp,#0x68]
0002ca  e9dd1216          LDRD     r1,r2,[sp,#0x58]
0002ce  9805              LDR      r0,[sp,#0x14]
0002d0  f7fffffe          BL       _CalcInterSectLin
0002d4  9006              STR      r0,[sp,#0x18]
0002d6  f7fffffe          BL       __aeabi_f2iz
0002da  4683              MOV      r11,r0
0002dc  e001              B        |L5.738|
                  |L5.734|
;;;132    			} else {
;;;133            xMinDisp = xMin;			
0002de  f8ddb020          LDR      r11,[sp,#0x20]
                  |L5.738|
;;;134    			}
;;;135          if (xMul>0)
0002e2  982c              LDR      r0,[sp,#0xb0]
0002e4  2800              CMP      r0,#0
0002e6  dd0f              BLE      |L5.776|
;;;136            LCD_HL_DrawHLine(xMinDisp+x0, yMul*y+y0, xMaxDisp+x0);
0002e8  f8ddc024          LDR      r12,[sp,#0x24]
0002ec  eb0c0206          ADD      r2,r12,r6
0002f0  fb074105          MLA      r1,r7,r5,r4
0002f4  eb0b0006          ADD      r0,r11,r6
0002f8  f8dfc044          LDR      r12,|L5.832|
0002fc  f8dcc05c          LDR      r12,[r12,#0x5c]  ; GUI_Context
000300  f8dc3000          LDR      r3,[r12,#0]
000304  4798              BLX      r3
000306  e012              B        |L5.814|
                  |L5.776|
;;;137          else
;;;138            LCD_HL_DrawHLine(-xMaxDisp+x0, yMul*y+y0, -xMinDisp+x0);
000308  f1cb0c00          RSB      r12,r11,#0
00030c  eb0c0206          ADD      r2,r12,r6
000310  fb074105          MLA      r1,r7,r5,r4
000314  f8ddc024          LDR      r12,[sp,#0x24]
000318  f1cc0c00          RSB      r12,r12,#0
00031c  eb0c0006          ADD      r0,r12,r6
000320  f8dfc01c          LDR      r12,|L5.832|
000324  f8dcc05c          LDR      r12,[r12,#0x5c]  ; GUI_Context
000328  f8dc3000          LDR      r3,[r12,#0]
00032c  4798              BLX      r3
                  |L5.814|
00032e  1e6d              SUBS     r5,r5,#1              ;122
                  |L5.816|
000330  454d              CMP      r5,r9                 ;122
000332  da96              BGE      |L5.610|
;;;139        }
;;;140    	}
;;;141    #if 0  /* Test code */
;;;142    {
;;;143      int i;
;;;144      GUI_SetColor( GUI_WHITE ); 
;;;145    	for (i=0; i<4; i++)
;;;146        LCD_HL_DrawPixel(afx[i]+x0, afy[i]+y0);
;;;147    }
;;;148    #endif
;;;149      GUI_USE_PARA(ry);
000334  9820              LDR      r0,[sp,#0x80]
000336  9020              STR      r0,[sp,#0x80]
;;;150    }
000338  b021              ADD      sp,sp,#0x84
00033a  e8bd8ff0          POP      {r4-r11,pc}
;;;151    
                          ENDP

00033e  0000              DCW      0x0000
                  |L5.832|
                          DCD      GUI_Context
                  |L5.836|
                          DCD      0x3ff80000
                  |L5.840|
                          DCD      0x4d12d84a
                  |L5.844|
                          DCD      0x400921fb
                  |L5.848|
                          DCD      0x40668000
