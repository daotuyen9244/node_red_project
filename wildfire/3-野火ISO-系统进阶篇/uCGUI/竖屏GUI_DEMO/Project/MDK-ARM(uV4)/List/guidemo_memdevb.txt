; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\guidemo_memdevb.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\guidemo_memdevb.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\uCGUIDemo\GUIDEMO_MemDevB.c]
                          THUMB

                          AREA ||i.GUIDEMO_ShowMemoryDevice||, CODE, READONLY, ALIGN=2

                  GUIDEMO_ShowMemoryDevice PROC
;;;98     
;;;99     void GUIDEMO_ShowMemoryDevice(void) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  b08a              SUB      sp,sp,#0x28
;;;100      int i;
;;;101      U32 tDiff, t0;
;;;102      tDrawContext DrawContext;
;;;103      GUI_RECT rView, rPrev, rTemp;
;;;104      GUIDEMO_ShowIntro("Memory devices",
000006  a144              ADR      r1,|L1.280|
000008  a04f              ADR      r0,|L1.328|
00000a  f7fffffe          BL       GUIDEMO_ShowIntro
;;;105                        "\nFor flicker free animation"
;;;106                        "\nand other purposes");
;;;107      GUIDEMO_NotifyStartNext();
00000e  f7fffffe          BL       GUIDEMO_NotifyStartNext
;;;108      GUI_SetBkColor(GUI_GREEN); 
000012  f44f407f          MOV      r0,#0xff00
000016  f7fffffe          BL       GUI_SetBkColor
;;;109      GUI_Clear();
00001a  f7fffffe          BL       GUI_Clear
;;;110      /* Use banding memory device  */
;;;111      GUI_GetClientRect(&rView);  
00001e  a805              ADD      r0,sp,#0x14
000020  f7fffffe          BL       GUI_GetClientRect
;;;112      DrawContext.BkColor = GUI_ColorIsAvailable(GUI_RED) ? GUI_RED : GUI_BLACK;
000024  20ff              MOVS     r0,#0xff
000026  f7fffffe          BL       GUI_ColorIsAvailable
00002a  b108              CBZ      r0,|L1.48|
00002c  20ff              MOVS     r0,#0xff
00002e  e000              B        |L1.50|
                  |L1.48|
000030  2000              MOVS     r0,#0
                  |L1.50|
000032  9009              STR      r0,[sp,#0x24]
;;;113      GUI_SetBkColor(DrawContext.BkColor);
000034  9809              LDR      r0,[sp,#0x24]
000036  f7fffffe          BL       GUI_SetBkColor
;;;114      GUI_Clear();
00003a  f7fffffe          BL       GUI_Clear
;;;115      t0 = GUI_GetTime();
00003e  f7fffffe          BL       GUI_GetTime
000042  4606              MOV      r6,r0
;;;116      for (i = 0; tDiff = GUI_GetTime() - t0, (tDiff < 8000) && !GUIDEMO_CheckCancel(); i++) {
000044  2400              MOVS     r4,#0
000046  e03a              B        |L1.190|
                  |L1.72|
;;;117        U32 t = GUI_GetTime();
000048  f7fffffe          BL       GUI_GetTime
00004c  4607              MOV      r7,r0
;;;118        DrawContext.Angle = 90 + tDiff / 50;
00004e  2032              MOVS     r0,#0x32
000050  fbb5f0f0          UDIV     r0,r5,r0
000054  305a              ADDS     r0,r0,#0x5a
000056  9007              STR      r0,[sp,#0x1c]
;;;119        /* Calculate required size */
;;;120        {
;;;121          GUI_HMEM hMem = GUI_MEASDEV_Create();
000058  f7fffffe          BL       GUI_MEASDEV_Create
00005c  4680              MOV      r8,r0
;;;122          GUI_MEASDEV_Select(hMem);
00005e  4640              MOV      r0,r8
000060  f7fffffe          BL       GUI_MEASDEV_Select
;;;123          DrawContext.DoClear = 0;
000064  2000              MOVS     r0,#0
000066  9008              STR      r0,[sp,#0x20]
;;;124          _Draw(&DrawContext);
000068  a807              ADD      r0,sp,#0x1c
00006a  f7fffffe          BL       _Draw
;;;125          GUI_MEASDEV_GetRect(hMem, &rView);
00006e  a905              ADD      r1,sp,#0x14
000070  4640              MOV      r0,r8
000072  f7fffffe          BL       GUI_MEASDEV_GetRect
;;;126          GUI_MEASDEV_Delete(hMem);
000076  4640              MOV      r0,r8
000078  f7fffffe          BL       GUI_MEASDEV_Delete
;;;127          rTemp = rView;
00007c  e9dd0105          LDRD     r0,r1,[sp,#0x14]
000080  e9cd0101          STRD     r0,r1,[sp,#4]
;;;128          if (i)
000084  b124              CBZ      r4,|L1.144|
;;;129            GUI_MergeRect(&rView, &rView, &rPrev);
000086  aa03              ADD      r2,sp,#0xc
000088  a905              ADD      r1,sp,#0x14
00008a  a805              ADD      r0,sp,#0x14
00008c  f7fffffe          BL       GUI_MergeRect
                  |L1.144|
;;;130          rPrev = rTemp;
000090  e9dd0101          LDRD     r0,r1,[sp,#4]
000094  e9cd0103          STRD     r0,r1,[sp,#0xc]
;;;131        }
;;;132        DrawContext.DoClear = 1;
000098  2001              MOVS     r0,#1
00009a  9008              STR      r0,[sp,#0x20]
;;;133        GUI_MEMDEV_Draw(&rView, _Draw, &DrawContext, 0, GUI_MEMDEV_NOTRANS);
00009c  2300              MOVS     r3,#0
00009e  aa07              ADD      r2,sp,#0x1c
0000a0  492d              LDR      r1,|L1.344|
0000a2  9000              STR      r0,[sp,#0]
0000a4  a805              ADD      r0,sp,#0x14
0000a6  f7fffffe          BL       GUI_MEMDEV_Draw
;;;134        t = (GUI_GetTime() - t);
0000aa  f7fffffe          BL       GUI_GetTime
0000ae  1bc7              SUBS     r7,r0,r7
;;;135        if (t < 20) {
0000b0  2f14              CMP      r7,#0x14
0000b2  d203              BCS      |L1.188|
;;;136          GUI_Delay(20 -t);
0000b4  f1c70014          RSB      r0,r7,#0x14
0000b8  f7fffffe          BL       GUI_Delay
                  |L1.188|
0000bc  1c64              ADDS     r4,r4,#1              ;116
                  |L1.190|
0000be  f7fffffe          BL       GUI_GetTime
0000c2  1b85              SUBS     r5,r0,r6              ;116
0000c4  f5b55ffa          CMP      r5,#0x1f40            ;116
0000c8  d204              BCS      |L1.212|
0000ca  f7fffffe          BL       GUIDEMO_CheckCancel
0000ce  b908              CBNZ     r0,|L1.212|
0000d0  2001              MOVS     r0,#1                 ;116
0000d2  e000              B        |L1.214|
                  |L1.212|
0000d4  2000              MOVS     r0,#0                 ;116
                  |L1.214|
0000d6  2800              CMP      r0,#0                 ;116
0000d8  d1b6              BNE      |L1.72|
;;;137        }
;;;138      }
;;;139      GUI_SetFont(&GUI_FontComic24B_ASCII);
0000da  4820              LDR      r0,|L1.348|
0000dc  f7fffffe          BL       GUI_SetFont
;;;140      GUI_SetColor(GUI_WHITE);
0000e0  f06f407f          MVN      r0,#0xff000000
0000e4  f7fffffe          BL       GUI_SetColor
;;;141      GUI_SetBkColor(DrawContext.BkColor);
0000e8  9809              LDR      r0,[sp,#0x24]
0000ea  f7fffffe          BL       GUI_SetBkColor
;;;142      GUI_DispStringAt("ms/Update: ", 10 , 200);
0000ee  22c8              MOVS     r2,#0xc8
0000f0  210a              MOVS     r1,#0xa
0000f2  a01b              ADR      r0,|L1.352|
0000f4  f7fffffe          BL       GUI_DispStringAt
;;;143      if (i) {
0000f8  b124              CBZ      r4,|L1.260|
;;;144        GUI_DispDecMin(tDiff / i);
0000fa  fbb5f7f4          UDIV     r7,r5,r4
0000fe  4638              MOV      r0,r7
000100  f7fffffe          BL       GUI_DispDecMin
                  |L1.260|
;;;145      }
;;;146      GUIDEMO_Delay(1000);
000104  f44f707a          MOV      r0,#0x3e8
000108  f7fffffe          BL       GUIDEMO_Delay
;;;147      GUI_Clear();
00010c  f7fffffe          BL       GUI_Clear
;;;148    }
000110  b00a              ADD      sp,sp,#0x28
000112  e8bd81f0          POP      {r4-r8,pc}
;;;149    
                          ENDP

000116  0000              DCW      0x0000
                  |L1.280|
000118  0a466f72          DCB      "\nFor flicker free animation\nand other purposes",0
00011c  20666c69
000120  636b6572
000124  20667265
000128  6520616e
00012c  696d6174
000130  696f6e0a
000134  616e6420
000138  6f746865
00013c  72207075
000140  72706f73
000144  657300  
000147  00                DCB      0
                  |L1.328|
000148  4d656d6f          DCB      "Memory devices",0
00014c  72792064
000150  65766963
000154  657300  
000157  00                DCB      0
                  |L1.344|
                          DCD      _Draw
                  |L1.348|
                          DCD      GUI_FontComic24B_ASCII
                  |L1.352|
000160  6d732f55          DCB      "ms/Update: ",0
000164  70646174
000168  653a2000

                          AREA ||i._Draw||, CODE, READONLY, ALIGN=2

                  _Draw PROC
;;;62     /* The user defined callback routine */
;;;63     static void _Draw(void * p) {
000000  e92d5fff          PUSH     {r0-r12,lr}
000004  4606              MOV      r6,r0
;;;64       int XSize = LCD_GetXSize();
000006  f7fffffe          BL       LCD_GetXSize
00000a  4604              MOV      r4,r0
;;;65       int YSize = LCD_GetYSize();
00000c  f7fffffe          BL       LCD_GetYSize
000010  4605              MOV      r5,r0
;;;66       tDrawContext * pContext = (tDrawContext *)p;
000012  46b1              MOV      r9,r6
;;;67       int i = pContext->Angle;
000014  f8d9a000          LDR      r10,[r9,#0]
;;;68       static int iLast = -1;
;;;69       static GUI_POINT aPoint[7];
;;;70       if (pContext->DoClear) {
000018  f8d90004          LDR      r0,[r9,#4]
00001c  b128              CBZ      r0,|L2.42|
;;;71         GUI_SetBkColor(pContext->BkColor);
00001e  f8d90008          LDR      r0,[r9,#8]
000022  f7fffffe          BL       GUI_SetBkColor
;;;72         GUI_Clear();
000026  f7fffffe          BL       GUI_Clear
                  |L2.42|
;;;73       }
;;;74       GUI_SetFont(&GUI_FontD24x32);
00002a  482e              LDR      r0,|L2.228|
00002c  f7fffffe          BL       GUI_SetFont
;;;75       GUI_SetTextMode(GUI_TM_TRANS);
000030  2002              MOVS     r0,#2
000032  f7fffffe          BL       GUI_SetTextMode
;;;76       GUI_SetColor(GUI_GRAY);
000036  482c              LDR      r0,|L2.232|
000038  f7fffffe          BL       GUI_SetColor
;;;77       GUI_SetFont(&GUI_FontComic18B_ASCII);
00003c  482b              LDR      r0,|L2.236|
00003e  f7fffffe          BL       GUI_SetFont
;;;78       GUI_DispStringHCenterAt("Below arrow", XSize / 2, YSize / 2 - 20);
000042  46a0              MOV      r8,r4
000044  462f              MOV      r7,r5
000046  eb0570d7          ADD      r0,r5,r7,LSR #31
00004a  1040              ASRS     r0,r0,#1
00004c  f1a00214          SUB      r2,r0,#0x14
000050  eb0470d8          ADD      r0,r4,r8,LSR #31
000054  1041              ASRS     r1,r0,#1
000056  a026              ADR      r0,|L2.240|
000058  f7fffffe          BL       GUI_DispStringHCenterAt
;;;79       if (iLast != i) {
00005c  4827              LDR      r0,|L2.252|
00005e  6800              LDR      r0,[r0,#0]  ; iLast
000060  4550              CMP      r0,r10
000062  d019              BEQ      |L2.152|
;;;80         float Angle = 0.02 * (float)i;
000064  4650              MOV      r0,r10
000066  f7fffffe          BL       __aeabi_i2f
00006a  9001              STR      r0,[sp,#4]
00006c  f7fffffe          BL       __aeabi_f2d
000070  4a23              LDR      r2,|L2.256|
000072  4b24              LDR      r3,|L2.260|
000074  e9cd0102          STRD     r0,r1,[sp,#8]
000078  f7fffffe          BL       __aeabi_dmul
00007c  4607              MOV      r7,r0
00007e  f7fffffe          BL       __aeabi_d2f
000082  4683              MOV      r11,r0
;;;81         iLast = i;
000084  481d              LDR      r0,|L2.252|
000086  f8c0a000          STR      r10,[r0,#0]  ; iLast
;;;82         GUI_RotatePolygon(aPoint, _aArrow, 7, Angle);
00008a  465b              MOV      r3,r11
00008c  2207              MOVS     r2,#7
00008e  491e              LDR      r1,|L2.264|
000090  481e              LDR      r0,|L2.268|
000092  f7fffffe          BL       GUI_RotatePolygon
;;;83       }
000096  bf00              NOP      
                  |L2.152|
;;;84       GUI_SetColor(GUI_WHITE);
000098  f06f407f          MVN      r0,#0xff000000
00009c  f7fffffe          BL       GUI_SetColor
;;;85       GUI_FillPolygon(&aPoint[0], 7, XSize / 2, YSize / 2 + 30);
0000a0  46a0              MOV      r8,r4
0000a2  462f              MOV      r7,r5
0000a4  eb0570d7          ADD      r0,r5,r7,LSR #31
0000a8  1040              ASRS     r0,r0,#1
0000aa  f100031e          ADD      r3,r0,#0x1e
0000ae  eb0470d8          ADD      r0,r4,r8,LSR #31
0000b2  1042              ASRS     r2,r0,#1
0000b4  2107              MOVS     r1,#7
0000b6  4815              LDR      r0,|L2.268|
0000b8  f7fffffe          BL       GUI_FillPolygon
;;;86       GUI_SetTextMode(GUI_TM_TRANS);
0000bc  2002              MOVS     r0,#2
0000be  f7fffffe          BL       GUI_SetTextMode
;;;87       GUI_SetColor(GUI_DARKGRAY);
0000c2  4813              LDR      r0,|L2.272|
0000c4  f7fffffe          BL       GUI_SetColor
;;;88       GUI_SetFont(&GUI_FontComic18B_ASCII);
0000c8  4808              LDR      r0,|L2.236|
0000ca  f7fffffe          BL       GUI_SetFont
;;;89       GUI_DispStringHCenterAt("Above arrow", XSize / 2, YSize / 2);
0000ce  eb0570d7          ADD      r0,r5,r7,LSR #31
0000d2  1042              ASRS     r2,r0,#1
0000d4  eb0470d8          ADD      r0,r4,r8,LSR #31
0000d8  1041              ASRS     r1,r0,#1
0000da  a00e              ADR      r0,|L2.276|
0000dc  f7fffffe          BL       GUI_DispStringHCenterAt
;;;90     }
0000e0  e8bd9fff          POP      {r0-r12,pc}
;;;91     
                          ENDP

                  |L2.228|
                          DCD      GUI_FontD24x32
                  |L2.232|
                          DCD      0x00808080
                  |L2.236|
                          DCD      GUI_FontComic18B_ASCII
                  |L2.240|
0000f0  42656c6f          DCB      "Below arrow",0
0000f4  77206172
0000f8  726f7700
                  |L2.252|
                          DCD      iLast
                  |L2.256|
                          DCD      0x47ae147b
                  |L2.260|
                          DCD      0x3f947ae1
                  |L2.264|
                          DCD      _aArrow
                  |L2.268|
                          DCD      aPoint
                  |L2.272|
                          DCD      0x00404040
                  |L2.276|
000114  41626f76          DCB      "Above arrow",0
000118  65206172
00011c  726f7700

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  aPoint
                          %        28

                          AREA ||.constdata||, DATA, READONLY, ALIGN=1

                  _aArrow
000000  00000055          DCW      0x0000,0x0055
000004  ffd80032          DCW      0xffd8,0x0032
000008  fff6003c          DCW      0xfff6,0x003c
00000c  fff60000          DCW      0xfff6,0x0000
000010  000a0000          DCW      0x000a,0x0000
000014  000a003c          DCW      0x000a,0x003c
000018  00280032          DCW      0x0028,0x0032

                          AREA ||.data||, DATA, ALIGN=2

                  iLast
                          DCD      0xffffffff
