; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\gui_adddecshift.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\gui_adddecshift.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Core\GUI_AddDecShift.c]
                          THUMB

                          AREA ||i.GUI_AddDecShift||, CODE, READONLY, ALIGN=2

                  GUI_AddDecShift PROC
;;;103    */
;;;104    void GUI_AddDecShift(I32 v, U8 Len, U8 Shift, char**ps) {
000000  e92d41ff          PUSH     {r0-r8,lr}
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
000008  461c              MOV      r4,r3
;;;105      char c;
;;;106      long d;
;;;107      #ifndef _CM16C
;;;108        Len -= _Check_NegLong(&v, ps); /* TASKING: Tool internal error S003: asertion failed - please report */
00000a  4621              MOV      r1,r4
00000c  4668              MOV      r0,sp
00000e  f7fffffe          BL       _Check_NegLong
000012  1a28              SUBS     r0,r5,r0
000014  b2c5              UXTB     r5,r0
;;;109      #else
;;;110        if (v < 0) {
;;;111          *(*ps)++ = '-';
;;;112          v = -v;
;;;113        }
;;;114      #endif
;;;115      if (Shift) {
000016  b10e              CBZ      r6,|L1.28|
;;;116        Len--;
000018  1e68              SUBS     r0,r5,#1
00001a  b2c5              UXTB     r5,r0
                  |L1.28|
;;;117      }
;;;118    #if GUI_DEBUG_LEVEL >1
;;;119      if (Len > 9) {
;;;120        Len = 9;
;;;121        GUI_DEBUG_ERROROUT("Can not display more than 9 dec. digits");
;;;122      }
;;;123    #endif
;;;124      if ((U32)v >= GUI_Pow10[Len])
00001c  4817              LDR      r0,|L1.124|
00001e  f8500025          LDR      r0,[r0,r5,LSL #2]
000022  9900              LDR      r1,[sp,#0]
000024  4288              CMP      r0,r1
000026  d804              BHI      |L1.50|
;;;125    	v = GUI_Pow10[Len] - 1;
000028  4814              LDR      r0,|L1.124|
00002a  f8500025          LDR      r0,[r0,r5,LSL #2]
00002e  1e40              SUBS     r0,r0,#1
000030  9000              STR      r0,[sp,#0]
                  |L1.50|
;;;126      while (Len) {
000032  e01c              B        |L1.110|
                  |L1.52|
;;;127        if (Len-- == Shift)
000034  4628              MOV      r0,r5
000036  1e69              SUBS     r1,r5,#1
000038  b2cd              UXTB     r5,r1
00003a  42b0              CMP      r0,r6
00003c  d105              BNE      |L1.74|
;;;128          *(*ps)++ = GUI_DecChar;
00003e  4810              LDR      r0,|L1.128|
000040  7801              LDRB     r1,[r0,#0]  ; GUI_DecChar
000042  6822              LDR      r2,[r4,#0]
000044  1c50              ADDS     r0,r2,#1
000046  6020              STR      r0,[r4,#0]
000048  7011              STRB     r1,[r2,#0]
                  |L1.74|
;;;129        d = GUI_Pow10[Len];
00004a  480c              LDR      r0,|L1.124|
00004c  f8508025          LDR      r8,[r0,r5,LSL #2]
;;;130        c = (char) (v / d);
000050  9800              LDR      r0,[sp,#0]
000052  fb90f0f8          SDIV     r0,r0,r8
000056  b2c7              UXTB     r7,r0
;;;131        v -= c * d;
000058  9800              LDR      r0,[sp,#0]
00005a  fb070018          MLS      r0,r7,r8,r0
00005e  9000              STR      r0,[sp,#0]
;;;132        *(*ps)++ = c + '0';
000060  f1070030          ADD      r0,r7,#0x30
000064  b2c1              UXTB     r1,r0
000066  6822              LDR      r2,[r4,#0]
000068  1c50              ADDS     r0,r2,#1
00006a  6020              STR      r0,[r4,#0]
00006c  7011              STRB     r1,[r2,#0]
                  |L1.110|
00006e  2d00              CMP      r5,#0                 ;126
000070  d1e0              BNE      |L1.52|
;;;133      }
;;;134      **ps = 0;
000072  2000              MOVS     r0,#0
000074  6821              LDR      r1,[r4,#0]
000076  7008              STRB     r0,[r1,#0]
;;;135    }
000078  e8bd81ff          POP      {r0-r8,pc}
;;;136    
                          ENDP

                  |L1.124|
                          DCD      GUI_Pow10
                  |L1.128|
                          DCD      GUI_DecChar

                          AREA ||i.GUI_AddSign||, CODE, READONLY, ALIGN=1

                  GUI_AddSign PROC
;;;80     */
;;;81     long GUI_AddSign(long v, char**ps) {
000000  b510              PUSH     {r4,lr}
;;;82       char c;
;;;83       if (v < 0) {
000002  2800              CMP      r0,#0
000004  da02              BGE      |L2.12|
;;;84         c = '-';
000006  222d              MOVS     r2,#0x2d
;;;85         v = -v;
000008  4240              RSBS     r0,r0,#0
00000a  e000              B        |L2.14|
                  |L2.12|
;;;86       } else {
;;;87         c = '+';
00000c  222b              MOVS     r2,#0x2b
                  |L2.14|
;;;88       }
;;;89       *(*ps)++ = c;
00000e  680c              LDR      r4,[r1,#0]
000010  1c63              ADDS     r3,r4,#1
000012  600b              STR      r3,[r1,#0]
000014  7022              STRB     r2,[r4,#0]
;;;90       **ps     = '\0';
000016  2300              MOVS     r3,#0
000018  680c              LDR      r4,[r1,#0]
00001a  7023              STRB     r3,[r4,#0]
;;;91       return v;
;;;92     }
00001c  bd10              POP      {r4,pc}
;;;93     
                          ENDP


                          AREA ||i.GUI_Long2Len||, CODE, READONLY, ALIGN=2

                  GUI_Long2Len PROC
;;;64     */
;;;65     int GUI_Long2Len(I32 vSign) {
000000  4601              MOV      r1,r0
;;;66       int Len = 1;
000002  2001              MOVS     r0,#1
;;;67       I32 v = (vSign > 0) ? vSign : -vSign;
000004  2900              CMP      r1,#0
000006  dd01              BLE      |L3.12|
000008  460b              MOV      r3,r1
00000a  e000              B        |L3.14|
                  |L3.12|
00000c  424b              RSBS     r3,r1,#0
                  |L3.14|
00000e  461a              MOV      r2,r3
;;;68       while (( ((U32)v) >= GUI_Pow10[Len]) && (Len < 9)) {
000010  e000              B        |L3.20|
                  |L3.18|
;;;69         Len++;
000012  1c40              ADDS     r0,r0,#1
                  |L3.20|
000014  4b05              LDR      r3,|L3.44|
000016  f8533020          LDR      r3,[r3,r0,LSL #2]     ;68
00001a  4293              CMP      r3,r2                 ;68
00001c  d801              BHI      |L3.34|
00001e  2809              CMP      r0,#9                 ;68
000020  dbf7              BLT      |L3.18|
                  |L3.34|
;;;70       }
;;;71       if (vSign < 0) {
000022  2900              CMP      r1,#0
000024  da00              BGE      |L3.40|
;;;72     		Len++;
000026  1c40              ADDS     r0,r0,#1
                  |L3.40|
;;;73       }
;;;74       return Len;
;;;75     }
000028  4770              BX       lr
;;;76     
                          ENDP

00002a  0000              DCW      0x0000
                  |L3.44|
                          DCD      GUI_Pow10

                          AREA ||i._Check_NegLong||, CODE, READONLY, ALIGN=1

                  _Check_NegLong PROC
;;;45     */
;;;46     static int _Check_NegLong(I32 *pv, char**ps) {
000000  b510              PUSH     {r4,lr}
000002  4602              MOV      r2,r0
;;;47       if (*pv < 0) {
000004  6810              LDR      r0,[r2,#0]
000006  2800              CMP      r0,#0
000008  da09              BGE      |L4.30|
;;;48         *(*ps)++ = '-';
00000a  232d              MOVS     r3,#0x2d
00000c  680c              LDR      r4,[r1,#0]
00000e  1c60              ADDS     r0,r4,#1
000010  6008              STR      r0,[r1,#0]
000012  7023              STRB     r3,[r4,#0]
;;;49         *pv = -*pv;
000014  6810              LDR      r0,[r2,#0]
000016  4240              RSBS     r0,r0,#0
000018  6010              STR      r0,[r2,#0]
;;;50         return 1;
00001a  2001              MOVS     r0,#1
                  |L4.28|
;;;51       }
;;;52       return 0;
;;;53     }
00001c  bd10              POP      {r4,pc}
                  |L4.30|
00001e  2000              MOVS     r0,#0                 ;52
000020  e7fc              B        |L4.28|
;;;54     
                          ENDP


                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  GUI_Pow10
                          DCD      0x00000001
                          DCD      0x0000000a
                          DCD      0x00000064
                          DCD      0x000003e8
                          DCD      0x00002710
                          DCD      0x000186a0
                          DCD      0x000f4240
                          DCD      0x00989680
                          DCD      0x05f5e100
                          DCD      0x3b9aca00
