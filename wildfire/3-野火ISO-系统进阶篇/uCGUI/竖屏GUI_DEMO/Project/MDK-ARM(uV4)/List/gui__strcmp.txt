; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\gui__strcmp.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\gui__strcmp.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Core\GUI__strcmp.c]
                          THUMB

                          AREA ||i.GUI__strcmp||, CODE, READONLY, ALIGN=2

                  GUI__strcmp PROC
;;;40     */
;;;41     int GUI__strcmp(const char GUI_UNI_PTR * s0, const char GUI_UNI_PTR * s1) {
000000  4602              MOV      r2,r0
;;;42       if (s0 == NULL) {
000002  b902              CBNZ     r2,|L1.6|
;;;43         s0 = "";
000004  a20a              ADR      r2,|L1.48|
                  |L1.6|
;;;44       }
;;;45       if (s1 == NULL) {
000006  b901              CBNZ     r1,|L1.10|
;;;46         s1 = "";
000008  a109              ADR      r1,|L1.48|
                  |L1.10|
;;;47       }
;;;48       do {
00000a  bf00              NOP      
                  |L1.12|
;;;49         if (*s0 != *s1) {
00000c  7810              LDRB     r0,[r2,#0]
00000e  780b              LDRB     r3,[r1,#0]
000010  4298              CMP      r0,r3
000012  d001              BEQ      |L1.24|
;;;50           return 1;
000014  2001              MOVS     r0,#1
                  |L1.22|
;;;51         }
;;;52         s1++;
;;;53       } while (*++s0);
;;;54       if (*s1) {
;;;55         return 1;    /* Not equal, since s1 is longer than s0 */
;;;56       }
;;;57       return 0;      /* Equal ! */
;;;58     }
000016  4770              BX       lr
                  |L1.24|
000018  1c49              ADDS     r1,r1,#1              ;52
00001a  1c50              ADDS     r0,r2,#1              ;53
00001c  4602              MOV      r2,r0                 ;53
00001e  7800              LDRB     r0,[r0,#0]            ;53
000020  2800              CMP      r0,#0                 ;53
000022  d1f3              BNE      |L1.12|
000024  7808              LDRB     r0,[r1,#0]            ;54
000026  b108              CBZ      r0,|L1.44|
000028  2001              MOVS     r0,#1                 ;55
00002a  e7f4              B        |L1.22|
                  |L1.44|
00002c  2000              MOVS     r0,#0                 ;57
00002e  e7f2              B        |L1.22|
;;;59     
                          ENDP

                  |L1.48|
000030  00                DCB      0
000031  00                DCB      0
000032  00                DCB      0
000033  00                DCB      0

                          AREA ||i.GUI__strcmp_hp||, CODE, READONLY, ALIGN=1

                  GUI__strcmp_hp PROC
;;;71     */
;;;72     int GUI__strcmp_hp(GUI_HMEM  hs0, const char GUI_UNI_PTR * s1) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;73       const char* s0 = NULL;
000006  2600              MOVS     r6,#0
;;;74       if (hs0) {
000008  b11c              CBZ      r4,|L2.18|
;;;75         s0 = (const char*)GUI_ALLOC_h2p(hs0);
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       GUI_ALLOC_h2p
000010  4606              MOV      r6,r0
                  |L2.18|
;;;76       }
;;;77       return GUI__strcmp(s0, s1);
000012  4629              MOV      r1,r5
000014  4630              MOV      r0,r6
000016  f7fffffe          BL       GUI__strcmp
;;;78     }
00001a  bd70              POP      {r4-r6,pc}
;;;79     
                          ENDP

