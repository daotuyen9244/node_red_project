; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\wm_move.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\wm_move.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\WM\WM_Move.c]
                          THUMB

                          AREA ||i.WM_MoveTo||, CODE, READONLY, ALIGN=1

                  WM_MoveTo PROC
;;;116    */
;;;117    void WM_MoveTo(WM_HWIN hWin, int x, int y) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;118      WM_LOCK(); {
000008  f7fffffe          BL       GUI_Lock
;;;119        WM__MoveTo(hWin, x, y);
00000c  4632              MOV      r2,r6
00000e  4629              MOV      r1,r5
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       WM__MoveTo
;;;120      } WM_UNLOCK();
000016  f7fffffe          BL       GUI_Unlock
;;;121    }
00001a  bd70              POP      {r4-r6,pc}
;;;122    
                          ENDP


                          AREA ||i.WM_MoveWindow||, CODE, READONLY, ALIGN=1

                  WM_MoveWindow PROC
;;;106    */
;;;107    void WM_MoveWindow(WM_HWIN hWin, int dx, int dy) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;108      WM_LOCK(); {
000008  f7fffffe          BL       GUI_Lock
;;;109        WM__MoveWindow(hWin, dx, dy);
00000c  4632              MOV      r2,r6
00000e  4629              MOV      r1,r5
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       WM__MoveWindow
;;;110      } WM_UNLOCK();
000016  f7fffffe          BL       GUI_Unlock
;;;111    }
00001a  bd70              POP      {r4-r6,pc}
;;;112    
                          ENDP


                          AREA ||i.WM__MoveTo||, CODE, READONLY, ALIGN=1

                  WM__MoveTo PROC
;;;87     */
;;;88     void WM__MoveTo(WM_HWIN hWin, int x, int y) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
;;;89       if (hWin) {
00000a  b17c              CBZ      r4,|L3.44|
;;;90         WM_Obj* pWin = WM_HANDLE2PTR(hWin);
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       GUI_ALLOC_h2p
000012  4607              MOV      r7,r0
;;;91         x -= pWin->Rect.x0;
000014  f9b70000          LDRSH    r0,[r7,#0]
000018  1a2d              SUBS     r5,r5,r0
;;;92         y -= pWin->Rect.y0;
00001a  f9b70002          LDRSH    r0,[r7,#2]
00001e  1a36              SUBS     r6,r6,r0
;;;93         WM__MoveWindow(hWin, x, y);
000020  4632              MOV      r2,r6
000022  4629              MOV      r1,r5
000024  4620              MOV      r0,r4
000026  f7fffffe          BL       WM__MoveWindow
;;;94       }
00002a  bf00              NOP      
                  |L3.44|
;;;95     }
00002c  e8bd81f0          POP      {r4-r8,pc}
;;;96     
                          ENDP


                          AREA ||i.WM__MoveWindow||, CODE, READONLY, ALIGN=1

                  WM__MoveWindow PROC
;;;65     */
;;;66     void WM__MoveWindow(WM_HWIN hWin, int dx, int dy) {
000000  e92d41fc          PUSH     {r2-r8,lr}
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
;;;67       GUI_RECT r;
;;;68       WM_Obj* pWin;
;;;69       if ((hWin) && (dx || dy)) {
00000a  b385              CBZ      r5,|L4.110|
00000c  b906              CBNZ     r6,|L4.16|
00000e  b377              CBZ      r7,|L4.110|
                  |L4.16|
;;;70         pWin = WM_HANDLE2PTR(hWin);
000010  4628              MOV      r0,r5
000012  f7fffffe          BL       GUI_ALLOC_h2p
000016  4604              MOV      r4,r0
;;;71         r = pWin->Rect;
000018  e9d40100          LDRD     r0,r1,[r4,#0]
00001c  e9cd0100          STRD     r0,r1,[sp,#0]
;;;72         GUI_MoveRect(&pWin->Rect, dx, dy);
000020  463a              MOV      r2,r7
000022  4631              MOV      r1,r6
000024  4620              MOV      r0,r4
000026  f7fffffe          BL       GUI_MoveRect
;;;73         GUI_MoveRect(&pWin->InvalidRect, dx, dy);
00002a  463a              MOV      r2,r7
00002c  4631              MOV      r1,r6
00002e  f1040008          ADD      r0,r4,#8
000032  f7fffffe          BL       GUI_MoveRect
;;;74         _MoveDescendents(pWin->hFirstChild, dx, dy);  /* Children need to be moved along ...*/
000036  f9b40018          LDRSH    r0,[r4,#0x18]
00003a  463a              MOV      r2,r7
00003c  4631              MOV      r1,r6
00003e  f7fffffe          BL       _MoveDescendents
;;;75         /* Invalidate old and new area ... */
;;;76         if (pWin->Status & WM_SF_ISVIS) {
000042  7f20              LDRB     r0,[r4,#0x1c]
000044  f0100f02          TST      r0,#2
000048  d00d              BEQ      |L4.102|
;;;77           WM__InvalidateRectEx(&pWin->Rect, pWin->hParent, pWin->hNext); /* Invalidate new area */
00004a  f9b4201a          LDRSH    r2,[r4,#0x1a]
00004e  f9b41016          LDRSH    r1,[r4,#0x16]
000052  4620              MOV      r0,r4
000054  f7fffffe          BL       WM__InvalidateRectEx
;;;78           WM__InvalidateRectEx(&r,          pWin->hParent, pWin->hNext); /* Invalidate old area */
000058  f9b4201a          LDRSH    r2,[r4,#0x1a]
00005c  f9b41016          LDRSH    r1,[r4,#0x16]
000060  4668              MOV      r0,sp
000062  f7fffffe          BL       WM__InvalidateRectEx
                  |L4.102|
;;;79         }
;;;80         WM__SendMsgNoData(hWin, WM_MOVE);             /* Notify window it has been moved */
000066  2103              MOVS     r1,#3
000068  4628              MOV      r0,r5
00006a  f7fffffe          BL       WM__SendMsgNoData
                  |L4.110|
;;;81       }
;;;82     }
00006e  e8bd81fc          POP      {r2-r8,pc}
;;;83     
                          ENDP


                          AREA ||i._MoveDescendents||, CODE, READONLY, ALIGN=1

                  _MoveDescendents PROC
;;;43     */
;;;44     static void _MoveDescendents(WM_HWIN hWin, int dx, int dy) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
;;;45       WM_Obj* pWin;
;;;46     
;;;47       for (;hWin; hWin = pWin->hNext) {
00000a  e01a              B        |L5.66|
                  |L5.12|
;;;48         pWin = WM_HANDLE2PTR(hWin);
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       GUI_ALLOC_h2p
000012  4604              MOV      r4,r0
;;;49         GUI_MoveRect(&pWin->Rect, dx, dy);
000014  463a              MOV      r2,r7
000016  4631              MOV      r1,r6
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       GUI_MoveRect
;;;50         GUI_MoveRect(&pWin->InvalidRect, dx, dy);
00001e  463a              MOV      r2,r7
000020  4631              MOV      r1,r6
000022  f1040008          ADD      r0,r4,#8
000026  f7fffffe          BL       GUI_MoveRect
;;;51         _MoveDescendents(pWin->hFirstChild, dx, dy);  /* Children need to be moved along ...*/
00002a  f9b40018          LDRSH    r0,[r4,#0x18]
00002e  463a              MOV      r2,r7
000030  4631              MOV      r1,r6
000032  f7fffffe          BL       _MoveDescendents
;;;52         WM__SendMsgNoData(hWin, WM_MOVE);
000036  2103              MOVS     r1,#3
000038  4628              MOV      r0,r5
00003a  f7fffffe          BL       WM__SendMsgNoData
00003e  f9b4501a          LDRSH    r5,[r4,#0x1a]         ;47
                  |L5.66|
000042  2d00              CMP      r5,#0                 ;47
000044  d1e2              BNE      |L5.12|
;;;53       }
;;;54     }
000046  e8bd81f0          POP      {r4-r8,pc}
;;;55     
                          ENDP

