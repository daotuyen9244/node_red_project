; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\gui_sif_prop.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\gui_sif_prop.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Core\GUI_SIF_Prop.c]
                          THUMB

                          AREA ||i._GUI_SIF_DispChar||, CODE, READONLY, ALIGN=2

                  _GUI_SIF_DispChar PROC
;;;76     */
;;;77     static void _GUI_SIF_DispChar(U16P c) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b08b              SUB      sp,sp,#0x2c
000006  4604              MOV      r4,r0
;;;78       const U8 * pCharInfo, * pData;
;;;79       pCharInfo = _GetpCharInfo(GUI_Context.pAFont, c);
000008  494a              LDR      r1,|L1.308|
00000a  69c8              LDR      r0,[r1,#0x1c]  ; GUI_Context
00000c  4621              MOV      r1,r4
00000e  f7fffffe          BL       _GetpCharInfo
000012  900a              STR      r0,[sp,#0x28]
;;;80       if (pCharInfo) {
000014  980a              LDR      r0,[sp,#0x28]
000016  2800              CMP      r0,#0
000018  d07e              BEQ      |L1.280|
;;;81         GUI_DRAWMODE DrawMode, OldDrawMode;
;;;82         GUI_SIF_CHARINFO CharInfo;
;;;83         CharInfo.XSize        = GUI__Read16(&pCharInfo);
00001a  a80a              ADD      r0,sp,#0x28
00001c  f7fffffe          BL       GUI__Read16
000020  f8ad0018          STRH     r0,[sp,#0x18]
;;;84         CharInfo.XDist        = GUI__Read16(&pCharInfo);
000024  a80a              ADD      r0,sp,#0x28
000026  f7fffffe          BL       GUI__Read16
00002a  f8ad001a          STRH     r0,[sp,#0x1a]
;;;85         CharInfo.BytesPerLine = GUI__Read16(&pCharInfo);
00002e  a80a              ADD      r0,sp,#0x28
000030  f7fffffe          BL       GUI__Read16
000034  f8ad001c          STRH     r0,[sp,#0x1c]
;;;86                                 GUI__Read16(&pCharInfo); /* Dummy */
000038  a80a              ADD      r0,sp,#0x28
00003a  f7fffffe          BL       GUI__Read16
;;;87         CharInfo.OffData      = GUI__Read32(&pCharInfo);
00003e  a80a              ADD      r0,sp,#0x28
000040  f7fffffe          BL       GUI__Read32
000044  9008              STR      r0,[sp,#0x20]
;;;88         pData = (const U8 *)GUI_Context.pAFont->p.pFontData + CharInfo.OffData;
000046  483b              LDR      r0,|L1.308|
000048  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
00004a  6980              LDR      r0,[r0,#0x18]
00004c  9908              LDR      r1,[sp,#0x20]
00004e  1845              ADDS     r5,r0,r1
;;;89         DrawMode = GUI_Context.TextMode;
000050  4838              LDR      r0,|L1.308|
000052  f9b0602e          LDRSH    r6,[r0,#0x2e]  ; GUI_Context
;;;90         OldDrawMode  = LCD_SetDrawMode(DrawMode);
000056  4630              MOV      r0,r6
000058  f7fffffe          BL       LCD_SetDrawMode
00005c  9009              STR      r0,[sp,#0x24]
;;;91         LCD_DrawBitmap(GUI_Context.DispPosX, GUI_Context.DispPosY,
00005e  4935              LDR      r1,|L1.308|
000060  f8bd001c          LDRH     r0,[sp,#0x1c]
000064  2201              MOVS     r2,#1
000066  e9cd5104          STRD     r5,r1,[sp,#0x10]
00006a  e9cd2002          STRD     r2,r0,[sp,#8]
00006e  4608              MOV      r0,r1
000070  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
000072  7dc0              LDRB     r0,[r0,#0x17]
000074  69c9              LDR      r1,[r1,#0x1c]  ; GUI_Context
000076  7d89              LDRB     r1,[r1,#0x16]
000078  4f2e              LDR      r7,|L1.308|
00007a  e9cd1000          STRD     r1,r0,[sp,#0]
00007e  69ff              LDR      r7,[r7,#0x1c]  ; GUI_Context
000080  7d3b              LDRB     r3,[r7,#0x14]
000082  f8bd2018          LDRH     r2,[sp,#0x18]
000086  4f2b              LDR      r7,|L1.308|
000088  f9b71028          LDRSH    r1,[r7,#0x28]  ; GUI_Context
00008c  f9b70026          LDRSH    r0,[r7,#0x26]  ; GUI_Context
000090  f7fffffe          BL       LCD_DrawBitmap
;;;92                        CharInfo.XSize,
;;;93     									 GUI_Context.pAFont->YSize,
;;;94                        GUI_Context.pAFont->XMag,
;;;95     									 GUI_Context.pAFont->YMag,
;;;96                        1,
;;;97                        CharInfo.BytesPerLine,
;;;98                        pData,
;;;99                        &LCD_BKCOLORINDEX);
;;;100        /* Fill empty pixel lines */
;;;101        if (GUI_Context.pAFont->YDist > GUI_Context.pAFont->YSize) {
000094  4638              MOV      r0,r7
000096  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
000098  7d40              LDRB     r0,[r0,#0x15]
00009a  4639              MOV      r1,r7
00009c  69c9              LDR      r1,[r1,#0x1c]  ; GUI_Context
00009e  7d09              LDRB     r1,[r1,#0x14]
0000a0  4288              CMP      r0,r1
0000a2  dd35              BLE      |L1.272|
;;;102          int YMag = GUI_Context.pAFont->YMag;
0000a4  4638              MOV      r0,r7
0000a6  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
0000a8  7dc7              LDRB     r7,[r0,#0x17]
;;;103          int YDist = GUI_Context.pAFont->YDist * YMag;
0000aa  4822              LDR      r0,|L1.308|
0000ac  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
0000ae  7d40              LDRB     r0,[r0,#0x15]
0000b0  fb00f807          MUL      r8,r0,r7
;;;104          int YSize = GUI_Context.pAFont->YSize * YMag;
0000b4  481f              LDR      r0,|L1.308|
0000b6  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
0000b8  7d00              LDRB     r0,[r0,#0x14]
0000ba  fb00f907          MUL      r9,r0,r7
;;;105          if (DrawMode != LCD_DRAWMODE_TRANS) {
0000be  2e02              CMP      r6,#2
0000c0  d025              BEQ      |L1.270|
;;;106            LCD_COLOR OldColor = GUI_GetColor();
0000c2  f7fffffe          BL       GUI_GetColor
0000c6  4682              MOV      r10,r0
;;;107            GUI_SetColor(GUI_GetBkColor());
0000c8  f7fffffe          BL       GUI_GetBkColor
0000cc  4683              MOV      r11,r0
0000ce  f7fffffe          BL       GUI_SetColor
;;;108            LCD_FillRect(GUI_Context.DispPosX, 
0000d2  f8dfc060          LDR      r12,|L1.308|
0000d6  f9bcc026          LDRSH    r12,[r12,#0x26]  ; GUI_Context
0000da  f8bdb018          LDRH     r11,[sp,#0x18]
0000de  eb0c020b          ADD      r2,r12,r11
0000e2  f8dfc050          LDR      r12,|L1.308|
0000e6  f9bcc028          LDRSH    r12,[r12,#0x28]  ; GUI_Context
0000ea  eb0c0308          ADD      r3,r12,r8
0000ee  f8dfc044          LDR      r12,|L1.308|
0000f2  f9bcc028          LDRSH    r12,[r12,#0x28]  ; GUI_Context
0000f6  eb0c0109          ADD      r1,r12,r9
0000fa  f8dfc038          LDR      r12,|L1.308|
0000fe  f9bc0026          LDRSH    r0,[r12,#0x26]  ; GUI_Context
000102  f7fffffe          BL       LCD_FillRect
;;;109                         GUI_Context.DispPosY + YSize, 
;;;110                         GUI_Context.DispPosX + CharInfo.XSize, 
;;;111                         GUI_Context.DispPosY + YDist);
;;;112            GUI_SetColor(OldColor);
000106  4650              MOV      r0,r10
000108  f7fffffe          BL       GUI_SetColor
;;;113          }
00010c  bf00              NOP      
                  |L1.270|
;;;114        }
00010e  bf00              NOP      
                  |L1.272|
;;;115        LCD_SetDrawMode(OldDrawMode); /* Restore draw mode */
000110  9809              LDR      r0,[sp,#0x24]
000112  f7fffffe          BL       LCD_SetDrawMode
;;;116        GUI_Context.DispPosX += CharInfo.XDist;
000116  e000              B        |L1.282|
                  |L1.280|
000118  e008              B        |L1.300|
                  |L1.282|
00011a  4806              LDR      r0,|L1.308|
00011c  8cc0              LDRH     r0,[r0,#0x26]  ; GUI_Context
00011e  f8bd101a          LDRH     r1,[sp,#0x1a]
000122  4408              ADD      r0,r0,r1
000124  b200              SXTH     r0,r0
000126  4903              LDR      r1,|L1.308|
000128  84c8              STRH     r0,[r1,#0x26]
;;;117      }
00012a  bf00              NOP      
                  |L1.300|
;;;118    }
00012c  b00b              ADD      sp,sp,#0x2c
00012e  e8bd8ff0          POP      {r4-r11,pc}
;;;119    
                          ENDP

000132  0000              DCW      0x0000
                  |L1.308|
                          DCD      GUI_Context

                          AREA ||i._GUI_SIF_GetCharDistX||, CODE, READONLY, ALIGN=2

                  _GUI_SIF_GetCharDistX PROC
;;;123    */
;;;124    static int _GUI_SIF_GetCharDistX(U16P c) {
000000  b538              PUSH     {r3-r5,lr}
000002  4604              MOV      r4,r0
;;;125      const U8 * pCharInfo;
;;;126      U16 DistX = 0;
000004  2500              MOVS     r5,#0
;;;127      pCharInfo = _GetpCharInfo(GUI_Context.pAFont, c); /* Get pointer to char info data */
000006  4908              LDR      r1,|L2.40|
000008  69c8              LDR      r0,[r1,#0x1c]  ; GUI_Context
00000a  4621              MOV      r1,r4
00000c  f7fffffe          BL       _GetpCharInfo
000010  9000              STR      r0,[sp,#0]
;;;128      if (pCharInfo) {
000012  9800              LDR      r0,[sp,#0]
000014  b130              CBZ      r0,|L2.36|
;;;129        pCharInfo += 2 /* Skip XSize */;
000016  9800              LDR      r0,[sp,#0]
000018  1c80              ADDS     r0,r0,#2
00001a  9000              STR      r0,[sp,#0]
;;;130        DistX = GUI__Read16(&pCharInfo);
00001c  4668              MOV      r0,sp
00001e  f7fffffe          BL       GUI__Read16
000022  4605              MOV      r5,r0
                  |L2.36|
;;;131      }
;;;132      return DistX;
000024  4628              MOV      r0,r5
;;;133    }
000026  bd38              POP      {r3-r5,pc}
;;;134    
                          ENDP

                  |L2.40|
                          DCD      GUI_Context

                          AREA ||i._GUI_SIF_GetFontInfo||, CODE, READONLY, ALIGN=1

                  _GUI_SIF_GetFontInfo PROC
;;;138    */
;;;139    static void _GUI_SIF_GetFontInfo(const GUI_FONT GUI_UNI_PTR * pFont, GUI_FONTINFO * pfi) {
000000  b538              PUSH     {r3-r5,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;140      const U8 * pData;
;;;141      pData = (const U8 *)pFont->p.pFontData + 4 /* Skip XSize and XDist */;
000006  69a8              LDR      r0,[r5,#0x18]
000008  1d00              ADDS     r0,r0,#4
00000a  9000              STR      r0,[sp,#0]
;;;142      pfi->Baseline = GUI__Read16(&pData);
00000c  4668              MOV      r0,sp
00000e  f7fffffe          BL       GUI__Read16
000012  70a0              STRB     r0,[r4,#2]
;;;143      pfi->LHeight  = GUI__Read16(&pData);
000014  4668              MOV      r0,sp
000016  f7fffffe          BL       GUI__Read16
00001a  70e0              STRB     r0,[r4,#3]
;;;144      pfi->CHeight  = GUI__Read16(&pData);
00001c  4668              MOV      r0,sp
00001e  f7fffffe          BL       GUI__Read16
000022  7120              STRB     r0,[r4,#4]
;;;145      pfi->Flags    = GUI_FONTINFO_FLAG_PROP;
000024  2001              MOVS     r0,#1
000026  8020              STRH     r0,[r4,#0]
;;;146    }
000028  bd38              POP      {r3-r5,pc}
;;;147    
                          ENDP


                          AREA ||i._GUI_SIF_IsInFont||, CODE, READONLY, ALIGN=2

                  _GUI_SIF_IsInFont PROC
;;;151    */
;;;152    static char _GUI_SIF_IsInFont(const GUI_FONT GUI_UNI_PTR * pFont, U16 c) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;153      const U8 * pCharInfo;
;;;154      GUI_USE_PARA(pFont);
000006  bf00              NOP      
;;;155      pCharInfo = _GetpCharInfo(GUI_Context.pAFont, c);
000008  4905              LDR      r1,|L4.32|
00000a  69c8              LDR      r0,[r1,#0x1c]  ; GUI_Context
00000c  4629              MOV      r1,r5
00000e  f7fffffe          BL       _GetpCharInfo
000012  4606              MOV      r6,r0
;;;156      return (pCharInfo) ? 1 : 0;
000014  b10e              CBZ      r6,|L4.26|
000016  2001              MOVS     r0,#1
                  |L4.24|
;;;157    }
000018  bd70              POP      {r4-r6,pc}
                  |L4.26|
00001a  2000              MOVS     r0,#0                 ;156
00001c  e7fc              B        |L4.24|
;;;158    
                          ENDP

00001e  0000              DCW      0x0000
                  |L4.32|
                          DCD      GUI_Context

                          AREA ||i._GetNumCharAreas||, CODE, READONLY, ALIGN=1

                  _GetNumCharAreas PROC
;;;32     */
;;;33     static int _GetNumCharAreas(const GUI_FONT GUI_UNI_PTR * pFont) {
000000  b538              PUSH     {r3-r5,lr}
000002  4604              MOV      r4,r0
;;;34       U16 NumCharAreas;
;;;35       const U8 * pData;
;;;36       pData = (const U8 *)pFont->p.pFontData + 14 /* Skip ID, YSize, YDist, Baseline, LHeight and CHeight */;
000004  69a0              LDR      r0,[r4,#0x18]
000006  300e              ADDS     r0,r0,#0xe
000008  9000              STR      r0,[sp,#0]
;;;37       NumCharAreas = GUI__Read16(&pData);
00000a  4668              MOV      r0,sp
00000c  f7fffffe          BL       GUI__Read16
000010  4605              MOV      r5,r0
;;;38       return NumCharAreas;
000012  4628              MOV      r0,r5
;;;39     }
000014  bd38              POP      {r3-r5,pc}
;;;40     
                          ENDP


                          AREA ||i._GetpCharInfo||, CODE, READONLY, ALIGN=1

                  _GetpCharInfo PROC
;;;44     */
;;;45     static const U8 * _GetpCharInfo(const GUI_FONT GUI_UNI_PTR * pFont, U16P c) {
000000  e92d41fc          PUSH     {r2-r8,lr}
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
;;;46       const U8 * pCharArea, * pCharInfo;
;;;47       int NumCharAreas;
;;;48       NumCharAreas = _GetNumCharAreas(pFont);                 /* Get # of char areas */
000008  4630              MOV      r0,r6
00000a  f7fffffe          BL       _GetNumCharAreas
00000e  4607              MOV      r7,r0
;;;49       pCharArea = (const U8 *)pFont->p.pFontData 
000010  69b0              LDR      r0,[r6,#0x18]
000012  3010              ADDS     r0,r0,#0x10
000014  9001              STR      r0,[sp,#4]
;;;50                   + sizeof(GUI_SI_FONT);                      /* Set char area pointer to first char area */
;;;51       pCharInfo = pCharArea
000016  2104              MOVS     r1,#4
000018  9801              LDR      r0,[sp,#4]
00001a  fb010507          MLA      r5,r1,r7,r0
;;;52                   + sizeof(GUI_SIF_CHAR_AREA) * NumCharAreas; /* Set char info pointer to first character info */
;;;53       do {
00001e  bf00              NOP      
                  |L6.32|
;;;54         GUI_SIF_CHAR_AREA CharArea;
;;;55         CharArea.First    = GUI__Read16(&pCharArea);
000020  a801              ADD      r0,sp,#4
000022  f7fffffe          BL       GUI__Read16
000026  f8ad0000          STRH     r0,[sp,#0]
;;;56         CharArea.Last     = GUI__Read16(&pCharArea);
00002a  a801              ADD      r0,sp,#4
00002c  f7fffffe          BL       GUI__Read16
000030  f8ad0002          STRH     r0,[sp,#2]
;;;57         if ((c >= CharArea.First) && (c <= CharArea.Last)) {
000034  f8bd0000          LDRH     r0,[sp,#0]
000038  42a0              CMP      r0,r4
00003a  dc0c              BGT      |L6.86|
00003c  f8bd0002          LDRH     r0,[sp,#2]
000040  42a0              CMP      r0,r4
000042  db08              BLT      |L6.86|
;;;58           pCharInfo += sizeof(GUI_SIF_CHARINFO) * (c - CharArea.First);
000044  f8bd0000          LDRH     r0,[sp,#0]
000048  1a20              SUBS     r0,r4,r0
00004a  210c              MOVS     r1,#0xc
00004c  fb015500          MLA      r5,r1,r0,r5
;;;59           return pCharInfo;
000050  4628              MOV      r0,r5
                  |L6.82|
;;;60         }
;;;61         pCharInfo += sizeof(GUI_SIF_CHARINFO) * (CharArea.Last - CharArea.First + 1);
;;;62       } while(--NumCharAreas);
;;;63       return 0;
;;;64     }
000052  e8bd81fc          POP      {r2-r8,pc}
                  |L6.86|
000056  f8bd0002          LDRH     r0,[sp,#2]            ;61
00005a  f8bd1000          LDRH     r1,[sp,#0]            ;61
00005e  1a40              SUBS     r0,r0,r1              ;61
000060  1c40              ADDS     r0,r0,#1              ;61
000062  210c              MOVS     r1,#0xc               ;61
000064  fb015500          MLA      r5,r1,r0,r5           ;61
000068  1e78              SUBS     r0,r7,#1              ;62
00006a  0007              MOVS     r7,r0                 ;62
00006c  d1d8              BNE      |L6.32|
00006e  bf00              NOP                            ;63
000070  e7ef              B        |L6.82|
;;;65     
                          ENDP


                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  GUI_SIF_APIList_Prop
                          DCD      _GUI_SIF_DispChar
                          DCD      _GUI_SIF_GetCharDistX
                          DCD      _GUI_SIF_GetFontInfo
                          DCD      _GUI_SIF_IsInFont
