; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\guichar.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\guichar.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Core\GUIChar.c]
                          THUMB

                          AREA ||i.GL_DispChar||, CODE, READONLY, ALIGN=2

                  GL_DispChar PROC
;;;44     */
;;;45     void GL_DispChar(U16 c) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;46       /* check for control characters */
;;;47       if (c == '\n') {
000004  2c0a              CMP      r4,#0xa
000006  d102              BNE      |L1.14|
;;;48         GUI_DispNextLine();
000008  f7fffffe          BL       GUI_DispNextLine
00000c  e011              B        |L1.50|
                  |L1.14|
;;;49       } else {
;;;50         if (c != '\r') {
00000e  2c0d              CMP      r4,#0xd
000010  d00f              BEQ      |L1.50|
;;;51           GUI_LOCK();
000012  f7fffffe          BL       GUI_Lock
;;;52           GUI_Context.pAFont->pfDispChar(c);
000016  4807              LDR      r0,|L1.52|
000018  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
00001a  6801              LDR      r1,[r0,#0]
00001c  4620              MOV      r0,r4
00001e  4788              BLX      r1
;;;53           if (GUI_pfDispCharStyle) {
000020  4805              LDR      r0,|L1.56|
000022  6800              LDR      r0,[r0,#0]  ; GUI_pfDispCharStyle
000024  b118              CBZ      r0,|L1.46|
;;;54             GUI_pfDispCharStyle(c);
000026  4620              MOV      r0,r4
000028  4903              LDR      r1,|L1.56|
00002a  6809              LDR      r1,[r1,#0]  ; GUI_pfDispCharStyle
00002c  4788              BLX      r1
                  |L1.46|
;;;55           }
;;;56           GUI_UNLOCK();
00002e  f7fffffe          BL       GUI_Unlock
                  |L1.50|
;;;57         }
;;;58       }
;;;59     }
000032  bd10              POP      {r4,pc}
;;;60     
                          ENDP

                  |L1.52|
                          DCD      GUI_Context
                  |L1.56|
                          DCD      GUI_pfDispCharStyle

                          AREA ||i.GUI_DispNextLine||, CODE, READONLY, ALIGN=2

                  GUI_DispNextLine PROC
;;;33     */
;;;34     void GUI_DispNextLine(void) {
000000  b510              PUSH     {r4,lr}
;;;35       GUI_LOCK();
000002  f7fffffe          BL       GUI_Lock
;;;36       GUI_Context.DispPosY += GUI_GetFontDistY();
000006  f7fffffe          BL       GUI_GetFontDistY
00000a  4906              LDR      r1,|L2.36|
00000c  8d09              LDRH     r1,[r1,#0x28]  ; GUI_Context
00000e  4408              ADD      r0,r0,r1
000010  b200              SXTH     r0,r0
000012  4904              LDR      r1,|L2.36|
000014  8508              STRH     r0,[r1,#0x28]
;;;37       GUI_Context.DispPosX  = GUI_Context.LBorder;
000016  4608              MOV      r0,r1
000018  8c80              LDRH     r0,[r0,#0x24]  ; GUI_Context
00001a  84c8              STRH     r0,[r1,#0x26]
;;;38       GUI_UNLOCK();
00001c  f7fffffe          BL       GUI_Unlock
;;;39     }
000020  bd10              POP      {r4,pc}
;;;40     
                          ENDP

000022  0000              DCW      0x0000
                  |L2.36|
                          DCD      GUI_Context

                          AREA ||i.GUI_GetCharDistX||, CODE, READONLY, ALIGN=2

                  GUI_GetCharDistX PROC
;;;102    */
;;;103    int GUI_GetCharDistX(U16 c) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;104      int r;
;;;105      GUI_LOCK();
000004  f7fffffe          BL       GUI_Lock
;;;106      r = GUI_Context.pAFont->pfGetCharDistX(c);
000008  4804              LDR      r0,|L3.28|
00000a  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
00000c  6841              LDR      r1,[r0,#4]
00000e  4620              MOV      r0,r4
000010  4788              BLX      r1
000012  4605              MOV      r5,r0
;;;107      GUI_UNLOCK();
000014  f7fffffe          BL       GUI_Unlock
;;;108      return r;
000018  4628              MOV      r0,r5
;;;109    }
00001a  bd70              POP      {r4-r6,pc}
;;;110    
                          ENDP

                  |L3.28|
                          DCD      GUI_Context

                          AREA ||i.GUI_GetFontDistY||, CODE, READONLY, ALIGN=2

                  GUI_GetFontDistY PROC
;;;90     */
;;;91     int GUI_GetFontDistY(void) {
000000  b510              PUSH     {r4,lr}
;;;92       int r;
;;;93       GUI_LOCK();
000002  f7fffffe          BL       GUI_Lock
;;;94       r = GUI_Context.pAFont->YDist;
000006  4803              LDR      r0,|L4.20|
000008  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
00000a  7d44              LDRB     r4,[r0,#0x15]
;;;95       GUI_UNLOCK();
00000c  f7fffffe          BL       GUI_Unlock
;;;96       return r;
000010  4620              MOV      r0,r4
;;;97     }
000012  bd10              POP      {r4,pc}
;;;98     
                          ENDP

                  |L4.20|
                          DCD      GUI_Context

                          AREA ||i.GUI_GetYAdjust||, CODE, READONLY, ALIGN=2

                  GUI_GetYAdjust PROC
;;;69     */
;;;70     int GUI_GetYAdjust(void) {
000000  b510              PUSH     {r4,lr}
;;;71       int r = 0;
000002  2400              MOVS     r4,#0
;;;72       GUI_LOCK();
000004  f7fffffe          BL       GUI_Lock
;;;73       switch (GUI_Context.TextAlign & GUI_TA_VERTICAL) {
000008  4811              LDR      r0,|L5.80|
00000a  f8900030          LDRB     r0,[r0,#0x30]  ; GUI_Context
00000e  f000000c          AND      r0,r0,#0xc
000012  2804              CMP      r0,#4
000014  d004              BEQ      |L5.32|
000016  2808              CMP      r0,#8
000018  d00e              BEQ      |L5.56|
00001a  280c              CMP      r0,#0xc
00001c  d113              BNE      |L5.70|
00001e  e004              B        |L5.42|
                  |L5.32|
;;;74     	case GUI_TA_BOTTOM:
;;;75     		r = GUI_Context.pAFont->YSize - 1;
000020  480b              LDR      r0,|L5.80|
000022  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
000024  7d00              LDRB     r0,[r0,#0x14]
000026  1e44              SUBS     r4,r0,#1
;;;76         break;
000028  e00d              B        |L5.70|
                  |L5.42|
;;;77     	case GUI_TA_VCENTER:
;;;78     		r = GUI_Context.pAFont->YSize / 2;
00002a  4909              LDR      r1,|L5.80|
00002c  69c9              LDR      r1,[r1,#0x1c]  ; GUI_Context
00002e  7d08              LDRB     r0,[r1,#0x14]
000030  eb0071d0          ADD      r1,r0,r0,LSR #31
000034  104c              ASRS     r4,r1,#1
;;;79         break;
000036  e006              B        |L5.70|
                  |L5.56|
;;;80     	case GUI_TA_BASELINE:
;;;81     		r = GUI_Context.pAFont->YSize / 2;
000038  4905              LDR      r1,|L5.80|
00003a  69c9              LDR      r1,[r1,#0x1c]  ; GUI_Context
00003c  7d08              LDRB     r0,[r1,#0x14]
00003e  eb0071d0          ADD      r1,r0,r0,LSR #31
000042  104c              ASRS     r4,r1,#1
000044  bf00              NOP                            ;73
                  |L5.70|
000046  bf00              NOP                            ;76
;;;82     	}
;;;83       GUI_UNLOCK();
000048  f7fffffe          BL       GUI_Unlock
;;;84       return r;
00004c  4620              MOV      r0,r4
;;;85     }
00004e  bd10              POP      {r4,pc}
;;;86     
                          ENDP

                  |L5.80|
                          DCD      GUI_Context
