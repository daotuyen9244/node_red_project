; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\graph_scale.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\graph_scale.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Widget\GRAPH_SCALE.c]
                          THUMB

                          AREA ||i.GRAPH_SCALE_Create||, CODE, READONLY, ALIGN=2

                  GRAPH_SCALE_Create PROC
;;;182    */
;;;183    GRAPH_SCALE_Handle GRAPH_SCALE_Create(int Pos, int TextAlign, unsigned Flags, unsigned TickDist) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
00000a  4698              MOV      r8,r3
;;;184      GRAPH_SCALE_Handle hScaleObj;
;;;185      WM_LOCK();
00000c  f7fffffe          BL       GUI_Lock
;;;186      hScaleObj = GUI_ALLOC_AllocZero(sizeof(GRAPH_SCALE_OBJ));
000010  2030              MOVS     r0,#0x30
000012  f7fffffe          BL       GUI_ALLOC_AllocZero
000016  4681              MOV      r9,r0
;;;187      if (hScaleObj) {
000018  f1b90f00          CMP      r9,#0
00001c  d012              BEQ      |L1.68|
;;;188        GRAPH_SCALE_OBJ * pScaleObj;
;;;189        pScaleObj = (GRAPH_SCALE_OBJ *)GUI_ALLOC_h2p(hScaleObj);
00001e  4648              MOV      r0,r9
000020  f7fffffe          BL       GUI_ALLOC_h2p
000024  4604              MOV      r4,r0
;;;190        pScaleObj->Pos        = Pos;
000026  6165              STR      r5,[r4,#0x14]
;;;191        pScaleObj->TextAlign  = TextAlign;
000028  61a6              STR      r6,[r4,#0x18]
;;;192        pScaleObj->Flags      = Flags;
00002a  84a7              STRH     r7,[r4,#0x24]
;;;193        pScaleObj->TickDist   = TickDist;
00002c  f8c4801c          STR      r8,[r4,#0x1c]
;;;194        pScaleObj->Factor     = 1;
000030  f04f507e          MOV      r0,#0x3f800000
000034  62a0              STR      r0,[r4,#0x28]
;;;195        pScaleObj->Props      = _Props;
000036  4906              LDR      r1,|L1.80|
000038  c903              LDM      r1,{r0,r1}
00003a  e9c40103          STRD     r0,r1,[r4,#0xc]
;;;196        pScaleObj->PaintObj.pfOnPaint = _OnPaint;
00003e  4805              LDR      r0,|L1.84|
000040  6020              STR      r0,[r4,#0]
;;;197      }
000042  bf00              NOP      
                  |L1.68|
;;;198      WM_UNLOCK();
000044  f7fffffe          BL       GUI_Unlock
;;;199      return hScaleObj;
000048  4648              MOV      r0,r9
;;;200    }
00004a  e8bd87f0          POP      {r4-r10,pc}
;;;201    
                          ENDP

00004e  0000              DCW      0x0000
                  |L1.80|
                          DCD      _Props
                  |L1.84|
                          DCD      _OnPaint

                          AREA ||i.GRAPH_SCALE_SetFactor||, CODE, READONLY, ALIGN=1

                  GRAPH_SCALE_SetFactor PROC
;;;305    */
;;;306    float GRAPH_SCALE_SetFactor(GRAPH_SCALE_Handle hScaleObj, float Factor) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
000006  460d              MOV      r5,r1
;;;307      float OldFactor = 0;
000008  2700              MOVS     r7,#0
;;;308      GRAPH_SCALE_OBJ * pScaleObj;
;;;309      WM_LOCK();
00000a  f7fffffe          BL       GUI_Lock
;;;310      pScaleObj = (GRAPH_SCALE_OBJ *)GUI_ALLOC_h2p(hScaleObj);
00000e  4630              MOV      r0,r6
000010  f7fffffe          BL       GUI_ALLOC_h2p
000014  4604              MOV      r4,r0
;;;311      if (pScaleObj) {
000016  b154              CBZ      r4,|L2.46|
;;;312        OldFactor = pScaleObj->Factor;
000018  6aa7              LDR      r7,[r4,#0x28]
;;;313        if (pScaleObj->Factor != Factor) {
00001a  4629              MOV      r1,r5
00001c  6aa0              LDR      r0,[r4,#0x28]
00001e  f7fffffe          BL       __aeabi_cfcmpeq
000022  d004              BEQ      |L2.46|
;;;314          pScaleObj->Factor = Factor;
000024  62a5              STR      r5,[r4,#0x28]
;;;315          WM_InvalidateWindow(pScaleObj->PaintObj.hGraph);
000026  f9b40008          LDRSH    r0,[r4,#8]
00002a  f7fffffe          BL       WM_InvalidateWindow
                  |L2.46|
;;;316        }
;;;317      }
;;;318      WM_UNLOCK();
00002e  f7fffffe          BL       GUI_Unlock
;;;319      return OldFactor;
000032  4638              MOV      r0,r7
;;;320    }
000034  e8bd81f0          POP      {r4-r8,pc}
;;;321    
                          ENDP


                          AREA ||i.GRAPH_SCALE_SetFont||, CODE, READONLY, ALIGN=1

                  GRAPH_SCALE_SetFont PROC
;;;245    */
;;;246    const GUI_FONT GUI_UNI_PTR * GRAPH_SCALE_SetFont(GRAPH_SCALE_Handle hScaleObj, const GUI_FONT GUI_UNI_PTR * pFont) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
000006  460d              MOV      r5,r1
;;;247      const GUI_FONT GUI_UNI_PTR * pOldFont = NULL;
000008  2700              MOVS     r7,#0
;;;248      GRAPH_SCALE_OBJ * pScaleObj;
;;;249      WM_LOCK();
00000a  f7fffffe          BL       GUI_Lock
;;;250      pScaleObj = (GRAPH_SCALE_OBJ *)GUI_ALLOC_h2p(hScaleObj);
00000e  4630              MOV      r0,r6
000010  f7fffffe          BL       GUI_ALLOC_h2p
000014  4604              MOV      r4,r0
;;;251      if (pScaleObj) {
000016  b144              CBZ      r4,|L3.42|
;;;252        pOldFont = pScaleObj->Props.pFont;
000018  6927              LDR      r7,[r4,#0x10]
;;;253        if (pScaleObj->Props.pFont != pFont) {
00001a  6920              LDR      r0,[r4,#0x10]
00001c  42a8              CMP      r0,r5
00001e  d004              BEQ      |L3.42|
;;;254          pScaleObj->Props.pFont = pFont;
000020  6125              STR      r5,[r4,#0x10]
;;;255          WM_InvalidateWindow(pScaleObj->PaintObj.hGraph);
000022  f9b40008          LDRSH    r0,[r4,#8]
000026  f7fffffe          BL       WM_InvalidateWindow
                  |L3.42|
;;;256        }
;;;257      }
;;;258      WM_UNLOCK();
00002a  f7fffffe          BL       GUI_Unlock
;;;259      return pOldFont;
00002e  4638              MOV      r0,r7
;;;260    }
000030  e8bd81f0          POP      {r4-r8,pc}
;;;261    
                          ENDP


                          AREA ||i.GRAPH_SCALE_SetNumDecs||, CODE, READONLY, ALIGN=1

                  GRAPH_SCALE_SetNumDecs PROC
;;;325    */
;;;326    int GRAPH_SCALE_SetNumDecs(GRAPH_SCALE_Handle hScaleObj, int NumDecs) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
000006  460d              MOV      r5,r1
;;;327      int OldValue = 0;
000008  2700              MOVS     r7,#0
;;;328      GRAPH_SCALE_OBJ * pScaleObj;
;;;329      WM_LOCK();
00000a  f7fffffe          BL       GUI_Lock
;;;330      pScaleObj = (GRAPH_SCALE_OBJ *)GUI_ALLOC_h2p(hScaleObj);
00000e  4630              MOV      r0,r6
000010  f7fffffe          BL       GUI_ALLOC_h2p
000014  4604              MOV      r4,r0
;;;331      if (pScaleObj) {
000016  b144              CBZ      r4,|L4.42|
;;;332        OldValue = pScaleObj->NumDecs;
000018  6ae7              LDR      r7,[r4,#0x2c]
;;;333        if (pScaleObj->NumDecs != NumDecs) {
00001a  6ae0              LDR      r0,[r4,#0x2c]
00001c  42a8              CMP      r0,r5
00001e  d004              BEQ      |L4.42|
;;;334          pScaleObj->NumDecs = NumDecs;
000020  62e5              STR      r5,[r4,#0x2c]
;;;335          WM_InvalidateWindow(pScaleObj->PaintObj.hGraph);
000022  f9b40008          LDRSH    r0,[r4,#8]
000026  f7fffffe          BL       WM_InvalidateWindow
                  |L4.42|
;;;336        }
;;;337      }
;;;338      WM_UNLOCK();
00002a  f7fffffe          BL       GUI_Unlock
;;;339      return OldValue;
00002e  4638              MOV      r0,r7
;;;340    }
000030  e8bd81f0          POP      {r4-r8,pc}
;;;341    
                          ENDP


                          AREA ||i.GRAPH_SCALE_SetOff||, CODE, READONLY, ALIGN=1

                  GRAPH_SCALE_SetOff PROC
;;;205    */
;;;206    int GRAPH_SCALE_SetOff(GRAPH_SCALE_Handle hScaleObj, int Off) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
000006  460d              MOV      r5,r1
;;;207      int OldValue = 0;
000008  2700              MOVS     r7,#0
;;;208      GRAPH_SCALE_OBJ * pScaleObj;
;;;209      WM_LOCK();
00000a  f7fffffe          BL       GUI_Lock
;;;210      pScaleObj = (GRAPH_SCALE_OBJ *)GUI_ALLOC_h2p(hScaleObj);
00000e  4630              MOV      r0,r6
000010  f7fffffe          BL       GUI_ALLOC_h2p
000014  4604              MOV      r4,r0
;;;211      if (pScaleObj) {
000016  b144              CBZ      r4,|L5.42|
;;;212        OldValue = pScaleObj->Off;
000018  6a27              LDR      r7,[r4,#0x20]
;;;213        if (pScaleObj->Off != Off) {
00001a  6a20              LDR      r0,[r4,#0x20]
00001c  42a8              CMP      r0,r5
00001e  d004              BEQ      |L5.42|
;;;214          pScaleObj->Off = Off;
000020  6225              STR      r5,[r4,#0x20]
;;;215          WM_InvalidateWindow(pScaleObj->PaintObj.hGraph);
000022  f9b40008          LDRSH    r0,[r4,#8]
000026  f7fffffe          BL       WM_InvalidateWindow
                  |L5.42|
;;;216        }
;;;217      }
;;;218      WM_UNLOCK();
00002a  f7fffffe          BL       GUI_Unlock
;;;219      return OldValue;
00002e  4638              MOV      r0,r7
;;;220    }
000030  e8bd81f0          POP      {r4-r8,pc}
;;;221    
                          ENDP


                          AREA ||i.GRAPH_SCALE_SetPos||, CODE, READONLY, ALIGN=1

                  GRAPH_SCALE_SetPos PROC
;;;285    */
;;;286    int GRAPH_SCALE_SetPos(GRAPH_SCALE_Handle hScaleObj, int Pos) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
000006  460d              MOV      r5,r1
;;;287      int OldPos = 0;
000008  2700              MOVS     r7,#0
;;;288      GRAPH_SCALE_OBJ * pScaleObj;
;;;289      WM_LOCK();
00000a  f7fffffe          BL       GUI_Lock
;;;290      pScaleObj = (GRAPH_SCALE_OBJ *)GUI_ALLOC_h2p(hScaleObj);
00000e  4630              MOV      r0,r6
000010  f7fffffe          BL       GUI_ALLOC_h2p
000014  4604              MOV      r4,r0
;;;291      if (pScaleObj) {
000016  b144              CBZ      r4,|L6.42|
;;;292        OldPos = pScaleObj->Pos;
000018  6967              LDR      r7,[r4,#0x14]
;;;293        if (pScaleObj->Pos != Pos) {
00001a  6960              LDR      r0,[r4,#0x14]
00001c  42a8              CMP      r0,r5
00001e  d004              BEQ      |L6.42|
;;;294          pScaleObj->Pos = Pos;
000020  6165              STR      r5,[r4,#0x14]
;;;295          WM_InvalidateWindow(pScaleObj->PaintObj.hGraph);
000022  f9b40008          LDRSH    r0,[r4,#8]
000026  f7fffffe          BL       WM_InvalidateWindow
                  |L6.42|
;;;296        }
;;;297      }
;;;298      WM_UNLOCK();
00002a  f7fffffe          BL       GUI_Unlock
;;;299      return OldPos;
00002e  4638              MOV      r0,r7
;;;300    }
000030  e8bd81f0          POP      {r4-r8,pc}
;;;301    
                          ENDP


                          AREA ||i.GRAPH_SCALE_SetTextColor||, CODE, READONLY, ALIGN=1

                  GRAPH_SCALE_SetTextColor PROC
;;;265    */
;;;266    GUI_COLOR GRAPH_SCALE_SetTextColor(GRAPH_SCALE_Handle hScaleObj, GUI_COLOR Color) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
000006  460d              MOV      r5,r1
;;;267      GUI_COLOR OldColor = 0;
000008  2700              MOVS     r7,#0
;;;268      GRAPH_SCALE_OBJ * pScaleObj;
;;;269      WM_LOCK();
00000a  f7fffffe          BL       GUI_Lock
;;;270      pScaleObj = (GRAPH_SCALE_OBJ *)GUI_ALLOC_h2p(hScaleObj);
00000e  4630              MOV      r0,r6
000010  f7fffffe          BL       GUI_ALLOC_h2p
000014  4604              MOV      r4,r0
;;;271      if (pScaleObj) {
000016  b144              CBZ      r4,|L7.42|
;;;272        OldColor = pScaleObj->Props.TextColor;
000018  68e7              LDR      r7,[r4,#0xc]
;;;273        if (pScaleObj->Props.TextColor != Color) {
00001a  68e0              LDR      r0,[r4,#0xc]
00001c  42a8              CMP      r0,r5
00001e  d004              BEQ      |L7.42|
;;;274          pScaleObj->Props.TextColor = Color;
000020  60e5              STR      r5,[r4,#0xc]
;;;275          WM_InvalidateWindow(pScaleObj->PaintObj.hGraph);
000022  f9b40008          LDRSH    r0,[r4,#8]
000026  f7fffffe          BL       WM_InvalidateWindow
                  |L7.42|
;;;276        }
;;;277      }
;;;278      WM_UNLOCK();
00002a  f7fffffe          BL       GUI_Unlock
;;;279      return OldColor;
00002e  4638              MOV      r0,r7
;;;280    }
000030  e8bd81f0          POP      {r4-r8,pc}
;;;281    
                          ENDP


                          AREA ||i.GRAPH_SCALE_SetTickDist||, CODE, READONLY, ALIGN=1

                  GRAPH_SCALE_SetTickDist PROC
;;;225    */
;;;226    unsigned GRAPH_SCALE_SetTickDist(GRAPH_SCALE_Handle hScaleObj, unsigned Value) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
000006  460d              MOV      r5,r1
;;;227      unsigned OldValue = 0;
000008  2700              MOVS     r7,#0
;;;228      GRAPH_SCALE_OBJ * pScaleObj;
;;;229      WM_LOCK();
00000a  f7fffffe          BL       GUI_Lock
;;;230      pScaleObj = (GRAPH_SCALE_OBJ *)GUI_ALLOC_h2p(hScaleObj);
00000e  4630              MOV      r0,r6
000010  f7fffffe          BL       GUI_ALLOC_h2p
000014  4604              MOV      r4,r0
;;;231      if (pScaleObj) {
000016  b144              CBZ      r4,|L8.42|
;;;232        OldValue = pScaleObj->TickDist;
000018  69e7              LDR      r7,[r4,#0x1c]
;;;233        if (pScaleObj->TickDist != Value) {
00001a  69e0              LDR      r0,[r4,#0x1c]
00001c  42a8              CMP      r0,r5
00001e  d004              BEQ      |L8.42|
;;;234          pScaleObj->TickDist = Value;
000020  61e5              STR      r5,[r4,#0x1c]
;;;235          WM_InvalidateWindow(pScaleObj->PaintObj.hGraph);
000022  f9b40008          LDRSH    r0,[r4,#8]
000026  f7fffffe          BL       WM_InvalidateWindow
                  |L8.42|
;;;236        }
;;;237      }
;;;238      WM_UNLOCK();
00002a  f7fffffe          BL       GUI_Unlock
;;;239      return OldValue;
00002e  4638              MOV      r0,r7
;;;240    }
000030  e8bd81f0          POP      {r4-r8,pc}
;;;241    
                          ENDP


                          AREA ||i._OnPaint||, CODE, READONLY, ALIGN=1

                  _OnPaint PROC
;;;159    */
;;;160    static void _OnPaint(WM_HMEM hScaleObj, GUI_RECT * pRectInvalid) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
;;;161      GRAPH_SCALE_OBJ * pScaleObj;
;;;162      pScaleObj = (GRAPH_SCALE_OBJ *)GUI_ALLOC_h2p(hScaleObj);
000006  4628              MOV      r0,r5
000008  f7fffffe          BL       GUI_ALLOC_h2p
00000c  4604              MOV      r4,r0
;;;163      GUI_SetFont(pScaleObj->Props.pFont);
00000e  6920              LDR      r0,[r4,#0x10]
000010  f7fffffe          BL       GUI_SetFont
;;;164      GUI_SetColor(pScaleObj->Props.TextColor);
000014  68e0              LDR      r0,[r4,#0xc]
000016  f7fffffe          BL       GUI_SetColor
;;;165      GUI_SetTextMode(GUI_TM_TRANS);
00001a  2002              MOVS     r0,#2
00001c  f7fffffe          BL       GUI_SetTextMode
;;;166      if (pScaleObj->Flags & GRAPH_SCALE_CF_VERTICAL) {
000020  f8940024          LDRB     r0,[r4,#0x24]
000024  f0100f01          TST      r0,#1
000028  d004              BEQ      |L9.52|
;;;167        _OnPaintVert(pScaleObj, pRectInvalid);
00002a  4631              MOV      r1,r6
00002c  4620              MOV      r0,r4
00002e  f7fffffe          BL       _OnPaintVert
000032  e003              B        |L9.60|
                  |L9.52|
;;;168      } else {
;;;169        _OnPaintHorz(pScaleObj, pRectInvalid);
000034  4631              MOV      r1,r6
000036  4620              MOV      r0,r4
000038  f7fffffe          BL       _OnPaintHorz
                  |L9.60|
;;;170      }
;;;171    }
00003c  bd70              POP      {r4-r6,pc}
;;;172    
                          ENDP


                          AREA ||i._OnPaintHorz||, CODE, READONLY, ALIGN=1

                  _OnPaintHorz PROC
;;;115    */
;;;116    static void _OnPaintHorz(GRAPH_SCALE_OBJ * pScaleObj, GUI_RECT * pRectInvalid) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b08b              SUB      sp,sp,#0x2c
000006  4604              MOV      r4,r0
000008  4689              MOV      r9,r1
;;;117      int BorderL, BorderR, EffectSize;
;;;118      GRAPH_OBJ * pObj;
;;;119      int yPos, yPosScreen, x0, x1, i, xStart, FontSizeY, xAdd;
;;;120      GUI_RECT Rect;
;;;121      if (!pScaleObj->TickDist) {
00000a  69e0              LDR      r0,[r4,#0x1c]
00000c  b910              CBNZ     r0,|L10.20|
                  |L10.14|
;;;122        return;
;;;123      }
;;;124      pObj = (GRAPH_OBJ *)GUI_ALLOC_h2p(pScaleObj->PaintObj.hGraph);
;;;125      EffectSize = pObj->Widget.pEffect->EffectSize;
;;;126      FontSizeY  = GUI_GetFontSizeY();
;;;127      yPos       = pScaleObj->Pos - EffectSize;
;;;128      yPosScreen = yPos + WM_GetOrgY();
;;;129      if (yPosScreen > pRectInvalid->y1) {
;;;130        return;
;;;131      }
;;;132      if ((yPosScreen + FontSizeY) < pRectInvalid->y0) {
;;;133        return;
;;;134      }
;;;135      WM_GetInsideRectExScrollbar(pScaleObj->PaintObj.hGraph, &Rect);
;;;136      BorderL = pObj->Props.BorderL;
;;;137      BorderR = pObj->Props.BorderR;
;;;138      x0     = Rect.x0 + BorderL;
;;;139      x1     = Rect.x1 - BorderR;
;;;140      xAdd   = (pObj->Flags & GRAPH_CF_GRID_FIXED_X) ? 0 : pObj->ScrollStateH.v;
;;;141      xStart = x0 + pScaleObj->Off + xAdd;
;;;142      while (xStart > x0) {
;;;143        xStart -= pScaleObj->TickDist;
;;;144      }
;;;145      for (i = xStart; i <= x1; i += pScaleObj->TickDist) {
;;;146        if ((i > x0) && (i <= x1)) {
;;;147          float Value;
;;;148          GUI_SetTextAlign(pScaleObj->TextAlign);
;;;149          Value = (i - pScaleObj->Off - BorderL - EffectSize - xAdd) * pScaleObj->Factor;
;;;150          GUI_GotoXY(i, yPos);
;;;151          GUI_DispFloatMin(Value, pScaleObj->NumDecs);
;;;152        }
;;;153      }
;;;154    }
00000e  b00b              ADD      sp,sp,#0x2c
000010  e8bd8ff0          POP      {r4-r11,pc}
                  |L10.20|
000014  f9b40008          LDRSH    r0,[r4,#8]            ;124
000018  f7fffffe          BL       GUI_ALLOC_h2p
00001c  4606              MOV      r6,r0                 ;124
00001e  6a30              LDR      r0,[r6,#0x20]         ;125
000020  6940              LDR      r0,[r0,#0x14]         ;125
000022  9008              STR      r0,[sp,#0x20]         ;125
000024  f7fffffe          BL       GUI_GetFontSizeY
000028  9006              STR      r0,[sp,#0x18]         ;126
00002a  6961              LDR      r1,[r4,#0x14]         ;127
00002c  9808              LDR      r0,[sp,#0x20]         ;127
00002e  1a08              SUBS     r0,r1,r0              ;127
000030  9007              STR      r0,[sp,#0x1c]         ;127
000032  f7fffffe          BL       WM_GetOrgY
000036  4601              MOV      r1,r0                 ;128
000038  9807              LDR      r0,[sp,#0x1c]         ;128
00003a  eb010a00          ADD      r10,r1,r0             ;128
00003e  f9b90006          LDRSH    r0,[r9,#6]            ;129
000042  4550              CMP      r0,r10                ;129
000044  da00              BGE      |L10.72|
000046  e7e2              B        |L10.14|
                  |L10.72|
000048  9806              LDR      r0,[sp,#0x18]         ;132
00004a  4450              ADD      r0,r0,r10             ;132
00004c  f9b91002          LDRSH    r1,[r9,#2]            ;132
000050  4288              CMP      r0,r1                 ;132
000052  da00              BGE      |L10.86|
000054  e7db              B        |L10.14|
                  |L10.86|
000056  f9b40008          LDRSH    r0,[r4,#8]            ;135
00005a  a903              ADD      r1,sp,#0xc            ;135
00005c  f7fffffe          BL       WM_GetInsideRectExScrollbar
000060  6cb0              LDR      r0,[r6,#0x48]         ;136
000062  900a              STR      r0,[sp,#0x28]         ;136
000064  6d30              LDR      r0,[r6,#0x50]         ;137
000066  9009              STR      r0,[sp,#0x24]         ;137
000068  f9bd100c          LDRSH    r1,[sp,#0xc]          ;138
00006c  980a              LDR      r0,[sp,#0x28]         ;138
00006e  180f              ADDS     r7,r1,r0              ;138
000070  f9bd1010          LDRSH    r1,[sp,#0x10]         ;139
000074  9809              LDR      r0,[sp,#0x24]         ;139
000076  eba10b00          SUB      r11,r1,r0             ;139
00007a  f896006c          LDRB     r0,[r6,#0x6c]         ;140
00007e  f0100f01          TST      r0,#1                 ;140
000082  d001              BEQ      |L10.136|
000084  2000              MOVS     r0,#0                 ;140
000086  e001              B        |L10.140|
                  |L10.136|
000088  2080              MOVS     r0,#0x80              ;140
00008a  5980              LDR      r0,[r0,r6]            ;140
                  |L10.140|
00008c  9005              STR      r0,[sp,#0x14]         ;140
00008e  6a20              LDR      r0,[r4,#0x20]         ;141
000090  19c1              ADDS     r1,r0,r7              ;141
000092  9805              LDR      r0,[sp,#0x14]         ;141
000094  eb010800          ADD      r8,r1,r0              ;141
000098  e002              B        |L10.160|
                  |L10.154|
00009a  69e0              LDR      r0,[r4,#0x1c]         ;143
00009c  eba80800          SUB      r8,r8,r0              ;143
                  |L10.160|
0000a0  45b8              CMP      r8,r7                 ;142
0000a2  dcfa              BGT      |L10.154|
0000a4  4645              MOV      r5,r8                 ;145
0000a6  e021              B        |L10.236|
                  |L10.168|
0000a8  42bd              CMP      r5,r7                 ;146
0000aa  dd1d              BLE      |L10.232|
0000ac  455d              CMP      r5,r11                ;146
0000ae  dc1b              BGT      |L10.232|
0000b0  69a0              LDR      r0,[r4,#0x18]         ;148
0000b2  f7fffffe          BL       GUI_SetTextAlign
0000b6  6a21              LDR      r1,[r4,#0x20]         ;149
0000b8  1a6a              SUBS     r2,r5,r1              ;149
0000ba  990a              LDR      r1,[sp,#0x28]         ;149
0000bc  1a52              SUBS     r2,r2,r1              ;149
0000be  9908              LDR      r1,[sp,#0x20]         ;149
0000c0  1a52              SUBS     r2,r2,r1              ;149
0000c2  9905              LDR      r1,[sp,#0x14]         ;149
0000c4  1a50              SUBS     r0,r2,r1              ;149
0000c6  f7fffffe          BL       __aeabi_i2f
0000ca  9001              STR      r0,[sp,#4]            ;149
0000cc  6aa1              LDR      r1,[r4,#0x28]         ;149
0000ce  f7fffffe          BL       __aeabi_fmul
0000d2  9002              STR      r0,[sp,#8]            ;149
0000d4  4628              MOV      r0,r5                 ;150
0000d6  9907              LDR      r1,[sp,#0x1c]         ;150
0000d8  f7fffffe          BL       GUI_GotoXY
0000dc  f894102c          LDRB     r1,[r4,#0x2c]         ;151
0000e0  9802              LDR      r0,[sp,#8]            ;151
0000e2  f7fffffe          BL       GUI_DispFloatMin
0000e6  bf00              NOP                            ;152
                  |L10.232|
0000e8  69e0              LDR      r0,[r4,#0x1c]         ;145
0000ea  4405              ADD      r5,r5,r0              ;145
                  |L10.236|
0000ec  455d              CMP      r5,r11                ;145
0000ee  dddb              BLE      |L10.168|
0000f0  bf00              NOP      
0000f2  e78c              B        |L10.14|
;;;155    
                          ENDP


                          AREA ||i._OnPaintVert||, CODE, READONLY, ALIGN=1

                  _OnPaintVert PROC
;;;65     */
;;;66     static void _OnPaintVert(GRAPH_SCALE_OBJ * pScaleObj, GUI_RECT * pRectInvalid) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b08b              SUB      sp,sp,#0x2c
000006  4604              MOV      r4,r0
000008  468a              MOV      r10,r1
;;;67       int BorderT, BorderB, EffectSize;
;;;68       GRAPH_OBJ * pObj;
;;;69       int xPos, xPosScreen, y0, y1, i, yStart, FontSizeY, TextOffY;
;;;70       GUI_RECT Rect;
;;;71       if (!pScaleObj->TickDist) {
00000a  69e0              LDR      r0,[r4,#0x1c]
00000c  b910              CBNZ     r0,|L11.20|
                  |L11.14|
;;;72         return;
;;;73       }
;;;74       pObj = (GRAPH_OBJ *)GUI_ALLOC_h2p(pScaleObj->PaintObj.hGraph);
;;;75       EffectSize = pObj->Widget.pEffect->EffectSize;
;;;76       xPos       = pScaleObj->Pos + EffectSize;
;;;77       xPosScreen = xPos + WM_GetOrgX();
;;;78       switch (pScaleObj->TextAlign) {
;;;79       case GUI_TA_RIGHT:
;;;80         if (pRectInvalid->x0 > xPosScreen) {
;;;81           return;
;;;82         }
;;;83         break;
;;;84       case GUI_TA_LEFT:
;;;85         if (pRectInvalid->x1 < xPosScreen) {
;;;86           return;
;;;87         }
;;;88         break;
;;;89       }
;;;90       WM_GetInsideRectExScrollbar(pScaleObj->PaintObj.hGraph, &Rect);
;;;91       BorderT = pObj->Props.BorderT;
;;;92       BorderB = pObj->Props.BorderB;
;;;93       FontSizeY = GUI_GetFontSizeY();
;;;94       TextOffY  = FontSizeY / 2;
;;;95       y0     = Rect.y0 + BorderT;
;;;96       y1     = Rect.y1 - BorderB;
;;;97       yStart = y1 - pScaleObj->Off + pObj->ScrollStateV.v;
;;;98       while (yStart < y1) {
;;;99         yStart += pScaleObj->TickDist;
;;;100      }
;;;101      for (i = yStart; i >= y0; i -= pScaleObj->TickDist) {
;;;102        if ((i >= y0) && (i <= y1)) {
;;;103          float Value;
;;;104          GUI_SetTextAlign(pScaleObj->TextAlign);
;;;105          Value = (y1 - i - pScaleObj->Off + pObj->ScrollStateV.v) * pScaleObj->Factor;
;;;106          GUI_GotoXY(xPos, i - TextOffY);
;;;107          GUI_DispFloatMin(Value, pScaleObj->NumDecs);
;;;108        }
;;;109      }
;;;110    }
00000e  b00b              ADD      sp,sp,#0x2c
000010  e8bd8ff0          POP      {r4-r11,pc}
                  |L11.20|
000014  f9b40008          LDRSH    r0,[r4,#8]            ;74
000018  f7fffffe          BL       GUI_ALLOC_h2p
00001c  4606              MOV      r6,r0                 ;74
00001e  6a30              LDR      r0,[r6,#0x20]         ;75
000020  6940              LDR      r0,[r0,#0x14]         ;75
000022  9008              STR      r0,[sp,#0x20]         ;75
000024  6961              LDR      r1,[r4,#0x14]         ;76
000026  9808              LDR      r0,[sp,#0x20]         ;76
000028  eb010b00          ADD      r11,r1,r0             ;76
00002c  f7fffffe          BL       WM_GetOrgX
000030  4458              ADD      r0,r0,r11             ;77
000032  9007              STR      r0,[sp,#0x1c]         ;77
000034  69a0              LDR      r0,[r4,#0x18]         ;78
000036  b140              CBZ      r0,|L11.74|
000038  2801              CMP      r0,#1                 ;78
00003a  d10d              BNE      |L11.88|
00003c  f9ba1000          LDRSH    r1,[r10,#0]           ;80
000040  9807              LDR      r0,[sp,#0x1c]         ;80
000042  4281              CMP      r1,r0                 ;80
000044  dd00              BLE      |L11.72|
000046  e7e2              B        |L11.14|
                  |L11.72|
000048  e006              B        |L11.88|
                  |L11.74|
00004a  f9ba1004          LDRSH    r1,[r10,#4]           ;85
00004e  9807              LDR      r0,[sp,#0x1c]         ;85
000050  4281              CMP      r1,r0                 ;85
000052  da00              BGE      |L11.86|
000054  e7db              B        |L11.14|
                  |L11.86|
000056  bf00              NOP                            ;88
                  |L11.88|
000058  bf00              NOP                            ;83
00005a  f9b40008          LDRSH    r0,[r4,#8]            ;90
00005e  a903              ADD      r1,sp,#0xc            ;90
000060  f7fffffe          BL       WM_GetInsideRectExScrollbar
000064  6cf0              LDR      r0,[r6,#0x4c]         ;91
000066  900a              STR      r0,[sp,#0x28]         ;91
000068  6d70              LDR      r0,[r6,#0x54]         ;92
00006a  9009              STR      r0,[sp,#0x24]         ;92
00006c  f7fffffe          BL       GUI_GetFontSizeY
000070  4681              MOV      r9,r0                 ;93
000072  4648              MOV      r0,r9                 ;94
000074  eb0971d0          ADD      r1,r9,r0,LSR #31      ;94
000078  1049              ASRS     r1,r1,#1              ;94
00007a  9105              STR      r1,[sp,#0x14]         ;94
00007c  f9bd100e          LDRSH    r1,[sp,#0xe]          ;95
000080  980a              LDR      r0,[sp,#0x28]         ;95
000082  4408              ADD      r0,r0,r1              ;95
000084  9006              STR      r0,[sp,#0x18]         ;95
000086  f9bd1012          LDRSH    r1,[sp,#0x12]         ;96
00008a  9809              LDR      r0,[sp,#0x24]         ;96
00008c  1a0f              SUBS     r7,r1,r0              ;96
00008e  6a20              LDR      r0,[r4,#0x20]         ;97
000090  1a39              SUBS     r1,r7,r0              ;97
000092  6f70              LDR      r0,[r6,#0x74]         ;97
000094  eb010800          ADD      r8,r1,r0              ;97
000098  e001              B        |L11.158|
                  |L11.154|
00009a  69e0              LDR      r0,[r4,#0x1c]         ;99
00009c  4480              ADD      r8,r8,r0              ;99
                  |L11.158|
00009e  45b8              CMP      r8,r7                 ;98
0000a0  dbfb              BLT      |L11.154|
0000a2  4645              MOV      r5,r8                 ;101
0000a4  e020              B        |L11.232|
                  |L11.166|
0000a6  9806              LDR      r0,[sp,#0x18]         ;102
0000a8  4285              CMP      r5,r0                 ;102
0000aa  db1b              BLT      |L11.228|
0000ac  42bd              CMP      r5,r7                 ;102
0000ae  dc19              BGT      |L11.228|
0000b0  69a0              LDR      r0,[r4,#0x18]         ;104
0000b2  f7fffffe          BL       GUI_SetTextAlign
0000b6  1b79              SUBS     r1,r7,r5              ;105
0000b8  6a22              LDR      r2,[r4,#0x20]         ;105
0000ba  1a8a              SUBS     r2,r1,r2              ;105
0000bc  6f71              LDR      r1,[r6,#0x74]         ;105
0000be  1850              ADDS     r0,r2,r1              ;105
0000c0  f7fffffe          BL       __aeabi_i2f
0000c4  9001              STR      r0,[sp,#4]            ;105
0000c6  6aa1              LDR      r1,[r4,#0x28]         ;105
0000c8  f7fffffe          BL       __aeabi_fmul
0000cc  9002              STR      r0,[sp,#8]            ;105
0000ce  9805              LDR      r0,[sp,#0x14]         ;106
0000d0  1a29              SUBS     r1,r5,r0              ;106
0000d2  4658              MOV      r0,r11                ;106
0000d4  f7fffffe          BL       GUI_GotoXY
0000d8  f894102c          LDRB     r1,[r4,#0x2c]         ;107
0000dc  9802              LDR      r0,[sp,#8]            ;107
0000de  f7fffffe          BL       GUI_DispFloatMin
0000e2  bf00              NOP                            ;108
                  |L11.228|
0000e4  69e0              LDR      r0,[r4,#0x1c]         ;101
0000e6  1a2d              SUBS     r5,r5,r0              ;101
                  |L11.232|
0000e8  9806              LDR      r0,[sp,#0x18]         ;101
0000ea  4285              CMP      r5,r0                 ;101
0000ec  dadb              BGE      |L11.166|
0000ee  bf00              NOP      
0000f0  e78d              B        |L11.14|
;;;111    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  _Props
                          DCD      0x00ffffff
                          DCD      GUI_Font6x8
