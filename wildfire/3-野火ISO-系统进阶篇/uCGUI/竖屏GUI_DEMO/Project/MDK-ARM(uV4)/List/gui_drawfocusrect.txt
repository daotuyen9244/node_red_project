; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\gui_drawfocusrect.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\gui_drawfocusrect.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Core\GUI_DrawFocusRect.c]
                          THUMB

                          AREA ||i.GUI_DrawFocusRect||, CODE, READONLY, ALIGN=2

                  GUI_DrawFocusRect PROC
;;;52     */
;;;53     void GUI_DrawFocusRect(const GUI_RECT *pRect, int Dist) {
000000  b57c              PUSH     {r2-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;54       GUI_RECT r;
;;;55       GUI__ReduceRect(&r, pRect, Dist);
000006  462a              MOV      r2,r5
000008  4621              MOV      r1,r4
00000a  4668              MOV      r0,sp
00000c  f7fffffe          BL       GUI__ReduceRect
;;;56       GUI_LOCK();
000010  f7fffffe          BL       GUI_Lock
;;;57       #if (GUI_WINSUPPORT)
;;;58         WM_ADDORG(r.x0, r.y0);
000014  f8bd0000          LDRH     r0,[sp,#0]
000018  4918              LDR      r1,|L1.124|
00001a  f8b11044          LDRH     r1,[r1,#0x44]  ; GUI_Context
00001e  4408              ADD      r0,r0,r1
000020  b200              SXTH     r0,r0
000022  f8ad0000          STRH     r0,[sp,#0]
000026  f8bd0002          LDRH     r0,[sp,#2]
00002a  4914              LDR      r1,|L1.124|
00002c  f8b11048          LDRH     r1,[r1,#0x48]  ; GUI_Context
000030  4408              ADD      r0,r0,r1
000032  b200              SXTH     r0,r0
000034  f8ad0002          STRH     r0,[sp,#2]
;;;59         WM_ADDORG(r.x1, r.y1);
000038  f8bd0004          LDRH     r0,[sp,#4]
00003c  490f              LDR      r1,|L1.124|
00003e  f8b11044          LDRH     r1,[r1,#0x44]  ; GUI_Context
000042  4408              ADD      r0,r0,r1
000044  b200              SXTH     r0,r0
000046  f8ad0004          STRH     r0,[sp,#4]
00004a  f8bd0006          LDRH     r0,[sp,#6]
00004e  490b              LDR      r1,|L1.124|
000050  f8b11048          LDRH     r1,[r1,#0x48]  ; GUI_Context
000054  4408              ADD      r0,r0,r1
000056  b200              SXTH     r0,r0
000058  f8ad0006          STRH     r0,[sp,#6]
;;;60         WM_ITERATE_START(&r); {
00005c  4668              MOV      r0,sp
00005e  f7fffffe          BL       WM__InitIVRSearch
000062  b138              CBZ      r0,|L1.116|
000064  bf00              NOP      
                  |L1.102|
;;;61       #endif
;;;62         _DrawFocusRect(&r);
000066  4668              MOV      r0,sp
000068  f7fffffe          BL       _DrawFocusRect
;;;63       #if (GUI_WINSUPPORT)
;;;64         } WM_ITERATE_END();
00006c  f7fffffe          BL       WM__GetNextIVR
000070  2800              CMP      r0,#0
000072  d1f8              BNE      |L1.102|
                  |L1.116|
;;;65       #endif
;;;66       GUI_UNLOCK();
000074  f7fffffe          BL       GUI_Unlock
;;;67     }
000078  bd7c              POP      {r2-r6,pc}
;;;68     
                          ENDP

00007a  0000              DCW      0x0000
                  |L1.124|
                          DCD      GUI_Context

                          AREA ||i._DrawFocusRect||, CODE, READONLY, ALIGN=1

                  _DrawFocusRect PROC
;;;31     */
;;;32     static void _DrawFocusRect(const GUI_RECT* pr) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;33       int i; 
;;;34       for (i = pr->x0; i <= pr->x1; i += 2) {
000004  f9b45000          LDRSH    r5,[r4,#0]
000008  e00a              B        |L2.32|
                  |L2.10|
;;;35         LCD_DrawPixel(i, pr->y0);
00000a  f9b41002          LDRSH    r1,[r4,#2]
00000e  4628              MOV      r0,r5
000010  f7fffffe          BL       LCD_DrawPixel
;;;36         LCD_DrawPixel(i, pr->y1);
000014  f9b41006          LDRSH    r1,[r4,#6]
000018  4628              MOV      r0,r5
00001a  f7fffffe          BL       LCD_DrawPixel
00001e  1cad              ADDS     r5,r5,#2              ;34
                  |L2.32|
000020  f9b40004          LDRSH    r0,[r4,#4]            ;34
000024  42a8              CMP      r0,r5                 ;34
000026  daf0              BGE      |L2.10|
;;;37       }
;;;38       for (i = pr->y0; i <= pr->y1; i += 2) {
000028  f9b45002          LDRSH    r5,[r4,#2]
00002c  e00a              B        |L2.68|
                  |L2.46|
;;;39         LCD_DrawPixel(pr->x0, i);
00002e  f9b40000          LDRSH    r0,[r4,#0]
000032  4629              MOV      r1,r5
000034  f7fffffe          BL       LCD_DrawPixel
;;;40         LCD_DrawPixel(pr->x1, i);
000038  f9b40004          LDRSH    r0,[r4,#4]
00003c  4629              MOV      r1,r5
00003e  f7fffffe          BL       LCD_DrawPixel
000042  1cad              ADDS     r5,r5,#2              ;38
                  |L2.68|
000044  f9b40006          LDRSH    r0,[r4,#6]            ;38
000048  42a8              CMP      r0,r5                 ;38
00004a  daf0              BGE      |L2.46|
;;;41       }
;;;42     }
00004c  bd70              POP      {r4-r6,pc}
;;;43     /*********************************************************************
                          ENDP

