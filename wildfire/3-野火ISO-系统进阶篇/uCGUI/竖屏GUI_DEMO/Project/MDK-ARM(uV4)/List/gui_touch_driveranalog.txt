; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\gui_touch_driveranalog.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\gui_touch_driveranalog.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Core\GUI_TOUCH_DriverAnalog.c]
                          THUMB

                          AREA ||i.GUI_TOUCH_Calibrate||, CODE, READONLY, ALIGN=2

                  GUI_TOUCH_Calibrate PROC
;;;213    */
;;;214    int GUI_TOUCH_Calibrate(int Coord, int Log0, int Log1, int Phys0, int Phys1) {
000000  e92d4ff8          PUSH     {r3-r11,lr}
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
00000a  4698              MOV      r8,r3
00000c  9d0a              LDR      r5,[sp,#0x28]
;;;215      int l0 = 0;
00000e  f04f0900          MOV      r9,#0
;;;216      int l1 = (Coord == GUI_COORD_X) ? LCD_XSIZE - 1 : LCD_YSIZE - 1;
000012  b90c              CBNZ     r4,|L1.24|
000014  20ef              MOVS     r0,#0xef
000016  e001              B        |L1.28|
                  |L1.24|
000018  f240103f          MOV      r0,#0x13f
                  |L1.28|
00001c  4682              MOV      r10,r0
;;;217      if (labs(Phys0 - Phys1) < 20) {
00001e  ebb80005          SUBS     r0,r8,r5
000022  d401              BMI      |L1.40|
000024  4601              MOV      r1,r0
000026  e000              B        |L1.42|
                  |L1.40|
000028  4241              RSBS     r1,r0,#0
                  |L1.42|
00002a  2914              CMP      r1,#0x14
00002c  da02              BGE      |L1.52|
;;;218        return 1;
00002e  2001              MOVS     r0,#1
                  |L1.48|
;;;219      }
;;;220      if (labs(Log0 - Log1) < 20) {
;;;221        return 1;
;;;222      }
;;;223      xyMinMax[Coord].Min = _Log2Phys(l0, Log0, Log1, Phys0, Phys1);  
;;;224      xyMinMax[Coord].Max = _Log2Phys(l1, Log0, Log1, Phys0, Phys1);
;;;225      return 0;
;;;226    }
000030  e8bd8ff8          POP      {r3-r11,pc}
                  |L1.52|
000034  1bf0              SUBS     r0,r6,r7              ;220
000036  d401              BMI      |L1.60|
000038  4601              MOV      r1,r0                 ;220
00003a  e000              B        |L1.62|
                  |L1.60|
00003c  4241              RSBS     r1,r0,#0              ;220
                  |L1.62|
00003e  2914              CMP      r1,#0x14              ;220
000040  da01              BGE      |L1.70|
000042  2001              MOVS     r0,#1                 ;221
000044  e7f4              B        |L1.48|
                  |L1.70|
000046  4643              MOV      r3,r8                 ;223
000048  463a              MOV      r2,r7                 ;223
00004a  4631              MOV      r1,r6                 ;223
00004c  4648              MOV      r0,r9                 ;223
00004e  9500              STR      r5,[sp,#0]            ;223
000050  f7fffffe          BL       _Log2Phys
000054  4907              LDR      r1,|L1.116|
000056  f8410034          STR      r0,[r1,r4,LSL #3]     ;223
00005a  4643              MOV      r3,r8                 ;224
00005c  463a              MOV      r2,r7                 ;224
00005e  4631              MOV      r1,r6                 ;224
000060  4650              MOV      r0,r10                ;224
000062  9500              STR      r5,[sp,#0]            ;224
000064  f7fffffe          BL       _Log2Phys
000068  4902              LDR      r1,|L1.116|
00006a  eb0101c4          ADD      r1,r1,r4,LSL #3       ;224
00006e  6048              STR      r0,[r1,#4]            ;224
000070  2000              MOVS     r0,#0                 ;225
000072  e7dd              B        |L1.48|
;;;227    
                          ENDP

                  |L1.116|
                          DCD      xyMinMax

                          AREA ||i.GUI_TOUCH_Exec||, CODE, READONLY, ALIGN=2

                  GUI_TOUCH_Exec PROC
;;;240    */
;;;241    void GUI_TOUCH_Exec(void) {
000000  b570              PUSH     {r4-r6,lr}
;;;242      #ifndef WIN32
;;;243      static U8 ReadState;
;;;244      int x,y;
;;;245      /* calculate Min / Max values */
;;;246      if (xyMinMax[GUI_COORD_X].Min < xyMinMax[GUI_COORD_X].Max) {
000002  4837              LDR      r0,|L2.224|
000004  6800              LDR      r0,[r0,#0]  ; xyMinMax
000006  4936              LDR      r1,|L2.224|
000008  6849              LDR      r1,[r1,#4]  ; xyMinMax
00000a  4288              CMP      r0,r1
00000c  da08              BGE      |L2.32|
;;;247        xMin = xyMinMax[GUI_COORD_X].Min;
00000e  4834              LDR      r0,|L2.224|
000010  6800              LDR      r0,[r0,#0]  ; xyMinMax
000012  4934              LDR      r1,|L2.228|
000014  6008              STR      r0,[r1,#0]  ; xMin
;;;248        xMax = xyMinMax[GUI_COORD_X].Max;
000016  4832              LDR      r0,|L2.224|
000018  6840              LDR      r0,[r0,#4]  ; xyMinMax
00001a  4933              LDR      r1,|L2.232|
00001c  6008              STR      r0,[r1,#0]  ; xMax
00001e  e007              B        |L2.48|
                  |L2.32|
;;;249      } else {
;;;250        xMax = xyMinMax[GUI_COORD_X].Min;
000020  482f              LDR      r0,|L2.224|
000022  6800              LDR      r0,[r0,#0]  ; xyMinMax
000024  4930              LDR      r1,|L2.232|
000026  6008              STR      r0,[r1,#0]  ; xMax
;;;251        xMin = xyMinMax[GUI_COORD_X].Max;
000028  482d              LDR      r0,|L2.224|
00002a  6840              LDR      r0,[r0,#4]  ; xyMinMax
00002c  492d              LDR      r1,|L2.228|
00002e  6008              STR      r0,[r1,#0]  ; xMin
                  |L2.48|
;;;252      }
;;;253      if (xyMinMax[GUI_COORD_Y].Min < xyMinMax[GUI_COORD_Y].Max) {
000030  482b              LDR      r0,|L2.224|
000032  6881              LDR      r1,[r0,#8]  ; xyMinMax
000034  68c0              LDR      r0,[r0,#0xc]
000036  4281              CMP      r1,r0
000038  da08              BGE      |L2.76|
;;;254        yMin = xyMinMax[GUI_COORD_Y].Min;
00003a  4829              LDR      r0,|L2.224|
00003c  6880              LDR      r0,[r0,#8]  ; xyMinMax
00003e  492b              LDR      r1,|L2.236|
000040  6008              STR      r0,[r1,#0]  ; yMin
;;;255        yMax = xyMinMax[GUI_COORD_Y].Max;
000042  4827              LDR      r0,|L2.224|
000044  68c0              LDR      r0,[r0,#0xc]
000046  492a              LDR      r1,|L2.240|
000048  6008              STR      r0,[r1,#0]  ; yMax
00004a  e007              B        |L2.92|
                  |L2.76|
;;;256      } else {
;;;257        yMax = xyMinMax[GUI_COORD_Y].Min;
00004c  4824              LDR      r0,|L2.224|
00004e  6880              LDR      r0,[r0,#8]  ; xyMinMax
000050  4927              LDR      r1,|L2.240|
000052  6008              STR      r0,[r1,#0]  ; yMax
;;;258        yMin = xyMinMax[GUI_COORD_Y].Max;
000054  4822              LDR      r0,|L2.224|
000056  68c0              LDR      r0,[r0,#0xc]
000058  4924              LDR      r1,|L2.236|
00005a  6008              STR      r0,[r1,#0]  ; yMin
                  |L2.92|
;;;259      }
;;;260      /* Execute the state machine which reads the touch */
;;;261      switch (ReadState) {
00005c  4825              LDR      r0,|L2.244|
00005e  7800              LDRB     r0,[r0,#0]  ; ReadState
000060  b958              CBNZ     r0,|L2.122|
;;;262      case 0:
;;;263        yPhys = TOUCH_X_MeasureY();
000062  f7fffffe          BL       GUI_TOUCH_X_MeasureY
000066  4924              LDR      r1,|L2.248|
000068  6008              STR      r0,[r1,#0]  ; yPhys
;;;264        TOUCH_X_ActivateY();  /* Prepare X- measurement */
00006a  f7fffffe          BL       GUI_TOUCH_X_ActivateY
;;;265        ReadState++;
00006e  4821              LDR      r0,|L2.244|
000070  7800              LDRB     r0,[r0,#0]  ; ReadState
000072  1c40              ADDS     r0,r0,#1
000074  491f              LDR      r1,|L2.244|
000076  7008              STRB     r0,[r1,#0]
;;;266        break;
000078  e02f              B        |L2.218|
                  |L2.122|
;;;267      default:
;;;268        xPhys = TOUCH_X_MeasureX();
00007a  f7fffffe          BL       GUI_TOUCH_X_MeasureX
00007e  491f              LDR      r1,|L2.252|
000080  6008              STR      r0,[r1,#0]  ; xPhys
;;;269        TOUCH_X_ActivateX();  /* Prepare Y- measurement */
000082  f7fffffe          BL       GUI_TOUCH_X_ActivateX
;;;270        /* Convert values into logical values */
;;;271        #if !GUI_TOUCH_SWAP_XY   /* Is X/Y swapped ? */
;;;272          x = xPhys;
000086  481d              LDR      r0,|L2.252|
000088  6805              LDR      r5,[r0,#0]  ; xPhys
;;;273          y = yPhys;
00008a  481b              LDR      r0,|L2.248|
00008c  6804              LDR      r4,[r0,#0]  ; yPhys
;;;274        #else
;;;275          x = yPhys;
;;;276          y = xPhys;
;;;277        #endif
;;;278        if ((x < xMin) || (x > xMax)  || (y < yMin) || (y > yMax)) {
00008e  4815              LDR      r0,|L2.228|
000090  6800              LDR      r0,[r0,#0]  ; xMin
000092  4285              CMP      r5,r0
000094  db0b              BLT      |L2.174|
000096  4814              LDR      r0,|L2.232|
000098  6800              LDR      r0,[r0,#0]  ; xMax
00009a  4285              CMP      r5,r0
00009c  dc07              BGT      |L2.174|
00009e  4813              LDR      r0,|L2.236|
0000a0  6800              LDR      r0,[r0,#0]  ; yMin
0000a2  4284              CMP      r4,r0
0000a4  db03              BLT      |L2.174|
0000a6  4812              LDR      r0,|L2.240|
0000a8  6800              LDR      r0,[r0,#0]  ; yMax
0000aa  4284              CMP      r4,r0
0000ac  dd05              BLE      |L2.186|
                  |L2.174|
;;;279          _StoreUnstable(-1, -1);
0000ae  f04f31ff          MOV      r1,#0xffffffff
0000b2  4608              MOV      r0,r1
0000b4  f7fffffe          BL       _StoreUnstable
0000b8  e00b              B        |L2.210|
                  |L2.186|
;;;280        } else {
;;;281          x = _AD2X(x);
0000ba  4628              MOV      r0,r5
0000bc  f7fffffe          BL       _AD2X
0000c0  4605              MOV      r5,r0
;;;282          y = _AD2Y(y);
0000c2  4620              MOV      r0,r4
0000c4  f7fffffe          BL       _AD2Y
0000c8  4604              MOV      r4,r0
;;;283          _StoreUnstable(x, y);
0000ca  4621              MOV      r1,r4
0000cc  4628              MOV      r0,r5
0000ce  f7fffffe          BL       _StoreUnstable
                  |L2.210|
;;;284        }
;;;285        /* Reset state machine */
;;;286        ReadState = 0;
0000d2  2000              MOVS     r0,#0
0000d4  4907              LDR      r1,|L2.244|
0000d6  7008              STRB     r0,[r1,#0]
;;;287        break;
0000d8  bf00              NOP      
                  |L2.218|
0000da  bf00              NOP                            ;266
;;;288      }
;;;289      #endif /* WIN32 */
;;;290    }
0000dc  bd70              POP      {r4-r6,pc}
;;;291    
                          ENDP

0000de  0000              DCW      0x0000
                  |L2.224|
                          DCD      xyMinMax
                  |L2.228|
                          DCD      xMin
                  |L2.232|
                          DCD      xMax
                  |L2.236|
                          DCD      yMin
                  |L2.240|
                          DCD      yMax
                  |L2.244|
                          DCD      ReadState
                  |L2.248|
                          DCD      yPhys
                  |L2.252|
                          DCD      xPhys

                          AREA ||i.GUI_TOUCH_GetCalData||, CODE, READONLY, ALIGN=2

                  GUI_TOUCH_GetCalData PROC
;;;231    */
;;;232    void GUI_TOUCH_GetCalData(int Coord, int* pMin,int* pMax) {
000000  4b04              LDR      r3,|L3.20|
;;;233      *pMin = xyMinMax[Coord].Min;
000002  f8533030          LDR      r3,[r3,r0,LSL #3]
000006  600b              STR      r3,[r1,#0]
;;;234      *pMax = xyMinMax[Coord].Max; 
000008  4b02              LDR      r3,|L3.20|
00000a  eb0303c0          ADD      r3,r3,r0,LSL #3
00000e  685b              LDR      r3,[r3,#4]
000010  6013              STR      r3,[r2,#0]
;;;235    }
000012  4770              BX       lr
;;;236      
                          ENDP

                  |L3.20|
                          DCD      xyMinMax

                          AREA ||i.GUI_TOUCH_GetxPhys||, CODE, READONLY, ALIGN=2

                  GUI_TOUCH_GetxPhys PROC
;;;186    */
;;;187    int  GUI_TOUCH_GetxPhys(void) {
000000  4801              LDR      r0,|L4.8|
;;;188      return xPhys;
000002  6800              LDR      r0,[r0,#0]  ; xPhys
;;;189    }
000004  4770              BX       lr
;;;190    
                          ENDP

000006  0000              DCW      0x0000
                  |L4.8|
                          DCD      xPhys

                          AREA ||i.GUI_TOUCH_GetyPhys||, CODE, READONLY, ALIGN=2

                  GUI_TOUCH_GetyPhys PROC
;;;194    */
;;;195    int  GUI_TOUCH_GetyPhys(void) {
000000  4801              LDR      r0,|L5.8|
;;;196      return yPhys;
000002  6800              LDR      r0,[r0,#0]  ; yPhys
;;;197    }
000004  4770              BX       lr
;;;198    
                          ENDP

000006  0000              DCW      0x0000
                  |L5.8|
                          DCD      yPhys

                          AREA ||i.GUI_TOUCH_SetDefaultCalibration||, CODE, READONLY, ALIGN=2

                  GUI_TOUCH_SetDefaultCalibration PROC
;;;202    */
;;;203    void GUI_TOUCH_SetDefaultCalibration(void) {
000000  f640703d          MOV      r0,#0xf3d
;;;204      xyMinMax[0].Min = GUI_TOUCH_AD_LEFT;
000004  4905              LDR      r1,|L6.28|
000006  6008              STR      r0,[r1,#0]  ; xyMinMax
;;;205      xyMinMax[0].Max = GUI_TOUCH_AD_RIGHT;
000008  20c1              MOVS     r0,#0xc1
00000a  6048              STR      r0,[r1,#4]  ; xyMinMax
;;;206      xyMinMax[1].Min = GUI_TOUCH_AD_TOP;
00000c  f2401011          MOV      r0,#0x111
000010  6088              STR      r0,[r1,#8]  ; xyMinMax
;;;207      xyMinMax[1].Max = GUI_TOUCH_AD_BOTTOM;
000012  f6407183          MOV      r1,#0xf83
000016  4801              LDR      r0,|L6.28|
000018  60c1              STR      r1,[r0,#0xc]
;;;208    }
00001a  4770              BX       lr
;;;209    
                          ENDP

                  |L6.28|
                          DCD      xyMinMax

                          AREA ||i._AD2X||, CODE, READONLY, ALIGN=2

                  _AD2X PROC
;;;128    #ifndef WIN32
;;;129    static int _AD2X(int adx) {
000000  4601              MOV      r1,r0
;;;130      I32 r = adx - xyMinMax[GUI_COORD_X].Min;
000002  4807              LDR      r0,|L7.32|
000004  6800              LDR      r0,[r0,#0]  ; xyMinMax
000006  1a0a              SUBS     r2,r1,r0
;;;131      r *= GUI_TOUCH_XSIZE - 1;
000008  eb021002          ADD      r0,r2,r2,LSL #4
00000c  ebc02202          RSB      r2,r0,r2,LSL #8
;;;132      return r / (xyMinMax[GUI_COORD_X].Max - xyMinMax[GUI_COORD_X].Min);    
000010  4803              LDR      r0,|L7.32|
000012  6840              LDR      r0,[r0,#4]  ; xyMinMax
000014  4b02              LDR      r3,|L7.32|
000016  681b              LDR      r3,[r3,#0]  ; xyMinMax
000018  1ac0              SUBS     r0,r0,r3
00001a  fb92f0f0          SDIV     r0,r2,r0
;;;133    }
00001e  4770              BX       lr
;;;134    
                          ENDP

                  |L7.32|
                          DCD      xyMinMax

                          AREA ||i._AD2Y||, CODE, READONLY, ALIGN=2

                  _AD2Y PROC
;;;141    */
;;;142    static int _AD2Y(int ady) {
000000  4601              MOV      r1,r0
;;;143      I32 r = ady - xyMinMax[GUI_COORD_Y].Min;
000002  4807              LDR      r0,|L8.32|
000004  6880              LDR      r0,[r0,#8]  ; xyMinMax
000006  1a0a              SUBS     r2,r1,r0
;;;144      r *= GUI_TOUCH_YSIZE - 1;
000008  ebc21082          RSB      r0,r2,r2,LSL #6
00000c  eb002202          ADD      r2,r0,r2,LSL #8
;;;145      return r/(xyMinMax[GUI_COORD_Y].Max - xyMinMax[GUI_COORD_Y].Min);    
000010  4803              LDR      r0,|L8.32|
000012  68c0              LDR      r0,[r0,#0xc]
000014  4b02              LDR      r3,|L8.32|
000016  689b              LDR      r3,[r3,#8]  ; xyMinMax
000018  1ac0              SUBS     r0,r0,r3
00001a  fb92f0f0          SDIV     r0,r2,r0
;;;146    }
00001e  4770              BX       lr
;;;147    #endif
                          ENDP

                  |L8.32|
                          DCD      xyMinMax

                          AREA ||i._Log2Phys||, CODE, READONLY, ALIGN=1

                  _Log2Phys PROC
;;;152    */
;;;153    static int _Log2Phys(int l, I32 l0, I32 l1, I32 p0, I32 p1) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  9d04              LDR      r5,[sp,#0x10]
;;;154      return p0+ ((p1 - p0) * (l - l0)) / (l1 - l0);
000006  1ae8              SUBS     r0,r5,r3
000008  1a66              SUBS     r6,r4,r1
00000a  4370              MULS     r0,r6,r0
00000c  1a56              SUBS     r6,r2,r1
00000e  fb90f0f6          SDIV     r0,r0,r6
000012  4418              ADD      r0,r0,r3
;;;155    }
000014  bd70              POP      {r4-r6,pc}
;;;156    
                          ENDP


                          AREA ||i._StoreUnstable||, CODE, READONLY, ALIGN=2

                  _StoreUnstable PROC
;;;160    */
;;;161    static void _StoreUnstable(int x, int y) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
;;;162      static int _xLast = -1;
;;;163      static int _yLast = -1;
;;;164      int xOut, yOut;
;;;165    
;;;166      if ((x != -1) && (y != -1) && (_xLast != -1) && (_yLast != -1)) {
000008  1c78              ADDS     r0,r7,#1
00000a  d00e              BEQ      |L10.42|
00000c  1c60              ADDS     r0,r4,#1
00000e  d00c              BEQ      |L10.42|
000010  480c              LDR      r0,|L10.68|
000012  6800              LDR      r0,[r0,#0]  ; _xLast
000014  1c40              ADDS     r0,r0,#1
000016  d008              BEQ      |L10.42|
000018  480b              LDR      r0,|L10.72|
00001a  6800              LDR      r0,[r0,#0]  ; _yLast
00001c  1c40              ADDS     r0,r0,#1
00001e  d004              BEQ      |L10.42|
;;;167        xOut = _xLast;    
000020  4808              LDR      r0,|L10.68|
000022  6805              LDR      r5,[r0,#0]  ; _xLast
;;;168        yOut = _yLast;    
000024  4808              LDR      r0,|L10.72|
000026  6806              LDR      r6,[r0,#0]  ; _yLast
000028  e002              B        |L10.48|
                  |L10.42|
;;;169      } else {
;;;170        xOut = -1;
00002a  f04f35ff          MOV      r5,#0xffffffff
;;;171        yOut = -1;    
00002e  462e              MOV      r6,r5
                  |L10.48|
;;;172      }
;;;173      _xLast = x;
000030  4804              LDR      r0,|L10.68|
000032  6007              STR      r7,[r0,#0]  ; _xLast
;;;174      _yLast = y;
000034  4804              LDR      r0,|L10.72|
000036  6004              STR      r4,[r0,#0]  ; _yLast
;;;175      GUI_TOUCH_StoreUnstable(xOut, yOut);
000038  4631              MOV      r1,r6
00003a  4628              MOV      r0,r5
00003c  f7fffffe          BL       GUI_TOUCH_StoreUnstable
;;;176    }
000040  e8bd81f0          POP      {r4-r8,pc}
;;;177    /*********************************************************************
                          ENDP

                  |L10.68|
                          DCD      _xLast
                  |L10.72|
                          DCD      _yLast

                          AREA ||.data||, DATA, ALIGN=2

                  xyMinMax
                          DCD      0x00000f3d
                          DCD      0x000000c1
                          DCD      0x00000111
                          DCD      0x00000f83
                  _xLast
                          DCD      0xffffffff
                  _yLast
                          DCD      0xffffffff
                  ReadState
000018  00000000          DCB      0x00,0x00,0x00,0x00
                  xPhys
                          DCD      0x00000000
                  yPhys
                          DCD      0x00000000
                  xMin
                          DCD      0x00000000
                  xMax
                          DCD      0x00000000
                  yMin
                          DCD      0x00000000
                  yMax
                          DCD      0x00000000
