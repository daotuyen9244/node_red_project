; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\edithex.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\edithex.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Widget\EDITHex.c]
                          THUMB

                          AREA ||i.EDIT_SetHexMode||, CODE, READONLY, ALIGN=2

                  EDIT_SetHexMode PROC
;;;187    */
;;;188    void EDIT_SetHexMode(EDIT_Handle hEdit, U32 Value, U32 Min, U32 Max) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4607              MOV      r7,r0
000006  4688              MOV      r8,r1
000008  4691              MOV      r9,r2
00000a  461e              MOV      r6,r3
;;;189      EDIT_Obj* pObj;
;;;190      WM_LOCK();
00000c  f7fffffe          BL       GUI_Lock
;;;191      if (hEdit) {
000010  b35f              CBZ      r7,|L1.106|
;;;192        int MaxLen;
;;;193        pObj = EDIT_H2P(hEdit);
000012  4638              MOV      r0,r7
000014  f7fffffe          BL       GUI_ALLOC_h2p
000018  4604              MOV      r4,r0
;;;194        pObj->pfAddKeyEx = _AddKeyHex;
00001a  4816              LDR      r0,|L1.116|
00001c  64e0              STR      r0,[r4,#0x4c]
;;;195        pObj->pfUpdateBuffer= _UpdateBuffer;
00001e  4816              LDR      r0,|L1.120|
000020  6520              STR      r0,[r4,#0x50]
;;;196        pObj->CurrentValue = Value;
000022  f8c4803c          STR      r8,[r4,#0x3c]
;;;197        pObj->CursorPos = 0;
000026  2000              MOVS     r0,#0
000028  6420              STR      r0,[r4,#0x40]
;;;198        MaxLen = pObj->MaxLen;
00002a  f9b4502a          LDRSH    r5,[r4,#0x2a]
;;;199        if (MaxLen <= 0 ) {
00002e  2d00              CMP      r5,#0
000030  dc03              BGT      |L1.58|
;;;200          MaxLen = _GetNumDigits(Max);
000032  4630              MOV      r0,r6
000034  f7fffffe          BL       _GetNumDigits
000038  4605              MOV      r5,r0
                  |L1.58|
;;;201        }
;;;202        if (MaxLen > 8) {
00003a  2d08              CMP      r5,#8
00003c  dd00              BLE      |L1.64|
;;;203          MaxLen = 8;
00003e  2508              MOVS     r5,#8
                  |L1.64|
;;;204        }
;;;205        if (MaxLen != pObj->MaxLen) {
000040  f9b4002a          LDRSH    r0,[r4,#0x2a]
000044  42a8              CMP      r0,r5
000046  d003              BEQ      |L1.80|
;;;206          EDIT_SetMaxLen(hEdit, MaxLen);
000048  4629              MOV      r1,r5
00004a  4638              MOV      r0,r7
00004c  f7fffffe          BL       EDIT_SetMaxLen
                  |L1.80|
;;;207        }
;;;208        pObj->Min = Min;
000050  f8c49030          STR      r9,[r4,#0x30]
;;;209        pObj->Max = Max;
000054  6366              STR      r6,[r4,#0x34]
;;;210        pObj->EditMode = GUI_EDIT_MODE_OVERWRITE;
000056  2001              MOVS     r0,#1
000058  f8840048          STRB     r0,[r4,#0x48]
;;;211        _UpdateBuffer(hEdit);
00005c  4638              MOV      r0,r7
00005e  f7fffffe          BL       _UpdateBuffer
;;;212        WM_Invalidate(hEdit);
000062  4638              MOV      r0,r7
000064  f7fffffe          BL       WM_InvalidateWindow
;;;213      }
000068  bf00              NOP      
                  |L1.106|
;;;214      WM_UNLOCK();
00006a  f7fffffe          BL       GUI_Unlock
;;;215    }
00006e  e8bd87f0          POP      {r4-r10,pc}
;;;216    
                          ENDP

000072  0000              DCW      0x0000
                  |L1.116|
                          DCD      _AddKeyHex
                  |L1.120|
                          DCD      _UpdateBuffer

                          AREA ||i._AddKeyHex||, CODE, READONLY, ALIGN=1

                  _AddKeyHex PROC
;;;131    */
;;;132    static void _AddKeyHex(EDIT_Handle hObj, int Key) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
;;;133      EDIT_Obj * pObj;
;;;134      pObj = EDIT_H2P(hObj); /* The GUI needs not to be locked here. This function is called only from EDIT_AddKey which has already locked the GUI */
000008  4628              MOV      r0,r5
00000a  f7fffffe          BL       GUI_ALLOC_h2p
00000e  4604              MOV      r4,r0
;;;135      if (pObj) {
000010  b39c              CBZ      r4,|L2.122|
;;;136        switch (Key) {
000012  2e10              CMP      r6,#0x10
000014  d019              BEQ      |L2.74|
000016  2e11              CMP      r6,#0x11
000018  d004              BEQ      |L2.36|
00001a  2e12              CMP      r6,#0x12
00001c  d00f              BEQ      |L2.62|
00001e  2e13              CMP      r6,#0x13
000020  d119              BNE      |L2.86|
000022  e005              B        |L2.48|
                  |L2.36|
;;;137          #if EDIT_HEX_DIGITONLY
;;;138          case GUI_KEY_UP:
;;;139            {
;;;140              int Nibble = (_GetCurrentNibble(pObj) + 1) & 15;
;;;141              _EditHex(Nibble, pObj, hObj);
;;;142            }
;;;143            break;
;;;144          case GUI_KEY_DOWN:
;;;145            {
;;;146              int Nibble = (_GetCurrentNibble(pObj) + 1) & 15;
;;;147              _EditHex(Nibble, pObj, hObj);
;;;148            }
;;;149            break;
;;;150          #else
;;;151          case GUI_KEY_UP:
;;;152            _AddPosition(pObj, hObj, 1);
000024  2201              MOVS     r2,#1
000026  4629              MOV      r1,r5
000028  4620              MOV      r0,r4
00002a  f7fffffe          BL       _AddPosition
;;;153            break;
00002e  e023              B        |L2.120|
                  |L2.48|
;;;154          case GUI_KEY_DOWN:
;;;155            _AddPosition(pObj, hObj, -1);
000030  f04f32ff          MOV      r2,#0xffffffff
000034  4629              MOV      r1,r5
000036  4620              MOV      r0,r4
000038  f7fffffe          BL       _AddPosition
;;;156            break;
00003c  e01c              B        |L2.120|
                  |L2.62|
;;;157          #endif
;;;158          case GUI_KEY_RIGHT:
;;;159            EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
00003e  6c20              LDR      r0,[r4,#0x40]
000040  1c41              ADDS     r1,r0,#1
000042  4620              MOV      r0,r4
000044  f7fffffe          BL       EDIT__SetCursorPos
;;;160            break;
000048  e016              B        |L2.120|
                  |L2.74|
;;;161          case GUI_KEY_LEFT:
;;;162            EDIT__SetCursorPos(pObj, pObj->CursorPos - 1);
00004a  6c20              LDR      r0,[r4,#0x40]
00004c  1e41              SUBS     r1,r0,#1
00004e  4620              MOV      r0,r4
000050  f7fffffe          BL       EDIT__SetCursorPos
;;;163            break;
000054  e010              B        |L2.120|
                  |L2.86|
;;;164          default:
;;;165            {
;;;166              int Nibble = _HexChar2Int(Key);
000056  4630              MOV      r0,r6
000058  f7fffffe          BL       _HexChar2Int
00005c  4607              MOV      r7,r0
;;;167              if (Nibble >= 0) {
00005e  2f00              CMP      r7,#0
000060  db09              BLT      |L2.118|
;;;168                _EditHex(Nibble, pObj, hObj);
000062  462a              MOV      r2,r5
000064  4621              MOV      r1,r4
000066  4638              MOV      r0,r7
000068  f7fffffe          BL       _EditHex
;;;169                EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
00006c  6c20              LDR      r0,[r4,#0x40]
00006e  1c41              ADDS     r1,r0,#1
000070  4620              MOV      r0,r4
000072  f7fffffe          BL       EDIT__SetCursorPos
                  |L2.118|
;;;170              }
;;;171            }
;;;172            break;
000076  bf00              NOP      
                  |L2.120|
000078  bf00              NOP                            ;153
                  |L2.122|
;;;173        }
;;;174      }
;;;175      _UpdateBuffer(hObj);
00007a  4628              MOV      r0,r5
00007c  f7fffffe          BL       _UpdateBuffer
;;;176    }
000080  e8bd81f0          POP      {r4-r8,pc}
;;;177    
                          ENDP


                          AREA ||i._AddPosition||, CODE, READONLY, ALIGN=1

                  _AddPosition PROC
;;;107    */
;;;108    static void _AddPosition(EDIT_Obj* pObj, EDIT_Handle hObj, int Sign) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
;;;109      int Pos;
;;;110      U32 v;
;;;111      v = 1;
00000a  2501              MOVS     r5,#1
;;;112      Pos = pObj->MaxLen - pObj->CursorPos - 1;
00000c  f9b4002a          LDRSH    r0,[r4,#0x2a]
000010  6c21              LDR      r1,[r4,#0x40]
000012  1a40              SUBS     r0,r0,r1
000014  f1a00801          SUB      r8,r0,#1
;;;113      while (Pos--) {
000018  e000              B        |L3.28|
                  |L3.26|
;;;114        v <<= 4;
00001a  012d              LSLS     r5,r5,#4
                  |L3.28|
00001c  ea5f0008          MOVS     r0,r8                 ;113
000020  f1a80801          SUB      r8,r8,#1              ;113
000024  d1f9              BNE      |L3.26|
;;;115      }
;;;116      if (Sign < 0) {
000026  2f00              CMP      r7,#0
000028  da01              BGE      |L3.46|
;;;117        v = ~v + 1;
00002a  43e8              MVNS     r0,r5
00002c  1c45              ADDS     r5,r0,#1
                  |L3.46|
;;;118      }
;;;119      EDIT__SetValueUnsigned(hObj, pObj->CurrentValue + v);
00002e  6be0              LDR      r0,[r4,#0x3c]
000030  1941              ADDS     r1,r0,r5
000032  4630              MOV      r0,r6
000034  f7fffffe          BL       EDIT__SetValueUnsigned
;;;120    }
000038  e8bd81f0          POP      {r4-r8,pc}
;;;121    
                          ENDP


                          AREA ||i._EditHex||, CODE, READONLY, ALIGN=1

                  _EditHex PROC
;;;71     */
;;;72     static void _EditHex(int Nibble, EDIT_Obj* pObj, EDIT_Handle hObj) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
000008  4616              MOV      r6,r2
;;;73       int Pos = pObj->MaxLen - pObj->CursorPos - 1;   /* Nibble position */
00000a  f9b4002a          LDRSH    r0,[r4,#0x2a]
00000e  6c21              LDR      r1,[r4,#0x40]
000010  1a40              SUBS     r0,r0,r1
000012  1e47              SUBS     r7,r0,#1
;;;74       U32 AndMask = ~(15     << (Pos << 2));
000014  00b9              LSLS     r1,r7,#2
000016  200f              MOVS     r0,#0xf
000018  4088              LSLS     r0,r0,r1
00001a  ea6f0900          MVN      r9,r0
;;;75       U32 OrMask  =   Nibble << (Pos << 2);
00001e  00b8              LSLS     r0,r7,#2
000020  fa05fa00          LSL      r10,r5,r0
;;;76       I32 Result  = pObj->CurrentValue & AndMask;
000024  6be0              LDR      r0,[r4,#0x3c]
000026  ea000809          AND      r8,r0,r9
;;;77       Result     |= OrMask;
00002a  ea48080a          ORR      r8,r8,r10
;;;78       EDIT__SetValueUnsigned(hObj, Result);
00002e  4641              MOV      r1,r8
000030  4630              MOV      r0,r6
000032  f7fffffe          BL       EDIT__SetValueUnsigned
;;;79     }
000036  e8bd87f0          POP      {r4-r10,pc}
;;;80     
                          ENDP


                          AREA ||i._GetNumDigits||, CODE, READONLY, ALIGN=1

                  _GetNumDigits PROC
;;;97     */
;;;98     static int _GetNumDigits(U32 Value) {
000000  4601              MOV      r1,r0
;;;99       int Ret;
;;;100      for (Ret = 0; Value; Value >>= 4, Ret++);
000002  2000              MOVS     r0,#0
000004  e001              B        |L5.10|
                  |L5.6|
000006  0909              LSRS     r1,r1,#4
000008  1c40              ADDS     r0,r0,#1
                  |L5.10|
00000a  2900              CMP      r1,#0
00000c  d1fb              BNE      |L5.6|
;;;101      return Ret;
;;;102    }
00000e  4770              BX       lr
;;;103    
                          ENDP


                          AREA ||i._HexChar2Int||, CODE, READONLY, ALIGN=1

                  _HexChar2Int PROC
;;;46     */
;;;47     static int _HexChar2Int(int Char) {
000000  4601              MOV      r1,r0
;;;48       if ((Char >= '0') && (Char <= '9'))
000002  2930              CMP      r1,#0x30
000004  db04              BLT      |L6.16|
000006  2939              CMP      r1,#0x39
000008  dc02              BGT      |L6.16|
;;;49         return Char - '0';
00000a  f1a10030          SUB      r0,r1,#0x30
                  |L6.14|
;;;50       Char &= ~0x20;
;;;51       if ((Char >= 'A') && (Char <= 'F'))
;;;52         return Char - 'A' + 10;
;;;53       return -1;
;;;54     }
00000e  4770              BX       lr
                  |L6.16|
000010  f0210120          BIC      r1,r1,#0x20           ;50
000014  2941              CMP      r1,#0x41              ;51
000016  db04              BLT      |L6.34|
000018  2946              CMP      r1,#0x46              ;51
00001a  dc02              BGT      |L6.34|
00001c  f1a10037          SUB      r0,r1,#0x37           ;52
000020  e7f5              B        |L6.14|
                  |L6.34|
000022  f04f30ff          MOV      r0,#0xffffffff        ;53
000026  e7f2              B        |L6.14|
;;;55     
                          ENDP


                          AREA ||i._UpdateBuffer||, CODE, READONLY, ALIGN=1

                  _UpdateBuffer PROC
;;;59     */
;;;60     static void _UpdateBuffer(EDIT_Handle hObj) {
000000  b538              PUSH     {r3-r5,lr}
000002  4605              MOV      r5,r0
;;;61       char * s;
;;;62       EDIT_Obj * pObj;
;;;63       pObj = EDIT_H2P(hObj); /* The GUI needs not to be locked here. This function is called only from EDIT_AddKey which has already locked the GUI */
000004  4628              MOV      r0,r5
000006  f7fffffe          BL       GUI_ALLOC_h2p
00000a  4604              MOV      r4,r0
;;;64       s = (char*) GUI_ALLOC_h2p(pObj->hpText);
00000c  f9b40028          LDRSH    r0,[r4,#0x28]
000010  f7fffffe          BL       GUI_ALLOC_h2p
000014  9000              STR      r0,[sp,#0]
;;;65       GUI_AddHex(pObj->CurrentValue, pObj->MaxLen, &s);
000016  f894102a          LDRB     r1,[r4,#0x2a]
00001a  466a              MOV      r2,sp
00001c  6be0              LDR      r0,[r4,#0x3c]
00001e  f7fffffe          BL       GUI_AddHex
;;;66     }
000022  bd38              POP      {r3-r5,pc}
;;;67     
                          ENDP

