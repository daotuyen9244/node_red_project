; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\framewin_buttonclose.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\framewin_buttonclose.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Widget\FRAMEWIN_ButtonClose.c]
                          THUMB

                          AREA ||i.FRAMEWIN_AddCloseButton||, CODE, READONLY, ALIGN=2

                  FRAMEWIN_AddCloseButton PROC
;;;85     */
;;;86     WM_HWIN FRAMEWIN_AddCloseButton(FRAMEWIN_Handle hObj, int Flags, int Off) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
;;;87       WM_HWIN hButton;
;;;88       hButton = FRAMEWIN_AddButton(hObj, Flags, Off, GUI_ID_CLOSE);
00000a  2305              MOVS     r3,#5
00000c  4632              MOV      r2,r6
00000e  4629              MOV      r1,r5
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       FRAMEWIN_AddButton
000016  4607              MOV      r7,r0
;;;89       BUTTON_SetSelfDraw(hButton, 0, &_Draw);
000018  4a05              LDR      r2,|L1.48|
00001a  2100              MOVS     r1,#0
00001c  4638              MOV      r0,r7
00001e  f7fffffe          BL       BUTTON_SetSelfDraw
;;;90       WM_SetCallback(hButton, _cbClose);
000022  4904              LDR      r1,|L1.52|
000024  4638              MOV      r0,r7
000026  f7fffffe          BL       WM_SetCallback
;;;91       return hButton;
00002a  4638              MOV      r0,r7
;;;92     }
00002c  e8bd81f0          POP      {r4-r8,pc}
;;;93     
                          ENDP

                  |L1.48|
                          DCD      _Draw
                  |L1.52|
                          DCD      _cbClose

                          AREA ||i._Draw||, CODE, READONLY, ALIGN=2

                  _Draw PROC
;;;59     */
;;;60     static void _Draw(void) {
000000  b57c              PUSH     {r2-r6,lr}
;;;61       GUI_RECT r;
;;;62       int i, Size;
;;;63       WM_GetInsideRect(&r);
000002  4668              MOV      r0,sp
000004  f7fffffe          BL       WM_GetInsideRect
;;;64       WM_ADDORG(r.x0, r.y0);
000008  f8bd0000          LDRH     r0,[sp,#0]
00000c  4927              LDR      r1,|L2.172|
00000e  f8b11044          LDRH     r1,[r1,#0x44]  ; GUI_Context
000012  4408              ADD      r0,r0,r1
000014  b200              SXTH     r0,r0
000016  f8ad0000          STRH     r0,[sp,#0]
00001a  f8bd0002          LDRH     r0,[sp,#2]
00001e  4923              LDR      r1,|L2.172|
000020  f8b11048          LDRH     r1,[r1,#0x48]  ; GUI_Context
000024  4408              ADD      r0,r0,r1
000026  b200              SXTH     r0,r0
000028  f8ad0002          STRH     r0,[sp,#2]
;;;65       WM_ADDORG(r.x1, r.y1);
00002c  f8bd0004          LDRH     r0,[sp,#4]
000030  491e              LDR      r1,|L2.172|
000032  f8b11044          LDRH     r1,[r1,#0x44]  ; GUI_Context
000036  4408              ADD      r0,r0,r1
000038  b200              SXTH     r0,r0
00003a  f8ad0004          STRH     r0,[sp,#4]
00003e  f8bd0006          LDRH     r0,[sp,#6]
000042  491a              LDR      r1,|L2.172|
000044  f8b11048          LDRH     r1,[r1,#0x48]  ; GUI_Context
000048  4408              ADD      r0,r0,r1
00004a  b200              SXTH     r0,r0
00004c  f8ad0006          STRH     r0,[sp,#6]
;;;66       Size = r.x1 - r.x0 - 2;
000050  f9bd0004          LDRSH    r0,[sp,#4]
000054  f9bd1000          LDRSH    r1,[sp,#0]
000058  1a40              SUBS     r0,r0,r1
00005a  1e85              SUBS     r5,r0,#2
;;;67       WM_ITERATE_START(&r); {
00005c  4668              MOV      r0,sp
00005e  f7fffffe          BL       WM__InitIVRSearch
000062  b308              CBZ      r0,|L2.168|
000064  bf00              NOP      
                  |L2.102|
;;;68         for (i = 2; i < Size; i++) {
000066  2402              MOVS     r4,#2
000068  e018              B        |L2.156|
                  |L2.106|
;;;69           LCD_DrawHLine(r.x0 + i,     r.y0 + i, r.x0 + i + 1);
00006a  f9bd3000          LDRSH    r3,[sp,#0]
00006e  4423              ADD      r3,r3,r4
000070  1c5a              ADDS     r2,r3,#1
000072  f9bd3002          LDRSH    r3,[sp,#2]
000076  1919              ADDS     r1,r3,r4
000078  f9bd3000          LDRSH    r3,[sp,#0]
00007c  1918              ADDS     r0,r3,r4
00007e  f7fffffe          BL       LCD_DrawHLine
;;;70           LCD_DrawHLine(r.x1 - i - 1, r.y0 + i, r.x1 - i);
000082  f9bd3004          LDRSH    r3,[sp,#4]
000086  1b1a              SUBS     r2,r3,r4
000088  f9bd3002          LDRSH    r3,[sp,#2]
00008c  1919              ADDS     r1,r3,r4
00008e  f9bd3004          LDRSH    r3,[sp,#4]
000092  1b1b              SUBS     r3,r3,r4
000094  1e58              SUBS     r0,r3,#1
000096  f7fffffe          BL       LCD_DrawHLine
00009a  1c64              ADDS     r4,r4,#1              ;68
                  |L2.156|
00009c  42ac              CMP      r4,r5                 ;68
00009e  dbe4              BLT      |L2.106|
;;;71         }
;;;72       } WM_ITERATE_END();
0000a0  f7fffffe          BL       WM__GetNextIVR
0000a4  2800              CMP      r0,#0
0000a6  d1de              BNE      |L2.102|
                  |L2.168|
;;;73     }
0000a8  bd7c              POP      {r2-r6,pc}
;;;74     
                          ENDP

0000aa  0000              DCW      0x0000
                  |L2.172|
                          DCD      GUI_Context

                          AREA ||i._cbClose||, CODE, READONLY, ALIGN=1

                  _cbClose PROC
;;;47     */
;;;48     static void _cbClose(WM_MESSAGE* pMsg) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;49       if (pMsg->MsgId == WM_NOTIFY_PARENT_REFLECTION) {
000004  6820              LDR      r0,[r4,#0]
000006  2827              CMP      r0,#0x27
000008  d104              BNE      |L3.20|
;;;50         WM_DeleteWindow(pMsg->hWinSrc);
00000a  f9b40006          LDRSH    r0,[r4,#6]
00000e  f7fffffe          BL       WM_DeleteWindow
                  |L3.18|
;;;51         return;                                       /* We are done ! */
;;;52       }
;;;53       BUTTON_Callback(pMsg);
;;;54     }
000012  bd10              POP      {r4,pc}
                  |L3.20|
000014  4620              MOV      r0,r4                 ;53
000016  f7fffffe          BL       BUTTON_Callback
00001a  bf00              NOP      
00001c  e7f9              B        |L3.18|
;;;55     
                          ENDP

