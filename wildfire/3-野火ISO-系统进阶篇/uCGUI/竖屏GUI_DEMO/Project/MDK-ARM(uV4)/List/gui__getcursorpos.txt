; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\gui__getcursorpos.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\gui__getcursorpos.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Core\GUI__GetCursorPos.c]
                          THUMB

                          AREA ||i.GUI__GetCursorCharacter||, CODE, READONLY, ALIGN=1

                  GUI__GetCursorCharacter PROC
;;;90     */
;;;91     U16 GUI__GetCursorCharacter(const char GUI_UNI_PTR * s, int Index, int MaxNumChars, int * pIsRTL) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4605              MOV      r5,r0
000006  460f              MOV      r7,r1
000008  4616              MOV      r6,r2
00000a  461c              MOV      r4,r3
;;;92       #if GUI_SUPPORT_ARABIC
;;;93         return GUI__GetCursorCharacterArabic(s, Index, MaxNumChars, pIsRTL);
;;;94       #else
;;;95         GUI_USE_PARA(MaxNumChars);
00000c  bf00              NOP      
;;;96         if (pIsRTL) {
00000e  b10c              CBZ      r4,|L1.20|
;;;97           *pIsRTL = 0;
000010  2000              MOVS     r0,#0
000012  6020              STR      r0,[r4,#0]
                  |L1.20|
;;;98         }
;;;99         return GUI_UC_GetCharCode(s + Index);
000014  19e8              ADDS     r0,r5,r7
000016  f7fffffe          BL       GUI_UC_GetCharCode
;;;100      #endif
;;;101    }
00001a  e8bd81f0          POP      {r4-r8,pc}
;;;102    
                          ENDP


                          AREA ||i.GUI__GetCursorPosChar||, CODE, READONLY, ALIGN=1

                  GUI__GetCursorPosChar PROC
;;;66     */
;;;67     int GUI__GetCursorPosChar(const char GUI_UNI_PTR * s, int x, int MaxNumChars) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
;;;68       #if GUI_SUPPORT_ARABIC
;;;69         return GUI__GetCursorPosCharArabic(s, x, MaxNumChars);
;;;70       #else
;;;71         int SizeX = 0;
00000a  2700              MOVS     r7,#0
;;;72         const char GUI_UNI_PTR * p;
;;;73         p = s;
00000c  46a0              MOV      r8,r4
;;;74         while (--MaxNumChars> 0) {
00000e  e012              B        |L2.54|
                  |L2.16|
;;;75           U16 Char;
;;;76           Char   = GUI_UC_GetCharCode(s);
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       GUI_UC_GetCharCode
000016  4681              MOV      r9,r0
;;;77           SizeX += GUI_GetCharDistX(Char);
000018  4648              MOV      r0,r9
00001a  f7fffffe          BL       GUI_GetCharDistX
00001e  4407              ADD      r7,r7,r0
;;;78           if (!Char || (SizeX > x)) {
000020  f1b90f00          CMP      r9,#0
000024  d001              BEQ      |L2.42|
000026  42af              CMP      r7,r5
000028  dd00              BLE      |L2.44|
                  |L2.42|
;;;79             break;
00002a  e007              B        |L2.60|
                  |L2.44|
;;;80           }
;;;81           s += GUI_UC_GetCharSize(s);
00002c  4620              MOV      r0,r4
00002e  f7fffffe          BL       GUI_UC_GetCharSize
000032  4404              ADD      r4,r4,r0
;;;82         }
000034  bf00              NOP      
                  |L2.54|
000036  1e70              SUBS     r0,r6,#1              ;74
000038  1e06              SUBS     r6,r0,#0              ;74
00003a  dce9              BGT      |L2.16|
                  |L2.60|
00003c  bf00              NOP                            ;79
;;;83         return GUI_UC__NumBytes2NumChars(p, s - p);
00003e  eba40108          SUB      r1,r4,r8
000042  4640              MOV      r0,r8
000044  f7fffffe          BL       GUI_UC__NumBytes2NumChars
;;;84       #endif
;;;85     }
000048  e8bd87f0          POP      {r4-r10,pc}
;;;86     
                          ENDP


                          AREA ||i.GUI__GetCursorPosX||, CODE, READONLY, ALIGN=1

                  GUI__GetCursorPosX PROC
;;;39     */
;;;40     int GUI__GetCursorPosX(const char GUI_UNI_PTR * s, int Index, int MaxNumChars) {
000000  b5f7              PUSH     {r0-r2,r4-r7,lr}
000002  460c              MOV      r4,r1
000004  4615              MOV      r5,r2
;;;41       #if GUI_SUPPORT_ARABIC
;;;42         return GUI__GetCursorPosXArabic(s, Index, MaxNumChars);
;;;43       #else
;;;44         int CursorPosX = 0;
000006  2600              MOVS     r6,#0
;;;45         U16 Char;
;;;46         GUI_USE_PARA(MaxNumChars);
000008  bf00              NOP      
;;;47         while (Index--) {
00000a  e007              B        |L3.28|
                  |L3.12|
;;;48           Char        = GUI_UC__GetCharCodeInc(&s);
00000c  4668              MOV      r0,sp
00000e  f7fffffe          BL       GUI_UC__GetCharCodeInc
000012  4607              MOV      r7,r0
;;;49           CursorPosX += GUI_GetCharDistX(Char);
000014  4638              MOV      r0,r7
000016  f7fffffe          BL       GUI_GetCharDistX
00001a  4406              ADD      r6,r6,r0
                  |L3.28|
00001c  0020              MOVS     r0,r4                 ;47
00001e  f1a40401          SUB      r4,r4,#1              ;47
000022  d1f3              BNE      |L3.12|
;;;50         }
;;;51         return CursorPosX;
000024  4630              MOV      r0,r6
;;;52       #endif
;;;53     }
000026  bdfe              POP      {r1-r7,pc}
;;;54     
                          ENDP

