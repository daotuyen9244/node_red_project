; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\guiaalib.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\guiaalib.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\AntiAlias\GUIAALib.c]
                          THUMB

                          AREA ||i.CalcClipRectHL||, CODE, READONLY, ALIGN=2

                  CalcClipRectHL PROC
;;;166    */
;;;167    static void CalcClipRectHL(void) {
000000  4814              LDR      r0,|L1.84|
;;;168      ClipRect_HL.x0 =  GUI_Context.ClipRect.x0    * GUI_Context.AA_Factor;
000002  8900              LDRH     r0,[r0,#8]  ; GUI_Context
000004  4913              LDR      r1,|L1.84|
000006  f8911060          LDRB     r1,[r1,#0x60]  ; GUI_Context
00000a  4348              MULS     r0,r1,r0
00000c  b200              SXTH     r0,r0
00000e  4912              LDR      r1,|L1.88|
000010  8008              STRH     r0,[r1,#0]
;;;169      ClipRect_HL.y0 =  GUI_Context.ClipRect.y0    * GUI_Context.AA_Factor;
000012  4810              LDR      r0,|L1.84|
000014  8940              LDRH     r0,[r0,#0xa]
000016  490f              LDR      r1,|L1.84|
000018  f8911060          LDRB     r1,[r1,#0x60]  ; GUI_Context
00001c  4348              MULS     r0,r1,r0
00001e  b200              SXTH     r0,r0
000020  490d              LDR      r1,|L1.88|
000022  8048              STRH     r0,[r1,#2]
;;;170      ClipRect_HL.x1 = (GUI_Context.ClipRect.x1+1) * GUI_Context.AA_Factor -1;
000024  480b              LDR      r0,|L1.84|
000026  8980              LDRH     r0,[r0,#0xc]
000028  1c40              ADDS     r0,r0,#1
00002a  490a              LDR      r1,|L1.84|
00002c  f8911060          LDRB     r1,[r1,#0x60]  ; GUI_Context
000030  4348              MULS     r0,r1,r0
000032  1e40              SUBS     r0,r0,#1
000034  b200              SXTH     r0,r0
000036  4908              LDR      r1,|L1.88|
000038  8088              STRH     r0,[r1,#4]
;;;171      ClipRect_HL.y1 = (GUI_Context.ClipRect.y1+1) * GUI_Context.AA_Factor -1;
00003a  4806              LDR      r0,|L1.84|
00003c  89c0              LDRH     r0,[r0,#0xe]
00003e  1c40              ADDS     r0,r0,#1
000040  4904              LDR      r1,|L1.84|
000042  f8911060          LDRB     r1,[r1,#0x60]  ; GUI_Context
000046  4348              MULS     r0,r1,r0
000048  1e40              SUBS     r0,r0,#1
00004a  b200              SXTH     r0,r0
00004c  4902              LDR      r1,|L1.88|
00004e  80c8              STRH     r0,[r1,#6]
;;;172    }
000050  4770              BX       lr
;;;173    
                          ENDP

000052  0000              DCW      0x0000
                  |L1.84|
                          DCD      GUI_Context
                  |L1.88|
                          DCD      ClipRect_HL

                          AREA ||i.GUI_AA_DisableHiRes||, CODE, READONLY, ALIGN=2

                  GUI_AA_DisableHiRes PROC
;;;243    */
;;;244    void GUI_AA_DisableHiRes(void) {
000000  2000              MOVS     r0,#0
;;;245      GUI_Context.AA_HiResEnable = 0;
000002  4902              LDR      r1,|L2.12|
000004  f8810061          STRB     r0,[r1,#0x61]
;;;246    }
000008  4770              BX       lr
;;;247    
                          ENDP

00000a  0000              DCW      0x0000
                  |L2.12|
                          DCD      GUI_Context

                          AREA ||i.GUI_AA_EnableHiRes||, CODE, READONLY, ALIGN=2

                  GUI_AA_EnableHiRes PROC
;;;251    */
;;;252    void GUI_AA_EnableHiRes(void) {
000000  2001              MOVS     r0,#1
;;;253      GUI_Context.AA_HiResEnable =1;
000002  4902              LDR      r1,|L3.12|
000004  f8810061          STRB     r0,[r1,#0x61]
;;;254    }
000008  4770              BX       lr
;;;255    
                          ENDP

00000a  0000              DCW      0x0000
                  |L3.12|
                          DCD      GUI_Context

                          AREA ||i.GUI_AA_Exit||, CODE, READONLY, ALIGN=2

                  GUI_AA_Exit PROC
;;;267    */
;;;268    void GUI_AA_Exit(void) {
000000  b510              PUSH     {r4,lr}
;;;269      _FlushLine();
000002  f7fffffe          BL       _FlushLine
;;;270      /* restore previous settings */
;;;271      GUI_Context.pLCD_HL = pLCD_HLPrev;
000006  4804              LDR      r0,|L4.24|
000008  6800              LDR      r0,[r0,#0]  ; pLCD_HLPrev
00000a  4904              LDR      r1,|L4.28|
00000c  65c8              STR      r0,[r1,#0x5c]  ; GUI_Context
;;;272      GUI_Context.pClipRect_HL = &GUI_Context.ClipRect;
00000e  f1010008          ADD      r0,r1,#8
000012  6148              STR      r0,[r1,#0x14]  ; GUI_Context
;;;273    }
000014  bd10              POP      {r4,pc}
;;;274    
                          ENDP

000016  0000              DCW      0x0000
                  |L4.24|
                          DCD      pLCD_HLPrev
                  |L4.28|
                          DCD      GUI_Context

                          AREA ||i.GUI_AA_GetFactor||, CODE, READONLY, ALIGN=2

                  GUI_AA_GetFactor PROC
;;;235    */
;;;236    int GUI_AA_GetFactor(void) {
000000  4801              LDR      r0,|L5.8|
;;;237      return GUI_Context.AA_Factor;
000002  f8900060          LDRB     r0,[r0,#0x60]  ; GUI_Context
;;;238    }
000006  4770              BX       lr
;;;239    
                          ENDP

                  |L5.8|
                          DCD      GUI_Context

                          AREA ||i.GUI_AA_HiRes2Pixel||, CODE, READONLY, ALIGN=2

                  GUI_AA_HiRes2Pixel PROC
;;;259    */
;;;260    I16 GUI_AA_HiRes2Pixel(int HiRes) {
000000  4601              MOV      r1,r0
;;;261      return GUI_Context.AA_Factor ? (HiRes / GUI_Context.AA_Factor) : HiRes;
000002  4806              LDR      r0,|L6.28|
000004  f8900060          LDRB     r0,[r0,#0x60]  ; GUI_Context
000008  b128              CBZ      r0,|L6.22|
00000a  4804              LDR      r0,|L6.28|
00000c  f8900060          LDRB     r0,[r0,#0x60]  ; GUI_Context
000010  fb91f0f0          SDIV     r0,r1,r0
000014  e000              B        |L6.24|
                  |L6.22|
000016  4608              MOV      r0,r1
                  |L6.24|
000018  b200              SXTH     r0,r0
;;;262    }
00001a  4770              BX       lr
;;;263    
                          ENDP

                  |L6.28|
                          DCD      GUI_Context

                          AREA ||i.GUI_AA_Init||, CODE, READONLY, ALIGN=2

                  GUI_AA_Init PROC
;;;183    */
;;;184    int GUI_AA_Init(int x0, int x1) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;185      int r =0;
000006  2600              MOVS     r6,#0
;;;186      /* Bounds checking:
;;;187         Make sure x0, x1 are in legal range ...
;;;188         (The important point is that they span no more than configured as
;;;189          buffer size)
;;;190      */
;;;191      if (x0<0)
000008  2c00              CMP      r4,#0
00000a  da00              BGE      |L7.14|
;;;192        x0 =0;
00000c  2400              MOVS     r4,#0
                  |L7.14|
;;;193      if (x1-x0 > GUI_AA_LINEBUFFER_SIZE-1)
00000e  1b28              SUBS     r0,r5,r4
000010  28ef              CMP      r0,#0xef
000012  dd01              BLE      |L7.24|
;;;194        x1 = x0+GUI_AA_LINEBUFFER_SIZE-1;
000014  f10405ef          ADD      r5,r4,#0xef
                  |L7.24|
;;;195      /* Is there anything to do at all ??? */
;;;196      if (x1 < x0) {
000018  42a5              CMP      r5,r4
00001a  da01              BGE      |L7.32|
;;;197        x1 = x0;   /* Not really ... */
00001c  4625              MOV      r5,r4
;;;198        r =1;
00001e  2601              MOVS     r6,#1
                  |L7.32|
;;;199      }
;;;200      DrawAPICopy = *GUI_Context.pLCD_HL; /* Copy API table */
000020  480f              LDR      r0,|L7.96|
000022  6dc2              LDR      r2,[r0,#0x5c]  ; GUI_Context
000024  480f              LDR      r0,|L7.100|
000026  ca06              LDM      r2,{r1,r2}
000028  c006              STM      r0!,{r1,r2}
;;;201      pLCD_HLPrev = GUI_Context.pLCD_HL; /* Remember list ptr (for restore) */
00002a  480d              LDR      r0,|L7.96|
00002c  6dc0              LDR      r0,[r0,#0x5c]  ; GUI_Context
00002e  490e              LDR      r1,|L7.104|
000030  6008              STR      r0,[r1,#0]  ; pLCD_HLPrev
;;;202      DrawAPICopy.pfDrawHLine = _DrawHLine;  /* modify function ptr. for hline */
000032  480e              LDR      r0,|L7.108|
000034  490b              LDR      r1,|L7.100|
000036  6008              STR      r0,[r1,#0]  ; DrawAPICopy
;;;203      GUI_Context.pLCD_HL = &DrawAPICopy;      /* Use copy of fp-list */
000038  4608              MOV      r0,r1
00003a  4909              LDR      r1,|L7.96|
00003c  65c8              STR      r0,[r1,#0x5c]  ; GUI_Context
;;;204      pabAABuffer = abAABuffer;
00003e  480c              LDR      r0,|L7.112|
000040  490c              LDR      r1,|L7.116|
000042  6008              STR      r0,[r1,#0]  ; pabAABuffer
;;;205      _x0 = x0;
000044  480c              LDR      r0,|L7.120|
000046  6004              STR      r4,[r0,#0]  ; _x0
;;;206      _x1 = x1;
000048  480c              LDR      r0,|L7.124|
00004a  6005              STR      r5,[r0,#0]  ; _x1
;;;207      _CleanLine();
00004c  f7fffffe          BL       _CleanLine
;;;208      CalcClipRectHL();
000050  f7fffffe          BL       CalcClipRectHL
;;;209      GUI_Context.pClipRect_HL = &ClipRect_HL;
000054  480a              LDR      r0,|L7.128|
000056  4902              LDR      r1,|L7.96|
000058  6148              STR      r0,[r1,#0x14]  ; GUI_Context
;;;210      return r;
00005a  4630              MOV      r0,r6
;;;211    }
00005c  bd70              POP      {r4-r6,pc}
;;;212    
                          ENDP

00005e  0000              DCW      0x0000
                  |L7.96|
                          DCD      GUI_Context
                  |L7.100|
                          DCD      DrawAPICopy
                  |L7.104|
                          DCD      pLCD_HLPrev
                  |L7.108|
                          DCD      _DrawHLine
                  |L7.112|
                          DCD      abAABuffer
                  |L7.116|
                          DCD      pabAABuffer
                  |L7.120|
                          DCD      _x0
                  |L7.124|
                          DCD      _x1
                  |L7.128|
                          DCD      ClipRect_HL

                          AREA ||i.GUI_AA_Init_HiRes||, CODE, READONLY, ALIGN=2

                  GUI_AA_Init_HiRes PROC
;;;216    */
;;;217    int GUI_AA_Init_HiRes(int x0, int x1) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;218      x0 /= GUI_Context.AA_Factor;
000006  4807              LDR      r0,|L8.36|
000008  f8900060          LDRB     r0,[r0,#0x60]  ; GUI_Context
00000c  fb94f4f0          SDIV     r4,r4,r0
;;;219      x1 /= GUI_Context.AA_Factor;
000010  4804              LDR      r0,|L8.36|
000012  f8900060          LDRB     r0,[r0,#0x60]  ; GUI_Context
000016  fb95f5f0          SDIV     r5,r5,r0
;;;220      return GUI_AA_Init(x0, x1);
00001a  4629              MOV      r1,r5
00001c  4620              MOV      r0,r4
00001e  f7fffffe          BL       GUI_AA_Init
;;;221    }
000022  bd70              POP      {r4-r6,pc}
;;;222    
                          ENDP

                  |L8.36|
                          DCD      GUI_Context

                          AREA ||i.GUI_AA_SetFactor||, CODE, READONLY, ALIGN=2

                  GUI_AA_SetFactor PROC
;;;226    */
;;;227    void GUI_AA_SetFactor(int Factor) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;228      GUI_Context.AA_Factor = Factor;
000004  4902              LDR      r1,|L9.16|
000006  f8814060          STRB     r4,[r1,#0x60]
;;;229      CalcClipRectHL();      /* High level clipping depends on quality factor */
00000a  f7fffffe          BL       CalcClipRectHL
;;;230    }
00000e  bd10              POP      {r4,pc}
;;;231    
                          ENDP

                  |L9.16|
                          DCD      GUI_Context

                          AREA ||i._CleanLine||, CODE, READONLY, ALIGN=2

                  _CleanLine PROC
;;;63     */
;;;64     static void _CleanLine(void) {
000000  b510              PUSH     {r4,lr}
;;;65       GUI_MEMSET(pabAABuffer,0, _x1 - _x0+1);
000002  480a              LDR      r0,|L10.44|
000004  6800              LDR      r0,[r0,#0]  ; _x1
000006  490a              LDR      r1,|L10.48|
000008  6809              LDR      r1,[r1,#0]  ; _x0
00000a  1a40              SUBS     r0,r0,r1
00000c  1c42              ADDS     r2,r0,#1
00000e  2100              MOVS     r1,#0
000010  4808              LDR      r0,|L10.52|
000012  6800              LDR      r0,[r0,#0]  ; pabAABuffer
000014  f7fffffe          BL       GUI__memset
;;;66       _y = -16383;  /* Invalidate */  
000018  4807              LDR      r0,|L10.56|
00001a  4908              LDR      r1,|L10.60|
00001c  6008              STR      r0,[r1,#0]  ; _y
;;;67       _x0_InUse =  16383;
00001e  0c80              LSRS     r0,r0,#18
000020  4907              LDR      r1,|L10.64|
000022  6008              STR      r0,[r1,#0]  ; _x0_InUse
;;;68       _x1_InUse = -16383;
000024  4240              RSBS     r0,r0,#0
000026  4907              LDR      r1,|L10.68|
000028  6008              STR      r0,[r1,#0]  ; _x1_InUse
;;;69     }
00002a  bd10              POP      {r4,pc}
;;;70     
                          ENDP

                  |L10.44|
                          DCD      _x1
                  |L10.48|
                          DCD      _x0
                  |L10.52|
                          DCD      pabAABuffer
                  |L10.56|
                          DCD      0xffffc001
                  |L10.60|
                          DCD      ||_y||
                  |L10.64|
                          DCD      _x0_InUse
                  |L10.68|
                          DCD      _x1_InUse

                          AREA ||i._DrawHLine||, CODE, READONLY, ALIGN=2

                  _DrawHLine PROC
;;;114    */
;;;115    static void _DrawHLine  (int x0, int y,  int x1) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4604              MOV      r4,r0
000006  4688              MOV      r8,r1
000008  4615              MOV      r5,r2
;;;116      int x0Real, x1Real;
;;;117    /* Make sure there is something to do */
;;;118      if (x1<x0)
00000a  42a5              CMP      r5,r4
00000c  da01              BGE      |L11.18|
                  |L11.14|
;;;119        return;
;;;120    /* Flush line if we are in an other pixel (real) line */
;;;121      if (y/GUI_Context.AA_Factor != _y) {
;;;122        _FlushLine();
;;;123        _y = y/GUI_Context.AA_Factor;
;;;124      }
;;;125      x0Real = x0/GUI_Context.AA_Factor;
;;;126      x1Real = x1/GUI_Context.AA_Factor;
;;;127    /* Handle used area (speed optimization for drawing) */
;;;128      if (x0Real < _x0_InUse)
;;;129        _x0_InUse = x0Real;
;;;130      if (x1Real > _x1_InUse)
;;;131        _x1_InUse = x1Real;
;;;132    /* Clip (should not be necessary ... Just to be on the safe side ! */
;;;133      if (x0Real < _x0) {
;;;134        x0 = _x0 * GUI_Context.AA_Factor;
;;;135      }
;;;136      if (x1Real > _x1) {
;;;137        x1 = (_x1+1)*GUI_Context.AA_Factor-1;
;;;138      }
;;;139    /* Make sure there is still something to do (after clipping) */
;;;140      if (x1<x0)
;;;141        return;
;;;142    /* Inc. hit counters in buffer */
;;;143      {
;;;144        int x0_Off = x0/GUI_Context.AA_Factor-_x0;
;;;145        int x1_Off = x1/GUI_Context.AA_Factor-_x0;
;;;146        int iRem = x1_Off-x0_Off+1;
;;;147        U8 *pDest = pabAABuffer+x0_Off;
;;;148        if (iRem ==1) {
;;;149          *(pDest) += x1-x0+1;
;;;150        } else {
;;;151          /* First Pixel */
;;;152          *pDest++ += ((x0_Off+_x0+1)*GUI_Context.AA_Factor-x0);
;;;153          /* Middle Pixels */
;;;154          for (;--iRem>1; ) {
;;;155            *pDest++ +=GUI_Context.AA_Factor;
;;;156          }
;;;157          /* Last Pixel */
;;;158          *pDest += (1+x1- (x1_Off+_x0) *GUI_Context.AA_Factor);
;;;159        }
;;;160      }
;;;161    }
00000e  e8bd87f0          POP      {r4-r10,pc}
                  |L11.18|
000012  4854              LDR      r0,|L11.356|
000014  f8900060          LDRB     r0,[r0,#0x60]         ;121  ; GUI_Context
000018  fb98f0f0          SDIV     r0,r8,r0              ;121
00001c  4952              LDR      r1,|L11.360|
00001e  6809              LDR      r1,[r1,#0]            ;121  ; _y
000020  4288              CMP      r0,r1                 ;121
000022  d008              BEQ      |L11.54|
000024  f7fffffe          BL       _FlushLine
000028  484e              LDR      r0,|L11.356|
00002a  f8900060          LDRB     r0,[r0,#0x60]         ;123  ; GUI_Context
00002e  fb98f0f0          SDIV     r0,r8,r0              ;123
000032  494d              LDR      r1,|L11.360|
000034  6008              STR      r0,[r1,#0]            ;123  ; _y
                  |L11.54|
000036  484b              LDR      r0,|L11.356|
000038  f8900060          LDRB     r0,[r0,#0x60]         ;125  ; GUI_Context
00003c  fb94f6f0          SDIV     r6,r4,r0              ;125
000040  4848              LDR      r0,|L11.356|
000042  f8900060          LDRB     r0,[r0,#0x60]         ;126  ; GUI_Context
000046  fb95f7f0          SDIV     r7,r5,r0              ;126
00004a  4848              LDR      r0,|L11.364|
00004c  6800              LDR      r0,[r0,#0]            ;128  ; _x0_InUse
00004e  4286              CMP      r6,r0                 ;128
000050  da01              BGE      |L11.86|
000052  4846              LDR      r0,|L11.364|
000054  6006              STR      r6,[r0,#0]            ;129  ; _x0_InUse
                  |L11.86|
000056  4846              LDR      r0,|L11.368|
000058  6800              LDR      r0,[r0,#0]            ;130  ; _x1_InUse
00005a  4287              CMP      r7,r0                 ;130
00005c  dd01              BLE      |L11.98|
00005e  4844              LDR      r0,|L11.368|
000060  6007              STR      r7,[r0,#0]            ;131  ; _x1_InUse
                  |L11.98|
000062  4844              LDR      r0,|L11.372|
000064  6800              LDR      r0,[r0,#0]            ;133  ; _x0
000066  4286              CMP      r6,r0                 ;133
000068  da06              BGE      |L11.120|
00006a  483e              LDR      r0,|L11.356|
00006c  f8900060          LDRB     r0,[r0,#0x60]         ;134  ; GUI_Context
000070  4940              LDR      r1,|L11.372|
000072  6809              LDR      r1,[r1,#0]            ;134  ; _x0
000074  fb00f401          MUL      r4,r0,r1              ;134
                  |L11.120|
000078  483f              LDR      r0,|L11.376|
00007a  6800              LDR      r0,[r0,#0]            ;136  ; _x1
00007c  4287              CMP      r7,r0                 ;136
00007e  dd07              BLE      |L11.144|
000080  4838              LDR      r0,|L11.356|
000082  f8900060          LDRB     r0,[r0,#0x60]         ;137  ; GUI_Context
000086  493c              LDR      r1,|L11.376|
000088  6809              LDR      r1,[r1,#0]            ;137  ; _x1
00008a  1c49              ADDS     r1,r1,#1              ;137
00008c  4348              MULS     r0,r1,r0              ;137
00008e  1e45              SUBS     r5,r0,#1              ;137
                  |L11.144|
000090  42a5              CMP      r5,r4                 ;140
000092  da00              BGE      |L11.150|
000094  e7bb              B        |L11.14|
                  |L11.150|
000096  f8dfc0cc          LDR      r12,|L11.356|
00009a  f89cc060          LDRB     r12,[r12,#0x60]       ;144  ; GUI_Context
00009e  fb94fcfc          SDIV     r12,r4,r12            ;144
0000a2  f8df90d0          LDR      r9,|L11.372|
0000a6  f8d99000          LDR      r9,[r9,#0]            ;144  ; _x0
0000aa  ebac0109          SUB      r1,r12,r9             ;144
0000ae  f8dfc0b4          LDR      r12,|L11.356|
0000b2  f89cc060          LDRB     r12,[r12,#0x60]       ;145  ; GUI_Context
0000b6  fb95fcfc          SDIV     r12,r5,r12            ;145
0000ba  f8df90b8          LDR      r9,|L11.372|
0000be  f8d99000          LDR      r9,[r9,#0]            ;145  ; _x0
0000c2  ebac0209          SUB      r2,r12,r9             ;145
0000c6  eba20c01          SUB      r12,r2,r1             ;146
0000ca  f10c0301          ADD      r3,r12,#1             ;146
0000ce  f8dfc0ac          LDR      r12,|L11.380|
0000d2  f8dcc000          LDR      r12,[r12,#0]          ;147  ; pabAABuffer
0000d6  eb0c0001          ADD      r0,r12,r1             ;147
0000da  2b01              CMP      r3,#1                 ;148
0000dc  d109              BNE      |L11.242|
0000de  f8909000          LDRB     r9,[r0,#0]            ;149
0000e2  eba50c04          SUB      r12,r5,r4             ;149
0000e6  f10c0c01          ADD      r12,r12,#1            ;149
0000ea  44cc              ADD      r12,r12,r9            ;149
0000ec  f880c000          STRB     r12,[r0,#0]           ;149
0000f0  e035              B        |L11.350|
                  |L11.242|
0000f2  f8dfc080          LDR      r12,|L11.372|
0000f6  f89cc000          LDRB     r12,[r12,#0]          ;152  ; _x0
0000fa  448c              ADD      r12,r12,r1            ;152
0000fc  f10c0c01          ADD      r12,r12,#1            ;152
000100  f8df9060          LDR      r9,|L11.356|
000104  f8999060          LDRB     r9,[r9,#0x60]         ;152  ; GUI_Context
000108  fb0cfc09          MUL      r12,r12,r9            ;152
00010c  ebac0c04          SUB      r12,r12,r4            ;152
000110  f8909000          LDRB     r9,[r0,#0]            ;152
000114  44cc              ADD      r12,r12,r9            ;152
000116  f800cb01          STRB     r12,[r0],#1           ;152
00011a  e008              B        |L11.302|
                  |L11.284|
00011c  f890c000          LDRB     r12,[r0,#0]           ;155
000120  f8df9040          LDR      r9,|L11.356|
000124  f8999060          LDRB     r9,[r9,#0x60]         ;155  ; GUI_Context
000128  44cc              ADD      r12,r12,r9            ;155
00012a  f800cb01          STRB     r12,[r0],#1           ;155
                  |L11.302|
00012e  f1a30c01          SUB      r12,r3,#1             ;154
000132  4663              MOV      r3,r12                ;154
000134  f1bc0f01          CMP      r12,#1                ;154
000138  dcf0              BGT      |L11.284|
00013a  f1050c01          ADD      r12,r5,#1             ;158
00013e  f8df9034          LDR      r9,|L11.372|
000142  f8d99000          LDR      r9,[r9,#0]            ;158  ; _x0
000146  4491              ADD      r9,r9,r2              ;158
000148  f8dfa018          LDR      r10,|L11.356|
00014c  f89aa060          LDRB     r10,[r10,#0x60]       ;158  ; GUI_Context
000150  fb09cc1a          MLS      r12,r9,r10,r12        ;158
000154  f8909000          LDRB     r9,[r0,#0]            ;158
000158  44cc              ADD      r12,r12,r9            ;158
00015a  f880c000          STRB     r12,[r0,#0]           ;158
                  |L11.350|
00015e  bf00              NOP      
000160  e755              B        |L11.14|
;;;162    
                          ENDP

000162  0000              DCW      0x0000
                  |L11.356|
                          DCD      GUI_Context
                  |L11.360|
                          DCD      ||_y||
                  |L11.364|
                          DCD      _x0_InUse
                  |L11.368|
                          DCD      _x1_InUse
                  |L11.372|
                          DCD      _x0
                  |L11.376|
                          DCD      _x1
                  |L11.380|
                          DCD      pabAABuffer

                          AREA ||i._FlushLine||, CODE, READONLY, ALIGN=2

                  _FlushLine PROC
;;;74     */
;;;75     static void _FlushLine(void) {
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;76       int i;
;;;77       int iEnd = _x1_InUse-_x0;
000004  482c              LDR      r0,|L12.184|
000006  6800              LDR      r0,[r0,#0]  ; _x1_InUse
000008  492c              LDR      r1,|L12.188|
00000a  6809              LDR      r1,[r1,#0]  ; _x0
00000c  eba00801          SUB      r8,r0,r1
;;;78       int IMax = GUI_Context.AA_Factor * GUI_Context.AA_Factor;
000010  482b              LDR      r0,|L12.192|
000012  f8900060          LDRB     r0,[r0,#0x60]  ; GUI_Context
000016  fb00f600          MUL      r6,r0,r0
;;;79       for (i =_x0_InUse-_x0; i<=iEnd; i++) {
00001a  482a              LDR      r0,|L12.196|
00001c  6800              LDR      r0,[r0,#0]  ; _x0_InUse
00001e  4927              LDR      r1,|L12.188|
000020  6809              LDR      r1,[r1,#0]  ; _x0
000022  1a44              SUBS     r4,r0,r1
000024  e041              B        |L12.170|
                  |L12.38|
;;;80         int Intens = *(pabAABuffer+i);
000026  4828              LDR      r0,|L12.200|
000028  6800              LDR      r0,[r0,#0]  ; pabAABuffer
00002a  5d07              LDRB     r7,[r0,r4]
;;;81         if (Intens) {
00002c  2f00              CMP      r7,#0
00002e  d03b              BEQ      |L12.168|
;;;82           /* Check we can use line draw */
;;;83           if (Intens == IMax) {
000030  42b7              CMP      r7,r6
000032  d126              BNE      |L12.130|
;;;84             int j;
;;;85             for (j=i; j<iEnd; ) {
000034  4625              MOV      r5,r4
000036  e007              B        |L12.72|
                  |L12.56|
;;;86               if (*(pabAABuffer+j+1) != IMax) {
000038  4823              LDR      r0,|L12.200|
00003a  6800              LDR      r0,[r0,#0]  ; pabAABuffer
00003c  4428              ADD      r0,r0,r5
00003e  7840              LDRB     r0,[r0,#1]
000040  42b0              CMP      r0,r6
000042  d000              BEQ      |L12.70|
;;;87                 break;
000044  e002              B        |L12.76|
                  |L12.70|
;;;88               }
;;;89               j++;
000046  1c6d              ADDS     r5,r5,#1
                  |L12.72|
000048  4545              CMP      r5,r8                 ;85
00004a  dbf5              BLT      |L12.56|
                  |L12.76|
00004c  bf00              NOP                            ;87
;;;90             }
;;;91             /* Draw the full pixel(s) */
;;;92             if (j!=i) {
00004e  42a5              CMP      r5,r4
000050  d00d              BEQ      |L12.110|
;;;93               pLCD_HLPrev->pfDrawHLine(_x0+i, _y, _x0+j);
000052  491a              LDR      r1,|L12.188|
000054  6809              LDR      r1,[r1,#0]  ; _x0
000056  194a              ADDS     r2,r1,r5
000058  4918              LDR      r1,|L12.188|
00005a  6809              LDR      r1,[r1,#0]  ; _x0
00005c  1908              ADDS     r0,r1,r4
00005e  491b              LDR      r1,|L12.204|
000060  6809              LDR      r1,[r1,#0]  ; pLCD_HLPrev
000062  680b              LDR      r3,[r1,#0]
000064  491a              LDR      r1,|L12.208|
000066  6809              LDR      r1,[r1,#0]  ; _y
000068  4798              BLX      r3
;;;94               i = j;  /*xxx*/
00006a  462c              MOV      r4,r5
00006c  e008              B        |L12.128|
                  |L12.110|
;;;95             } else {
;;;96               LCD_HL_DrawPixel (_x0+i,_y);
00006e  4913              LDR      r1,|L12.188|
000070  6809              LDR      r1,[r1,#0]  ; _x0
000072  1908              ADDS     r0,r1,r4
000074  4912              LDR      r1,|L12.192|
000076  6dc9              LDR      r1,[r1,#0x5c]  ; GUI_Context
000078  684a              LDR      r2,[r1,#4]
00007a  4915              LDR      r1,|L12.208|
00007c  6809              LDR      r1,[r1,#0]  ; _y
00007e  4790              BLX      r2
                  |L12.128|
;;;97             }
;;;98           } else {
000080  e012              B        |L12.168|
                  |L12.130|
;;;99             LCD_SetPixelAA(_x0+i,_y, (15*Intens+IMax/2)/IMax);
000082  4635              MOV      r5,r6
000084  eb0670d5          ADD      r0,r6,r5,LSR #31
000088  1040              ASRS     r0,r0,#1
00008a  210f              MOVS     r1,#0xf
00008c  fb010007          MLA      r0,r1,r7,r0
000090  fb90f0f6          SDIV     r0,r0,r6
000094  f00009ff          AND      r9,r0,#0xff
000098  4908              LDR      r1,|L12.188|
00009a  6809              LDR      r1,[r1,#0]  ; _x0
00009c  1908              ADDS     r0,r1,r4
00009e  464a              MOV      r2,r9
0000a0  490b              LDR      r1,|L12.208|
0000a2  6809              LDR      r1,[r1,#0]  ; _y
0000a4  f7fffffe          BL       LCD_SetPixelAA
                  |L12.168|
0000a8  1c64              ADDS     r4,r4,#1              ;79
                  |L12.170|
0000aa  4544              CMP      r4,r8                 ;79
0000ac  ddbb              BLE      |L12.38|
;;;100          }
;;;101        }    
;;;102      }
;;;103      _CleanLine();
0000ae  f7fffffe          BL       _CleanLine
;;;104    }
0000b2  e8bd87f0          POP      {r4-r10,pc}
;;;105    
                          ENDP

0000b6  0000              DCW      0x0000
                  |L12.184|
                          DCD      _x1_InUse
                  |L12.188|
                          DCD      _x0
                  |L12.192|
                          DCD      GUI_Context
                  |L12.196|
                          DCD      _x0_InUse
                  |L12.200|
                          DCD      pabAABuffer
                  |L12.204|
                          DCD      pLCD_HLPrev
                  |L12.208|
                          DCD      ||_y||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  abAABuffer
                          %        240

                          AREA ||.data||, DATA, ALIGN=2

                  pabAABuffer
                          DCD      0x00000000
                  _x0
                          DCD      0x00000000
                  _x1
                          DCD      0x00000000
                  ||_y||
                          DCD      0x00000000
                  _x0_InUse
                          DCD      0x00000000
                  _x1_InUse
                          DCD      0x00000000
                  ClipRect_HL
                          %        8
                  DrawAPICopy
                          %        8
                  pLCD_HLPrev
                          DCD      0x00000000
