; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\dialog.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\dialog.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Widget\DIALOG.c]
                          THUMB

                          AREA ||i.DIALOG_GetBkColor||, CODE, READONLY, ALIGN=2

                  DIALOG_GetBkColor PROC
;;;62     */
;;;63     LCD_COLOR DIALOG_GetBkColor(void) {
000000  4801              LDR      r0,|L1.8|
;;;64       return _BkColor;
000002  6800              LDR      r0,[r0,#0]  ; _BkColor
;;;65     }
000004  4770              BX       lr
;;;66     
                          ENDP

000006  0000              DCW      0x0000
                  |L1.8|
                          DCD      _BkColor

                          AREA ||i.DIALOG_SetBkColor||, CODE, READONLY, ALIGN=2

                  DIALOG_SetBkColor PROC
;;;70     */
;;;71     LCD_COLOR DIALOG_SetBkColor(LCD_COLOR BkColor) {
000000  4601              MOV      r1,r0
;;;72       LCD_COLOR r;
;;;73       r = _BkColor;
000002  4a02              LDR      r2,|L2.12|
000004  6810              LDR      r0,[r2,#0]  ; _BkColor
;;;74       _BkColor = BkColor;
000006  6011              STR      r1,[r2,#0]  ; _BkColor
;;;75       return r;
;;;76     }
000008  4770              BX       lr
;;;77     /*********************************************************************
                          ENDP

00000a  0000              DCW      0x0000
                  |L2.12|
                          DCD      _BkColor

                          AREA ||i.GUI_CreateDialogBox||, CODE, READONLY, ALIGN=1

                  GUI_CreateDialogBox PROC
;;;101    */
;;;102    WM_HWIN GUI_CreateDialogBox(const GUI_WIDGET_CREATE_INFO* paWidget, int NumWidgets, WM_CALLBACK* cb, WM_HWIN hParent,
000000  e92d5ffc          PUSH     {r2-r12,lr}
;;;103                                int x0, int y0)
;;;104    {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
00000c  e9ddab0c          LDRD     r10,r11,[sp,#0x30]
;;;105      WM_HWIN hDialog, hDialogClient;
;;;106      hDialog = paWidget->pfCreateIndirect(paWidget, hParent, x0, y0, cb);     /* Create parent window */
000010  9600              STR      r6,[sp,#0]
000012  465b              MOV      r3,r11
000014  4652              MOV      r2,r10
000016  4639              MOV      r1,r7
000018  4620              MOV      r0,r4
00001a  f8d4c000          LDR      r12,[r4,#0]
00001e  47e0              BLX      r12
000020  4680              MOV      r8,r0
;;;107      if (!hDialog) {
000022  f1b80f00          CMP      r8,#0
000026  d102              BNE      |L3.46|
;;;108        return 0;
000028  2000              MOVS     r0,#0
                  |L3.42|
;;;109      }
;;;110      hDialogClient = WM_GetClientWindow(hDialog);
;;;111      WIDGET_OrState(hDialog, paWidget->Flags);
;;;112      WM_ShowWindow(hDialog);
;;;113      WM_ShowWindow(hDialogClient);
;;;114      while (--NumWidgets > 0) {
;;;115        WM_HWIN hChild;
;;;116        paWidget++;
;;;117        hChild = paWidget->pfCreateIndirect(paWidget, hDialogClient, 0, 0, 0);     /* Create child window */
;;;118        if (!hChild) {
;;;119          WM_DeleteWindow(hDialog);
;;;120          return 0;
;;;121        }
;;;122        WM_ShowWindow(hChild);
;;;123      }
;;;124      WM_SetFocusOnNextChild(hDialog);     /* Set the focus to the first child */
;;;125      WM_SendMessageNoPara(hDialogClient, WM_INIT_DIALOG);
;;;126      return hDialog;
;;;127    }
00002a  e8bd9ffc          POP      {r2-r12,pc}
                  |L3.46|
00002e  4640              MOV      r0,r8                 ;110
000030  f7fffffe          BL       WM_GetClientWindow
000034  9001              STR      r0,[sp,#4]            ;110
000036  8a61              LDRH     r1,[r4,#0x12]         ;111
000038  4640              MOV      r0,r8                 ;111
00003a  f7fffffe          BL       WIDGET_OrState
00003e  4640              MOV      r0,r8                 ;112
000040  f7fffffe          BL       WM_ShowWindow
000044  9801              LDR      r0,[sp,#4]            ;113
000046  f7fffffe          BL       WM_ShowWindow
00004a  e016              B        |L3.122|
                  |L3.76|
00004c  3418              ADDS     r4,r4,#0x18           ;116
00004e  2000              MOVS     r0,#0                 ;117
000050  9000              STR      r0,[sp,#0]            ;117
000052  4603              MOV      r3,r0                 ;117
000054  4602              MOV      r2,r0                 ;117
000056  f8d4c000          LDR      r12,[r4,#0]           ;117
00005a  4620              MOV      r0,r4                 ;117
00005c  9901              LDR      r1,[sp,#4]            ;117
00005e  47e0              BLX      r12                   ;117
000060  4681              MOV      r9,r0                 ;117
000062  f1b90f00          CMP      r9,#0                 ;118
000066  d104              BNE      |L3.114|
000068  4640              MOV      r0,r8                 ;119
00006a  f7fffffe          BL       WM_DeleteWindow
00006e  2000              MOVS     r0,#0                 ;120
000070  e7db              B        |L3.42|
                  |L3.114|
000072  4648              MOV      r0,r9                 ;122
000074  f7fffffe          BL       WM_ShowWindow
000078  bf00              NOP                            ;123
                  |L3.122|
00007a  1e68              SUBS     r0,r5,#1              ;114
00007c  1e05              SUBS     r5,r0,#0              ;114
00007e  dce5              BGT      |L3.76|
000080  4640              MOV      r0,r8                 ;124
000082  f7fffffe          BL       WM_SetFocusOnNextChild
000086  211d              MOVS     r1,#0x1d              ;125
000088  9801              LDR      r0,[sp,#4]            ;125
00008a  f7fffffe          BL       WM_SendMessageNoPara
00008e  4640              MOV      r0,r8                 ;126
000090  e7cb              B        |L3.42|
;;;128    
                          ENDP


                          AREA ||i.GUI_EndDialog||, CODE, READONLY, ALIGN=1

                  GUI_EndDialog PROC
;;;132    */
;;;133    void GUI_EndDialog(WM_HWIN hDialog, int r) {
000000  b570              PUSH     {r4-r6,lr}
000002  4606              MOV      r6,r0
000004  460d              MOV      r5,r1
;;;134      WM_DIALOG_STATUS* pStatus;
;;;135      pStatus = GUI_GetDialogStatusPtr(hDialog);
000006  4630              MOV      r0,r6
000008  f7fffffe          BL       GUI_GetDialogStatusPtr
00000c  4604              MOV      r4,r0
;;;136      if (pStatus) {
00000e  b114              CBZ      r4,|L4.22|
;;;137        pStatus->ReturnValue = r;
000010  6065              STR      r5,[r4,#4]
;;;138        pStatus->Done = 1;
000012  2001              MOVS     r0,#1
000014  6020              STR      r0,[r4,#0]
                  |L4.22|
;;;139      }
;;;140      WM_DeleteWindow(hDialog);
000016  4630              MOV      r0,r6
000018  f7fffffe          BL       WM_DeleteWindow
;;;141    }
00001c  bd70              POP      {r4-r6,pc}
;;;142    
                          ENDP


                          AREA ||i.GUI_ExecCreatedDialog||, CODE, READONLY, ALIGN=1

                  GUI_ExecCreatedDialog PROC
;;;147    */
;;;148    int     GUI_ExecCreatedDialog (WM_HWIN hDialog) {
000000  b51c              PUSH     {r2-r4,lr}
000002  4604              MOV      r4,r0
;;;149      WM_DIALOG_STATUS DialogStatus = {0};
000004  2000              MOVS     r0,#0
000006  9000              STR      r0,[sp,#0]
000008  9001              STR      r0,[sp,#4]
;;;150      /* Let window know how to send feedback (close info & return value) */
;;;151      GUI_SetDialogStatusPtr(hDialog, &DialogStatus);
00000a  4669              MOV      r1,sp
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       GUI_SetDialogStatusPtr
;;;152      while (!DialogStatus.Done) {
000012  e004              B        |L5.30|
                  |L5.20|
;;;153        if (!GUI_Exec()) {
000014  f7fffffe          BL       GUI_Exec
000018  b908              CBNZ     r0,|L5.30|
;;;154          GUI_WaitEvent();      /* Wait for event (keyboard, mouse or whatever) */
00001a  f7fffffe          BL       GUI_WaitEvent
                  |L5.30|
00001e  9800              LDR      r0,[sp,#0]            ;152
000020  2800              CMP      r0,#0                 ;152
000022  d0f7              BEQ      |L5.20|
;;;155        }
;;;156      }
;;;157      return DialogStatus.ReturnValue;
000024  9801              LDR      r0,[sp,#4]
;;;158    }
000026  bd1c              POP      {r2-r4,pc}
;;;159    
                          ENDP


                          AREA ||i.GUI_ExecDialogBox||, CODE, READONLY, ALIGN=1

                  GUI_ExecDialogBox PROC
;;;169    */
;;;170    int GUI_ExecDialogBox(const GUI_WIDGET_CREATE_INFO* paWidget,
000000  e92d47fc          PUSH     {r2-r10,lr}
;;;171                          int NumWidgets, WM_CALLBACK* cb, WM_HWIN hParent, int x0, int y0)
;;;172    {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
00000c  e9dd8a0a          LDRD     r8,r10,[sp,#0x28]
;;;173      WM_HWIN hDialog;
;;;174      hDialog = GUI_CreateDialogBox(paWidget, NumWidgets, cb, hParent, x0, y0);
000010  463b              MOV      r3,r7
000012  4632              MOV      r2,r6
000014  4629              MOV      r1,r5
000016  4620              MOV      r0,r4
000018  e9cd8a00          STRD     r8,r10,[sp,#0]
00001c  f7fffffe          BL       GUI_CreateDialogBox
000020  4681              MOV      r9,r0
;;;175      return GUI_ExecCreatedDialog(hDialog);
000022  4648              MOV      r0,r9
000024  f7fffffe          BL       GUI_ExecCreatedDialog
;;;176    }
000028  e8bd87fc          POP      {r2-r10,pc}
;;;177    
                          ENDP


                          AREA ||i.GUI_GetDialogStatusPtr||, CODE, READONLY, ALIGN=1

                  GUI_GetDialogStatusPtr PROC
;;;91     */
;;;92     WM_DIALOG_STATUS*  GUI_GetDialogStatusPtr(WM_HWIN hDialog) {
000000  b53e              PUSH     {r1-r5,lr}
000002  4604              MOV      r4,r0
;;;93       WM_MESSAGE Msg = {0};
000004  2000              MOVS     r0,#0
000006  9000              STR      r0,[sp,#0]
000008  9001              STR      r0,[sp,#4]
00000a  9002              STR      r0,[sp,#8]
;;;94       Msg.MsgId = WM_HANDLE_DIALOG_STATUS;
00000c  202a              MOVS     r0,#0x2a
00000e  9000              STR      r0,[sp,#0]
;;;95       WM_SendMessage(hDialog, &Msg);
000010  4669              MOV      r1,sp
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       WM_SendMessage
;;;96       return (WM_DIALOG_STATUS*)Msg.Data.p;
000018  9802              LDR      r0,[sp,#8]
;;;97     }
00001a  bd3e              POP      {r1-r5,pc}
;;;98     /*********************************************************************
                          ENDP


                          AREA ||i.GUI_SetDialogStatusPtr||, CODE, READONLY, ALIGN=1

                  GUI_SetDialogStatusPtr PROC
;;;80     */
;;;81     void GUI_SetDialogStatusPtr(WM_HWIN hDialog, WM_DIALOG_STATUS* pDialogStatus) {
000000  b53e              PUSH     {r1-r5,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;82       WM_MESSAGE Msg = {0};
000006  2000              MOVS     r0,#0
000008  9000              STR      r0,[sp,#0]
00000a  9001              STR      r0,[sp,#4]
00000c  9002              STR      r0,[sp,#8]
;;;83       Msg.MsgId = WM_HANDLE_DIALOG_STATUS;
00000e  202a              MOVS     r0,#0x2a
000010  9000              STR      r0,[sp,#0]
;;;84       Msg.Data.p = pDialogStatus;
000012  9402              STR      r4,[sp,#8]
;;;85       WM_SendMessage(hDialog, &Msg);
000014  4669              MOV      r1,sp
000016  4628              MOV      r0,r5
000018  f7fffffe          BL       WM_SendMessage
;;;86     }
00001c  bd3e              POP      {r1-r5,pc}
;;;87     
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  _BkColor
                          DCD      0x00c0c0c0
