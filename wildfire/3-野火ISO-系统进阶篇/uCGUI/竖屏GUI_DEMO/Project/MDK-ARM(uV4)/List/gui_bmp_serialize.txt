; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\gui_bmp_serialize.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\gui_bmp_serialize.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Core\GUI_BMP_Serialize.c]
                          THUMB

                          AREA ||i.GUI_BMP_Serialize||, CODE, READONLY, ALIGN=1

                  GUI_BMP_Serialize PROC
;;;131    */
;;;132    void GUI_BMP_Serialize(GUI_CALLBACK_VOID_U8_P * pfSerialize, void * p) {
000000  e92d41fc          PUSH     {r2-r8,lr}
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
;;;133      GUI_BMP_SerializeEx(pfSerialize, 0, 0, LCD_GetXSize(), LCD_GetYSize(), p);
000008  f7fffffe          BL       LCD_GetYSize
00000c  4606              MOV      r6,r0
00000e  f7fffffe          BL       LCD_GetXSize
000012  4607              MOV      r7,r0
000014  463b              MOV      r3,r7
000016  2200              MOVS     r2,#0
000018  4611              MOV      r1,r2
00001a  4628              MOV      r0,r5
00001c  e9cd6400          STRD     r6,r4,[sp,#0]
000020  f7fffffe          BL       GUI_BMP_SerializeEx
;;;134    }
000024  e8bd81fc          POP      {r2-r8,pc}
;;;135    
                          ENDP


                          AREA ||i.GUI_BMP_SerializeEx||, CODE, READONLY, ALIGN=1

                  GUI_BMP_SerializeEx PROC
;;;67     */
;;;68     void GUI_BMP_SerializeEx(GUI_CALLBACK_VOID_U8_P * pfSerialize, int x0, int y0, int xSize, int ySize, void * p) {
000000  e92d4fff          PUSH     {r0-r11,lr}
000004  b089              SUB      sp,sp,#0x24
000006  4683              MOV      r11,r0
000008  461c              MOV      r4,r3
;;;69       int x, y, i, BPP, BytesPerLine, NumColors, Padding;
;;;70       U32 BitmapOffset, FileSize;
;;;71       GUI_LOCK();
00000a  f7fffffe          BL       GUI_Lock
;;;72       BPP          = LCD_GetBitsPerPixel();
00000e  f7fffffe          BL       LCD_GetBitsPerPixel
000012  4606              MOV      r6,r0
;;;73       BytesPerLine = ((BPP > 8) ? (2 * xSize + 2) : (xSize + 3)) & ~3;
000014  2e08              CMP      r6,#8
000016  dd02              BLE      |L2.30|
000018  0060              LSLS     r0,r4,#1
00001a  1c80              ADDS     r0,r0,#2
00001c  e000              B        |L2.32|
                  |L2.30|
00001e  1ce0              ADDS     r0,r4,#3
                  |L2.32|
000020  f0200003          BIC      r0,r0,#3
000024  9008              STR      r0,[sp,#0x20]
;;;74       NumColors    = (BPP > 8) ? 0 : (1 << BPP);
000026  2e08              CMP      r6,#8
000028  dd01              BLE      |L2.46|
00002a  2000              MOVS     r0,#0
00002c  e001              B        |L2.50|
                  |L2.46|
00002e  2001              MOVS     r0,#1
000030  40b0              LSLS     r0,r0,r6
                  |L2.50|
000032  4681              MOV      r9,r0
;;;75       Padding      = BytesPerLine - ((BPP > 8) ? (2 * xSize) : xSize);
000034  2e08              CMP      r6,#8
000036  dd01              BLE      |L2.60|
000038  0060              LSLS     r0,r4,#1
00003a  e000              B        |L2.62|
                  |L2.60|
00003c  4620              MOV      r0,r4
                  |L2.62|
00003e  9908              LDR      r1,[sp,#0x20]
000040  1a08              SUBS     r0,r1,r0
000042  9007              STR      r0,[sp,#0x1c]
;;;76       /* Write BITMAPFILEHEADER */
;;;77       BitmapOffset   = SIZEOF_BITMAPFILEHEADER
000044  2036              MOVS     r0,#0x36
000046  eb000089          ADD      r0,r0,r9,LSL #2
00004a  9006              STR      r0,[sp,#0x18]
;;;78                      + SIZEOF_BITMAPINFOHEADER
;;;79                      + NumColors * 4;
;;;80       FileSize       = BitmapOffset
00004c  9a08              LDR      r2,[sp,#0x20]
00004e  9916              LDR      r1,[sp,#0x58]
000050  9806              LDR      r0,[sp,#0x18]
000052  fb010002          MLA      r0,r1,r2,r0
000056  9005              STR      r0,[sp,#0x14]
;;;81                      + ySize * BytesPerLine;
;;;82       _SendU16(pfSerialize, DIB_HEADER_MARKER, p);       /* bfType */
000058  f6445142          MOV      r1,#0x4d42
00005c  4658              MOV      r0,r11
00005e  9a17              LDR      r2,[sp,#0x5c]
000060  f7fffffe          BL       _SendU16
;;;83       _SendU32(pfSerialize, FileSize, p);                /* bfSize */
000064  4658              MOV      r0,r11
000066  9a17              LDR      r2,[sp,#0x5c]
000068  9905              LDR      r1,[sp,#0x14]
00006a  f7fffffe          BL       _SendU32
;;;84       _SendU32(pfSerialize, 0, p);                       /* bfReserved1, bfReserved2 */
00006e  2100              MOVS     r1,#0
000070  4658              MOV      r0,r11
000072  9a17              LDR      r2,[sp,#0x5c]
000074  f7fffffe          BL       _SendU32
;;;85       _SendU32(pfSerialize, BitmapOffset, p);            /* bfOffBits */
000078  4658              MOV      r0,r11
00007a  9a17              LDR      r2,[sp,#0x5c]
00007c  9906              LDR      r1,[sp,#0x18]
00007e  f7fffffe          BL       _SendU32
;;;86       /* Write BITMAPINFOHEADER */
;;;87       _SendU32(pfSerialize, SIZEOF_BITMAPINFOHEADER, p); /* biSize */
000082  2128              MOVS     r1,#0x28
000084  4658              MOV      r0,r11
000086  9a17              LDR      r2,[sp,#0x5c]
000088  f7fffffe          BL       _SendU32
;;;88       _SendU32(pfSerialize, xSize, p);                   /* biWidth */
00008c  4621              MOV      r1,r4
00008e  4658              MOV      r0,r11
000090  9a17              LDR      r2,[sp,#0x5c]
000092  f7fffffe          BL       _SendU32
;;;89       _SendU32(pfSerialize, ySize, p);                   /* biHeighth */
000096  4658              MOV      r0,r11
000098  e9dd1216          LDRD     r1,r2,[sp,#0x58]
00009c  f7fffffe          BL       _SendU32
;;;90       _SendU16(pfSerialize, 1, p);                       /* biPlanes */
0000a0  2101              MOVS     r1,#1
0000a2  4658              MOV      r0,r11
0000a4  9a17              LDR      r2,[sp,#0x5c]
0000a6  f7fffffe          BL       _SendU16
;;;91       _SendU16(pfSerialize, (BPP  <= 8) ? 8 : 16, p);    /* biBitCount */
0000aa  2e08              CMP      r6,#8
0000ac  dc01              BGT      |L2.178|
0000ae  2008              MOVS     r0,#8
0000b0  e000              B        |L2.180|
                  |L2.178|
0000b2  2010              MOVS     r0,#0x10
                  |L2.180|
0000b4  4601              MOV      r1,r0
0000b6  4658              MOV      r0,r11
0000b8  9a17              LDR      r2,[sp,#0x5c]
0000ba  f7fffffe          BL       _SendU16
;;;92       _SendU32(pfSerialize, 0, p);                       /* biCompression */
0000be  2100              MOVS     r1,#0
0000c0  4658              MOV      r0,r11
0000c2  9a17              LDR      r2,[sp,#0x5c]
0000c4  f7fffffe          BL       _SendU32
;;;93       _SendU32(pfSerialize, 0, p);                       /* biSizeImage */
0000c8  2100              MOVS     r1,#0
0000ca  4658              MOV      r0,r11
0000cc  9a17              LDR      r2,[sp,#0x5c]
0000ce  f7fffffe          BL       _SendU32
;;;94       _SendU32(pfSerialize, 0, p);                       /* biXPelsPerMeter */
0000d2  2100              MOVS     r1,#0
0000d4  4658              MOV      r0,r11
0000d6  9a17              LDR      r2,[sp,#0x5c]
0000d8  f7fffffe          BL       _SendU32
;;;95       _SendU32(pfSerialize, 0, p);                       /* biYPelsPerMeter */
0000dc  2100              MOVS     r1,#0
0000de  4658              MOV      r0,r11
0000e0  9a17              LDR      r2,[sp,#0x5c]
0000e2  f7fffffe          BL       _SendU32
;;;96       _SendU32(pfSerialize, NumColors, p);               /* biClrUsed */
0000e6  4649              MOV      r1,r9
0000e8  4658              MOV      r0,r11
0000ea  9a17              LDR      r2,[sp,#0x5c]
0000ec  f7fffffe          BL       _SendU32
;;;97       _SendU32(pfSerialize, 0, p);                       /* biClrImportant */
0000f0  2100              MOVS     r1,#0
0000f2  4658              MOV      r0,r11
0000f4  9a17              LDR      r2,[sp,#0x5c]
0000f6  f7fffffe          BL       _SendU32
;;;98       /* Write palette */
;;;99       for (i = 0; i < NumColors; i++) {
0000fa  2500              MOVS     r5,#0
0000fc  e012              B        |L2.292|
                  |L2.254|
;;;100        U32 Color;
;;;101        Color = GUI_Index2Color(i);
0000fe  4628              MOV      r0,r5
000100  f7fffffe          BL       GUI_Index2Color
000104  4682              MOV      r10,r0
;;;102        Color = ((Color >> 16) & 255) | (Color & 0xff00) | ((Color & 0xff) << 16);
000106  f40a407f          AND      r0,r10,#0xff00
00010a  f3ca4107          UBFX     r1,r10,#16,#8
00010e  4308              ORRS     r0,r0,r1
000110  f00a01ff          AND      r1,r10,#0xff
000114  ea404a01          ORR      r10,r0,r1,LSL #16
;;;103        _SendU32(pfSerialize, Color, p);
000118  4651              MOV      r1,r10
00011a  4658              MOV      r0,r11
00011c  9a17              LDR      r2,[sp,#0x5c]
00011e  f7fffffe          BL       _SendU32
000122  1c6d              ADDS     r5,r5,#1              ;99
                  |L2.292|
000124  454d              CMP      r5,r9                 ;99
000126  dbea              BLT      |L2.254|
;;;104      }
;;;105      /* Write pixels */
;;;106      for (y = ySize - 1; y >= 0; y--) {
000128  9816              LDR      r0,[sp,#0x58]
00012a  1e47              SUBS     r7,r0,#1
00012c  e04f              B        |L2.462|
                  |L2.302|
;;;107        for (x = 0; x < xSize; x++) {
00012e  f04f0800          MOV      r8,#0
000132  e040              B        |L2.438|
                  |L2.308|
;;;108          if (BPP <= 8) {
000134  2e08              CMP      r6,#8
000136  dc0c              BGT      |L2.338|
;;;109            pfSerialize(LCD_GetPixelIndex(x0 + x, y0 + y), p);
000138  9a0b              LDR      r2,[sp,#0x2c]
00013a  19d1              ADDS     r1,r2,r7
00013c  9a0a              LDR      r2,[sp,#0x28]
00013e  eb020008          ADD      r0,r2,r8
000142  f7fffffe          BL       LCD_GetPixelIndex
000146  f0000aff          AND      r10,r0,#0xff
00014a  4650              MOV      r0,r10
00014c  9917              LDR      r1,[sp,#0x5c]
00014e  47d8              BLX      r11
000150  e02f              B        |L2.434|
                  |L2.338|
;;;110          } else {
;;;111            U16 Color16;
;;;112            U32 Color = LCD_GetPixelColor(x0 + x, y0 + y);
000152  9a0b              LDR      r2,[sp,#0x2c]
000154  19d1              ADDS     r1,r2,r7
000156  9a0a              LDR      r2,[sp,#0x28]
000158  eb020008          ADD      r0,r2,r8
00015c  f7fffffe          BL       LCD_GetPixelColor
000160  4682              MOV      r10,r0
;;;113            int b = ((Color >> 16) * 31 + 127) / 255;
000162  ea4f401a          LSR      r0,r10,#16
000166  ebc01040          RSB      r0,r0,r0,LSL #5
00016a  307f              ADDS     r0,r0,#0x7f
00016c  21ff              MOVS     r1,#0xff
00016e  fbb0f0f1          UDIV     r0,r0,r1
000172  9003              STR      r0,[sp,#0xc]
;;;114            int g = (((Color >> 8) & 255) * 31 + 127) / 255;
000174  f3ca2007          UBFX     r0,r10,#8,#8
000178  ebc01040          RSB      r0,r0,r0,LSL #5
00017c  307f              ADDS     r0,r0,#0x7f
00017e  fbb0f0f1          UDIV     r0,r0,r1
000182  9002              STR      r0,[sp,#8]
;;;115            int r = ((Color & 255) * 31 + 127) / 255;
000184  f00a00ff          AND      r0,r10,#0xff
000188  ebc01040          RSB      r0,r0,r0,LSL #5
00018c  307f              ADDS     r0,r0,#0x7f
00018e  fbb0f0f1          UDIV     r0,r0,r1
000192  9001              STR      r0,[sp,#4]
;;;116            Color16 = (r << 10) | (g << 5) | b;       /* 16 bpp Bitmaps in windows are 555: rrrrrgggggbbbbb */
000194  9801              LDR      r0,[sp,#4]
000196  0281              LSLS     r1,r0,#10
000198  9802              LDR      r0,[sp,#8]
00019a  ea411040          ORR      r0,r1,r0,LSL #5
00019e  9903              LDR      r1,[sp,#0xc]
0001a0  4308              ORRS     r0,r0,r1
0001a2  b280              UXTH     r0,r0
0001a4  9004              STR      r0,[sp,#0x10]
;;;117            _SendU16(pfSerialize, Color16, p);
0001a6  4658              MOV      r0,r11
0001a8  9a17              LDR      r2,[sp,#0x5c]
0001aa  9904              LDR      r1,[sp,#0x10]
0001ac  f7fffffe          BL       _SendU16
;;;118          }
0001b0  bf00              NOP      
                  |L2.434|
0001b2  f1080801          ADD      r8,r8,#1              ;107
                  |L2.438|
0001b6  45a0              CMP      r8,r4                 ;107
0001b8  dbbc              BLT      |L2.308|
;;;119        }
;;;120        /* Align pointer to next U32 */
;;;121        for (i = 0; i < Padding; i++) {
0001ba  2500              MOVS     r5,#0
0001bc  e003              B        |L2.454|
                  |L2.446|
;;;122          pfSerialize(0, p);
0001be  2000              MOVS     r0,#0
0001c0  9917              LDR      r1,[sp,#0x5c]
0001c2  47d8              BLX      r11
0001c4  1c6d              ADDS     r5,r5,#1              ;121
                  |L2.454|
0001c6  9807              LDR      r0,[sp,#0x1c]         ;121
0001c8  4285              CMP      r5,r0                 ;121
0001ca  dbf8              BLT      |L2.446|
0001cc  1e7f              SUBS     r7,r7,#1              ;106
                  |L2.462|
0001ce  2f00              CMP      r7,#0                 ;106
0001d0  daad              BGE      |L2.302|
;;;123        }
;;;124      }
;;;125      GUI_UNLOCK();
0001d2  f7fffffe          BL       GUI_Unlock
;;;126    }
0001d6  b00d              ADD      sp,sp,#0x34
0001d8  e8bd8ff0          POP      {r4-r11,pc}
;;;127    
                          ENDP


                          AREA ||i._SendU16||, CODE, READONLY, ALIGN=1

                  _SendU16 PROC
;;;43     */
;;;44     static void _SendU16(GUI_CALLBACK_VOID_U8_P * pfSerialize, U16 Data, void * p) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;45       (*pfSerialize)((U8)Data, p);
000008  b2e8              UXTB     r0,r5
00000a  4631              MOV      r1,r6
00000c  47a0              BLX      r4
;;;46       (*pfSerialize)(Data >> 8, p);
00000e  1228              ASRS     r0,r5,#8
000010  4631              MOV      r1,r6
000012  47a0              BLX      r4
;;;47     }
000014  bd70              POP      {r4-r6,pc}
;;;48     
                          ENDP


                          AREA ||i._SendU32||, CODE, READONLY, ALIGN=1

                  _SendU32 PROC
;;;52     */
;;;53     static void _SendU32(GUI_CALLBACK_VOID_U8_P * pfSerialize, U32 Data, void * p) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
000006  4616              MOV      r6,r2
;;;54       _SendU16(pfSerialize, (U16)Data, p);
000008  b2a1              UXTH     r1,r4
00000a  4632              MOV      r2,r6
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       _SendU16
;;;55       _SendU16(pfSerialize, Data >> 16, p);
000012  0c21              LSRS     r1,r4,#16
000014  4632              MOV      r2,r6
000016  4628              MOV      r0,r5
000018  f7fffffe          BL       _SendU16
;;;56     }
00001c  bd70              POP      {r4-r6,pc}
;;;57     
                          ENDP

