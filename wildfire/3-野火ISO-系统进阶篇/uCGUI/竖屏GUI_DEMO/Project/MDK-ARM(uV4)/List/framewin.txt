; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\framewin.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\framewin.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Widget\FRAMEWIN.c]
                          THUMB

                          AREA ||i.FRAMEWIN_Callback||, CODE, READONLY, ALIGN=1

                  FRAMEWIN_Callback PROC
;;;463    */
;;;464    void FRAMEWIN_Callback (WM_MESSAGE *pMsg) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  b088              SUB      sp,sp,#0x20
000006  4604              MOV      r4,r0
;;;465      FRAMEWIN_Handle hWin;
;;;466      FRAMEWIN_Obj * pObj;
;;;467      GUI_RECT * pRect;
;;;468      POSITIONS Pos;
;;;469      GUI_HOOK * pHook;
;;;470      hWin = (FRAMEWIN_Handle)(pMsg->hWin);
000008  f9b47004          LDRSH    r7,[r4,#4]
;;;471      pObj = (FRAMEWIN_Obj *)GUI_ALLOC_h2p(hWin); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
00000c  4638              MOV      r0,r7
00000e  f7fffffe          BL       GUI_ALLOC_h2p
000012  4605              MOV      r5,r0
;;;472      pRect = (GUI_RECT*)(pMsg->Data.p);
000014  f8d49008          LDR      r9,[r4,#8]
;;;473      /* Call hook functions */
;;;474      for (pHook = pObj->pFirstHook; pHook; pHook = pHook->pNext) {
000018  6e6e              LDR      r6,[r5,#0x64]
00001a  e00a              B        |L1.50|
                  |L1.28|
;;;475        int r;
;;;476        r = (*pHook->pHookFunc)(pMsg);
00001c  4620              MOV      r0,r4
00001e  6871              LDR      r1,[r6,#4]
000020  4788              BLX      r1
000022  4680              MOV      r8,r0
;;;477        if (r) {
000024  f1b80f00          CMP      r8,#0
000028  d002              BEQ      |L1.48|
                  |L1.42|
;;;478          return;   /* Message handled */
;;;479        }
;;;480      }
;;;481      switch (pMsg->MsgId) {
;;;482      case WM_HANDLE_DIALOG_STATUS:
;;;483        if (pMsg->Data.p) {                           /* set pointer to Dialog status */
;;;484          pObj->pDialogStatus = (WM_DIALOG_STATUS*)pMsg->Data.p;
;;;485        } else {                                      /* return pointer to Dialog status */
;;;486          pMsg->Data.p = pObj->pDialogStatus;      
;;;487        }
;;;488        return;
;;;489      case WM_PAINT:
;;;490        _Paint(pObj);
;;;491        break;
;;;492      case WM_TOUCH:
;;;493        _OnTouch(hWin, pObj, pMsg);
;;;494        return;                       /* Return here ... Message handled */
;;;495      case WM_GET_INSIDE_RECT:
;;;496        FRAMEWIN__CalcPositions(pObj, &Pos);
;;;497    		*pRect = Pos.rClient;
;;;498        return;                       /* Return here ... Message handled */
;;;499      case WM_GET_CLIENT_WINDOW:      /* return handle to client window. For most windows, there is no seperate client window, so it is the same handle */
;;;500        pMsg->Data.v = (int)pObj->hClient;
;;;501        return;                       /* Return here ... Message handled */
;;;502      case WM_NOTIFY_PARENT:
;;;503        if (pMsg->Data.v == WM_NOTIFICATION_RELEASED) {
;;;504          WM_MESSAGE Msg;
;;;505          Msg.hWinSrc = hWin;
;;;506          Msg.Data    = pMsg->Data;
;;;507          Msg.MsgId   = WM_NOTIFY_PARENT_REFLECTION;
;;;508          WM__SendMessage(pMsg->hWinSrc, &Msg);
;;;509        }
;;;510        return;
;;;511      case WM_SET_FOCUS:                 /* We have received or lost focus */
;;;512        if (pMsg->Data.v == 1) {
;;;513          if (WM_IsWindow(pObj->hFocussedChild)) {
;;;514            WM_SetFocus(pObj->hFocussedChild);
;;;515          } else {
;;;516            pObj->hFocussedChild = WM_SetFocusOnNextChild(pObj->hClient);
;;;517          }
;;;518          FRAMEWIN_SetActive(hWin, 1);
;;;519          pMsg->Data.v = 0;              /* Focus could be accepted */
;;;520        } else {
;;;521          FRAMEWIN_SetActive(hWin, 0);
;;;522        }
;;;523        return;
;;;524      case WM_TOUCH_CHILD:
;;;525        /* If a child of this framewindow has been touched and the frame window was not active,
;;;526           the framewindow will receive the focus.
;;;527         */
;;;528        if (!(pObj->Flags & FRAMEWIN_SF_ACTIVE)) {
;;;529          const WM_MESSAGE * pMsgOrg;
;;;530          const GUI_PID_STATE * pState;
;;;531          pMsgOrg = (const WM_MESSAGE*)pMsg->Data.p;      /* The original touch message */
;;;532          pState = (const GUI_PID_STATE*)pMsgOrg->Data.p;
;;;533          if (pState) {          /* Message may not have a valid pointer (moved out) ! */
;;;534            if (pState->Pressed) {
;;;535              WM_SetFocus(hWin);
;;;536            }
;;;537          }
;;;538        }
;;;539        break;
;;;540      case WM_NOTIFY_CHILD_HAS_FOCUS:
;;;541        _OnChildHasFocus(hWin, pObj, pMsg);
;;;542        break;
;;;543      case WM_DELETE:
;;;544        GUI_DEBUG_LOG("FRAMEWIN: FRAMEWIN_Callback(WM_DELETE)\n");
;;;545        GUI_ALLOC_FreePtr(&pObj->hText);
;;;546        break;
;;;547      }
;;;548      /* Let widget handle the standard messages */
;;;549      if (WIDGET_HandleActive(hWin, pMsg) == 0) {
;;;550        return;
;;;551      }
;;;552      WM_DefaultProc(pMsg);
;;;553    }
00002a  b008              ADD      sp,sp,#0x20
00002c  e8bd87f0          POP      {r4-r10,pc}
                  |L1.48|
000030  6836              LDR      r6,[r6,#0]            ;474
                  |L1.50|
000032  2e00              CMP      r6,#0                 ;474
000034  d1f2              BNE      |L1.28|
000036  6820              LDR      r0,[r4,#0]            ;481
000038  2817              CMP      r0,#0x17              ;481
00003a  d032              BEQ      |L1.162|
00003c  dc0c              BGT      |L1.88|
00003e  280d              CMP      r0,#0xd               ;481
000040  d062              BEQ      |L1.264|
000042  dc04              BGT      |L1.78|
000044  280b              CMP      r0,#0xb               ;481
000046  d07b              BEQ      |L1.320|
000048  280c              CMP      r0,#0xc               ;481
00004a  d17e              BNE      |L1.330|
00004c  e018              B        |L1.128|
                  |L1.78|
00004e  280f              CMP      r0,#0xf               ;481
000050  d012              BEQ      |L1.120|
000052  2814              CMP      r0,#0x14              ;481
000054  d179              BNE      |L1.330|
000056  e019              B        |L1.140|
                  |L1.88|
000058  281e              CMP      r0,#0x1e              ;481
00005a  d036              BEQ      |L1.202|
00005c  2820              CMP      r0,#0x20              ;481
00005e  d069              BEQ      |L1.308|
000060  2826              CMP      r0,#0x26              ;481
000062  d022              BEQ      |L1.170|
000064  282a              CMP      r0,#0x2a              ;481
000066  d170              BNE      |L1.330|
000068  68a0              LDR      r0,[r4,#8]            ;483
00006a  b110              CBZ      r0,|L1.114|
00006c  68a0              LDR      r0,[r4,#8]            ;484
00006e  6628              STR      r0,[r5,#0x60]         ;484
000070  e001              B        |L1.118|
                  |L1.114|
000072  6e28              LDR      r0,[r5,#0x60]         ;486
000074  60a0              STR      r0,[r4,#8]            ;486
                  |L1.118|
000076  e7d8              B        |L1.42|
                  |L1.120|
000078  4628              MOV      r0,r5                 ;490
00007a  f7fffffe          BL       _Paint
00007e  e064              B        |L1.330|
                  |L1.128|
000080  4622              MOV      r2,r4                 ;493
000082  4629              MOV      r1,r5                 ;493
000084  4638              MOV      r0,r7                 ;493
000086  f7fffffe          BL       _OnTouch
00008a  e7ce              B        |L1.42|
                  |L1.140|
00008c  a903              ADD      r1,sp,#0xc            ;496
00008e  4628              MOV      r0,r5                 ;496
000090  f7fffffe          BL       FRAMEWIN__CalcPositions
000094  9804              LDR      r0,[sp,#0x10]         ;497
000096  f8c90000          STR      r0,[r9,#0]            ;497
00009a  9805              LDR      r0,[sp,#0x14]         ;497
00009c  f8c90004          STR      r0,[r9,#4]            ;497
0000a0  e7c3              B        |L1.42|
                  |L1.162|
0000a2  f9b5004c          LDRSH    r0,[r5,#0x4c]         ;500
0000a6  60a0              STR      r0,[r4,#8]            ;500
0000a8  e7bf              B        |L1.42|
                  |L1.170|
0000aa  68a0              LDR      r0,[r4,#8]            ;503
0000ac  2802              CMP      r0,#2                 ;503
0000ae  d10b              BNE      |L1.200|
0000b0  f8ad7006          STRH     r7,[sp,#6]            ;505
0000b4  68a0              LDR      r0,[r4,#8]            ;506
0000b6  9002              STR      r0,[sp,#8]            ;506
0000b8  2027              MOVS     r0,#0x27              ;507
0000ba  9000              STR      r0,[sp,#0]            ;507
0000bc  f9b40006          LDRSH    r0,[r4,#6]            ;508
0000c0  4669              MOV      r1,sp                 ;508
0000c2  f7fffffe          BL       WM__SendMessage
0000c6  bf00              NOP                            ;509
                  |L1.200|
0000c8  e7af              B        |L1.42|
                  |L1.202|
0000ca  68a0              LDR      r0,[r4,#8]            ;512
0000cc  2801              CMP      r0,#1                 ;512
0000ce  d116              BNE      |L1.254|
0000d0  f9b5005c          LDRSH    r0,[r5,#0x5c]         ;513
0000d4  f7fffffe          BL       WM_IsWindow
0000d8  b120              CBZ      r0,|L1.228|
0000da  f9b5005c          LDRSH    r0,[r5,#0x5c]         ;514
0000de  f7fffffe          BL       WM_SetFocus
0000e2  e005              B        |L1.240|
                  |L1.228|
0000e4  f9b5004c          LDRSH    r0,[r5,#0x4c]         ;516
0000e8  f7fffffe          BL       WM_SetFocusOnNextChild
0000ec  f8a5005c          STRH     r0,[r5,#0x5c]         ;516
                  |L1.240|
0000f0  2101              MOVS     r1,#1                 ;518
0000f2  4638              MOV      r0,r7                 ;518
0000f4  f7fffffe          BL       FRAMEWIN_SetActive
0000f8  2000              MOVS     r0,#0                 ;519
0000fa  60a0              STR      r0,[r4,#8]            ;519
0000fc  e003              B        |L1.262|
                  |L1.254|
0000fe  2100              MOVS     r1,#0                 ;521
000100  4638              MOV      r0,r7                 ;521
000102  f7fffffe          BL       FRAMEWIN_SetActive
                  |L1.262|
000106  e790              B        |L1.42|
                  |L1.264|
000108  f895005a          LDRB     r0,[r5,#0x5a]         ;528
00010c  f0100f08          TST      r0,#8                 ;528
000110  d10d              BNE      |L1.302|
000112  f8d4a008          LDR      r10,[r4,#8]           ;531
000116  f8da8008          LDR      r8,[r10,#8]           ;532
00011a  f1b80f00          CMP      r8,#0                 ;533
00011e  d005              BEQ      |L1.300|
000120  f8980008          LDRB     r0,[r8,#8]            ;534
000124  b110              CBZ      r0,|L1.300|
000126  4638              MOV      r0,r7                 ;535
000128  f7fffffe          BL       WM_SetFocus
                  |L1.300|
00012c  bf00              NOP                            ;538
                  |L1.302|
00012e  e00c              B        |L1.330|
000130  e006              B        |L1.320|
000132  e7ff              B        |L1.308|
                  |L1.308|
000134  4622              MOV      r2,r4                 ;541
000136  4629              MOV      r1,r5                 ;541
000138  4638              MOV      r0,r7                 ;541
00013a  f7fffffe          BL       _OnChildHasFocus
00013e  e004              B        |L1.330|
                  |L1.320|
000140  f1050050          ADD      r0,r5,#0x50           ;545
000144  f7fffffe          BL       GUI_ALLOC_FreePtr
000148  bf00              NOP                            ;546
                  |L1.330|
00014a  bf00              NOP                            ;491
00014c  4621              MOV      r1,r4                 ;549
00014e  4638              MOV      r0,r7                 ;549
000150  f7fffffe          BL       WIDGET_HandleActive
000154  b900              CBNZ     r0,|L1.344|
000156  e768              B        |L1.42|
                  |L1.344|
000158  4620              MOV      r0,r4                 ;552
00015a  f7fffffe          BL       WM_DefaultProc
00015e  bf00              NOP      
000160  e763              B        |L1.42|
;;;554    
                          ENDP


                          AREA ||i.FRAMEWIN_CreateEx||, CODE, READONLY, ALIGN=2

                  FRAMEWIN_CreateEx PROC
;;;564    */
;;;565    FRAMEWIN_Handle FRAMEWIN_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;566                                      int WinFlags, int ExFlags, int Id, const char* pTitle, WM_CALLBACK* cb)
;;;567    {
000004  b089              SUB      sp,sp,#0x24
000006  4607              MOV      r7,r0
000008  4688              MOV      r8,r1
00000a  4691              MOV      r9,r2
00000c  469b              MOV      r11,r3
00000e  e9dd5a13          LDRD     r5,r10,[sp,#0x4c]
;;;568      FRAMEWIN_Handle hObj;
;;;569      /* Create the window */
;;;570      GUI_LOCK();
000012  f7fffffe          BL       GUI_Lock
;;;571      WinFlags |= WM_CF_LATE_CLIP;    /* Always use late clipping since widget is optimized for it. */
000016  f4455580          ORR      r5,r5,#0x1000
;;;572      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, FRAMEWIN_Callback,
00001a  2248              MOVS     r2,#0x48
00001c  4b2f              LDR      r3,|L2.220|
00001e  b2a8              UXTH     r0,r5
000020  9912              LDR      r1,[sp,#0x48]
000022  e9cd3202          STRD     r3,r2,[sp,#8]
000026  e9cd1000          STRD     r1,r0,[sp,#0]
00002a  465b              MOV      r3,r11
00002c  464a              MOV      r2,r9
00002e  4641              MOV      r1,r8
000030  4638              MOV      r0,r7
000032  f7fffffe          BL       WM_CreateWindowAsChild
000036  4606              MOV      r6,r0
;;;573                                    sizeof(FRAMEWIN_Obj) - sizeof(WM_Obj));
;;;574      if (hObj) {
000038  2e00              CMP      r6,#0
00003a  d048              BEQ      |L2.206|
;;;575        FRAMEWIN_Obj* pObj;
;;;576        POSITIONS Pos;
;;;577        pObj = (FRAMEWIN_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
00003c  4630              MOV      r0,r6
00003e  f7fffffe          BL       GUI_ALLOC_h2p
000042  4604              MOV      r4,r0
;;;578        /* init widget specific variables */
;;;579        WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE | FRAMEWIN_SF_TITLEVIS);
000044  2230              MOVS     r2,#0x30
000046  4620              MOV      r0,r4
000048  9915              LDR      r1,[sp,#0x54]
00004a  f7fffffe          BL       WIDGET__Init
;;;580        /* init member variables */
;;;581        FRAMEWIN_INIT_ID(pObj);
;;;582        pObj->Props = FRAMEWIN__DefaultProps;
00004e  2220              MOVS     r2,#0x20
000050  4923              LDR      r1,|L2.224|
000052  f1040028          ADD      r0,r4,#0x28
000056  f7fffffe          BL       __aeabi_memcpy4
;;;583        pObj->cb             = cb;
00005a  9817              LDR      r0,[sp,#0x5c]
00005c  f8440f48          STR      r0,[r4,#0x48]!
;;;584        pObj->Flags          = ExFlags;
000060  f8a4a012          STRH     r10,[r4,#0x12]
;;;585        pObj->hFocussedChild = 0;
000064  2000              MOVS     r0,#0
000066  82a0              STRH     r0,[r4,#0x14]
;;;586        pObj->hMenu          = 0;
000068  80e0              STRH     r0,[r4,#6]
;;;587        pObj->pFirstHook     = NULL;
00006a  61e0              STR      r0,[r4,#0x1c]
00006c  f1a40448          SUB      r4,r4,#0x48
;;;588        FRAMEWIN__CalcPositions(pObj, &Pos);
000070  a904              ADD      r1,sp,#0x10
000072  4620              MOV      r0,r4
000074  f7fffffe          BL       FRAMEWIN__CalcPositions
;;;589        pObj->hClient = WM_CreateWindowAsChild(Pos.rClient.x0,Pos.rClient.y0,
000078  2000              MOVS     r0,#0
00007a  491a              LDR      r1,|L2.228|
00007c  f2417282          MOV      r2,#0x1782
000080  e9cd6200          STRD     r6,r2,[sp,#0]
000084  e9cd1002          STRD     r1,r0,[sp,#8]
000088  f9bde01a          LDRSH    lr,[sp,#0x1a]
00008c  f9bdc016          LDRSH    r12,[sp,#0x16]
000090  ebae0c0c          SUB      r12,lr,r12
000094  f10c0301          ADD      r3,r12,#1
000098  f9bdc018          LDRSH    r12,[sp,#0x18]
00009c  f9bde014          LDRSH    lr,[sp,#0x14]
0000a0  ebac0c0e          SUB      r12,r12,lr
0000a4  f10c0201          ADD      r2,r12,#1
0000a8  f9bd1016          LDRSH    r1,[sp,#0x16]
0000ac  4670              MOV      r0,lr
0000ae  f7fffffe          BL       WM_CreateWindowAsChild
0000b2  f8a4004c          STRH     r0,[r4,#0x4c]
;;;590                                               Pos.rClient.x1 - Pos.rClient.x0 +1,
;;;591                                               Pos.rClient.y1 - Pos.rClient.y0 +1,
;;;592                                               hObj, 
;;;593                                               WM_CF_ANCHOR_RIGHT | WM_CF_ANCHOR_LEFT | WM_CF_ANCHOR_TOP | WM_CF_ANCHOR_BOTTOM | WM_CF_SHOW | WM_CF_LATE_CLIP, 
;;;594                                               FRAMEWIN__cbClient, 0);
;;;595        /* Normally we disable memory devices for the frame window:
;;;596         * The frame window does not flicker, and not using memory devices is usually faster.
;;;597         * You can still use memory by explicitly specifying the flag
;;;598         */
;;;599        if ((WinFlags & (WM_CF_MEMDEV | (WM_CF_MEMDEV_ON_REDRAW))) == 0) {
0000b6  f2420004          MOV      r0,#0x2004
0000ba  4205              TST      r5,r0
0000bc  d102              BNE      |L2.196|
;;;600          WM_DisableMemdev(hObj);
0000be  4630              MOV      r0,r6
0000c0  f7fffffe          BL       WM_DisableMemdev
                  |L2.196|
;;;601        }
;;;602        FRAMEWIN_SetText(hObj, pTitle);
0000c4  4630              MOV      r0,r6
0000c6  9916              LDR      r1,[sp,#0x58]
0000c8  f7fffffe          BL       FRAMEWIN_SetText
;;;603      }
0000cc  bf00              NOP      
                  |L2.206|
;;;604      GUI_UNLOCK();
0000ce  f7fffffe          BL       GUI_Unlock
;;;605      return hObj;
0000d2  4630              MOV      r0,r6
;;;606    }
0000d4  b009              ADD      sp,sp,#0x24
0000d6  e8bd8ff0          POP      {r4-r11,pc}
;;;607    
                          ENDP

0000da  0000              DCW      0x0000
                  |L2.220|
                          DCD      FRAMEWIN_Callback
                  |L2.224|
                          DCD      FRAMEWIN__DefaultProps
                  |L2.228|
                          DCD      FRAMEWIN__cbClient

                          AREA ||i.FRAMEWIN_SetActive||, CODE, READONLY, ALIGN=1

                  FRAMEWIN_SetActive PROC
;;;668    */
;;;669    void FRAMEWIN_SetActive(FRAMEWIN_Handle hObj, int State) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;670      if (hObj) {
000006  b13c              CBZ      r4,|L3.24|
;;;671        WM_LOCK();
000008  f7fffffe          BL       GUI_Lock
;;;672        _SetActive(hObj, State);
00000c  4629              MOV      r1,r5
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       _SetActive
;;;673        WM_UNLOCK();
000014  f7fffffe          BL       GUI_Unlock
                  |L3.24|
;;;674      }
;;;675    }
000018  bd70              POP      {r4-r6,pc}
;;;676    
                          ENDP


                          AREA ||i.FRAMEWIN_SetMoveable||, CODE, READONLY, ALIGN=1

                  FRAMEWIN_SetMoveable PROC
;;;650    */
;;;651    void FRAMEWIN_SetMoveable(FRAMEWIN_Handle hObj, int State) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
;;;652      if (hObj) {
000006  b1b5              CBZ      r5,|L4.54|
;;;653        FRAMEWIN_Obj* pObj;
;;;654        GUI_LOCK();
000008  f7fffffe          BL       GUI_Lock
;;;655        pObj = FRAMEWIN_H2P(hObj);
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       GUI_ALLOC_h2p
000012  4604              MOV      r4,r0
;;;656        if (State) {
000014  b136              CBZ      r6,|L4.36|
;;;657          pObj->Flags |= FRAMEWIN_CF_MOVEABLE;
000016  f8b4005a          LDRH     r0,[r4,#0x5a]
00001a  f0400010          ORR      r0,r0,#0x10
00001e  f8a4005a          STRH     r0,[r4,#0x5a]
000022  e005              B        |L4.48|
                  |L4.36|
;;;658        } else {
;;;659          pObj->Flags &= ~FRAMEWIN_CF_MOVEABLE;
000024  f8b4005a          LDRH     r0,[r4,#0x5a]
000028  f0200010          BIC      r0,r0,#0x10
00002c  f8a4005a          STRH     r0,[r4,#0x5a]
                  |L4.48|
;;;660        }
;;;661        GUI_UNLOCK();
000030  f7fffffe          BL       GUI_Unlock
;;;662      }
000034  bf00              NOP      
                  |L4.54|
;;;663    }
000036  bd70              POP      {r4-r6,pc}
;;;664    
                          ENDP


                          AREA ||i.FRAMEWIN_SetText||, CODE, READONLY, ALIGN=1

                  FRAMEWIN_SetText PROC
;;;617    */
;;;618    void FRAMEWIN_SetText(FRAMEWIN_Handle hObj, const char* s) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;619      if (hObj) {
000006  b18c              CBZ      r4,|L5.44|
;;;620        FRAMEWIN_Obj* pObj;
;;;621        GUI_LOCK();
000008  f7fffffe          BL       GUI_Lock
;;;622        pObj = FRAMEWIN_H2P(hObj);
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       GUI_ALLOC_h2p
000012  4606              MOV      r6,r0
;;;623        if (GUI__SetText(&pObj->hText, s)) {
000014  4629              MOV      r1,r5
000016  f1060050          ADD      r0,r6,#0x50
00001a  f7fffffe          BL       GUI__SetText
00001e  b110              CBZ      r0,|L5.38|
;;;624          FRAMEWIN_Invalidate(hObj);
000020  4620              MOV      r0,r4
000022  f7fffffe          BL       WM_InvalidateWindow
                  |L5.38|
;;;625        }
;;;626        GUI_UNLOCK();
000026  f7fffffe          BL       GUI_Unlock
;;;627      }
00002a  bf00              NOP      
                  |L5.44|
;;;628    }
00002c  bd70              POP      {r4-r6,pc}
;;;629    
                          ENDP


                          AREA ||i.FRAMEWIN_SetTextAlign||, CODE, READONLY, ALIGN=1

                  FRAMEWIN_SetTextAlign PROC
;;;633    */
;;;634    void FRAMEWIN_SetTextAlign(FRAMEWIN_Handle hObj, int Align) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;635      if (hObj) {
000006  b195              CBZ      r5,|L6.46|
;;;636        FRAMEWIN_Obj* pObj;
;;;637        GUI_LOCK();
000008  f7fffffe          BL       GUI_Lock
;;;638        pObj = FRAMEWIN_H2P(hObj);
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       GUI_ALLOC_h2p
000012  4606              MOV      r6,r0
;;;639        if (pObj->Props.TextAlign != Align) {
000014  f9b60046          LDRSH    r0,[r6,#0x46]
000018  42a0              CMP      r0,r4
00001a  d005              BEQ      |L6.40|
;;;640          pObj->Props.TextAlign = Align;
00001c  b221              SXTH     r1,r4
00001e  2046              MOVS     r0,#0x46
000020  5381              STRH     r1,[r0,r6]
;;;641          FRAMEWIN_Invalidate(hObj);
000022  4628              MOV      r0,r5
000024  f7fffffe          BL       WM_InvalidateWindow
                  |L6.40|
;;;642        }
;;;643        GUI_UNLOCK();
000028  f7fffffe          BL       GUI_Unlock
;;;644      }
00002c  bf00              NOP      
                  |L6.46|
;;;645    }
00002e  bd70              POP      {r4-r6,pc}
;;;646    
                          ENDP


                          AREA ||i.FRAMEWIN__CalcPositions||, CODE, READONLY, ALIGN=1

                  FRAMEWIN__CalcPositions PROC
;;;381    */
;;;382    void FRAMEWIN__CalcPositions(FRAMEWIN_Obj* pObj, POSITIONS* pPos) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b085              SUB      sp,sp,#0x14
000006  4605              MOV      r5,r0
000008  460c              MOV      r4,r1
;;;383      WM_HWIN hChild;
;;;384      WM_Obj* pChild;
;;;385      int TitleHeight;
;;;386      int MenuHeight = 0;
00000a  2000              MOVS     r0,#0
00000c  9004              STR      r0,[sp,#0x10]
;;;387      int IBorderSize = 0;
00000e  9003              STR      r0,[sp,#0xc]
;;;388      int BorderSize;
;;;389      int xsize, ysize;
;;;390      int x0, x1, y0;
;;;391      BorderSize = pObj->Props.BorderSize;
000010  f9b56042          LDRSH    r6,[r5,#0x42]
;;;392      xsize = WM__GetWindowSizeX(&pObj->Widget.Win);
000014  4628              MOV      r0,r5
000016  f7fffffe          BL       WM__GetWindowSizeX
00001a  9002              STR      r0,[sp,#8]
;;;393      ysize = WM__GetWindowSizeY(&pObj->Widget.Win);
00001c  4628              MOV      r0,r5
00001e  f7fffffe          BL       WM__GetWindowSizeY
000022  9001              STR      r0,[sp,#4]
;;;394      if (pObj->Widget.State & FRAMEWIN_SF_TITLEVIS) {
000024  f8950026          LDRB     r0,[r5,#0x26]
000028  f0100f20          TST      r0,#0x20
00002c  d002              BEQ      |L7.52|
;;;395        IBorderSize = pObj->Props.IBorderSize;
00002e  f9b50044          LDRSH    r0,[r5,#0x44]
000032  9003              STR      r0,[sp,#0xc]
                  |L7.52|
;;;396      }
;;;397      TitleHeight = FRAMEWIN__CalcTitleHeight(pObj);
000034  4628              MOV      r0,r5
000036  f7fffffe          BL       FRAMEWIN__CalcTitleHeight
00003a  4680              MOV      r8,r0
;;;398      if (pObj->hMenu) {
00003c  f8b5004e          LDRH     r0,[r5,#0x4e]
000040  b120              CBZ      r0,|L7.76|
;;;399        MenuHeight = WM_GetWindowSizeY(pObj->hMenu);
000042  f9b5004e          LDRSH    r0,[r5,#0x4e]
000046  f7fffffe          BL       WM_GetWindowSizeY
00004a  9004              STR      r0,[sp,#0x10]
                  |L7.76|
;;;400      }
;;;401      pPos->TitleHeight = TitleHeight;
00004c  fa0ff088          SXTH     r0,r8
000050  8020              STRH     r0,[r4,#0]
;;;402      pPos->MenuHeight  = MenuHeight;
000052  9804              LDR      r0,[sp,#0x10]
000054  b200              SXTH     r0,r0
000056  8060              STRH     r0,[r4,#2]
;;;403      /* Set object properties accordingly */
;;;404      pPos->rClient.x0  =         BorderSize;
000058  b230              SXTH     r0,r6
00005a  80a0              STRH     r0,[r4,#4]
;;;405      pPos->rClient.x1  = xsize - BorderSize - 1;
00005c  9802              LDR      r0,[sp,#8]
00005e  1b80              SUBS     r0,r0,r6
000060  1e40              SUBS     r0,r0,#1
000062  b201              SXTH     r1,r0
000064  8121              STRH     r1,[r4,#8]
;;;406      pPos->rClient.y0  =         BorderSize + IBorderSize + TitleHeight + MenuHeight;
000066  9803              LDR      r0,[sp,#0xc]
000068  4430              ADD      r0,r0,r6
00006a  eb000108          ADD      r1,r0,r8
00006e  9804              LDR      r0,[sp,#0x10]
000070  4408              ADD      r0,r0,r1
000072  b201              SXTH     r1,r0
000074  80e1              STRH     r1,[r4,#6]
;;;407      pPos->rClient.y1  = ysize - BorderSize - 1;
000076  9801              LDR      r0,[sp,#4]
000078  1b80              SUBS     r0,r0,r6
00007a  1e40              SUBS     r0,r0,#1
00007c  b201              SXTH     r1,r0
00007e  8161              STRH     r1,[r4,#0xa]
;;;408      /* Calculate title rect */
;;;409      pPos->rTitleText.x0 =         BorderSize;
000080  b230              SXTH     r0,r6
000082  81a0              STRH     r0,[r4,#0xc]
;;;410      pPos->rTitleText.x1 = xsize - BorderSize - 1;
000084  9802              LDR      r0,[sp,#8]
000086  1b80              SUBS     r0,r0,r6
000088  1e40              SUBS     r0,r0,#1
00008a  b201              SXTH     r1,r0
00008c  8221              STRH     r1,[r4,#0x10]
;;;411      pPos->rTitleText.y0 =         BorderSize;
00008e  b231              SXTH     r1,r6
000090  81e1              STRH     r1,[r4,#0xe]
;;;412      pPos->rTitleText.y1 =         BorderSize + TitleHeight - 1;
000092  eb060008          ADD      r0,r6,r8
000096  1e40              SUBS     r0,r0,#1
000098  b201              SXTH     r1,r0
00009a  8261              STRH     r1,[r4,#0x12]
;;;413      /* Iterate over all children */
;;;414      for (hChild = pObj->Widget.Win.hFirstChild; hChild; hChild = pChild->hNext) {
00009c  f9b59018          LDRSH    r9,[r5,#0x18]
0000a0  e02f              B        |L7.258|
                  |L7.162|
;;;415        pChild = WM_H2P(hChild);
0000a2  4648              MOV      r0,r9
0000a4  f7fffffe          BL       GUI_ALLOC_h2p
0000a8  4607              MOV      r7,r0
;;;416        x0 = pChild->Rect.x0 - pObj->Widget.Win.Rect.x0;
0000aa  f9b70000          LDRSH    r0,[r7,#0]
0000ae  f9b51000          LDRSH    r1,[r5,#0]
0000b2  eba00a01          SUB      r10,r0,r1
;;;417        x1 = pChild->Rect.x1 - pObj->Widget.Win.Rect.x0;
0000b6  f9b70004          LDRSH    r0,[r7,#4]
0000ba  f9b51000          LDRSH    r1,[r5,#0]
0000be  eba00b01          SUB      r11,r0,r1
;;;418        y0 = pChild->Rect.y0 - pObj->Widget.Win.Rect.y0;
0000c2  f9b70002          LDRSH    r0,[r7,#2]
0000c6  f9b51002          LDRSH    r1,[r5,#2]
0000ca  1a40              SUBS     r0,r0,r1
0000cc  9000              STR      r0,[sp,#0]
;;;419        if (y0 == BorderSize) {
0000ce  9800              LDR      r0,[sp,#0]
0000d0  42b0              CMP      r0,r6
0000d2  d114              BNE      |L7.254|
;;;420          if (pChild->Status & WM_SF_ANCHOR_RIGHT) {
0000d4  7f38              LDRB     r0,[r7,#0x1c]
0000d6  f0100f80          TST      r0,#0x80
0000da  d008              BEQ      |L7.238|
;;;421            if (x0 <= pPos->rTitleText.x1) {
0000dc  f9b40010          LDRSH    r0,[r4,#0x10]
0000e0  4550              CMP      r0,r10
0000e2  db0c              BLT      |L7.254|
;;;422              pPos->rTitleText.x1 = x0 - 1;
0000e4  f1aa0001          SUB      r0,r10,#1
0000e8  b201              SXTH     r1,r0
0000ea  8221              STRH     r1,[r4,#0x10]
0000ec  e007              B        |L7.254|
                  |L7.238|
;;;423            }
;;;424          } else {
;;;425            if (x1 >= pPos->rTitleText.x0) {
0000ee  f9b4000c          LDRSH    r0,[r4,#0xc]
0000f2  4558              CMP      r0,r11
0000f4  dc03              BGT      |L7.254|
;;;426              pPos->rTitleText.x0 = x1 + 1;
0000f6  f10b0001          ADD      r0,r11,#1
0000fa  b200              SXTH     r0,r0
0000fc  81a0              STRH     r0,[r4,#0xc]
                  |L7.254|
0000fe  f9b7901a          LDRSH    r9,[r7,#0x1a]         ;414
                  |L7.258|
000102  f1b90f00          CMP      r9,#0                 ;414
000106  d1cc              BNE      |L7.162|
;;;427            }
;;;428          }
;;;429        }
;;;430      }
;;;431    }
000108  b005              ADD      sp,sp,#0x14
00010a  e8bd8ff0          POP      {r4-r11,pc}
;;;432    
                          ENDP


                          AREA ||i.FRAMEWIN__CalcTitleHeight||, CODE, READONLY, ALIGN=1

                  FRAMEWIN__CalcTitleHeight PROC
;;;366    */
;;;367    int FRAMEWIN__CalcTitleHeight(FRAMEWIN_Obj* pObj) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;368      int r = 0;
000004  2500              MOVS     r5,#0
;;;369      if (pObj->Widget.State & FRAMEWIN_SF_TITLEVIS) {
000006  f8940026          LDRB     r0,[r4,#0x26]
00000a  f0100f20          TST      r0,#0x20
00000e  d006              BEQ      |L8.30|
;;;370        r = pObj->Props.TitleHeight;
000010  f9b45040          LDRSH    r5,[r4,#0x40]
;;;371        if (r == 0) {
000014  b91d              CBNZ     r5,|L8.30|
;;;372          r = 2 + GUI_GetYSizeOfFont(pObj->Props.pFont);
000016  6aa0              LDR      r0,[r4,#0x28]
000018  f7fffffe          BL       GUI_GetYSizeOfFont
00001c  1c85              ADDS     r5,r0,#2
                  |L8.30|
;;;373        }
;;;374      }
;;;375      return r;
00001e  4628              MOV      r0,r5
;;;376    }
000020  bd70              POP      {r4-r6,pc}
;;;377    
                          ENDP


                          AREA ||i.FRAMEWIN__UpdatePositions||, CODE, READONLY, ALIGN=1

                  FRAMEWIN__UpdatePositions PROC
;;;436    */
;;;437    void FRAMEWIN__UpdatePositions(FRAMEWIN_Obj* pObj) {
000000  b530              PUSH     {r4,r5,lr}
000002  b085              SUB      sp,sp,#0x14
000004  4604              MOV      r4,r0
;;;438      /* Move client window accordingly */
;;;439      if (pObj->hClient || pObj->hMenu) {
000006  f8b4004c          LDRH     r0,[r4,#0x4c]
00000a  b910              CBNZ     r0,|L9.18|
00000c  f8b4004e          LDRH     r0,[r4,#0x4e]
000010  b368              CBZ      r0,|L9.110|
                  |L9.18|
;;;440        POSITIONS Pos;
;;;441        FRAMEWIN__CalcPositions(pObj, &Pos);
000012  4669              MOV      r1,sp
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       FRAMEWIN__CalcPositions
;;;442        if (pObj->hClient) {
00001a  f8b4004c          LDRH     r0,[r4,#0x4c]
00001e  b1b8              CBZ      r0,|L9.80|
;;;443          WM_MoveChildTo(pObj->hClient, Pos.rClient.x0, Pos.rClient.y0);
000020  f9bd2006          LDRSH    r2,[sp,#6]
000024  f9bd1004          LDRSH    r1,[sp,#4]
000028  f9b4004c          LDRSH    r0,[r4,#0x4c]
00002c  f7fffffe          BL       WM_MoveChildTo
;;;444          WM_SetSize(pObj->hClient, 
000030  f9bd500a          LDRSH    r5,[sp,#0xa]
000034  f9bd3006          LDRSH    r3,[sp,#6]
000038  1aeb              SUBS     r3,r5,r3
00003a  1c5a              ADDS     r2,r3,#1
00003c  f9bd3008          LDRSH    r3,[sp,#8]
000040  f9bd5004          LDRSH    r5,[sp,#4]
000044  1b5b              SUBS     r3,r3,r5
000046  1c59              ADDS     r1,r3,#1
000048  f9b4004c          LDRSH    r0,[r4,#0x4c]
00004c  f7fffffe          BL       WM_SetSize
                  |L9.80|
;;;445                     Pos.rClient.x1 - Pos.rClient.x0 + 1, 
;;;446                     Pos.rClient.y1 - Pos.rClient.y0 + 1);
;;;447        }
;;;448        if (pObj->hMenu) {
000050  f8b4004e          LDRH     r0,[r4,#0x4e]
000054  b150              CBZ      r0,|L9.108|
;;;449          WM_MoveChildTo(pObj->hMenu, Pos.rClient.x0, Pos.rClient.y0 - Pos.MenuHeight);
000056  f9bd3006          LDRSH    r3,[sp,#6]
00005a  f9bd5002          LDRSH    r5,[sp,#2]
00005e  1b5a              SUBS     r2,r3,r5
000060  f9bd1004          LDRSH    r1,[sp,#4]
000064  f9b4004e          LDRSH    r0,[r4,#0x4e]
000068  f7fffffe          BL       WM_MoveChildTo
                  |L9.108|
;;;450        }
;;;451      }
00006c  bf00              NOP      
                  |L9.110|
;;;452    }
00006e  b005              ADD      sp,sp,#0x14
000070  bd30              POP      {r4,r5,pc}
;;;453    
                          ENDP


                          AREA ||i.FRAMEWIN__cbClient||, CODE, READONLY, ALIGN=1

                  FRAMEWIN__cbClient PROC
;;;270    */
;;;271    static void FRAMEWIN__cbClient(WM_MESSAGE* pMsg) {
000000  e92d43fe          PUSH     {r1-r9,lr}
000004  4604              MOV      r4,r0
;;;272      WM_HWIN hWin, hParent;
;;;273      FRAMEWIN_Obj * pObj;
;;;274      WM_CALLBACK * cb;
;;;275    
;;;276      hWin    = pMsg->hWin;
000006  f9b47004          LDRSH    r7,[r4,#4]
;;;277      hParent = WM_GetParent(pMsg->hWin);
00000a  f9b40004          LDRSH    r0,[r4,#4]
00000e  f7fffffe          BL       WM_GetParent
000012  4680              MOV      r8,r0
;;;278      pObj = (FRAMEWIN_Obj *)GUI_ALLOC_h2p(hParent); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000014  4640              MOV      r0,r8
000016  f7fffffe          BL       GUI_ALLOC_h2p
00001a  4605              MOV      r5,r0
;;;279      cb = pObj->cb;
00001c  6cae              LDR      r6,[r5,#0x48]
;;;280      switch (pMsg->MsgId) {
00001e  6820              LDR      r0,[r4,#0]
000020  2817              CMP      r0,#0x17
000022  d061              BEQ      |L10.232|
000024  dc08              BGT      |L10.56|
000026  280e              CMP      r0,#0xe
000028  d03e              BEQ      |L10.168|
00002a  280f              CMP      r0,#0xf
00002c  d00b              BEQ      |L10.70|
00002e  2814              CMP      r0,#0x14
000030  d058              BEQ      |L10.228|
000032  2815              CMP      r0,#0x15
000034  d15c              BNE      |L10.240|
000036  e056              B        |L10.230|
                  |L10.56|
000038  281e              CMP      r0,#0x1e
00003a  d01a              BEQ      |L10.114|
00003c  281f              CMP      r0,#0x1f
00003e  d02e              BEQ      |L10.158|
000040  2822              CMP      r0,#0x22
000042  d155              BNE      |L10.240|
000044  e04b              B        |L10.222|
                  |L10.70|
;;;281      case WM_PAINT:
;;;282        if (pObj->Props.ClientColor != GUI_INVALID_COLOR) {
000046  f06f4170          MVN      r1,#0xf0000000
00004a  6be8              LDR      r0,[r5,#0x3c]
00004c  4288              CMP      r0,r1
00004e  d004              BEQ      |L10.90|
;;;283          LCD_SetBkColor(pObj->Props.ClientColor);
000050  6be8              LDR      r0,[r5,#0x3c]
000052  f7fffffe          BL       LCD_SetBkColor
;;;284          GUI_Clear();
000056  f7fffffe          BL       GUI_Clear
                  |L10.90|
;;;285        }
;;;286        /* Give the user callback  a chance to draw.
;;;287         * Note that we can not run into the bottom part, as this passes the parents handle
;;;288         */
;;;289        if (cb) {
00005a  b146              CBZ      r6,|L10.110|
;;;290    	    WM_MESSAGE Msg;
;;;291          Msg      = *pMsg;
00005c  e8940007          LDM      r4,{r0-r2}
000060  e88d0007          STM      sp,{r0-r2}
;;;292          Msg.hWin = hWin;
000064  f8ad7004          STRH     r7,[sp,#4]
;;;293          (*cb)(&Msg);
000068  4668              MOV      r0,sp
00006a  47b0              BLX      r6
;;;294        }
00006c  bf00              NOP      
                  |L10.110|
;;;295        return;
;;;296      case WM_SET_FOCUS:
;;;297        if (pMsg->Data.v) {     /* Focus received */
;;;298          if (pObj->hFocussedChild && (pObj->hFocussedChild != hWin)) {
;;;299            WM_SetFocus(pObj->hFocussedChild);
;;;300          } else {
;;;301            pObj->hFocussedChild = WM_SetFocusOnNextChild(hWin);
;;;302          }
;;;303          pMsg->Data.v = 0;     /* Focus change accepted */
;;;304        }
;;;305        return;
;;;306      case WM_GET_ACCEPT_FOCUS:
;;;307        WIDGET_HandleActive(hParent, pMsg);
;;;308        return;
;;;309      case WM_KEY:
;;;310        if (((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt > 0) {
;;;311          int Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
;;;312          switch (Key) {
;;;313          case GUI_KEY_BACKTAB:
;;;314            pObj->hFocussedChild = WM_SetFocusOnPrevChild(hWin);
;;;315            return;
;;;316          case GUI_KEY_TAB:
;;;317            pObj->hFocussedChild = WM_SetFocusOnNextChild(hWin);
;;;318            return;
;;;319          }
;;;320        }
;;;321        break;	                       /* Send to parent by not doing anything */
;;;322      case WM_GET_BKCOLOR:
;;;323        pMsg->Data.Color = pObj->Props.ClientColor;
;;;324        return;                       /* Message handled */
;;;325      case WM_GET_INSIDE_RECT:        /* This should not be passed to parent ... (We do not want parents coordinates)*/
;;;326      case WM_GET_ID:                 /* This should not be passed to parent ... (Possible recursion problem)*/
;;;327      case WM_GET_CLIENT_WINDOW:      /* return handle to client window. For most windows, there is no seperate client window, so it is the same handle */
;;;328        WM_DefaultProc(pMsg);
;;;329        return;                       /* We are done ! */
;;;330      }
;;;331      /* Call user callback. Note that the user callback gets the handle of the Framewindow itself, NOT the Client. */
;;;332      if (cb) {
;;;333        pMsg->hWin = hParent;
;;;334        (*cb)(pMsg);
;;;335      } else {
;;;336        WM_DefaultProc(pMsg);
;;;337      }
;;;338    }
00006e  e8bd83fe          POP      {r1-r9,pc}
                  |L10.114|
000072  68a0              LDR      r0,[r4,#8]            ;297
000074  b190              CBZ      r0,|L10.156|
000076  f8b5005c          LDRH     r0,[r5,#0x5c]         ;298
00007a  b140              CBZ      r0,|L10.142|
00007c  f9b5005c          LDRSH    r0,[r5,#0x5c]         ;298
000080  42b8              CMP      r0,r7                 ;298
000082  d004              BEQ      |L10.142|
000084  f9b5005c          LDRSH    r0,[r5,#0x5c]         ;299
000088  f7fffffe          BL       WM_SetFocus
00008c  e004              B        |L10.152|
                  |L10.142|
00008e  4638              MOV      r0,r7                 ;301
000090  f7fffffe          BL       WM_SetFocusOnNextChild
000094  f8a5005c          STRH     r0,[r5,#0x5c]         ;301
                  |L10.152|
000098  2000              MOVS     r0,#0                 ;303
00009a  60a0              STR      r0,[r4,#8]            ;303
                  |L10.156|
00009c  e7e7              B        |L10.110|
                  |L10.158|
00009e  4621              MOV      r1,r4                 ;307
0000a0  4640              MOV      r0,r8                 ;307
0000a2  f7fffffe          BL       WIDGET_HandleActive
0000a6  e7e2              B        |L10.110|
                  |L10.168|
0000a8  68a0              LDR      r0,[r4,#8]            ;310
0000aa  6840              LDR      r0,[r0,#4]            ;310
0000ac  2800              CMP      r0,#0                 ;310
0000ae  dd15              BLE      |L10.220|
0000b0  68a0              LDR      r0,[r4,#8]            ;311
0000b2  f8d09000          LDR      r9,[r0,#0]            ;311
0000b6  f1b90f09          CMP      r9,#9                 ;312
0000ba  d008              BEQ      |L10.206|
0000bc  f1b90f0a          CMP      r9,#0xa               ;312
0000c0  d10b              BNE      |L10.218|
0000c2  4638              MOV      r0,r7                 ;314
0000c4  f7fffffe          BL       WM_SetFocusOnPrevChild
0000c8  f8a5005c          STRH     r0,[r5,#0x5c]         ;314
0000cc  e7cf              B        |L10.110|
                  |L10.206|
0000ce  4638              MOV      r0,r7                 ;317
0000d0  f7fffffe          BL       WM_SetFocusOnNextChild
0000d4  f8a5005c          STRH     r0,[r5,#0x5c]         ;317
0000d8  e7c9              B        |L10.110|
                  |L10.218|
0000da  bf00              NOP                            ;320
                  |L10.220|
0000dc  e008              B        |L10.240|
                  |L10.222|
0000de  6be8              LDR      r0,[r5,#0x3c]         ;323
0000e0  60a0              STR      r0,[r4,#8]            ;323
0000e2  e7c4              B        |L10.110|
                  |L10.228|
0000e4  bf00              NOP                            ;326
                  |L10.230|
0000e6  bf00              NOP                            ;327
                  |L10.232|
0000e8  4620              MOV      r0,r4                 ;328
0000ea  f7fffffe          BL       WM_DefaultProc
0000ee  e7be              B        |L10.110|
                  |L10.240|
0000f0  bf00              NOP                            ;321
0000f2  b126              CBZ      r6,|L10.254|
0000f4  f8a48004          STRH     r8,[r4,#4]            ;333
0000f8  4620              MOV      r0,r4                 ;334
0000fa  47b0              BLX      r6                    ;334
0000fc  e002              B        |L10.260|
                  |L10.254|
0000fe  4620              MOV      r0,r4                 ;336
000100  f7fffffe          BL       WM_DefaultProc
                  |L10.260|
000104  bf00              NOP      
000106  e7b2              B        |L10.110|
;;;339    
                          ENDP


                          AREA ||i._OnChildHasFocus||, CODE, READONLY, ALIGN=1

                  _OnChildHasFocus PROC
;;;250    */
;;;251    static void _OnChildHasFocus(FRAMEWIN_Handle hWin, FRAMEWIN_Obj* pObj, WM_MESSAGE *pMsg) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
000008  4614              MOV      r4,r2
;;;252      if (pMsg->Data.p) {
00000a  68a0              LDR      r0,[r4,#8]
00000c  b1e0              CBZ      r0,|L11.72|
;;;253        const WM_NOTIFY_CHILD_HAS_FOCUS_INFO * pInfo = (const WM_NOTIFY_CHILD_HAS_FOCUS_INFO *)pMsg->Data.p;
00000e  68a5              LDR      r5,[r4,#8]
;;;254        int IsDesc = WM__IsAncestorOrSelf(pInfo->hNew, hWin);
000010  f9b50002          LDRSH    r0,[r5,#2]
000014  4631              MOV      r1,r6
000016  f7fffffe          BL       WM__IsAncestorOrSelf
00001a  4680              MOV      r8,r0
;;;255        if (IsDesc) {                         /* A child has received the focus, Framewindow needs to be activated */
00001c  f1b80f00          CMP      r8,#0
000020  d004              BEQ      |L11.44|
;;;256          _SetActive(hWin, 1);
000022  2101              MOVS     r1,#1
000024  4630              MOV      r0,r6
000026  f7fffffe          BL       _SetActive
00002a  e00c              B        |L11.70|
                  |L11.44|
;;;257        } else {                  /* A child has lost the focus, we need to deactivate */
;;;258          _SetActive(hWin, 0);
00002c  2100              MOVS     r1,#0
00002e  4630              MOV      r0,r6
000030  f7fffffe          BL       _SetActive
;;;259          /* Remember the child which had the focus so we can reactive this child */
;;;260          if (WM__IsAncestor(pInfo->hOld, hWin)) {
000034  f9b50000          LDRSH    r0,[r5,#0]
000038  4631              MOV      r1,r6
00003a  f7fffffe          BL       WM__IsAncestor
00003e  b110              CBZ      r0,|L11.70|
;;;261            pObj->hFocussedChild = pInfo->hOld;
000040  8828              LDRH     r0,[r5,#0]
000042  f8a7005c          STRH     r0,[r7,#0x5c]
                  |L11.70|
;;;262          }
;;;263        }
;;;264      }
000046  bf00              NOP      
                  |L11.72|
;;;265    }
000048  e8bd81f0          POP      {r4-r8,pc}
;;;266    
                          ENDP


                          AREA ||i._OnTouch||, CODE, READONLY, ALIGN=2

                  _OnTouch PROC
;;;151    */
;;;152    static void _OnTouch(FRAMEWIN_Handle hWin, FRAMEWIN_Obj* pObj, WM_MESSAGE* pMsg) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
;;;153      const GUI_PID_STATE* pState;
;;;154      pState = (const GUI_PID_STATE*)pMsg->Data.p;
00000a  68ae              LDR      r6,[r5,#8]
;;;155      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
00000c  68a8              LDR      r0,[r5,#8]
00000e  b308              CBZ      r0,|L12.84|
;;;156        if (pState->Pressed) {
000010  7a30              LDRB     r0,[r6,#8]
000012  b1f8              CBZ      r0,|L12.84|
;;;157          if (!(pObj->Flags & FRAMEWIN_SF_ACTIVE)) {
000014  f894005a          LDRB     r0,[r4,#0x5a]
000018  f0100f08          TST      r0,#8
00001c  d102              BNE      |L12.36|
;;;158            WM_SetFocus(hWin);
00001e  4638              MOV      r0,r7
000020  f7fffffe          BL       WM_SetFocus
                  |L12.36|
;;;159          }
;;;160          WM_BringToTop(hWin);
000024  4638              MOV      r0,r7
000026  f7fffffe          BL       WM_BringToTop
;;;161          if (pObj->Flags & FRAMEWIN_SF_MOVEABLE) {
00002a  f894005a          LDRB     r0,[r4,#0x5a]
00002e  f0100f10          TST      r0,#0x10
000032  d00f              BEQ      |L12.84|
;;;162            int LimitTop;
;;;163            #if (FRAMEWIN_ALLOW_DRAG_ON_FRAME)
;;;164            LimitTop = 0;
000034  f04f0800          MOV      r8,#0
;;;165            #else
;;;166            POSITIONS Pos;
;;;167            FRAMEWIN__CalcPositions(pObj, &Pos);
;;;168            LimitTop = pObj->Props.BorderSize + Pos.TitleHeight - 1 + pObj->Props.IBorderSize;
;;;169            if ((pState->y <= LimitTop) || WM_HasCaptured(hWin))
;;;170            #endif
;;;171            {
;;;172              if ((pObj->Flags & FRAMEWIN_SF_MAXIMIZED) == 0) {
000038  f894005a          LDRB     r0,[r4,#0x5a]
00003c  f0100f80          TST      r0,#0x80
000040  d107              BNE      |L12.82|
;;;173                WM_SetCaptureMove(hWin, pState, FRAMEWIN__MinVisibility, LimitTop);
000042  4643              MOV      r3,r8
000044  4804              LDR      r0,|L12.88|
000046  f9b02000          LDRSH    r2,[r0,#0]  ; FRAMEWIN__MinVisibility
00004a  4631              MOV      r1,r6
00004c  4638              MOV      r0,r7
00004e  f7fffffe          BL       WM_SetCaptureMove
                  |L12.82|
;;;174              }
;;;175            }
;;;176          }
000052  bf00              NOP      
                  |L12.84|
;;;177        }
;;;178      }
;;;179    }
000054  e8bd81f0          POP      {r4-r8,pc}
;;;180    
                          ENDP

                  |L12.88|
                          DCD      FRAMEWIN__MinVisibility

                          AREA ||i._Paint||, CODE, READONLY, ALIGN=2

                  _Paint PROC
;;;185    */
;;;186    static void _Paint(FRAMEWIN_Obj* pObj) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b089              SUB      sp,sp,#0x24
000006  4604              MOV      r4,r0
;;;187      WM_HWIN hWin = WM_GetActiveWindow();
000008  f7fffffe          BL       WM_GetActiveWindow
00000c  4683              MOV      r11,r0
;;;188      const char* pText = NULL;
00000e  f04f0a00          MOV      r10,#0
;;;189      int xsize = WM_GetWindowSizeX(hWin);
000012  4658              MOV      r0,r11
000014  f7fffffe          BL       WM_GetWindowSizeX
000018  4605              MOV      r5,r0
;;;190      int ysize = WM_GetWindowSizeY(hWin);
00001a  4658              MOV      r0,r11
00001c  f7fffffe          BL       WM_GetWindowSizeY
000020  4606              MOV      r6,r0
;;;191      int BorderSize = pObj->Props.BorderSize;
000022  f9b48042          LDRSH    r8,[r4,#0x42]
;;;192      int y0, Index;
;;;193      POSITIONS Pos;
;;;194      GUI_RECT r, rText;
;;;195    
;;;196      /* Perform computations */
;;;197      FRAMEWIN__CalcPositions(pObj, &Pos);
000026  a904              ADD      r1,sp,#0x10
000028  4620              MOV      r0,r4
00002a  f7fffffe          BL       FRAMEWIN__CalcPositions
;;;198      Index = (pObj->Flags & FRAMEWIN_SF_ACTIVE) ? 1 : 0;
00002e  f894005a          LDRB     r0,[r4,#0x5a]
000032  f3c009c0          UBFX     r9,r0,#3,#1
;;;199    
;;;200      if (pObj->hText) {
000036  f8b40050          LDRH     r0,[r4,#0x50]
00003a  b120              CBZ      r0,|L13.70|
;;;201        pText = (const char*) GUI_ALLOC_h2p(pObj->hText);
00003c  f9b40050          LDRSH    r0,[r4,#0x50]
000040  f7fffffe          BL       GUI_ALLOC_h2p
000044  4682              MOV      r10,r0
                  |L13.70|
;;;202      }
;;;203      r.x0 = Pos.rClient.x0;
000046  f8bd0014          LDRH     r0,[sp,#0x14]
00004a  f8ad0008          STRH     r0,[sp,#8]
;;;204      r.x1 = Pos.rClient.x1;
00004e  f8bd0018          LDRH     r0,[sp,#0x18]
000052  f8ad000c          STRH     r0,[sp,#0xc]
;;;205      r.y0 = Pos.rTitleText.y0;
000056  f8bd001e          LDRH     r0,[sp,#0x1e]
00005a  f8ad000a          STRH     r0,[sp,#0xa]
;;;206      r.y1 = Pos.rTitleText.y1;
00005e  f8bd0022          LDRH     r0,[sp,#0x22]
000062  f8ad000e          STRH     r0,[sp,#0xe]
;;;207      Pos.rTitleText.y0++;
000066  f8bd001e          LDRH     r0,[sp,#0x1e]
00006a  1c40              ADDS     r0,r0,#1
00006c  b201              SXTH     r1,r0
00006e  f8ad101e          STRH     r1,[sp,#0x1e]
;;;208      Pos.rTitleText.x0++;
000072  f8bd001c          LDRH     r0,[sp,#0x1c]
000076  1c40              ADDS     r0,r0,#1
000078  b200              SXTH     r0,r0
00007a  f8ad001c          STRH     r0,[sp,#0x1c]
;;;209      Pos.rTitleText.x1--;
00007e  f8bd0020          LDRH     r0,[sp,#0x20]
000082  1e40              SUBS     r0,r0,#1
000084  b201              SXTH     r1,r0
000086  f8ad1020          STRH     r1,[sp,#0x20]
;;;210      GUI_SetFont(pObj->Props.pFont);
00008a  6aa0              LDR      r0,[r4,#0x28]
00008c  f7fffffe          BL       GUI_SetFont
;;;211      GUI__CalcTextRect(pText, &Pos.rTitleText, &rText, pObj->Props.TextAlign);
000090  f9b43046          LDRSH    r3,[r4,#0x46]
000094  466a              MOV      r2,sp
000096  a907              ADD      r1,sp,#0x1c
000098  4650              MOV      r0,r10
00009a  f7fffffe          BL       GUI__CalcTextRect
;;;212      y0 = Pos.TitleHeight + BorderSize;
00009e  f9bd0010          LDRSH    r0,[sp,#0x10]
0000a2  eb000708          ADD      r7,r0,r8
;;;213    
;;;214      /* Perform drawing operations */
;;;215      WM_ITERATE_START(NULL) {
0000a6  2000              MOVS     r0,#0
0000a8  f7fffffe          BL       WM__InitIVRSearch
0000ac  2800              CMP      r0,#0
0000ae  d047              BEQ      |L13.320|
0000b0  bf00              NOP      
                  |L13.178|
;;;216        /* Draw Title */
;;;217        LCD_SetBkColor(pObj->Props.aBarColor[Index]);
0000b2  f104012c          ADD      r1,r4,#0x2c
0000b6  f8510029          LDR      r0,[r1,r9,LSL #2]
0000ba  f7fffffe          BL       LCD_SetBkColor
;;;218        LCD_SetColor(pObj->Props.aTextColor[Index]);
0000be  f1040134          ADD      r1,r4,#0x34
0000c2  f8510029          LDR      r0,[r1,r9,LSL #2]
0000c6  f7fffffe          BL       LCD_SetColor
;;;219        WIDGET__FillStringInRect(pText, &r, &Pos.rTitleText, &rText);
0000ca  466b              MOV      r3,sp
0000cc  aa07              ADD      r2,sp,#0x1c
0000ce  a902              ADD      r1,sp,#8
0000d0  4650              MOV      r0,r10
0000d2  f7fffffe          BL       WIDGET__FillStringInRect
;;;220        /* Draw Frame */
;;;221        LCD_SetColor(FRAMEWIN_FRAMECOLOR_DEFAULT);
0000d6  481c              LDR      r0,|L13.328|
0000d8  f7fffffe          BL       LCD_SetColor
;;;222        GUI_FillRect(0, 0, xsize-1, BorderSize-1);
0000dc  f1a80301          SUB      r3,r8,#1
0000e0  1e6a              SUBS     r2,r5,#1
0000e2  2100              MOVS     r1,#0
0000e4  4608              MOV      r0,r1
0000e6  f7fffffe          BL       GUI_FillRect
;;;223    	  GUI_FillRect(0, 0, Pos.rClient.x0-1, ysize-1);
0000ea  1e73              SUBS     r3,r6,#1
0000ec  f9bd0014          LDRSH    r0,[sp,#0x14]
0000f0  1e42              SUBS     r2,r0,#1
0000f2  2100              MOVS     r1,#0
0000f4  4608              MOV      r0,r1
0000f6  f7fffffe          BL       GUI_FillRect
;;;224    	  GUI_FillRect(Pos.rClient.x1+1, 0, xsize-1, ysize-1);
0000fa  1e73              SUBS     r3,r6,#1
0000fc  1e6a              SUBS     r2,r5,#1
0000fe  f9bd1018          LDRSH    r1,[sp,#0x18]
000102  1c48              ADDS     r0,r1,#1
000104  2100              MOVS     r1,#0
000106  f7fffffe          BL       GUI_FillRect
;;;225        GUI_FillRect(0, Pos.rClient.y1+1, xsize-1, ysize-1);
00010a  1e73              SUBS     r3,r6,#1
00010c  1e6a              SUBS     r2,r5,#1
00010e  f9bd001a          LDRSH    r0,[sp,#0x1a]
000112  1c41              ADDS     r1,r0,#1
000114  2000              MOVS     r0,#0
000116  f7fffffe          BL       GUI_FillRect
;;;226        GUI_FillRect(0, y0, xsize - 1, y0 + pObj->Props.IBorderSize - 1);
00011a  f9b40044          LDRSH    r0,[r4,#0x44]
00011e  4438              ADD      r0,r0,r7
000120  1e43              SUBS     r3,r0,#1
000122  1e6a              SUBS     r2,r5,#1
000124  4639              MOV      r1,r7
000126  2000              MOVS     r0,#0
000128  f7fffffe          BL       GUI_FillRect
;;;227        /* Draw the 3D effect (if configured) */
;;;228        if (pObj->Props.BorderSize >= 2) {
00012c  f9b40042          LDRSH    r0,[r4,#0x42]
000130  2802              CMP      r0,#2
000132  db01              BLT      |L13.312|
;;;229          WIDGET_EFFECT_3D_DrawUp();  /* pObj->Widget.pEffect->pfDrawUp(); */
000134  f7fffffe          BL       WIDGET_EFFECT_3D_DrawUp
                  |L13.312|
;;;230        }
;;;231    
;;;232      } WM_ITERATE_END();
000138  f7fffffe          BL       WM__GetNextIVR
00013c  2800              CMP      r0,#0
00013e  d1b8              BNE      |L13.178|
                  |L13.320|
;;;233    
;;;234    
;;;235    }
000140  b009              ADD      sp,sp,#0x24
000142  e8bd8ff0          POP      {r4-r11,pc}
;;;236    
                          ENDP

000146  0000              DCW      0x0000
                  |L13.328|
                          DCD      0x00aaaaaa

                          AREA ||i._SetActive||, CODE, READONLY, ALIGN=1

                  _SetActive PROC
;;;135    */
;;;136    static void _SetActive(FRAMEWIN_Handle hObj, int State) {
000000  b570              PUSH     {r4-r6,lr}
000002  4606              MOV      r6,r0
000004  460d              MOV      r5,r1
;;;137      FRAMEWIN_Obj* pObj;
;;;138      pObj = FRAMEWIN_H2P(hObj);
000006  4630              MOV      r0,r6
000008  f7fffffe          BL       GUI_ALLOC_h2p
00000c  4604              MOV      r4,r0
;;;139      if        (State && !(pObj->Flags & FRAMEWIN_SF_ACTIVE)) {
00000e  b175              CBZ      r5,|L14.46|
000010  f894005a          LDRB     r0,[r4,#0x5a]
000014  f0100f08          TST      r0,#8
000018  d109              BNE      |L14.46|
;;;140        pObj->Flags |= FRAMEWIN_CF_ACTIVE;
00001a  f8b4005a          LDRH     r0,[r4,#0x5a]
00001e  f0400008          ORR      r0,r0,#8
000022  f8a4005a          STRH     r0,[r4,#0x5a]
;;;141        FRAMEWIN_Invalidate(hObj);
000026  4630              MOV      r0,r6
000028  f7fffffe          BL       WM_InvalidateWindow
00002c  e00e              B        |L14.76|
                  |L14.46|
;;;142      } else if (!State && (pObj->Flags & FRAMEWIN_SF_ACTIVE)) {
00002e  b96d              CBNZ     r5,|L14.76|
000030  f894005a          LDRB     r0,[r4,#0x5a]
000034  f0100f08          TST      r0,#8
000038  d008              BEQ      |L14.76|
;;;143        pObj->Flags &= ~FRAMEWIN_CF_ACTIVE;
00003a  f8b4005a          LDRH     r0,[r4,#0x5a]
00003e  f0200008          BIC      r0,r0,#8
000042  f8a4005a          STRH     r0,[r4,#0x5a]
;;;144        FRAMEWIN_Invalidate(hObj);
000046  4630              MOV      r0,r6
000048  f7fffffe          BL       WM_InvalidateWindow
                  |L14.76|
;;;145      }
;;;146    }
00004c  bd70              POP      {r4-r6,pc}
;;;147    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  FRAMEWIN__DefaultProps
                          DCD      GUI_Font8_1
                          DCD      0x00404040
                          DCD      0x00ff0000
                          DCD      0x00ffffff
                          DCD      0x00ffffff
                          DCD      0x00c0c0c0
000018  00000003          DCW      0x0000,0x0003
00001c  00010000          DCW      0x0001,0x0000
                  FRAMEWIN__MinVisibility
000020  0005              DCW      0x0005
