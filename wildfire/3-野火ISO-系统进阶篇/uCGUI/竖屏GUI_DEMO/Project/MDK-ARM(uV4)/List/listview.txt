; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\listview.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\listview.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Widget\LISTVIEW.c]
                          THUMB

                          AREA ||i.LISTVIEW_AddColumn||, CODE, READONLY, ALIGN=1

                  LISTVIEW_AddColumn PROC
;;;970    */
;;;971    int LISTVIEW_AddColumn(LISTVIEW_Handle hObj, int Width, const char * s, int Align) {
000000  e92d4ffe          PUSH     {r1-r11,lr}
000004  4606              MOV      r6,r0
000006  4689              MOV      r9,r1
000008  4692              MOV      r10,r2
00000a  461f              MOV      r7,r3
;;;972      int r = 0;
00000c  f04f0b00          MOV      r11,#0
;;;973      if (hObj) {
000010  2e00              CMP      r6,#0
000012  d048              BEQ      |L1.166|
;;;974        LISTVIEW_Obj* pObj;
;;;975        LISTVIEW_COLUMN Column = {0};
000014  2000              MOVS     r0,#0
000016  9001              STR      r0,[sp,#4]
000018  9002              STR      r0,[sp,#8]
;;;976        unsigned NumRows;
;;;977        WM_LOCK();
00001a  f7fffffe          BL       GUI_Lock
;;;978        pObj = LISTVIEW_H2P(hObj);
00001e  4630              MOV      r0,r6
000020  f7fffffe          BL       GUI_ALLOC_h2p
000024  4604              MOV      r4,r0
;;;979        HEADER_AddItem(pObj->hHeader, Width, s, Align);
000026  f9b40028          LDRSH    r0,[r4,#0x28]
00002a  463b              MOV      r3,r7
00002c  4652              MOV      r2,r10
00002e  4649              MOV      r1,r9
000030  f7fffffe          BL       HEADER_AddItem
;;;980        Column.Align = Align;
000034  b2f8              UXTB     r0,r7
000036  f88d0004          STRB     r0,[sp,#4]
;;;981        GUI_ARRAY_AddItem(&pObj->ColumnArray, &Column, sizeof(LISTVIEW_COLUMN));
00003a  2208              MOVS     r2,#8
00003c  a901              ADD      r1,sp,#4
00003e  f104002e          ADD      r0,r4,#0x2e
000042  f7fffffe          BL       GUI_ARRAY_AddItem
;;;982        pObj = LISTVIEW_H2P(hObj); /* Restore after allocating memory */
000046  4630              MOV      r0,r6
000048  f7fffffe          BL       GUI_ALLOC_h2p
00004c  4604              MOV      r4,r0
;;;983        NumRows = LISTVIEW__GetNumRows(pObj);
00004e  4620              MOV      r0,r4
000050  f7fffffe          BL       LISTVIEW__GetNumRows
000054  4680              MOV      r8,r0
;;;984        if (NumRows) {
000056  f1b80f00          CMP      r8,#0
00005a  d019              BEQ      |L1.144|
;;;985          LISTVIEW_ROW* pRow;
;;;986          unsigned i;
;;;987          for (i = 0; i < NumRows; i++) {
00005c  2500              MOVS     r5,#0
00005e  e013              B        |L1.136|
                  |L1.96|
;;;988            pRow = (LISTVIEW_ROW*) GUI_ARRAY_GetpItem(&pObj->RowArray, i);
000060  4629              MOV      r1,r5
000062  f104002a          ADD      r0,r4,#0x2a
000066  f7fffffe          BL       GUI_ARRAY_GetpItem
00006a  9000              STR      r0,[sp,#0]
;;;989            if (GUI_ARRAY_AddItem(&pRow->CellArray, NULL, sizeof(LISTVIEW_CELL))) {
00006c  2204              MOVS     r2,#4
00006e  2100              MOVS     r1,#0
000070  9800              LDR      r0,[sp,#0]
000072  f7fffffe          BL       GUI_ARRAY_AddItem
000076  b110              CBZ      r0,|L1.126|
;;;990              r = 1;
000078  f04f0b01          MOV      r11,#1
;;;991              break;
00007c  e006              B        |L1.140|
                  |L1.126|
;;;992            }
;;;993            pObj = LISTVIEW_H2P(hObj); /* Restore after allocating memory */
00007e  4630              MOV      r0,r6
000080  f7fffffe          BL       GUI_ALLOC_h2p
000084  4604              MOV      r4,r0
000086  1c6d              ADDS     r5,r5,#1              ;987
                  |L1.136|
000088  4545              CMP      r5,r8                 ;987
00008a  d3e9              BCC      |L1.96|
                  |L1.140|
00008c  bf00              NOP                            ;991
;;;994          }
;;;995        }
00008e  bf00              NOP      
                  |L1.144|
;;;996        LISTVIEW__UpdateScrollParas(hObj, pObj);
000090  4621              MOV      r1,r4
000092  4630              MOV      r0,r6
000094  f7fffffe          BL       LISTVIEW__UpdateScrollParas
;;;997        LISTVIEW__InvalidateInsideArea(hObj, pObj);
000098  4621              MOV      r1,r4
00009a  4630              MOV      r0,r6
00009c  f7fffffe          BL       LISTVIEW__InvalidateInsideArea
;;;998        WM_UNLOCK();
0000a0  f7fffffe          BL       GUI_Unlock
;;;999      }
0000a4  bf00              NOP      
                  |L1.166|
;;;1000     return r;
0000a6  4658              MOV      r0,r11
;;;1001   }
0000a8  e8bd8ffe          POP      {r1-r11,pc}
;;;1002   
                          ENDP


                          AREA ||i.LISTVIEW_AddRow||, CODE, READONLY, ALIGN=1

                  LISTVIEW_AddRow PROC
;;;1006   */
;;;1007   int LISTVIEW_AddRow(LISTVIEW_Handle hObj, const GUI_ConstString* ppText) {
000000  e92d4ffe          PUSH     {r1-r11,lr}
000004  4682              MOV      r10,r0
000006  460d              MOV      r5,r1
;;;1008     int r = 0;
000008  2000              MOVS     r0,#0
00000a  9002              STR      r0,[sp,#8]
;;;1009     if (hObj) {
00000c  f1ba0f00          CMP      r10,#0
000010  d070              BEQ      |L2.244|
;;;1010       LISTVIEW_Obj* pObj;
;;;1011       WM_LOCK();
000012  f7fffffe          BL       GUI_Lock
;;;1012       pObj = LISTVIEW_H2P(hObj);
000016  4650              MOV      r0,r10
000018  f7fffffe          BL       GUI_ALLOC_h2p
00001c  4604              MOV      r4,r0
;;;1013       /* Add row item to the GUI_ARRAY */
;;;1014       if (GUI_ARRAY_AddItem(&pObj->RowArray, NULL, sizeof(LISTVIEW_ROW)) == 0) {
00001e  220c              MOVS     r2,#0xc
000020  2100              MOVS     r1,#0
000022  f104002a          ADD      r0,r4,#0x2a
000026  f7fffffe          BL       GUI_ARRAY_AddItem
00002a  2800              CMP      r0,#0
00002c  d15d              BNE      |L2.234|
;;;1015         LISTVIEW_ROW* pRow;
;;;1016         int i, RowIndex, NumColumns, NumBytes;
;;;1017         const char* s;
;;;1018         pObj       = LISTVIEW_H2P(hObj);                                         /* Restore after allocating memory */
00002e  4650              MOV      r0,r10
000030  f7fffffe          BL       GUI_ALLOC_h2p
000034  4604              MOV      r4,r0
;;;1019         RowIndex   = LISTVIEW__GetNumRows(pObj) - 1;
000036  4620              MOV      r0,r4
000038  f7fffffe          BL       LISTVIEW__GetNumRows
00003c  f1a00b01          SUB      r11,r0,#1
;;;1020         NumColumns = LISTVIEW__GetNumColumns(pObj);
000040  4620              MOV      r0,r4
000042  f7fffffe          BL       LISTVIEW__GetNumColumns
000046  9000              STR      r0,[sp,#0]
;;;1021         pRow       = (LISTVIEW_ROW*) GUI_ARRAY_GetpItem(&pObj->RowArray, RowIndex);
000048  4659              MOV      r1,r11
00004a  f104002a          ADD      r0,r4,#0x2a
00004e  f7fffffe          BL       GUI_ARRAY_GetpItem
000052  9001              STR      r0,[sp,#4]
;;;1022         GUI_ARRAY_CREATE(&pRow->CellArray);
;;;1023         /* Add columns for the new row */
;;;1024         for (i = 0; i < NumColumns; i++) {
000054  2600              MOVS     r6,#0
000056  e02c              B        |L2.178|
                  |L2.88|
;;;1025           LISTVIEW_CELL* pCell;
;;;1026           s = (ppText) ? *ppText++ : 0;
000058  b10d              CBZ      r5,|L2.94|
00005a  cd01              LDM      r5!,{r0}
00005c  e000              B        |L2.96|
                  |L2.94|
00005e  2000              MOVS     r0,#0
                  |L2.96|
000060  4680              MOV      r8,r0
;;;1027           if (s == 0) {
000062  f1b80f00          CMP      r8,#0
000066  d100              BNE      |L2.106|
;;;1028             ppText = 0;
000068  2500              MOVS     r5,#0
                  |L2.106|
;;;1029           }
;;;1030           NumBytes = GUI__strlen(s) + 1;     /* 0 if no string is specified (s == NULL) */
00006a  4640              MOV      r0,r8
00006c  f7fffffe          BL       GUI__strlen
000070  1c47              ADDS     r7,r0,#1
;;;1031           if (GUI_ARRAY_AddItem(&pRow->CellArray, NULL, sizeof(LISTVIEW_CELL) + NumBytes)) {
000072  1d3a              ADDS     r2,r7,#4
000074  2100              MOVS     r1,#0
000076  9801              LDR      r0,[sp,#4]
000078  f7fffffe          BL       GUI_ARRAY_AddItem
00007c  b110              CBZ      r0,|L2.132|
;;;1032             r = 1;
00007e  2001              MOVS     r0,#1
000080  9002              STR      r0,[sp,#8]
;;;1033             break;
000082  e019              B        |L2.184|
                  |L2.132|
;;;1034           }
;;;1035           pObj  = LISTVIEW_H2P(hObj);                                            /* Restore after allocating memory */
000084  4650              MOV      r0,r10
000086  f7fffffe          BL       GUI_ALLOC_h2p
00008a  4604              MOV      r4,r0
;;;1036           pRow  = (LISTVIEW_ROW*) GUI_ARRAY_GetpItem(&pObj->RowArray, RowIndex); /* Restore after allocating memory */
00008c  4659              MOV      r1,r11
00008e  f104002a          ADD      r0,r4,#0x2a
000092  f7fffffe          BL       GUI_ARRAY_GetpItem
000096  9001              STR      r0,[sp,#4]
;;;1037           pCell = (LISTVIEW_CELL*) GUI_ARRAY_GetpItem(&pRow->CellArray, i);
000098  4631              MOV      r1,r6
00009a  9801              LDR      r0,[sp,#4]
00009c  f7fffffe          BL       GUI_ARRAY_GetpItem
0000a0  4681              MOV      r9,r0
;;;1038           if (NumBytes > 1) {
0000a2  2f01              CMP      r7,#1
0000a4  dd04              BLE      |L2.176|
;;;1039             strcpy(pCell->acText, s);
0000a6  4641              MOV      r1,r8
0000a8  f1090002          ADD      r0,r9,#2
0000ac  f7fffffe          BL       strcpy
                  |L2.176|
0000b0  1c76              ADDS     r6,r6,#1              ;1024
                  |L2.178|
0000b2  9800              LDR      r0,[sp,#0]            ;1024
0000b4  4286              CMP      r6,r0                 ;1024
0000b6  dbcf              BLT      |L2.88|
                  |L2.184|
0000b8  bf00              NOP                            ;1033
;;;1040           }
;;;1041         }
;;;1042         pObj->IsSorted = 0;
0000ba  2000              MOVS     r0,#0
0000bc  f8840094          STRB     r0,[r4,#0x94]
;;;1043         LISTVIEW__UpdateScrollParas(hObj, pObj);
0000c0  4621              MOV      r1,r4
0000c2  4650              MOV      r0,r10
0000c4  f7fffffe          BL       LISTVIEW__UpdateScrollParas
;;;1044         if (pObj->hSort && (pObj->SortIndex >= 0)) {
0000c8  f8b40092          LDRH     r0,[r4,#0x92]
0000cc  b138              CBZ      r0,|L2.222|
0000ce  6ea0              LDR      r0,[r4,#0x68]
0000d0  2800              CMP      r0,#0
0000d2  db04              BLT      |L2.222|
;;;1045           LISTVIEW__InvalidateInsideArea(hObj, pObj);
0000d4  4621              MOV      r1,r4
0000d6  4650              MOV      r0,r10
0000d8  f7fffffe          BL       LISTVIEW__InvalidateInsideArea
0000dc  e004              B        |L2.232|
                  |L2.222|
;;;1046         } else {
;;;1047           LISTVIEW__InvalidateRow(hObj, pObj, RowIndex);
0000de  465a              MOV      r2,r11
0000e0  4621              MOV      r1,r4
0000e2  4650              MOV      r0,r10
0000e4  f7fffffe          BL       LISTVIEW__InvalidateRow
                  |L2.232|
;;;1048         }
;;;1049       } else {
0000e8  e001              B        |L2.238|
                  |L2.234|
;;;1050         r = 1;
0000ea  2001              MOVS     r0,#1
0000ec  9002              STR      r0,[sp,#8]
                  |L2.238|
;;;1051       }
;;;1052       WM_UNLOCK();
0000ee  f7fffffe          BL       GUI_Unlock
;;;1053     }
0000f2  bf00              NOP      
                  |L2.244|
;;;1054     return r;
0000f4  9802              LDR      r0,[sp,#8]
;;;1055   }
0000f6  e8bd8ffe          POP      {r1-r11,pc}
;;;1056   
                          ENDP


                          AREA ||i.LISTVIEW_Callback||, CODE, READONLY, ALIGN=1

                  LISTVIEW_Callback PROC
;;;772    */
;;;773    void LISTVIEW_Callback (WM_MESSAGE *pMsg) {
000000  e92d43fe          PUSH     {r1-r9,lr}
000004  4605              MOV      r5,r0
;;;774      LISTVIEW_Handle hObj;
;;;775      LISTVIEW_Obj* pObj;
;;;776      WM_SCROLL_STATE ScrollState;
;;;777      hObj = pMsg->hWin;
000006  f9b59004          LDRSH    r9,[r5,#4]
;;;778      /* Let widget handle the standard messages */
;;;779      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
00000a  4629              MOV      r1,r5
00000c  4648              MOV      r0,r9
00000e  f7fffffe          BL       WIDGET_HandleActive
000012  b908              CBNZ     r0,|L3.24|
                  |L3.20|
;;;780        return;
;;;781      }
;;;782      pObj = (LISTVIEW_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
;;;783      switch (pMsg->MsgId) {
;;;784      case WM_NOTIFY_CLIENTCHANGE:
;;;785      case WM_SIZE:
;;;786        if (pMsg->hWinSrc && (pMsg->hWinSrc == pObj->hHeader)) {
;;;787          LISTVIEW__UpdateScrollParas(hObj, pObj);
;;;788        }
;;;789        return;
;;;790      case WM_NOTIFY_PARENT:
;;;791        switch (pMsg->Data.v) {
;;;792        case WM_NOTIFICATION_CHILD_DELETED:
;;;793          /* make sure we do not send any messages to the header child once it has been deleted */
;;;794          if (pMsg->hWinSrc == pObj->hHeader) {
;;;795            pObj->hHeader = 0;
;;;796          }
;;;797          break;
;;;798        case WM_NOTIFICATION_VALUE_CHANGED:
;;;799          if (pMsg->hWinSrc == WM_GetScrollbarV(hObj)) {
;;;800            WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
;;;801            pObj->ScrollStateV.v = ScrollState.v;
;;;802            LISTVIEW__InvalidateInsideArea(hObj, pObj);
;;;803            _NotifyOwner(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
;;;804          } else if (pMsg->hWinSrc == WM_GetScrollbarH(hObj)) {
;;;805            WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
;;;806            pObj->ScrollStateH.v = ScrollState.v;
;;;807            LISTVIEW__UpdateScrollParas(hObj, pObj);
;;;808            HEADER_SetScrollPos(pObj->hHeader, pObj->ScrollStateH.v);
;;;809            _NotifyOwner(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
;;;810          }
;;;811          break;
;;;812        case WM_NOTIFICATION_SCROLLBAR_ADDED:
;;;813          #if WIDGET_USE_PARENT_EFFECT
;;;814            WIDGET_SetEffect(pMsg->hWinSrc, pObj->Widget.pEffect);
;;;815          #endif
;;;816          LISTVIEW__UpdateScrollParas(hObj, pObj);
;;;817          break;
;;;818        case WM_NOTIFICATION_RELEASED:
;;;819          if ((pMsg->hWinSrc == pObj->hHeader) && (pObj->hSort)) {
;;;820            int Column;
;;;821            LISTVIEW_SORT * pSort;
;;;822            LISTVIEW_COLUMN * pColumn;
;;;823            WM_SetFocus(hObj);
;;;824            Column = HEADER_GetSel(pObj->hHeader);
;;;825            if (Column >= 0) {
;;;826              pColumn = (LISTVIEW_COLUMN *)GUI_ARRAY_GetpItem(&pObj->ColumnArray, Column);
;;;827              if (pColumn->fpCompare) {
;;;828                pSort = (LISTVIEW_SORT *)GUI_ALLOC_h2p(pObj->hSort);
;;;829                if (pSort) {
;;;830                  // ReverseSort
;;;831                  if (pObj->SortIndex == Column) {
;;;832                    pSort->Reverse   ^= 1;
;;;833                    pObj->ReverseSort = 1;
;;;834                    pObj->IsSorted    = 0;
;;;835                  } else {
;;;836                    pSort->Reverse    = 0;
;;;837                    pObj->SortIndex   = Column;
;;;838                    pObj->IsPresorted = 0;
;;;839                  }
;;;840                  /*
;;;841                  if (pObj->SortIndex == Column) {
;;;842                    pSort->Reverse ^= 1;
;;;843                  } else {
;;;844                    pSort->Reverse = 0;
;;;845                    pObj->SortIndex = Column;
;;;846                  }
;;;847                  pObj->IsPresorted = 0;
;;;848                  */
;;;849                  LISTVIEW__InvalidateInsideArea(hObj, pObj);
;;;850                }
;;;851              }
;;;852            }
;;;853          }
;;;854          break;
;;;855        }
;;;856        return;
;;;857      case WM_PAINT:
;;;858        _Paint(hObj, pObj, pMsg);
;;;859        return;
;;;860      case WM_TOUCH:
;;;861        _OnTouch(hObj, pObj, pMsg);
;;;862        return;        /* Important: message handled ! */
;;;863      case WM_KEY:
;;;864        if (((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt > 0) {
;;;865          int Key;
;;;866          Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
;;;867          if (_AddKey(hObj, pObj, Key)) {
;;;868            return;
;;;869          }
;;;870        }
;;;871        break;  /* No return here ... WM_DefaultProc needs to be called */
;;;872      case WM_DELETE:
;;;873        _FreeAttached(pObj);
;;;874        break;  /* No return here ... WM_DefaultProc needs to be called */
;;;875      }
;;;876      WM_DefaultProc(pMsg);
;;;877    }
000014  e8bd83fe          POP      {r1-r9,pc}
                  |L3.24|
000018  4648              MOV      r0,r9                 ;782
00001a  f7fffffe          BL       GUI_ALLOC_h2p
00001e  4604              MOV      r4,r0                 ;782
000020  6828              LDR      r0,[r5,#0]            ;783
000022  280e              CMP      r0,#0xe               ;783
000024  d07d              BEQ      |L3.290|
000026  dc06              BGT      |L3.54|
000028  2805              CMP      r0,#5                 ;783
00002a  d00c              BEQ      |L3.70|
00002c  280b              CMP      r0,#0xb               ;783
00002e  d079              BEQ      |L3.292|
000030  280c              CMP      r0,#0xc               ;783
                  |L3.50|
000032  d178              BNE      |L3.294|
000034  e0a8              B        |L3.392|
                  |L3.54|
000036  280f              CMP      r0,#0xf               ;783
000038  d076              BEQ      |L3.296|
00003a  2825              CMP      r0,#0x25              ;783
00003c  d002              BEQ      |L3.68|
00003e  2826              CMP      r0,#0x26              ;783
000040  d1f7              BNE      |L3.50|
000042  e00d              B        |L3.96|
                  |L3.68|
000044  bf00              NOP                            ;785
                  |L3.70|
000046  88e8              LDRH     r0,[r5,#6]            ;786
000048  b148              CBZ      r0,|L3.94|
00004a  f9b50006          LDRSH    r0,[r5,#6]            ;786
00004e  f9b41028          LDRSH    r1,[r4,#0x28]         ;786
000052  4288              CMP      r0,r1                 ;786
000054  d103              BNE      |L3.94|
000056  4621              MOV      r1,r4                 ;787
000058  4648              MOV      r0,r9                 ;787
00005a  f7fffffe          BL       LISTVIEW__UpdateScrollParas
                  |L3.94|
00005e  e7d9              B        |L3.20|
                  |L3.96|
000060  68a8              LDR      r0,[r5,#8]            ;791
000062  2802              CMP      r0,#2                 ;791
000064  d048              BEQ      |L3.248|
000066  2805              CMP      r0,#5                 ;791
000068  d00c              BEQ      |L3.132|
00006a  2806              CMP      r0,#6                 ;791
00006c  d03f              BEQ      |L3.238|
00006e  2807              CMP      r0,#7                 ;791
000070  d107              BNE      |L3.130|
000072  f9b50006          LDRSH    r0,[r5,#6]            ;794
000076  f9b41028          LDRSH    r1,[r4,#0x28]         ;794
00007a  4288              CMP      r0,r1                 ;794
00007c  d101              BNE      |L3.130|
00007e  2000              MOVS     r0,#0                 ;795
000080  8520              STRH     r0,[r4,#0x28]         ;795
                  |L3.130|
000082  e079              B        |L3.376|
                  |L3.132|
000084  4648              MOV      r0,r9                 ;799
000086  f7fffffe          BL       WM_GetScrollbarV
00008a  f9b51006          LDRSH    r1,[r5,#6]            ;799
00008e  4288              CMP      r0,r1                 ;799
000090  d10f              BNE      |L3.178|
000092  f9b50006          LDRSH    r0,[r5,#6]            ;800
000096  4669              MOV      r1,sp                 ;800
000098  f7fffffe          BL       WM_GetScrollState
00009c  9901              LDR      r1,[sp,#4]            ;801
00009e  67e1              STR      r1,[r4,#0x7c]         ;801
0000a0  4621              MOV      r1,r4                 ;802
0000a2  4648              MOV      r0,r9                 ;802
0000a4  f7fffffe          BL       LISTVIEW__InvalidateInsideArea
0000a8  210a              MOVS     r1,#0xa               ;803
0000aa  4648              MOV      r0,r9                 ;803
0000ac  f7fffffe          BL       _NotifyOwner
0000b0  e01c              B        |L3.236|
                  |L3.178|
0000b2  4648              MOV      r0,r9                 ;804
0000b4  f7fffffe          BL       WM_GetScrollbarH
0000b8  f9b51006          LDRSH    r1,[r5,#6]            ;804
0000bc  4288              CMP      r0,r1                 ;804
0000be  d115              BNE      |L3.236|
0000c0  f9b50006          LDRSH    r0,[r5,#6]            ;805
0000c4  4669              MOV      r1,sp                 ;805
0000c6  f7fffffe          BL       WM_GetScrollState
0000ca  2088              MOVS     r0,#0x88              ;806
0000cc  9901              LDR      r1,[sp,#4]            ;806
0000ce  5101              STR      r1,[r0,r4]            ;806
0000d0  4621              MOV      r1,r4                 ;807
0000d2  4648              MOV      r0,r9                 ;807
0000d4  f7fffffe          BL       LISTVIEW__UpdateScrollParas
0000d8  2288              MOVS     r2,#0x88              ;808
0000da  5911              LDR      r1,[r2,r4]            ;808
0000dc  f9b40028          LDRSH    r0,[r4,#0x28]         ;808
0000e0  f7fffffe          BL       HEADER_SetScrollPos
0000e4  210a              MOVS     r1,#0xa               ;809
0000e6  4648              MOV      r0,r9                 ;809
0000e8  f7fffffe          BL       _NotifyOwner
                  |L3.236|
0000ec  e044              B        |L3.376|
                  |L3.238|
0000ee  4621              MOV      r1,r4                 ;816
0000f0  4648              MOV      r0,r9                 ;816
0000f2  f7fffffe          BL       LISTVIEW__UpdateScrollParas
0000f6  e03f              B        |L3.376|
                  |L3.248|
0000f8  f9b50006          LDRSH    r0,[r5,#6]            ;819
0000fc  f9b41028          LDRSH    r1,[r4,#0x28]         ;819
000100  4288              CMP      r0,r1                 ;819
000102  d138              BNE      |L3.374|
000104  f8b40092          LDRH     r0,[r4,#0x92]         ;819
000108  b3a8              CBZ      r0,|L3.374|
00010a  4648              MOV      r0,r9                 ;823
00010c  f7fffffe          BL       WM_SetFocus
000110  f9b40028          LDRSH    r0,[r4,#0x28]         ;824
000114  f7fffffe          BL       HEADER_GetSel
000118  4607              MOV      r7,r0                 ;824
00011a  2f00              CMP      r7,#0                 ;825
00011c  db2a              BLT      |L3.372|
00011e  4639              MOV      r1,r7                 ;826
000120  e003              B        |L3.298|
                  |L3.290|
000122  e037              B        |L3.404|
                  |L3.292|
000124  e045              B        |L3.434|
                  |L3.294|
000126  e048              B        |L3.442|
                  |L3.296|
000128  e028              B        |L3.380|
                  |L3.298|
00012a  f104002e          ADD      r0,r4,#0x2e           ;826
00012e  f7fffffe          BL       GUI_ARRAY_GetpItem
000132  4680              MOV      r8,r0                 ;826
000134  f8d80004          LDR      r0,[r8,#4]            ;827
000138  b1e0              CBZ      r0,|L3.372|
00013a  f9b40092          LDRSH    r0,[r4,#0x92]         ;828
00013e  f7fffffe          BL       GUI_ALLOC_h2p
000142  4606              MOV      r6,r0                 ;828
000144  b1b6              CBZ      r6,|L3.372|
000146  6ea0              LDR      r0,[r4,#0x68]         ;831
000148  42b8              CMP      r0,r7                 ;831
00014a  d10a              BNE      |L3.354|
00014c  7b30              LDRB     r0,[r6,#0xc]          ;832
00014e  f0800001          EOR      r0,r0,#1              ;832
000152  7330              STRB     r0,[r6,#0xc]          ;832
000154  2001              MOVS     r0,#1                 ;833
000156  f8840096          STRB     r0,[r4,#0x96]         ;833
00015a  2000              MOVS     r0,#0                 ;834
00015c  f8840094          STRB     r0,[r4,#0x94]         ;834
000160  e004              B        |L3.364|
                  |L3.354|
000162  2000              MOVS     r0,#0                 ;836
000164  7330              STRB     r0,[r6,#0xc]          ;836
000166  66a7              STR      r7,[r4,#0x68]         ;837
000168  f8840095          STRB     r0,[r4,#0x95]         ;838
                  |L3.364|
00016c  4621              MOV      r1,r4                 ;849
00016e  4648              MOV      r0,r9                 ;849
000170  f7fffffe          BL       LISTVIEW__InvalidateInsideArea
                  |L3.372|
000174  bf00              NOP                            ;853
                  |L3.374|
000176  bf00              NOP                            ;854
                  |L3.376|
000178  bf00              NOP                            ;797
00017a  e74b              B        |L3.20|
                  |L3.380|
00017c  462a              MOV      r2,r5                 ;858
00017e  4621              MOV      r1,r4                 ;858
000180  4648              MOV      r0,r9                 ;858
000182  f7fffffe          BL       _Paint
000186  e745              B        |L3.20|
                  |L3.392|
000188  462a              MOV      r2,r5                 ;861
00018a  4621              MOV      r1,r4                 ;861
00018c  4648              MOV      r0,r9                 ;861
00018e  f7fffffe          BL       _OnTouch
000192  e73f              B        |L3.20|
                  |L3.404|
000194  68a8              LDR      r0,[r5,#8]            ;864
000196  6840              LDR      r0,[r0,#4]            ;864
000198  2800              CMP      r0,#0                 ;864
00019a  dd09              BLE      |L3.432|
00019c  68a8              LDR      r0,[r5,#8]            ;866
00019e  6806              LDR      r6,[r0,#0]            ;866
0001a0  4632              MOV      r2,r6                 ;867
0001a2  4621              MOV      r1,r4                 ;867
0001a4  4648              MOV      r0,r9                 ;867
0001a6  f7fffffe          BL       _AddKey
0001aa  b100              CBZ      r0,|L3.430|
0001ac  e732              B        |L3.20|
                  |L3.430|
0001ae  bf00              NOP                            ;870
                  |L3.432|
0001b0  e003              B        |L3.442|
                  |L3.434|
0001b2  4620              MOV      r0,r4                 ;873
0001b4  f7fffffe          BL       _FreeAttached
0001b8  bf00              NOP                            ;874
                  |L3.442|
0001ba  bf00              NOP                            ;871
0001bc  4628              MOV      r0,r5                 ;876
0001be  f7fffffe          BL       WM_DefaultProc
0001c2  bf00              NOP      
0001c4  e726              B        |L3.20|
;;;878    
                          ENDP


                          AREA ||i.LISTVIEW_CreateEx||, CODE, READONLY, ALIGN=2

                  LISTVIEW_CreateEx PROC
;;;892    */
;;;893    LISTVIEW_Handle LISTVIEW_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;894                                      int WinFlags, int ExFlags, int Id)
;;;895    {
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
000008  4690              MOV      r8,r2
00000a  4699              MOV      r9,r3
00000c  e9ddab0e          LDRD     r10,r11,[sp,#0x38]
;;;896      LISTVIEW_Handle hObj;
;;;897      GUI_USE_PARA(ExFlags);
000010  9810              LDR      r0,[sp,#0x40]
000012  9010              STR      r0,[sp,#0x40]
;;;898      WM_LOCK();
000014  f7fffffe          BL       GUI_Lock
;;;899      /* Create the window */
;;;900      if ((xsize == 0) && (ysize == 0) && (x0 == 0) && (y0 == 0)) {
000018  f1b80f00          CMP      r8,#0
00001c  d117              BNE      |L4.78|
00001e  f1b90f00          CMP      r9,#0
000022  d114              BNE      |L4.78|
000024  b99e              CBNZ     r6,|L4.78|
000026  b997              CBNZ     r7,|L4.78|
;;;901        GUI_RECT Rect;
;;;902        WM_GetClientRectEx(hParent, &Rect);
000028  a902              ADD      r1,sp,#8
00002a  4650              MOV      r0,r10
00002c  f7fffffe          BL       WM_GetClientRectEx
;;;903        xsize = Rect.x1 - Rect.x0 + 1;
000030  f9bd000c          LDRSH    r0,[sp,#0xc]
000034  f9bd1008          LDRSH    r1,[sp,#8]
000038  1a40              SUBS     r0,r0,r1
00003a  f1000801          ADD      r8,r0,#1
;;;904        ysize = Rect.y1 - Rect.y0 + 1;
00003e  f9bd000e          LDRSH    r0,[sp,#0xe]
000042  f9bd100a          LDRSH    r1,[sp,#0xa]
000046  1a40              SUBS     r0,r0,r1
000048  f1000901          ADD      r9,r0,#1
;;;905      }
00004c  bf00              NOP      
                  |L4.78|
;;;906      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, &LISTVIEW_Callback,
00004e  2178              MOVS     r1,#0x78
000050  4a1e              LDR      r2,|L4.204|
000052  fa1ff08b          UXTH     r0,r11
000056  464b              MOV      r3,r9
000058  e9cda000          STRD     r10,r0,[sp,#0]
00005c  e9cd2102          STRD     r2,r1,[sp,#8]
000060  4642              MOV      r2,r8
000062  4639              MOV      r1,r7
000064  4630              MOV      r0,r6
000066  f7fffffe          BL       WM_CreateWindowAsChild
00006a  4605              MOV      r5,r0
;;;907                                    sizeof(LISTVIEW_Obj) - sizeof(WM_Obj));
;;;908      if (hObj) {
00006c  b33d              CBZ      r5,|L4.190|
;;;909        LISTVIEW_Obj* pObj;
;;;910        pObj = (LISTVIEW_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
00006e  4628              MOV      r0,r5
000070  f7fffffe          BL       GUI_ALLOC_h2p
000074  4604              MOV      r4,r0
;;;911        /* Init sub-classes */
;;;912        GUI_ARRAY_CREATE(&pObj->RowArray);
;;;913        GUI_ARRAY_CREATE(&pObj->ColumnArray);
;;;914        /* Init widget specific variables */
;;;915        WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE);
000076  2210              MOVS     r2,#0x10
000078  4620              MOV      r0,r4
00007a  9911              LDR      r1,[sp,#0x44]
00007c  f7fffffe          BL       WIDGET__Init
;;;916        /* Init member variables */
;;;917        LISTVIEW_INIT_ID(pObj);
;;;918        pObj->Props     = LISTVIEW_DefaultProps;
000080  222c              MOVS     r2,#0x2c
000082  4913              LDR      r1,|L4.208|
000084  f1040034          ADD      r0,r4,#0x34
000088  f7fffffe          BL       __aeabi_memcpy4
;;;919        pObj->ShowGrid  = 0;
00008c  2000              MOVS     r0,#0
00008e  6660              STR      r0,[r4,#0x64]
;;;920        pObj->RowDistY  = 0;
000090  66e0              STR      r0,[r4,#0x6c]
;;;921        pObj->Sel       = -1;
000092  1e40              SUBS     r0,r0,#1
000094  6620              STR      r0,[r4,#0x60]
;;;922        pObj->LBorder   = 1;
000096  2001              MOVS     r0,#1
000098  6720              STR      r0,[r4,#0x70]
;;;923        pObj->RBorder   = 1;
00009a  6760              STR      r0,[r4,#0x74]
;;;924        pObj->hHeader   = HEADER_CreateEx(0, 0, 0, 0, hObj, WM_CF_SHOW, 0, 0);
00009c  2000              MOVS     r0,#0
00009e  2202              MOVS     r2,#2
0000a0  e9cd2001          STRD     r2,r0,[sp,#4]
0000a4  4603              MOV      r3,r0
0000a6  4602              MOV      r2,r0
0000a8  4601              MOV      r1,r0
0000aa  9500              STR      r5,[sp,#0]
0000ac  9003              STR      r0,[sp,#0xc]
0000ae  f7fffffe          BL       HEADER_CreateEx
0000b2  8520              STRH     r0,[r4,#0x28]
;;;925        LISTVIEW__UpdateScrollParas(hObj, pObj);
0000b4  4621              MOV      r1,r4
0000b6  4628              MOV      r0,r5
0000b8  f7fffffe          BL       LISTVIEW__UpdateScrollParas
;;;926      } else {
0000bc  bf00              NOP      
                  |L4.190|
;;;927        GUI_DEBUG_ERROROUT_IF(hObj==0, "LISTVIEW_Create failed")
;;;928      }
;;;929      WM_UNLOCK();
0000be  f7fffffe          BL       GUI_Unlock
;;;930      return hObj;
0000c2  4628              MOV      r0,r5
;;;931    }
0000c4  b004              ADD      sp,sp,#0x10
0000c6  e8bd9ff0          POP      {r4-r12,pc}
;;;932    
                          ENDP

0000ca  0000              DCW      0x0000
                  |L4.204|
                          DCD      LISTVIEW_Callback
                  |L4.208|
                          DCD      LISTVIEW_DefaultProps

                          AREA ||i.LISTVIEW_DecSel||, CODE, READONLY, ALIGN=1

                  LISTVIEW_DecSel PROC
;;;956    */
;;;957    void LISTVIEW_DecSel(LISTVIEW_Handle hObj) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;958      if (hObj) {
000004  b174              CBZ      r4,|L5.36|
;;;959        LISTVIEW_Obj* pObj;
;;;960        WM_LOCK();
000006  f7fffffe          BL       GUI_Lock
;;;961        pObj = LISTVIEW_H2P(hObj);
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       GUI_ALLOC_h2p
000010  4605              MOV      r5,r0
;;;962        LISTVIEW__MoveSel(hObj, pObj, -1);
000012  f04f32ff          MOV      r2,#0xffffffff
000016  4629              MOV      r1,r5
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       LISTVIEW__MoveSel
;;;963        WM_UNLOCK();
00001e  f7fffffe          BL       GUI_Unlock
;;;964      }
000022  bf00              NOP      
                  |L5.36|
;;;965    }
000024  bd70              POP      {r4-r6,pc}
;;;966    
                          ENDP


                          AREA ||i.LISTVIEW_IncSel||, CODE, READONLY, ALIGN=1

                  LISTVIEW_IncSel PROC
;;;942    */
;;;943    void LISTVIEW_IncSel(LISTVIEW_Handle hObj) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;944      if (hObj) {
000004  b16c              CBZ      r4,|L6.34|
;;;945        LISTVIEW_Obj* pObj;
;;;946        WM_LOCK();
000006  f7fffffe          BL       GUI_Lock
;;;947        pObj = LISTVIEW_H2P(hObj);
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       GUI_ALLOC_h2p
000010  4605              MOV      r5,r0
;;;948        LISTVIEW__MoveSel(hObj, pObj, 1);
000012  2201              MOVS     r2,#1
000014  4629              MOV      r1,r5
000016  4620              MOV      r0,r4
000018  f7fffffe          BL       LISTVIEW__MoveSel
;;;949        WM_UNLOCK();
00001c  f7fffffe          BL       GUI_Unlock
;;;950      }
000020  bf00              NOP      
                  |L6.34|
;;;951    }
000022  bd70              POP      {r4-r6,pc}
;;;952    
                          ENDP


                          AREA ||i.LISTVIEW__GetNumColumns||, CODE, READONLY, ALIGN=1

                  LISTVIEW__GetNumColumns PROC
;;;134    */
;;;135    unsigned LISTVIEW__GetNumColumns(LISTVIEW_Obj* pObj) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;136      return GUI_ARRAY_GetNumItems(&pObj->ColumnArray);
000004  f104002e          ADD      r0,r4,#0x2e
000008  f7fffffe          BL       GUI_ARRAY_GetNumItems
;;;137    }
00000c  bd10              POP      {r4,pc}
;;;138    
                          ENDP


                          AREA ||i.LISTVIEW__GetNumRows||, CODE, READONLY, ALIGN=1

                  LISTVIEW__GetNumRows PROC
;;;126    */
;;;127    unsigned LISTVIEW__GetNumRows(LISTVIEW_Obj* pObj) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;128      return GUI_ARRAY_GetNumItems(&pObj->RowArray);
000004  f104002a          ADD      r0,r4,#0x2a
000008  f7fffffe          BL       GUI_ARRAY_GetNumItems
;;;129    }
00000c  bd10              POP      {r4,pc}
;;;130    
                          ENDP


                          AREA ||i.LISTVIEW__GetRowDistY||, CODE, READONLY, ALIGN=1

                  LISTVIEW__GetRowDistY PROC
;;;213    */
;;;214    unsigned LISTVIEW__GetRowDistY(const LISTVIEW_Obj* pObj) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;215      unsigned RowDistY;
;;;216      if (pObj->RowDistY) {
000004  6ee0              LDR      r0,[r4,#0x6c]
000006  b108              CBZ      r0,|L9.12|
;;;217        RowDistY = pObj->RowDistY;
000008  6ee5              LDR      r5,[r4,#0x6c]
00000a  e006              B        |L9.26|
                  |L9.12|
;;;218      } else {
;;;219        RowDistY = GUI_GetYDistOfFont(pObj->Props.pFont);
00000c  6da0              LDR      r0,[r4,#0x58]
00000e  f7fffffe          BL       GUI_GetYDistOfFont
000012  4605              MOV      r5,r0
;;;220        if (pObj->ShowGrid) {
000014  6e60              LDR      r0,[r4,#0x64]
000016  b100              CBZ      r0,|L9.26|
;;;221          RowDistY++;
000018  1c6d              ADDS     r5,r5,#1
                  |L9.26|
;;;222        }
;;;223      }
;;;224      return RowDistY;
00001a  4628              MOV      r0,r5
;;;225    }
00001c  bd70              POP      {r4-r6,pc}
;;;226    
                          ENDP


                          AREA ||i.LISTVIEW__GetSel||, CODE, READONLY, ALIGN=1

                  LISTVIEW__GetSel PROC
;;;142    */
;;;143    int LISTVIEW__GetSel(LISTVIEW_Obj* pObj) {
000000  4601              MOV      r1,r0
;;;144      return pObj->Sel;
000002  6e08              LDR      r0,[r1,#0x60]
;;;145    }
000004  4770              BX       lr
;;;146    
                          ENDP


                          AREA ||i.LISTVIEW__InvalidateInsideArea||, CODE, READONLY, ALIGN=1

                  LISTVIEW__InvalidateInsideArea PROC
;;;422    */
;;;423    void LISTVIEW__InvalidateInsideArea(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj) {
000000  b57c              PUSH     {r2-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;424      GUI_RECT Rect;
;;;425      int HeaderHeight;
;;;426      HeaderHeight = HEADER_GetHeight(pObj->hHeader);
000006  f9b40028          LDRSH    r0,[r4,#0x28]
00000a  f7fffffe          BL       HEADER_GetHeight
00000e  4606              MOV      r6,r0
;;;427      WM_GetInsideRectExScrollbar(hObj, &Rect);
000010  4669              MOV      r1,sp
000012  4628              MOV      r0,r5
000014  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;428      Rect.y0 += HeaderHeight;
000018  f8bd0002          LDRH     r0,[sp,#2]
00001c  4430              ADD      r0,r0,r6
00001e  b200              SXTH     r0,r0
000020  f8ad0002          STRH     r0,[sp,#2]
;;;429      WM_InvalidateRect(hObj, &Rect);
000024  4669              MOV      r1,sp
000026  4628              MOV      r0,r5
000028  f7fffffe          BL       WM_InvalidateRect
;;;430    }
00002c  bd7c              POP      {r2-r6,pc}
;;;431    
                          ENDP


                          AREA ||i.LISTVIEW__InvalidateRow||, CODE, READONLY, ALIGN=1

                  LISTVIEW__InvalidateRow PROC
;;;435    */
;;;436    void LISTVIEW__InvalidateRow(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj, int Sel) {
000000  e92d41fc          PUSH     {r2-r8,lr}
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
;;;437      if (Sel >= 0) {
00000a  2d00              CMP      r5,#0
00000c  db22              BLT      |L12.84|
;;;438        GUI_RECT Rect;
;;;439        int HeaderHeight, RowDistY;
;;;440        HeaderHeight = HEADER_GetHeight(pObj->hHeader);
00000e  f9b40028          LDRSH    r0,[r4,#0x28]
000012  f7fffffe          BL       HEADER_GetHeight
000016  4680              MOV      r8,r0
;;;441        RowDistY     = LISTVIEW__GetRowDistY(pObj);
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       LISTVIEW__GetRowDistY
00001e  4606              MOV      r6,r0
;;;442        WM_GetInsideRectExScrollbar(hObj, &Rect);
000020  4669              MOV      r1,sp
000022  4638              MOV      r0,r7
000024  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;443        Rect.y0 += HeaderHeight + (Sel - pObj->ScrollStateV.v) * RowDistY;
000028  f8bd1002          LDRH     r1,[sp,#2]
00002c  6fe0              LDR      r0,[r4,#0x7c]
00002e  1a28              SUBS     r0,r5,r0
000030  fb008006          MLA      r0,r0,r6,r8
000034  4408              ADD      r0,r0,r1
000036  b200              SXTH     r0,r0
000038  f8ad0002          STRH     r0,[sp,#2]
;;;444        Rect.y1  = Rect.y0 + RowDistY - 1;
00003c  f8bd0002          LDRH     r0,[sp,#2]
000040  4430              ADD      r0,r0,r6
000042  1e40              SUBS     r0,r0,#1
000044  b200              SXTH     r0,r0
000046  f8ad0006          STRH     r0,[sp,#6]
;;;445        WM_InvalidateRect(hObj, &Rect);
00004a  4669              MOV      r1,sp
00004c  4638              MOV      r0,r7
00004e  f7fffffe          BL       WM_InvalidateRect
;;;446      }
000052  bf00              NOP      
                  |L12.84|
;;;447    }
000054  e8bd81fc          POP      {r2-r8,pc}
;;;448    
                          ENDP


                          AREA ||i.LISTVIEW__MoveSel||, CODE, READONLY, ALIGN=1

                  LISTVIEW__MoveSel PROC
;;;189    */
;;;190    void LISTVIEW__MoveSel(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj, int Dir) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4681              MOV      r9,r0
000006  460d              MOV      r5,r1
000008  4690              MOV      r8,r2
;;;191      int Index, NewSel = -1, NumRows;
00000a  f04f36ff          MOV      r6,#0xffffffff
;;;192      Index   = LISTVIEW__GetSel(pObj);
00000e  4628              MOV      r0,r5
000010  f7fffffe          BL       LISTVIEW__GetSel
000014  4604              MOV      r4,r0
;;;193      NumRows = LISTVIEW__GetNumRows(pObj);
000016  4628              MOV      r0,r5
000018  f7fffffe          BL       LISTVIEW__GetNumRows
00001c  4682              MOV      r10,r0
;;;194      do {
00001e  bf00              NOP      
                  |L13.32|
;;;195        LISTVIEW_ROW* pRow;
;;;196        Index += Dir;
000020  4444              ADD      r4,r4,r8
;;;197        if ((Index < 0) || (Index >= NumRows)) {
000022  2c00              CMP      r4,#0
000024  db01              BLT      |L13.42|
000026  4554              CMP      r4,r10
000028  db00              BLT      |L13.44|
                  |L13.42|
;;;198          break;
00002a  e00a              B        |L13.66|
                  |L13.44|
;;;199        }
;;;200        pRow = (LISTVIEW_ROW*) GUI_ARRAY_GetpItem(&pObj->RowArray, Index);
00002c  4621              MOV      r1,r4
00002e  f105002a          ADD      r0,r5,#0x2a
000032  f7fffffe          BL       GUI_ARRAY_GetpItem
000036  4607              MOV      r7,r0
;;;201        if (pRow->Disabled == 0) {
000038  7938              LDRB     r0,[r7,#4]
00003a  b900              CBNZ     r0,|L13.62|
;;;202          NewSel = Index;
00003c  4626              MOV      r6,r4
                  |L13.62|
;;;203        }
;;;204      } while (NewSel < 0);
00003e  2e00              CMP      r6,#0
000040  dbee              BLT      |L13.32|
                  |L13.66|
000042  bf00              NOP                            ;198
;;;205      if (NewSel >= 0) {
000044  2e00              CMP      r6,#0
000046  db04              BLT      |L13.82|
;;;206        LISTVIEW__SetSel(hObj, pObj, NewSel);
000048  4632              MOV      r2,r6
00004a  4629              MOV      r1,r5
00004c  4648              MOV      r0,r9
00004e  f7fffffe          BL       LISTVIEW__SetSel
                  |L13.82|
;;;207      }
;;;208    }
000052  e8bd87f0          POP      {r4-r10,pc}
;;;209    
                          ENDP


                          AREA ||i.LISTVIEW__SetSel||, CODE, READONLY, ALIGN=1

                  LISTVIEW__SetSel PROC
;;;150    */
;;;151    void LISTVIEW__SetSel(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj, int NewSel) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4681              MOV      r9,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
;;;152      int NumRows;
;;;153      NumRows = LISTVIEW__GetNumRows(pObj);
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       LISTVIEW__GetNumRows
000010  4607              MOV      r7,r0
;;;154      if (NewSel >= NumRows) {
000012  42bd              CMP      r5,r7
000014  db00              BLT      |L14.24|
;;;155        NewSel = NumRows - 1;
000016  1e7d              SUBS     r5,r7,#1
                  |L14.24|
;;;156      }
;;;157      if (NewSel < 0) {
000018  2d00              CMP      r5,#0
00001a  da01              BGE      |L14.32|
;;;158        NewSel = -1;
00001c  f04f35ff          MOV      r5,#0xffffffff
                  |L14.32|
;;;159      }
;;;160      if (NewSel != pObj->Sel) {
000020  6e20              LDR      r0,[r4,#0x60]
000022  42a8              CMP      r0,r5
000024  d02a              BEQ      |L14.124|
;;;161        char Disabled;
;;;162        LISTVIEW_ROW * pRow;
;;;163        pRow = (LISTVIEW_ROW *)GUI_ARRAY_GetpItem(&pObj->RowArray, NewSel);
000026  4629              MOV      r1,r5
000028  f104002a          ADD      r0,r4,#0x2a
00002c  f7fffffe          BL       GUI_ARRAY_GetpItem
000030  4680              MOV      r8,r0
;;;164        if (pRow) {
000032  f1b80f00          CMP      r8,#0
000036  d002              BEQ      |L14.62|
;;;165          Disabled = pRow->Disabled;
000038  f8986004          LDRB     r6,[r8,#4]
00003c  e000              B        |L14.64|
                  |L14.62|
;;;166        } else {
;;;167          Disabled = 0;
00003e  2600              MOVS     r6,#0
                  |L14.64|
;;;168        }
;;;169        if (Disabled == 0) {
000040  b9de              CBNZ     r6,|L14.122|
;;;170          int OldSel;
;;;171          OldSel    = pObj->Sel;
000042  f8d4a060          LDR      r10,[r4,#0x60]
;;;172          pObj->Sel = NewSel;
000046  6625              STR      r5,[r4,#0x60]
;;;173          if (LISTVIEW__UpdateScrollPos(hObj, pObj)) {
000048  4621              MOV      r1,r4
00004a  4648              MOV      r0,r9
00004c  f7fffffe          BL       LISTVIEW__UpdateScrollPos
000050  b120              CBZ      r0,|L14.92|
;;;174            LISTVIEW__InvalidateInsideArea(hObj, pObj);
000052  4621              MOV      r1,r4
000054  4648              MOV      r0,r9
000056  f7fffffe          BL       LISTVIEW__InvalidateInsideArea
00005a  e009              B        |L14.112|
                  |L14.92|
;;;175          } else {
;;;176            LISTVIEW__InvalidateRow(hObj, pObj, OldSel);
00005c  4652              MOV      r2,r10
00005e  4621              MOV      r1,r4
000060  4648              MOV      r0,r9
000062  f7fffffe          BL       LISTVIEW__InvalidateRow
;;;177            LISTVIEW__InvalidateRow(hObj, pObj, NewSel);
000066  462a              MOV      r2,r5
000068  4621              MOV      r1,r4
00006a  4648              MOV      r0,r9
00006c  f7fffffe          BL       LISTVIEW__InvalidateRow
                  |L14.112|
;;;178          }
;;;179          WM_NotifyParent(hObj, WM_NOTIFICATION_SEL_CHANGED);
000070  2104              MOVS     r1,#4
000072  4648              MOV      r0,r9
000074  f7fffffe          BL       WM_NotifyParent
;;;180        }
000078  bf00              NOP      
                  |L14.122|
;;;181      }
00007a  bf00              NOP      
                  |L14.124|
;;;182    }
00007c  e8bd87f0          POP      {r4-r10,pc}
;;;183    
                          ENDP


                          AREA ||i.LISTVIEW__UpdateScrollParas||, CODE, READONLY, ALIGN=1

                  LISTVIEW__UpdateScrollParas PROC
;;;580    */
;;;581    int LISTVIEW__UpdateScrollParas(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4681              MOV      r9,r0
000006  460c              MOV      r4,r1
;;;582      int NumRows, IsRequired;
;;;583      int xSize, xSizeHeader;
;;;584      unsigned NumVisibleRows;
;;;585      NumVisibleRows = _GetNumVisibleRows(hObj, pObj);
000008  4621              MOV      r1,r4
00000a  4648              MOV      r0,r9
00000c  f7fffffe          BL       _GetNumVisibleRows
000010  4680              MOV      r8,r0
;;;586      xSize          = _GetXSize(hObj);
000012  4648              MOV      r0,r9
000014  f7fffffe          BL       _GetXSize
000018  4606              MOV      r6,r0
;;;587      xSizeHeader    = _GetHeaderWidth(pObj);
00001a  4620              MOV      r0,r4
00001c  f7fffffe          BL       _GetHeaderWidth
000020  4607              MOV      r7,r0
;;;588      if (pObj->Flags & LISTVIEW_SF_AUTOSCROLLBAR_V) {
000022  f8940097          LDRB     r0,[r4,#0x97]
000026  f0100f02          TST      r0,#2
00002a  d00d              BEQ      |L15.72|
;;;589        IsRequired = (NumVisibleRows < GUI_ARRAY_GetNumItems(&pObj->RowArray));
00002c  f104002a          ADD      r0,r4,#0x2a
000030  f7fffffe          BL       GUI_ARRAY_GetNumItems
000034  4540              CMP      r0,r8
000036  d901              BLS      |L15.60|
000038  2001              MOVS     r0,#1
00003a  e000              B        |L15.62|
                  |L15.60|
00003c  2000              MOVS     r0,#0
                  |L15.62|
00003e  4682              MOV      r10,r0
;;;590        WM_SetScrollbarV(hObj, IsRequired);
000040  4651              MOV      r1,r10
000042  4648              MOV      r0,r9
000044  f7fffffe          BL       WM_SetScrollbarV
                  |L15.72|
;;;591      }
;;;592      if (pObj->Flags & LISTVIEW_SF_AUTOSCROLLBAR_H) {
000048  f8940097          LDRB     r0,[r4,#0x97]
00004c  f0100f01          TST      r0,#1
000050  d00e              BEQ      |L15.112|
;;;593        IsRequired  = (xSizeHeader > xSize);
000052  42b7              CMP      r7,r6
000054  dd01              BLE      |L15.90|
000056  2001              MOVS     r0,#1
000058  e000              B        |L15.92|
                  |L15.90|
00005a  2000              MOVS     r0,#0
                  |L15.92|
00005c  4682              MOV      r10,r0
;;;594        WM_SetScrollbarH(hObj, IsRequired);
00005e  4651              MOV      r1,r10
000060  4648              MOV      r0,r9
000062  f7fffffe          BL       WM_SetScrollbarH
;;;595        NumVisibleRows = _GetNumVisibleRows(hObj, pObj);
000066  4621              MOV      r1,r4
000068  4648              MOV      r0,r9
00006a  f7fffffe          BL       _GetNumVisibleRows
00006e  4680              MOV      r8,r0
                  |L15.112|
;;;596      }
;;;597      NumRows = LISTVIEW__GetNumRows(pObj);
000070  4620              MOV      r0,r4
000072  f7fffffe          BL       LISTVIEW__GetNumRows
000076  4605              MOV      r5,r0
;;;598      /* update vertical scrollbar */
;;;599      pObj->ScrollStateV.PageSize = NumVisibleRows;
000078  f8c48080          STR      r8,[r4,#0x80]
;;;600      pObj->ScrollStateV.NumItems = (NumRows) ? NumRows : 1;
00007c  b10d              CBZ      r5,|L15.130|
00007e  4628              MOV      r0,r5
000080  e000              B        |L15.132|
                  |L15.130|
000082  2001              MOVS     r0,#1
                  |L15.132|
000084  67a0              STR      r0,[r4,#0x78]
;;;601      /* update horizontal scrollbar */
;;;602      pObj->ScrollStateH.PageSize = xSize;
000086  208c              MOVS     r0,#0x8c
000088  5106              STR      r6,[r0,r4]
;;;603      pObj->ScrollStateH.NumItems = xSizeHeader;
00008a  f8c47084          STR      r7,[r4,#0x84]
;;;604      return LISTVIEW__UpdateScrollPos(hObj, pObj);
00008e  4621              MOV      r1,r4
000090  4648              MOV      r0,r9
000092  f7fffffe          BL       LISTVIEW__UpdateScrollPos
;;;605    }
000096  e8bd87f0          POP      {r4-r10,pc}
;;;606    
                          ENDP


                          AREA ||i.LISTVIEW__UpdateScrollPos||, CODE, READONLY, ALIGN=1

                  LISTVIEW__UpdateScrollPos PROC
;;;558    */
;;;559    int LISTVIEW__UpdateScrollPos(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;560      int PrevScrollStateV;
;;;561      PrevScrollStateV = pObj->ScrollStateV.v;
000006  6fe6              LDR      r6,[r4,#0x7c]
;;;562      if (pObj->Sel >= 0) {
000008  6e20              LDR      r0,[r4,#0x60]
00000a  2800              CMP      r0,#0
00000c  db07              BLT      |L16.30|
;;;563        WM_CheckScrollPos(&pObj->ScrollStateV, pObj->Sel, 0, 0);
00000e  2300              MOVS     r3,#0
000010  461a              MOV      r2,r3
000012  f1040078          ADD      r0,r4,#0x78
000016  6e21              LDR      r1,[r4,#0x60]
000018  f7fffffe          BL       WM_CheckScrollPos
00001c  e003              B        |L16.38|
                  |L16.30|
;;;564      } else {
;;;565        WM_CheckScrollBounds(&pObj->ScrollStateV);
00001e  f1040078          ADD      r0,r4,#0x78
000022  f7fffffe          BL       WM_CheckScrollBounds
                  |L16.38|
;;;566      }
;;;567      WM_CheckScrollBounds(&pObj->ScrollStateH);
000026  f1040084          ADD      r0,r4,#0x84
00002a  f7fffffe          BL       WM_CheckScrollBounds
;;;568      WIDGET__SetScrollState(hObj, &pObj->ScrollStateV, &pObj->ScrollStateH);
00002e  f1040284          ADD      r2,r4,#0x84
000032  f1040178          ADD      r1,r4,#0x78
000036  4628              MOV      r0,r5
000038  f7fffffe          BL       WIDGET__SetScrollState
;;;569      return pObj->ScrollStateV.v - PrevScrollStateV;
00003c  6fe0              LDR      r0,[r4,#0x7c]
00003e  1b80              SUBS     r0,r0,r6
;;;570    }
000040  bd70              POP      {r4-r6,pc}
;;;571    
                          ENDP


                          AREA ||i._AddKey||, CODE, READONLY, ALIGN=1

                  _AddKey PROC
;;;703    */
;;;704    static int _AddKey(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj, int Key) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
;;;705      switch (Key) {
00000a  2d17              CMP      r5,#0x17
00000c  d02f              BEQ      |L17.110|
00000e  dc08              BGT      |L17.34|
000010  2d10              CMP      r5,#0x10
000012  d052              BEQ      |L17.186|
000014  2d11              CMP      r5,#0x11
000016  d01a              BEQ      |L17.78|
000018  2d12              CMP      r5,#0x12
00001a  d03a              BEQ      |L17.146|
00001c  2d13              CMP      r5,#0x13
00001e  d160              BNE      |L17.226|
000020  e006              B        |L17.48|
                  |L17.34|
000022  2d18              CMP      r5,#0x18
000024  d02a              BEQ      |L17.124|
000026  2d21              CMP      r5,#0x21
000028  d019              BEQ      |L17.94|
00002a  2d22              CMP      r5,#0x22
00002c  d159              BNE      |L17.226|
00002e  e007              B        |L17.64|
                  |L17.48|
;;;706      case GUI_KEY_DOWN:
;;;707        LISTVIEW__MoveSel(hObj, pObj, 1);
000030  2201              MOVS     r2,#1
000032  4621              MOV      r1,r4
000034  4630              MOV      r0,r6
000036  f7fffffe          BL       LISTVIEW__MoveSel
;;;708        return 1;               /* Key has been consumed */
00003a  2001              MOVS     r0,#1
                  |L17.60|
;;;709      case GUI_KEY_PGDOWN:
;;;710        _OnPage(hObj, pObj, 1);
;;;711        return 1;               /* Key has been consumed */
;;;712      case GUI_KEY_UP:
;;;713        LISTVIEW__MoveSel(hObj, pObj, -1);
;;;714        return 1;               /* Key has been consumed */
;;;715      case GUI_KEY_PGUP:
;;;716        _OnPage(hObj, pObj, -1);
;;;717        return 1;               /* Key has been consumed */
;;;718      case GUI_KEY_HOME:
;;;719        LISTVIEW__SetSel(hObj, pObj, 0);
;;;720        return 1;               /* Key has been consumed */
;;;721      case GUI_KEY_END:
;;;722        LISTVIEW__SetSel(hObj, pObj, LISTVIEW__GetNumRows(pObj) - 1);
;;;723        return 1;               /* Key has been consumed */
;;;724      case GUI_KEY_RIGHT:
;;;725        if (WM_SetScrollValue(&pObj->ScrollStateH, pObj->ScrollStateH.v + pObj->Props.ScrollStepH)) {
;;;726          LISTVIEW__UpdateScrollPos(hObj, pObj);
;;;727          LISTVIEW__InvalidateInsideArea(hObj, pObj);
;;;728        }
;;;729        return 1;               /* Key has been consumed */
;;;730      case GUI_KEY_LEFT:
;;;731        if (WM_SetScrollValue(&pObj->ScrollStateH, pObj->ScrollStateH.v - pObj->Props.ScrollStepH)) {
;;;732          LISTVIEW__UpdateScrollPos(hObj, pObj);
;;;733          LISTVIEW__InvalidateInsideArea(hObj, pObj);
;;;734        }
;;;735        return 1;               /* Key has been consumed */
;;;736      }
;;;737      return 0;                 /* Key has NOT been consumed */
;;;738    }
00003c  e8bd81f0          POP      {r4-r8,pc}
                  |L17.64|
000040  2201              MOVS     r2,#1                 ;710
000042  4621              MOV      r1,r4                 ;710
000044  4630              MOV      r0,r6                 ;710
000046  f7fffffe          BL       _OnPage
00004a  2001              MOVS     r0,#1                 ;711
00004c  e7f6              B        |L17.60|
                  |L17.78|
00004e  f04f32ff          MOV      r2,#0xffffffff        ;713
000052  4621              MOV      r1,r4                 ;713
000054  4630              MOV      r0,r6                 ;713
000056  f7fffffe          BL       LISTVIEW__MoveSel
00005a  2001              MOVS     r0,#1                 ;714
00005c  e7ee              B        |L17.60|
                  |L17.94|
00005e  f04f32ff          MOV      r2,#0xffffffff        ;716
000062  4621              MOV      r1,r4                 ;716
000064  4630              MOV      r0,r6                 ;716
000066  f7fffffe          BL       _OnPage
00006a  2001              MOVS     r0,#1                 ;717
00006c  e7e6              B        |L17.60|
                  |L17.110|
00006e  2200              MOVS     r2,#0                 ;719
000070  4621              MOV      r1,r4                 ;719
000072  4630              MOV      r0,r6                 ;719
000074  f7fffffe          BL       LISTVIEW__SetSel
000078  2001              MOVS     r0,#1                 ;720
00007a  e7df              B        |L17.60|
                  |L17.124|
00007c  4620              MOV      r0,r4                 ;722
00007e  f7fffffe          BL       LISTVIEW__GetNumRows
000082  1e47              SUBS     r7,r0,#1              ;722
000084  463a              MOV      r2,r7                 ;722
000086  4621              MOV      r1,r4                 ;722
000088  4630              MOV      r0,r6                 ;722
00008a  f7fffffe          BL       LISTVIEW__SetSel
00008e  2001              MOVS     r0,#1                 ;723
000090  e7d4              B        |L17.60|
                  |L17.146|
000092  2088              MOVS     r0,#0x88              ;725
000094  5902              LDR      r2,[r0,r4]            ;725
000096  205c              MOVS     r0,#0x5c              ;725
000098  5b00              LDRH     r0,[r0,r4]            ;725
00009a  1811              ADDS     r1,r2,r0              ;725
00009c  f1040084          ADD      r0,r4,#0x84           ;725
0000a0  f7fffffe          BL       WM_SetScrollValue
0000a4  b138              CBZ      r0,|L17.182|
0000a6  4621              MOV      r1,r4                 ;726
0000a8  4630              MOV      r0,r6                 ;726
0000aa  f7fffffe          BL       LISTVIEW__UpdateScrollPos
0000ae  4621              MOV      r1,r4                 ;727
0000b0  4630              MOV      r0,r6                 ;727
0000b2  f7fffffe          BL       LISTVIEW__InvalidateInsideArea
                  |L17.182|
0000b6  2001              MOVS     r0,#1                 ;729
0000b8  e7c0              B        |L17.60|
                  |L17.186|
0000ba  2088              MOVS     r0,#0x88              ;731
0000bc  5902              LDR      r2,[r0,r4]            ;731
0000be  205c              MOVS     r0,#0x5c              ;731
0000c0  5b00              LDRH     r0,[r0,r4]            ;731
0000c2  1a11              SUBS     r1,r2,r0              ;731
0000c4  f1040084          ADD      r0,r4,#0x84           ;731
0000c8  f7fffffe          BL       WM_SetScrollValue
0000cc  b138              CBZ      r0,|L17.222|
0000ce  4621              MOV      r1,r4                 ;732
0000d0  4630              MOV      r0,r6                 ;732
0000d2  f7fffffe          BL       LISTVIEW__UpdateScrollPos
0000d6  4621              MOV      r1,r4                 ;733
0000d8  4630              MOV      r0,r6                 ;733
0000da  f7fffffe          BL       LISTVIEW__InvalidateInsideArea
                  |L17.222|
0000de  2001              MOVS     r0,#1                 ;735
0000e0  e7ac              B        |L17.60|
                  |L17.226|
0000e2  2000              MOVS     r0,#0                 ;737
0000e4  e7aa              B        |L17.60|
;;;739    
                          ENDP


                          AREA ||i._FreeAttached||, CODE, READONLY, ALIGN=1

                  _FreeAttached PROC
;;;613    */
;;;614    static void _FreeAttached(LISTVIEW_Obj * pObj) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4604              MOV      r4,r0
;;;615      int i, j, NumRows, NumColumns;
;;;616      NumRows    = LISTVIEW__GetNumRows(pObj);
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       LISTVIEW__GetNumRows
00000c  4680              MOV      r8,r0
;;;617      NumColumns = LISTVIEW__GetNumColumns(pObj);
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       LISTVIEW__GetNumColumns
000014  4681              MOV      r9,r0
;;;618      for (i = 0; i < NumRows; i++) {
000016  2500              MOVS     r5,#0
000018  e01a              B        |L18.80|
                  |L18.26|
;;;619        LISTVIEW_ROW* pRow;
;;;620        pRow = (LISTVIEW_ROW*) GUI_ARRAY_GetpItem(&pObj->RowArray, i);
00001a  4629              MOV      r1,r5
00001c  f104002a          ADD      r0,r4,#0x2a
000020  f7fffffe          BL       GUI_ARRAY_GetpItem
000024  4682              MOV      r10,r0
;;;621        /* Delete attached info items */
;;;622        for (j = 0; j < NumColumns; j++) {
000026  2600              MOVS     r6,#0
000028  e00c              B        |L18.68|
                  |L18.42|
;;;623          LISTVIEW_CELL* pCell;
;;;624          pCell = (LISTVIEW_CELL*) GUI_ARRAY_GetpItem(&pRow->CellArray, j);
00002a  4631              MOV      r1,r6
00002c  4650              MOV      r0,r10
00002e  f7fffffe          BL       GUI_ARRAY_GetpItem
000032  4607              MOV      r7,r0
;;;625          if (pCell) {
000034  b12f              CBZ      r7,|L18.66|
;;;626            if (pCell->hCellInfo) {
000036  8838              LDRH     r0,[r7,#0]
000038  b118              CBZ      r0,|L18.66|
;;;627              GUI_ALLOC_Free(pCell->hCellInfo);
00003a  f9b70000          LDRSH    r0,[r7,#0]
00003e  f7fffffe          BL       GUI_ALLOC_Free
                  |L18.66|
000042  1c76              ADDS     r6,r6,#1              ;622
                  |L18.68|
000044  454e              CMP      r6,r9                 ;622
000046  dbf0              BLT      |L18.42|
;;;628            }
;;;629          }
;;;630        }
;;;631        /* Delete row */
;;;632        GUI_ARRAY_Delete(&pRow->CellArray);
000048  4650              MOV      r0,r10
00004a  f7fffffe          BL       GUI_ARRAY_Delete
00004e  1c6d              ADDS     r5,r5,#1              ;618
                  |L18.80|
000050  4545              CMP      r5,r8                 ;618
000052  dbe2              BLT      |L18.26|
;;;633      }
;;;634      /* Delete sort object */
;;;635      if (pObj->hSort) {
000054  f8b40092          LDRH     r0,[r4,#0x92]
000058  b148              CBZ      r0,|L18.110|
;;;636        ((LISTVIEW_SORT *)GUI_ALLOC_h2p(pObj->hSort))->fpFree(pObj->hSort);
00005a  f9b40092          LDRSH    r0,[r4,#0x92]
00005e  f7fffffe          BL       GUI_ALLOC_h2p
000062  f9b47092          LDRSH    r7,[r4,#0x92]
000066  f8d0a008          LDR      r10,[r0,#8]
00006a  4638              MOV      r0,r7
00006c  47d0              BLX      r10
                  |L18.110|
;;;637      }
;;;638      GUI_ARRAY_Delete(&pObj->ColumnArray);
00006e  f104002e          ADD      r0,r4,#0x2e
000072  f7fffffe          BL       GUI_ARRAY_Delete
;;;639      GUI_ARRAY_Delete(&pObj->RowArray);
000076  f104002a          ADD      r0,r4,#0x2a
00007a  f7fffffe          BL       GUI_ARRAY_Delete
;;;640    }
00007e  e8bd87f0          POP      {r4-r10,pc}
;;;641    
                          ENDP


                          AREA ||i._GetHeaderWidth||, CODE, READONLY, ALIGN=1

                  _GetHeaderWidth PROC
;;;535    */
;;;536    static int _GetHeaderWidth(LISTVIEW_Obj * pObj) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4605              MOV      r5,r0
;;;537      int NumItems, i, r = 1;
000006  2701              MOVS     r7,#1
;;;538      NumItems = HEADER_GetNumItems(pObj->hHeader);
000008  f9b50028          LDRSH    r0,[r5,#0x28]
00000c  f7fffffe          BL       HEADER_GetNumItems
000010  4606              MOV      r6,r0
;;;539      if (NumItems) {
000012  b15e              CBZ      r6,|L19.44|
;;;540        for (i = 0, r = 0; i < NumItems; i++) {
000014  2400              MOVS     r4,#0
000016  2700              MOVS     r7,#0
000018  e006              B        |L19.40|
                  |L19.26|
;;;541          r += HEADER_GetItemWidth(pObj->hHeader, i);
00001a  f9b50028          LDRSH    r0,[r5,#0x28]
00001e  4621              MOV      r1,r4
000020  f7fffffe          BL       HEADER_GetItemWidth
000024  4407              ADD      r7,r7,r0
000026  1c64              ADDS     r4,r4,#1              ;540
                  |L19.40|
000028  42b4              CMP      r4,r6                 ;540
00002a  dbf6              BLT      |L19.26|
                  |L19.44|
;;;542        }
;;;543      }
;;;544      return r;
00002c  4638              MOV      r0,r7
;;;545    }
00002e  e8bd81f0          POP      {r4-r8,pc}
;;;546    
                          ENDP


                          AREA ||i._GetNumVisibleRows||, CODE, READONLY, ALIGN=1

                  _GetNumVisibleRows PROC
;;;238    */
;;;239    static unsigned _GetNumVisibleRows(LISTVIEW_Handle hObj, const LISTVIEW_Obj* pObj) {
000000  e92d41fc          PUSH     {r2-r8,lr}
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
;;;240      unsigned RowDistY, ySize, r = 1;
000008  2601              MOVS     r6,#1
;;;241      GUI_RECT Rect;
;;;242      WM_GetInsideRectExScrollbar(hObj, &Rect);
00000a  4669              MOV      r1,sp
00000c  4638              MOV      r0,r7
00000e  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;243      ySize    = Rect.y1 - Rect.y0 + 1 - HEADER_GetHeight(pObj->hHeader);
000012  f9b40028          LDRSH    r0,[r4,#0x28]
000016  f7fffffe          BL       HEADER_GetHeight
00001a  f9bd1006          LDRSH    r1,[sp,#6]
00001e  f9bd2002          LDRSH    r2,[sp,#2]
000022  1a89              SUBS     r1,r1,r2
000024  1c49              ADDS     r1,r1,#1
000026  eba10800          SUB      r8,r1,r0
;;;244      RowDistY = LISTVIEW__GetRowDistY(pObj);
00002a  4620              MOV      r0,r4
00002c  f7fffffe          BL       LISTVIEW__GetRowDistY
000030  4605              MOV      r5,r0
;;;245      if (RowDistY) {
000032  b135              CBZ      r5,|L20.66|
;;;246        r = ySize / RowDistY;
000034  fbb8f6f5          UDIV     r6,r8,r5
;;;247        r = (r == 0) ? 1 : r;
000038  b90e              CBNZ     r6,|L20.62|
00003a  2001              MOVS     r0,#1
00003c  e000              B        |L20.64|
                  |L20.62|
00003e  4630              MOV      r0,r6
                  |L20.64|
000040  4606              MOV      r6,r0
                  |L20.66|
;;;248      }
;;;249      return r;
000042  4630              MOV      r0,r6
;;;250    }
000044  e8bd81fc          POP      {r2-r8,pc}
;;;251    
                          ENDP


                          AREA ||i._GetXSize||, CODE, READONLY, ALIGN=1

                  _GetXSize PROC
;;;518    */
;;;519    static int _GetXSize(LISTVIEW_Handle hObj) {
000000  b51c              PUSH     {r2-r4,lr}
000002  4604              MOV      r4,r0
;;;520      GUI_RECT Rect;
;;;521      WM_GetInsideRectExScrollbar(hObj, &Rect);
000004  4669              MOV      r1,sp
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;522      return Rect.x1 - Rect.x0 + 1;
00000c  f9bd0004          LDRSH    r0,[sp,#4]
000010  f9bd1000          LDRSH    r1,[sp,#0]
000014  1a40              SUBS     r0,r0,r1
000016  1c40              ADDS     r0,r0,#1
;;;523    }
000018  bd1c              POP      {r2-r4,pc}
;;;524    
                          ENDP


                          AREA ||i._GetpRow||, CODE, READONLY, ALIGN=1

                  _GetpRow PROC
;;;255    */
;;;256    static LISTVIEW_ROW * _GetpRow(LISTVIEW_Obj * pObj, int Index) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;257      if (pObj->hSort && (pObj->SortIndex >= 0)) {
000008  f8b40092          LDRH     r0,[r4,#0x92]
00000c  b1c8              CBZ      r0,|L22.66|
00000e  6ea0              LDR      r0,[r4,#0x68]
000010  2800              CMP      r0,#0
000012  db16              BLT      |L22.66|
;;;258        LISTVIEW_SORT * pSort;
;;;259        SORT_TYPE * pData;
;;;260        pSort = (LISTVIEW_SORT *)GUI_ALLOC_h2p(pObj->hSort);
000014  f9b40092          LDRSH    r0,[r4,#0x92]
000018  f7fffffe          BL       GUI_ALLOC_h2p
00001c  4606              MOV      r6,r0
;;;261        pData = (SORT_TYPE *)GUI_ALLOC_h2p(pSort->hSortArray);
00001e  f9b60000          LDRSH    r0,[r6,#0]
000022  f7fffffe          BL       GUI_ALLOC_h2p
000026  4607              MOV      r7,r0
;;;262        if (Index >= pSort->SortArrayNumItems) {
000028  8870              LDRH     r0,[r6,#2]
00002a  42a8              CMP      r0,r5
00002c  dc02              BGT      |L22.52|
;;;263          return NULL;
00002e  2000              MOVS     r0,#0
                  |L22.48|
;;;264        }
;;;265        return (LISTVIEW_ROW *)GUI_ARRAY_GetpItem(&pObj->RowArray, *(pData + Index));
;;;266      } else {
;;;267        return (LISTVIEW_ROW *)GUI_ARRAY_GetpItem(&pObj->RowArray, Index);
;;;268      }
;;;269    }
000030  e8bd81f0          POP      {r4-r8,pc}
                  |L22.52|
000034  f8371015          LDRH     r1,[r7,r5,LSL #1]     ;265
000038  f104002a          ADD      r0,r4,#0x2a           ;265
00003c  f7fffffe          BL       GUI_ARRAY_GetpItem
000040  e7f6              B        |L22.48|
                  |L22.66|
000042  4629              MOV      r1,r5                 ;267
000044  f104002a          ADD      r0,r4,#0x2a           ;267
000048  f7fffffe          BL       GUI_ARRAY_GetpItem
00004c  e7f0              B        |L22.48|
;;;270    
                          ENDP


                          AREA ||i._NotifyOwner||, CODE, READONLY, ALIGN=1

                  _NotifyOwner PROC
;;;478    */
;;;479    static void _NotifyOwner(WM_HWIN hObj, int Notification) {
000000  b5fe              PUSH     {r1-r7,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;480      WM_MESSAGE Msg = {0};
000006  2000              MOVS     r0,#0
000008  9000              STR      r0,[sp,#0]
00000a  9001              STR      r0,[sp,#4]
00000c  9002              STR      r0,[sp,#8]
;;;481      WM_HWIN hOwner;
;;;482      LISTVIEW_Obj* pObj    = LISTVIEW_H2P(hObj);
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       GUI_ALLOC_h2p
000014  4606              MOV      r6,r0
;;;483      hOwner = pObj->hOwner ? pObj->hOwner : WM_GetParent(hObj);
000016  f8b60090          LDRH     r0,[r6,#0x90]
00001a  b110              CBZ      r0,|L23.34|
00001c  f9b60090          LDRSH    r0,[r6,#0x90]
000020  e002              B        |L23.40|
                  |L23.34|
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       WM_GetParent
                  |L23.40|
000028  4607              MOV      r7,r0
;;;484      Msg.MsgId   = WM_NOTIFY_PARENT;
00002a  2026              MOVS     r0,#0x26
00002c  9000              STR      r0,[sp,#0]
;;;485      Msg.Data.v  = Notification;
00002e  9502              STR      r5,[sp,#8]
;;;486      Msg.hWinSrc = hObj;
000030  f8ad4006          STRH     r4,[sp,#6]
;;;487      WM__SendMessage(hOwner, &Msg);
000034  4669              MOV      r1,sp
000036  4638              MOV      r0,r7
000038  f7fffffe          BL       WM__SendMessage
;;;488    }
00003c  bdfe              POP      {r1-r7,pc}
;;;489    
                          ENDP


                          AREA ||i._OnPage||, CODE, READONLY, ALIGN=1

                  _OnPage PROC
;;;658    */
;;;659    static void _OnPage(LISTVIEW_Handle hObj, LISTVIEW_Obj * pObj, int Dir) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4680              MOV      r8,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
;;;660      if (Dir < 0) {
00000a  2d00              CMP      r5,#0
00000c  da1c              BGE      |L24.72|
;;;661        /* Check if cursor is already on top row of the page */
;;;662        if (pObj->Sel != pObj->ScrollStateV.v) {
00000e  6e21              LDR      r1,[r4,#0x60]
000010  6fe0              LDR      r0,[r4,#0x7c]
000012  4281              CMP      r1,r0
000014  d005              BEQ      |L24.34|
;;;663          /* If not, set cursor on top row */
;;;664          LISTVIEW__SetSel(hObj, pObj, pObj->ScrollStateV.v);
000016  4621              MOV      r1,r4
000018  4640              MOV      r0,r8
00001a  6fe2              LDR      r2,[r4,#0x7c]
00001c  f7fffffe          BL       LISTVIEW__SetSel
000020  e039              B        |L24.150|
                  |L24.34|
;;;665        } else {
;;;666          /* Check if current selection is >= one page size */
;;;667          if (pObj->Sel >= pObj->ScrollStateV.PageSize) {
000022  2080              MOVS     r0,#0x80
000024  5900              LDR      r0,[r0,r4]
000026  6e21              LDR      r1,[r4,#0x60]
000028  4281              CMP      r1,r0
00002a  db07              BLT      |L24.60|
;;;668            /* Move selection one page up */
;;;669            LISTVIEW__MoveSel(hObj, pObj, -pObj->ScrollStateV.PageSize);
00002c  2080              MOVS     r0,#0x80
00002e  5900              LDR      r0,[r0,r4]
000030  4242              RSBS     r2,r0,#0
000032  4621              MOV      r1,r4
000034  4640              MOV      r0,r8
000036  f7fffffe          BL       LISTVIEW__MoveSel
00003a  e02c              B        |L24.150|
                  |L24.60|
;;;670          } else {
;;;671            /* Set selection on top row */
;;;672            LISTVIEW__SetSel(hObj, pObj, 0);
00003c  2200              MOVS     r2,#0
00003e  4621              MOV      r1,r4
000040  4640              MOV      r0,r8
000042  f7fffffe          BL       LISTVIEW__SetSel
000046  e026              B        |L24.150|
                  |L24.72|
;;;673          }
;;;674        }
;;;675      } else {
;;;676        int Pos;
;;;677        /* Check if cursor is already on bottom row of the page */
;;;678        Pos = pObj->ScrollStateV.v + pObj->ScrollStateV.PageSize - 1;
000048  2080              MOVS     r0,#0x80
00004a  5900              LDR      r0,[r0,r4]
00004c  6fe1              LDR      r1,[r4,#0x7c]
00004e  4408              ADD      r0,r0,r1
000050  1e46              SUBS     r6,r0,#1
;;;679        if (pObj->Sel != Pos) {
000052  6e20              LDR      r0,[r4,#0x60]
000054  42b0              CMP      r0,r6
000056  d005              BEQ      |L24.100|
;;;680          /* If not, set cursor on bottom row */
;;;681          LISTVIEW__SetSel(hObj, pObj, Pos);
000058  4632              MOV      r2,r6
00005a  4621              MOV      r1,r4
00005c  4640              MOV      r0,r8
00005e  f7fffffe          BL       LISTVIEW__SetSel
000062  e017              B        |L24.148|
                  |L24.100|
;;;682        } else {
;;;683          int NumItems;
;;;684          /* Check if current selection is <= (NumItems - PageSize - 1) */
;;;685          NumItems = LISTVIEW__GetNumRows(pObj);
000064  4620              MOV      r0,r4
000066  f7fffffe          BL       LISTVIEW__GetNumRows
00006a  4607              MOV      r7,r0
;;;686          if (pObj->Sel < (NumItems - pObj->ScrollStateV.PageSize - 1)) {
00006c  2080              MOVS     r0,#0x80
00006e  5900              LDR      r0,[r0,r4]
000070  1a38              SUBS     r0,r7,r0
000072  1e40              SUBS     r0,r0,#1
000074  6e21              LDR      r1,[r4,#0x60]
000076  4281              CMP      r1,r0
000078  da06              BGE      |L24.136|
;;;687            /* Move selection one page down */
;;;688            LISTVIEW__MoveSel(hObj, pObj, pObj->ScrollStateV.PageSize);
00007a  2080              MOVS     r0,#0x80
00007c  5902              LDR      r2,[r0,r4]
00007e  4621              MOV      r1,r4
000080  4640              MOV      r0,r8
000082  f7fffffe          BL       LISTVIEW__MoveSel
000086  e004              B        |L24.146|
                  |L24.136|
;;;689          } else {
;;;690            /* Set selection on bottom row */
;;;691            LISTVIEW__SetSel(hObj, pObj, NumItems - 1);
000088  1e7a              SUBS     r2,r7,#1
00008a  4621              MOV      r1,r4
00008c  4640              MOV      r0,r8
00008e  f7fffffe          BL       LISTVIEW__SetSel
                  |L24.146|
;;;692          }
;;;693        }
000092  bf00              NOP      
                  |L24.148|
;;;694      }
000094  bf00              NOP      
                  |L24.150|
;;;695    }
000096  e8bd81f0          POP      {r4-r8,pc}
;;;696    
                          ENDP


                          AREA ||i._OnTouch||, CODE, READONLY, ALIGN=1

                  _OnTouch PROC
;;;493    */
;;;494    static void _OnTouch(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj, WM_MESSAGE*pMsg) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4680              MOV      r8,r0
000006  460e              MOV      r6,r1
000008  4615              MOV      r5,r2
;;;495      int Notification;
;;;496      const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
00000a  68af              LDR      r7,[r5,#8]
;;;497      GUI_USE_PARA(pObj);
00000c  bf00              NOP      
;;;498      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
00000e  68a8              LDR      r0,[r5,#8]
000010  b168              CBZ      r0,|L25.46|
;;;499        if (pState->Pressed) {
000012  7a38              LDRB     r0,[r7,#8]
000014  b148              CBZ      r0,|L25.42|
;;;500          _SetSelFromPos(hObj, pObj, pState);
000016  463a              MOV      r2,r7
000018  4631              MOV      r1,r6
00001a  4640              MOV      r0,r8
00001c  f7fffffe          BL       _SetSelFromPos
;;;501          Notification = WM_NOTIFICATION_CLICKED;
000020  2401              MOVS     r4,#1
;;;502          WM_SetFocus(hObj);
000022  4640              MOV      r0,r8
000024  f7fffffe          BL       WM_SetFocus
000028  e002              B        |L25.48|
                  |L25.42|
;;;503        } else {
;;;504          Notification = WM_NOTIFICATION_RELEASED;
00002a  2402              MOVS     r4,#2
00002c  e000              B        |L25.48|
                  |L25.46|
;;;505        }
;;;506      } else {
;;;507        Notification = WM_NOTIFICATION_MOVED_OUT;
00002e  2403              MOVS     r4,#3
                  |L25.48|
;;;508      }
;;;509      _NotifyOwner(hObj, Notification);
000030  4621              MOV      r1,r4
000032  4640              MOV      r0,r8
000034  f7fffffe          BL       _NotifyOwner
;;;510    }
000038  e8bd81f0          POP      {r4-r8,pc}
;;;511    
                          ENDP


                          AREA ||i._Paint||, CODE, READONLY, ALIGN=1

                  _Paint PROC
;;;274    */
;;;275    static void _Paint(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj, WM_MESSAGE* pMsg) {
000000  e92d4ff7          PUSH     {r0-r2,r4-r11,lr}
000004  b090              SUB      sp,sp,#0x40
000006  460c              MOV      r4,r1
;;;276      const LISTVIEW_ROW* pRow;
;;;277      GUI_RECT ClipRect, Rect;
;;;278      int NumRows, NumVisRows, NumColumns;
;;;279      int LBorder, RBorder, EffectSize;
;;;280      int xPos, yPos, Width, RowDistY;
;;;281      int Align, i, j, EndRow;
;;;282      /* Init some values */
;;;283      NumColumns = LISTVIEW__GetNumColumns(pObj);
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       LISTVIEW__GetNumColumns
00000e  9009              STR      r0,[sp,#0x24]
;;;284      NumRows    = LISTVIEW__GetNumRows(pObj);
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       LISTVIEW__GetNumRows
000016  900b              STR      r0,[sp,#0x2c]
;;;285      NumVisRows = _GetNumVisibleRows(hObj, pObj);
000018  4621              MOV      r1,r4
00001a  9810              LDR      r0,[sp,#0x40]
00001c  f7fffffe          BL       _GetNumVisibleRows
000020  900a              STR      r0,[sp,#0x28]
;;;286      RowDistY   = LISTVIEW__GetRowDistY(pObj);
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       LISTVIEW__GetRowDistY
000028  9005              STR      r0,[sp,#0x14]
;;;287      LBorder    = pObj->LBorder;
00002a  6f20              LDR      r0,[r4,#0x70]
00002c  9008              STR      r0,[sp,#0x20]
;;;288      RBorder    = pObj->RBorder;
00002e  6f60              LDR      r0,[r4,#0x74]
000030  9007              STR      r0,[sp,#0x1c]
;;;289      EffectSize = pObj->Widget.pEffect->EffectSize;
000032  6a20              LDR      r0,[r4,#0x20]
000034  f8d0b014          LDR      r11,[r0,#0x14]
;;;290      yPos       = HEADER_GetHeight(pObj->hHeader) + EffectSize;
000038  f9b40028          LDRSH    r0,[r4,#0x28]
00003c  f7fffffe          BL       HEADER_GetHeight
000040  eb00050b          ADD      r5,r0,r11
;;;291      /* Calculate clipping rectangle */
;;;292      ClipRect = *(const GUI_RECT*)pMsg->Data.p;
000044  9812              LDR      r0,[sp,#0x48]
000046  6880              LDR      r0,[r0,#8]
000048  6801              LDR      r1,[r0,#0]
00004a  910e              STR      r1,[sp,#0x38]
00004c  6840              LDR      r0,[r0,#4]
00004e  900f              STR      r0,[sp,#0x3c]
;;;293      GUI_MoveRect(&ClipRect, -pObj->Widget.Win.Rect.x0, -pObj->Widget.Win.Rect.y0);
000050  f9b40002          LDRSH    r0,[r4,#2]
000054  4242              RSBS     r2,r0,#0
000056  f9b40000          LDRSH    r0,[r4,#0]
00005a  4241              RSBS     r1,r0,#0
00005c  a80e              ADD      r0,sp,#0x38
00005e  f7fffffe          BL       GUI_MoveRect
;;;294      WM_GetInsideRectExScrollbar(hObj, &Rect);
000062  a90c              ADD      r1,sp,#0x30
000064  9810              LDR      r0,[sp,#0x40]
000066  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;295      GUI__IntersectRect(&ClipRect, &Rect);
00006a  a90c              ADD      r1,sp,#0x30
00006c  a80e              ADD      r0,sp,#0x38
00006e  f7fffffe          BL       GUI__IntersectRect
;;;296      /* Set drawing color, font and text mode */
;;;297      LCD_SetColor(pObj->Props.aTextColor[0]);
000072  6c60              LDR      r0,[r4,#0x44]
000074  f7fffffe          BL       LCD_SetColor
;;;298      GUI_SetFont(pObj->Props.pFont);
000078  6da0              LDR      r0,[r4,#0x58]
00007a  f7fffffe          BL       GUI_SetFont
;;;299      GUI_SetTextMode(GUI_TM_TRANS);
00007e  2002              MOVS     r0,#2
000080  f7fffffe          BL       GUI_SetTextMode
;;;300      /* Sort before drawing, because scroll position may change */
;;;301      if (pObj->hSort && (pObj->SortIndex >= 0)) {
000084  f8b40092          LDRH     r0,[r4,#0x92]
000088  b180              CBZ      r0,|L26.172|
00008a  6ea0              LDR      r0,[r4,#0x68]
00008c  2800              CMP      r0,#0
00008e  db0d              BLT      |L26.172|
;;;302        LISTVIEW_SORT * pSort;
;;;303        pSort = (LISTVIEW_SORT *)GUI_ALLOC_h2p(pObj->hSort);
000090  f9b40092          LDRSH    r0,[r4,#0x92]
000094  f7fffffe          BL       GUI_ALLOC_h2p
000098  4680              MOV      r8,r0
;;;304        if (pSort->fpSort(hObj)) {
00009a  f8d81004          LDR      r1,[r8,#4]
00009e  9810              LDR      r0,[sp,#0x40]
0000a0  4788              BLX      r1
0000a2  b110              CBZ      r0,|L26.170|
                  |L26.164|
;;;305          return; /* Return on error */
;;;306        }
;;;307      }
;;;308      /* Calculate end row after sorting, because scroll position may have changed */
;;;309      EndRow = pObj->ScrollStateV.v + (((NumVisRows + 1) > NumRows) ? NumRows : NumVisRows + 1);
;;;310      /* Do the drawing */
;;;311      for (i = pObj->ScrollStateV.v; i < EndRow; i++) {
;;;312        pRow = _GetpRow(pObj, i);
;;;313        if (pRow) {
;;;314          Rect.y0 = yPos;
;;;315          /* Break when all other rows are outside the drawing area */
;;;316          if (Rect.y0 > ClipRect.y1) {
;;;317            break;
;;;318          }
;;;319          Rect.y1 = yPos + RowDistY - 1;
;;;320          /* Make sure that we draw only when row is in drawing area */
;;;321          if (Rect.y1 >= ClipRect.y0) {
;;;322            int ColorIndex;
;;;323            /* Set background color */
;;;324            if (pRow->Disabled) {
;;;325              ColorIndex = LISTVIEW_CI_DISABLED;
;;;326            } else if (i == pObj->Sel) {
;;;327              ColorIndex = (pObj->Widget.State & WIDGET_STATE_FOCUS) ? LISTVIEW_CI_SELFOCUS : LISTVIEW_CI_SEL;
;;;328            } else {
;;;329              ColorIndex = LISTVIEW_CI_UNSEL;
;;;330            }
;;;331            LCD_SetBkColor(pObj->Props.aBkColor[ColorIndex]);
;;;332            /* Iterate over all columns */
;;;333            if (pObj->ShowGrid) {
;;;334              Rect.y1--;
;;;335            }
;;;336            xPos = EffectSize - pObj->ScrollStateH.v;
;;;337            for (j = 0; j < NumColumns; j++) {
;;;338              Width   = HEADER_GetItemWidth(pObj->hHeader, j);
;;;339              Rect.x0 = xPos;
;;;340              /* Break when all other columns are outside the drawing area */
;;;341              if (Rect.x0 > ClipRect.x1) {
;;;342                break;
;;;343              }
;;;344              Rect.x1 = xPos + Width - 1;
;;;345              /* Make sure that we draw only when column is in drawing area */
;;;346              if (Rect.x1 >= ClipRect.x0) {
;;;347                LISTVIEW_COLUMN* pColumn;
;;;348                LISTVIEW_CELL* pCell;
;;;349                pCell = (LISTVIEW_CELL*)GUI_ARRAY_GetpItem(&pRow->CellArray, j);
;;;350                if (pCell) {
;;;351                  if (pCell->hCellInfo) {
;;;352                    LISTVIEW_CELL_INFO* pCellInfo;
;;;353                    pCellInfo = (LISTVIEW_CELL_INFO*) GUI_ALLOC_h2p(pCell->hCellInfo);
;;;354                    LCD_SetBkColor(pCellInfo->aBkColor[ColorIndex]);
;;;355                    LCD_SetColor(pCellInfo->aTextColor[ColorIndex]);
;;;356                  } else {
;;;357                    LCD_SetColor(pObj->Props.aTextColor[ColorIndex]);
;;;358                  }
;;;359                  /* Clear background */
;;;360                  GUI_ClearRect(Rect.x0, Rect.y0, Rect.x1, Rect.y1);
;;;361                  /* Draw text */
;;;362                  Rect.x0 += LBorder;
;;;363                  Rect.x1 -= RBorder;
;;;364                  pColumn = (LISTVIEW_COLUMN*) GUI_ARRAY_GetpItem(&pObj->ColumnArray, j);
;;;365                  Align = pColumn->Align;
;;;366                  GUI_DispStringInRect(pCell->acText, &Rect, Align);
;;;367                  if (pCell->hCellInfo) {
;;;368                    LCD_SetBkColor(pObj->Props.aBkColor[ColorIndex]);
;;;369                  }
;;;370                }
;;;371              }
;;;372              xPos += Width;
;;;373            }
;;;374            /* Clear unused area to the right of items */
;;;375            if (xPos <= ClipRect.x1) {
;;;376              GUI_ClearRect(xPos, Rect.y0, ClipRect.x1, Rect.y1);
;;;377            }
;;;378          }
;;;379          yPos += RowDistY;
;;;380        }
;;;381      }
;;;382      /* Clear unused area below items */
;;;383      if (yPos <= ClipRect.y1) {
;;;384        LCD_SetBkColor(pObj->Props.aBkColor[0]);
;;;385        GUI_ClearRect(ClipRect.x0, yPos, ClipRect.x1, ClipRect.y1);
;;;386      }
;;;387      /* Draw grid */
;;;388      if (pObj->ShowGrid) {
;;;389        LCD_SetColor(pObj->Props.GridColor);
;;;390        yPos = HEADER_GetHeight(pObj->hHeader) + EffectSize - 1;
;;;391        for (i = 0; i < NumVisRows; i++) {
;;;392          yPos += RowDistY;
;;;393          /* Break when all other rows are outside the drawing area */
;;;394          if (yPos > ClipRect.y1) {
;;;395            break;
;;;396          }
;;;397          /* Make sure that we draw only when row is in drawing area */
;;;398          if (yPos >= ClipRect.y0) {
;;;399            GUI_DrawHLine(yPos, ClipRect.x0, ClipRect.x1);
;;;400          }
;;;401        }
;;;402        xPos = EffectSize - pObj->ScrollStateH.v;
;;;403        for (i = 0; i < NumColumns; i++) {
;;;404          xPos += HEADER_GetItemWidth(pObj->hHeader, i);
;;;405          /* Break when all other columns are outside the drawing area */
;;;406          if (xPos > ClipRect.x1) {
;;;407            break;
;;;408          }
;;;409          /* Make sure that we draw only when column is in drawing area */
;;;410          if (xPos >= ClipRect.x0) {
;;;411            GUI_DrawVLine(xPos, ClipRect.y0, ClipRect.y1);
;;;412          }
;;;413        }
;;;414      }
;;;415      /* Draw the effect */
;;;416      WIDGET__EFFECT_DrawDown(&pObj->Widget);
;;;417    }
0000a4  b013              ADD      sp,sp,#0x4c
0000a6  e8bd8ff0          POP      {r4-r11,pc}
                  |L26.170|
0000aa  bf00              NOP                            ;307
                  |L26.172|
0000ac  6fe2              LDR      r2,[r4,#0x7c]         ;309
0000ae  980a              LDR      r0,[sp,#0x28]         ;309
0000b0  1c40              ADDS     r0,r0,#1              ;309
0000b2  990b              LDR      r1,[sp,#0x2c]         ;309
0000b4  4288              CMP      r0,r1                 ;309
0000b6  dd01              BLE      |L26.188|
0000b8  980b              LDR      r0,[sp,#0x2c]         ;309
0000ba  e001              B        |L26.192|
                  |L26.188|
0000bc  980a              LDR      r0,[sp,#0x28]         ;309
0000be  1c40              ADDS     r0,r0,#1              ;309
                  |L26.192|
0000c0  4410              ADD      r0,r0,r2              ;309
0000c2  9002              STR      r0,[sp,#8]            ;309
0000c4  6fe6              LDR      r6,[r4,#0x7c]         ;311
0000c6  e0d4              B        |L26.626|
                  |L26.200|
0000c8  4631              MOV      r1,r6                 ;312
0000ca  4620              MOV      r0,r4                 ;312
0000cc  f7fffffe          BL       _GetpRow
0000d0  4682              MOV      r10,r0                ;312
0000d2  f1ba0f00          CMP      r10,#0                ;313
0000d6  d077              BEQ      |L26.456|
0000d8  b228              SXTH     r0,r5                 ;314
0000da  f8ad0032          STRH     r0,[sp,#0x32]         ;314
0000de  f9bd0032          LDRSH    r0,[sp,#0x32]         ;316
0000e2  f9bd103e          LDRSH    r1,[sp,#0x3e]         ;316
0000e6  4288              CMP      r0,r1                 ;316
0000e8  dd00              BLE      |L26.236|
0000ea  e0c6              B        |L26.634|
                  |L26.236|
0000ec  9805              LDR      r0,[sp,#0x14]         ;319
0000ee  4428              ADD      r0,r0,r5              ;319
0000f0  1e40              SUBS     r0,r0,#1              ;319
0000f2  b200              SXTH     r0,r0                 ;319
0000f4  f8ad0036          STRH     r0,[sp,#0x36]         ;319
0000f8  f9bd0036          LDRSH    r0,[sp,#0x36]         ;321
0000fc  f9bd103a          LDRSH    r1,[sp,#0x3a]         ;321
000100  4288              CMP      r0,r1                 ;321
000102  db7d              BLT      |L26.512|
000104  f89a0004          LDRB     r0,[r10,#4]           ;324
000108  b110              CBZ      r0,|L26.272|
00010a  f04f0803          MOV      r8,#3                 ;325
00010e  e00e              B        |L26.302|
                  |L26.272|
000110  6e20              LDR      r0,[r4,#0x60]         ;326
000112  42b0              CMP      r0,r6                 ;326
000114  d109              BNE      |L26.298|
000116  f8940026          LDRB     r0,[r4,#0x26]         ;327
00011a  f0100f01          TST      r0,#1                 ;327
00011e  d001              BEQ      |L26.292|
000120  2002              MOVS     r0,#2                 ;327
000122  e000              B        |L26.294|
                  |L26.292|
000124  2001              MOVS     r0,#1                 ;327
                  |L26.294|
000126  4680              MOV      r8,r0                 ;327
000128  e001              B        |L26.302|
                  |L26.298|
00012a  f04f0800          MOV      r8,#0                 ;329
                  |L26.302|
00012e  f1040134          ADD      r1,r4,#0x34           ;331
000132  f8510028          LDR      r0,[r1,r8,LSL #2]     ;331
000136  f7fffffe          BL       LCD_SetBkColor
00013a  6e60              LDR      r0,[r4,#0x64]         ;333
00013c  b128              CBZ      r0,|L26.330|
00013e  f8bd0036          LDRH     r0,[sp,#0x36]         ;334
000142  1e40              SUBS     r0,r0,#1              ;334
000144  b200              SXTH     r0,r0                 ;334
000146  f8ad0036          STRH     r0,[sp,#0x36]         ;334
                  |L26.330|
00014a  2088              MOVS     r0,#0x88              ;336
00014c  5900              LDR      r0,[r0,r4]            ;336
00014e  ebab0700          SUB      r7,r11,r0             ;336
000152  2000              MOVS     r0,#0                 ;337
000154  9003              STR      r0,[sp,#0xc]          ;337
000156  e076              B        |L26.582|
                  |L26.344|
000158  f9b40028          LDRSH    r0,[r4,#0x28]         ;338
00015c  9903              LDR      r1,[sp,#0xc]          ;338
00015e  f7fffffe          BL       HEADER_GetItemWidth
000162  9006              STR      r0,[sp,#0x18]         ;338
000164  b238              SXTH     r0,r7                 ;339
000166  f8ad0030          STRH     r0,[sp,#0x30]         ;339
00016a  f9bd0030          LDRSH    r0,[sp,#0x30]         ;341
00016e  f9bd103c          LDRSH    r1,[sp,#0x3c]         ;341
000172  4288              CMP      r0,r1                 ;341
000174  dd00              BLE      |L26.376|
000176  e06a              B        |L26.590|
                  |L26.376|
000178  9806              LDR      r0,[sp,#0x18]         ;344
00017a  4438              ADD      r0,r0,r7              ;344
00017c  1e40              SUBS     r0,r0,#1              ;344
00017e  b200              SXTH     r0,r0                 ;344
000180  f8ad0034          STRH     r0,[sp,#0x34]         ;344
000184  f9bd0034          LDRSH    r0,[sp,#0x34]         ;346
000188  f9bd1038          LDRSH    r1,[sp,#0x38]         ;346
00018c  4288              CMP      r0,r1                 ;346
00018e  db55              BLT      |L26.572|
000190  4650              MOV      r0,r10                ;349
000192  9903              LDR      r1,[sp,#0xc]          ;349
000194  f7fffffe          BL       GUI_ARRAY_GetpItem
000198  4681              MOV      r9,r0                 ;349
00019a  f1b90f00          CMP      r9,#0                 ;350
00019e  d04c              BEQ      |L26.570|
0001a0  f8b90000          LDRH     r0,[r9,#0]            ;351
0001a4  b188              CBZ      r0,|L26.458|
0001a6  f9b90000          LDRSH    r0,[r9,#0]            ;353
0001aa  f7fffffe          BL       GUI_ALLOC_h2p
0001ae  9000              STR      r0,[sp,#0]            ;353
0001b0  9900              LDR      r1,[sp,#0]            ;354
0001b2  f8510028          LDR      r0,[r1,r8,LSL #2]     ;354
0001b6  f7fffffe          BL       LCD_SetBkColor
0001ba  9900              LDR      r1,[sp,#0]            ;355
0001bc  3110              ADDS     r1,r1,#0x10           ;355
0001be  f8510028          LDR      r0,[r1,r8,LSL #2]     ;355
0001c2  f7fffffe          BL       LCD_SetColor
0001c6  e006              B        |L26.470|
                  |L26.456|
0001c8  e052              B        |L26.624|
                  |L26.458|
0001ca  f1040144          ADD      r1,r4,#0x44           ;357
0001ce  f8510028          LDR      r0,[r1,r8,LSL #2]     ;357
0001d2  f7fffffe          BL       LCD_SetColor
                  |L26.470|
0001d6  f9bd3036          LDRSH    r3,[sp,#0x36]         ;360
0001da  f9bd2034          LDRSH    r2,[sp,#0x34]         ;360
0001de  f9bd1032          LDRSH    r1,[sp,#0x32]         ;360
0001e2  f9bd0030          LDRSH    r0,[sp,#0x30]         ;360
0001e6  f7fffffe          BL       GUI_ClearRect
0001ea  f8bd1030          LDRH     r1,[sp,#0x30]         ;362
0001ee  9808              LDR      r0,[sp,#0x20]         ;362
0001f0  4408              ADD      r0,r0,r1              ;362
0001f2  b200              SXTH     r0,r0                 ;362
0001f4  f8ad0030          STRH     r0,[sp,#0x30]         ;362
0001f8  f8bd1034          LDRH     r1,[sp,#0x34]         ;363
0001fc  9807              LDR      r0,[sp,#0x1c]         ;363
0001fe  e000              B        |L26.514|
                  |L26.512|
000200  e034              B        |L26.620|
                  |L26.514|
000202  1a08              SUBS     r0,r1,r0              ;363
000204  b200              SXTH     r0,r0                 ;363
000206  f8ad0034          STRH     r0,[sp,#0x34]         ;363
00020a  f104002e          ADD      r0,r4,#0x2e           ;364
00020e  9903              LDR      r1,[sp,#0xc]          ;364
000210  f7fffffe          BL       GUI_ARRAY_GetpItem
000214  9001              STR      r0,[sp,#4]            ;364
000216  9801              LDR      r0,[sp,#4]            ;365
000218  7800              LDRB     r0,[r0,#0]            ;365
00021a  9004              STR      r0,[sp,#0x10]         ;365
00021c  a90c              ADD      r1,sp,#0x30           ;366
00021e  f1090002          ADD      r0,r9,#2              ;366
000222  9a04              LDR      r2,[sp,#0x10]         ;366
000224  f7fffffe          BL       GUI_DispStringInRect
000228  f8b90000          LDRH     r0,[r9,#0]            ;367
00022c  b128              CBZ      r0,|L26.570|
00022e  f1040134          ADD      r1,r4,#0x34           ;368
000232  f8510028          LDR      r0,[r1,r8,LSL #2]     ;368
000236  f7fffffe          BL       LCD_SetBkColor
                  |L26.570|
00023a  bf00              NOP                            ;371
                  |L26.572|
00023c  9806              LDR      r0,[sp,#0x18]         ;372
00023e  4407              ADD      r7,r7,r0              ;372
000240  9803              LDR      r0,[sp,#0xc]          ;337
000242  1c40              ADDS     r0,r0,#1              ;337
000244  9003              STR      r0,[sp,#0xc]          ;337
                  |L26.582|
000246  9909              LDR      r1,[sp,#0x24]         ;337
000248  9803              LDR      r0,[sp,#0xc]          ;337
00024a  4288              CMP      r0,r1                 ;337
00024c  db84              BLT      |L26.344|
                  |L26.590|
00024e  bf00              NOP                            ;342
000250  f9bd003c          LDRSH    r0,[sp,#0x3c]         ;375
000254  42b8              CMP      r0,r7                 ;375
000256  db08              BLT      |L26.618|
000258  f9bd3036          LDRSH    r3,[sp,#0x36]         ;376
00025c  f9bd203c          LDRSH    r2,[sp,#0x3c]         ;376
000260  f9bd1032          LDRSH    r1,[sp,#0x32]         ;376
000264  4638              MOV      r0,r7                 ;376
000266  f7fffffe          BL       GUI_ClearRect
                  |L26.618|
00026a  bf00              NOP                            ;378
                  |L26.620|
00026c  9805              LDR      r0,[sp,#0x14]         ;379
00026e  4405              ADD      r5,r5,r0              ;379
                  |L26.624|
000270  1c76              ADDS     r6,r6,#1              ;311
                  |L26.626|
000272  9802              LDR      r0,[sp,#8]            ;311
000274  4286              CMP      r6,r0                 ;311
000276  f6ffaf27          BLT      |L26.200|
                  |L26.634|
00027a  bf00              NOP                            ;317
00027c  f9bd003e          LDRSH    r0,[sp,#0x3e]         ;383
000280  42a8              CMP      r0,r5                 ;383
000282  db0b              BLT      |L26.668|
000284  6b60              LDR      r0,[r4,#0x34]         ;384
000286  f7fffffe          BL       LCD_SetBkColor
00028a  f9bd303e          LDRSH    r3,[sp,#0x3e]         ;385
00028e  f9bd203c          LDRSH    r2,[sp,#0x3c]         ;385
000292  f9bd0038          LDRSH    r0,[sp,#0x38]         ;385
000296  4629              MOV      r1,r5                 ;385
000298  f7fffffe          BL       GUI_ClearRect
                  |L26.668|
00029c  6e60              LDR      r0,[r4,#0x64]         ;388
00029e  b390              CBZ      r0,|L26.774|
0002a0  6d60              LDR      r0,[r4,#0x54]         ;389
0002a2  f7fffffe          BL       LCD_SetColor
0002a6  f9b40028          LDRSH    r0,[r4,#0x28]         ;390
0002aa  f7fffffe          BL       HEADER_GetHeight
0002ae  4458              ADD      r0,r0,r11             ;390
0002b0  1e45              SUBS     r5,r0,#1              ;390
0002b2  2600              MOVS     r6,#0                 ;391
0002b4  e012              B        |L26.732|
                  |L26.694|
0002b6  9805              LDR      r0,[sp,#0x14]         ;392
0002b8  4405              ADD      r5,r5,r0              ;392
0002ba  f9bd003e          LDRSH    r0,[sp,#0x3e]         ;394
0002be  42a8              CMP      r0,r5                 ;394
0002c0  da00              BGE      |L26.708|
0002c2  e00e              B        |L26.738|
                  |L26.708|
0002c4  f9bd003a          LDRSH    r0,[sp,#0x3a]         ;398
0002c8  42a8              CMP      r0,r5                 ;398
0002ca  dc06              BGT      |L26.730|
0002cc  f9bd203c          LDRSH    r2,[sp,#0x3c]         ;399
0002d0  f9bd1038          LDRSH    r1,[sp,#0x38]         ;399
0002d4  4628              MOV      r0,r5                 ;399
0002d6  f7fffffe          BL       GUI_DrawHLine
                  |L26.730|
0002da  1c76              ADDS     r6,r6,#1              ;391
                  |L26.732|
0002dc  980a              LDR      r0,[sp,#0x28]         ;391
0002de  4286              CMP      r6,r0                 ;391
0002e0  dbe9              BLT      |L26.694|
                  |L26.738|
0002e2  bf00              NOP                            ;395
0002e4  2088              MOVS     r0,#0x88              ;402
0002e6  5900              LDR      r0,[r0,r4]            ;402
0002e8  ebab0700          SUB      r7,r11,r0             ;402
0002ec  2600              MOVS     r6,#0                 ;403
0002ee  e017              B        |L26.800|
                  |L26.752|
0002f0  f9b40028          LDRSH    r0,[r4,#0x28]         ;404
0002f4  4631              MOV      r1,r6                 ;404
0002f6  f7fffffe          BL       HEADER_GetItemWidth
0002fa  4407              ADD      r7,r7,r0              ;404
0002fc  f9bd003c          LDRSH    r0,[sp,#0x3c]         ;406
000300  42b8              CMP      r0,r7                 ;406
000302  da01              BGE      |L26.776|
000304  e00f              B        |L26.806|
                  |L26.774|
000306  e00f              B        |L26.808|
                  |L26.776|
000308  f9bd0038          LDRSH    r0,[sp,#0x38]         ;410
00030c  42b8              CMP      r0,r7                 ;410
00030e  dc06              BGT      |L26.798|
000310  f9bd203e          LDRSH    r2,[sp,#0x3e]         ;411
000314  f9bd103a          LDRSH    r1,[sp,#0x3a]         ;411
000318  4638              MOV      r0,r7                 ;411
00031a  f7fffffe          BL       GUI_DrawVLine
                  |L26.798|
00031e  1c76              ADDS     r6,r6,#1              ;403
                  |L26.800|
000320  9809              LDR      r0,[sp,#0x24]         ;403
000322  4286              CMP      r6,r0                 ;403
000324  dbe4              BLT      |L26.752|
                  |L26.806|
000326  bf00              NOP                            ;407
                  |L26.808|
000328  4620              MOV      r0,r4                 ;416
00032a  f7fffffe          BL       WIDGET__EFFECT_DrawDown
00032e  bf00              NOP      
000330  e6b8              B        |L26.164|
;;;418    
                          ENDP


                          AREA ||i._SetSelFromPos||, CODE, READONLY, ALIGN=1

                  _SetSelFromPos PROC
;;;452    */
;;;453    static void _SetSelFromPos(LISTVIEW_Handle hObj, LISTVIEW_Obj* pObj, const GUI_PID_STATE* pState) {
000000  e92d47fc          PUSH     {r2-r10,lr}
000004  4682              MOV      r10,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
;;;454      GUI_RECT Rect;
;;;455      int x, y, HeaderHeight;
;;;456      HeaderHeight = HEADER_GetHeight(pObj->hHeader);
00000a  f9b40028          LDRSH    r0,[r4,#0x28]
00000e  f7fffffe          BL       HEADER_GetHeight
000012  4680              MOV      r8,r0
;;;457      WM_GetInsideRectExScrollbar(hObj, &Rect);
000014  4669              MOV      r1,sp
000016  4650              MOV      r0,r10
000018  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;458      x = pState->x - Rect.x0;
00001c  f9bd1000          LDRSH    r1,[sp,#0]
000020  6828              LDR      r0,[r5,#0]
000022  1a47              SUBS     r7,r0,r1
;;;459      y = pState->y - Rect.y0 - HeaderHeight;
000024  f9bd1002          LDRSH    r1,[sp,#2]
000028  6868              LDR      r0,[r5,#4]
00002a  1a40              SUBS     r0,r0,r1
00002c  eba00608          SUB      r6,r0,r8
;;;460      Rect.x1 -= Rect.x0;
000030  f8bd0004          LDRH     r0,[sp,#4]
000034  f8bd1000          LDRH     r1,[sp,#0]
000038  1a40              SUBS     r0,r0,r1
00003a  b200              SXTH     r0,r0
00003c  f8ad0004          STRH     r0,[sp,#4]
;;;461      Rect.y1 -= Rect.y0;
000040  f8bd0006          LDRH     r0,[sp,#6]
000044  f8bd1002          LDRH     r1,[sp,#2]
000048  1a40              SUBS     r0,r0,r1
00004a  b200              SXTH     r0,r0
00004c  f8ad0006          STRH     r0,[sp,#6]
;;;462      if ((x >= 0) && (x <= Rect.x1) && (y >= 0) && (y <= (Rect.y1 - HeaderHeight))) {
000050  2f00              CMP      r7,#0
000052  db1e              BLT      |L27.146|
000054  f9bd0004          LDRSH    r0,[sp,#4]
000058  42b8              CMP      r0,r7
00005a  db1a              BLT      |L27.146|
00005c  2e00              CMP      r6,#0
00005e  db18              BLT      |L27.146|
000060  f9bd0006          LDRSH    r0,[sp,#6]
000064  eba00008          SUB      r0,r0,r8
000068  42b0              CMP      r0,r6
00006a  db12              BLT      |L27.146|
;;;463        unsigned Sel;
;;;464        Sel = (y / LISTVIEW__GetRowDistY(pObj)) + pObj->ScrollStateV.v;
00006c  4620              MOV      r0,r4
00006e  f7fffffe          BL       LISTVIEW__GetRowDistY
000072  fbb6f1f0          UDIV     r1,r6,r0
000076  6fe0              LDR      r0,[r4,#0x7c]
000078  eb010900          ADD      r9,r1,r0
;;;465        if (Sel < LISTVIEW__GetNumRows(pObj)) {
00007c  4620              MOV      r0,r4
00007e  f7fffffe          BL       LISTVIEW__GetNumRows
000082  4548              CMP      r0,r9
000084  d904              BLS      |L27.144|
;;;466          LISTVIEW__SetSel(hObj, pObj, Sel);
000086  464a              MOV      r2,r9
000088  4621              MOV      r1,r4
00008a  4650              MOV      r0,r10
00008c  f7fffffe          BL       LISTVIEW__SetSel
                  |L27.144|
;;;467        }
;;;468      }
000090  bf00              NOP      
                  |L27.146|
;;;469    }
000092  e8bd87fc          POP      {r2-r10,pc}
;;;470    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  LISTVIEW_DefaultProps
                          DCD      0x00ffffff
                          DCD      0x00808080
                          DCD      0x00ff0000
                          DCD      0x00d3d3d3
                          DCD      0x00000000
                          DCD      0x00ffffff
                          DCD      0x00ffffff
                          DCD      0x00808080
                          DCD      0x00d3d3d3
                          DCD      GUI_Font13_1
000028  000a              DCW      0x000a
00002a  0000              DCB      0x00,0x00
