; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\edit.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\edit.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Widget\EDIT.c]
                          THUMB

                          AREA ||i.EDIT_AddKey||, CODE, READONLY, ALIGN=1

                  EDIT_AddKey PROC
;;;576    */
;;;577    void EDIT_AddKey(EDIT_Handle hObj, int Key) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4607              MOV      r7,r0
000006  460d              MOV      r5,r1
;;;578      if (hObj) {
000008  2f00              CMP      r7,#0
00000a  d072              BEQ      |L1.242|
;;;579        EDIT_Obj* pObj;
;;;580        WM_LOCK();
00000c  f7fffffe          BL       GUI_Lock
;;;581        pObj = EDIT_H2P(hObj);
000010  4638              MOV      r0,r7
000012  f7fffffe          BL       GUI_ALLOC_h2p
000016  4604              MOV      r4,r0
;;;582        if (pObj) {
000018  2c00              CMP      r4,#0
00001a  d06b              BEQ      |L1.244|
;;;583          if (pObj->pfAddKeyEx) {
00001c  6ce0              LDR      r0,[r4,#0x4c]
00001e  b120              CBZ      r0,|L1.42|
;;;584            pObj->pfAddKeyEx(hObj, Key);
000020  4629              MOV      r1,r5
000022  4638              MOV      r0,r7
000024  6ce2              LDR      r2,[r4,#0x4c]
000026  4790              BLX      r2
000028  e08b              B        |L1.322|
                  |L1.42|
;;;585          } else {
;;;586            switch (Key) {
00002a  2d12              CMP      r5,#0x12
00002c  d046              BEQ      |L1.188|
00002e  dc06              BGT      |L1.62|
000030  2d08              CMP      r5,#8
000032  d04f              BEQ      |L1.212|
000034  2d10              CMP      r5,#0x10
000036  d047              BEQ      |L1.200|
000038  2d11              CMP      r5,#0x11
00003a  d16c              BNE      |L1.278|
00003c  e006              B        |L1.76|
                  |L1.62|
00003e  2d13              CMP      r5,#0x13
000040  d020              BEQ      |L1.132|
000042  2d1d              CMP      r5,#0x1d
000044  d057              BEQ      |L1.246|
000046  2d1e              CMP      r5,#0x1e
000048  d165              BNE      |L1.278|
00004a  e04d              B        |L1.232|
                  |L1.76|
;;;587            case GUI_KEY_UP:
;;;588              if (pObj->hpText) {
00004c  8d20              LDRH     r0,[r4,#0x28]
00004e  b1c0              CBZ      r0,|L1.130|
;;;589                char* pText;
;;;590                U16 Char;
;;;591                pText  = (char*) GUI_ALLOC_h2p(pObj->hpText);
000050  f9b40028          LDRSH    r0,[r4,#0x28]
000054  f7fffffe          BL       GUI_ALLOC_h2p
000058  4606              MOV      r6,r0
;;;592                pText += GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
00005a  4630              MOV      r0,r6
00005c  6c21              LDR      r1,[r4,#0x40]
00005e  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000062  4406              ADD      r6,r6,r0
;;;593                Char   = GUI_UC_GetCharCode(pText);
000064  4630              MOV      r0,r6
000066  f7fffffe          BL       GUI_UC_GetCharCode
00006a  4680              MOV      r8,r0
;;;594                if (Char < 0x7f) {  
00006c  f1b80f7f          CMP      r8,#0x7f
000070  da06              BGE      |L1.128|
;;;595                  *pText = Char + 1;
000072  f1080001          ADD      r0,r8,#1
000076  7030              STRB     r0,[r6,#0]
;;;596                  WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
000078  2105              MOVS     r1,#5
00007a  4638              MOV      r0,r7
00007c  f7fffffe          BL       WM_NotifyParent
                  |L1.128|
;;;597                }
;;;598              }
000080  bf00              NOP      
                  |L1.130|
;;;599              break;
000082  e05d              B        |L1.320|
                  |L1.132|
;;;600            case GUI_KEY_DOWN:
;;;601              if (pObj->hpText) {
000084  8d20              LDRH     r0,[r4,#0x28]
000086  b1c0              CBZ      r0,|L1.186|
;;;602                char* pText;
;;;603                U16 Char;
;;;604                pText  = (char*) GUI_ALLOC_h2p(pObj->hpText);
000088  f9b40028          LDRSH    r0,[r4,#0x28]
00008c  f7fffffe          BL       GUI_ALLOC_h2p
000090  4606              MOV      r6,r0
;;;605                pText += GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
000092  4630              MOV      r0,r6
000094  6c21              LDR      r1,[r4,#0x40]
000096  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00009a  4406              ADD      r6,r6,r0
;;;606                Char   = GUI_UC_GetCharCode(pText);
00009c  4630              MOV      r0,r6
00009e  f7fffffe          BL       GUI_UC_GetCharCode
0000a2  4680              MOV      r8,r0
;;;607                if (Char > 0x20) {  
0000a4  f1b80f20          CMP      r8,#0x20
0000a8  dd06              BLE      |L1.184|
;;;608                  *pText = Char - 1;
0000aa  f1a80001          SUB      r0,r8,#1
0000ae  7030              STRB     r0,[r6,#0]
;;;609                  WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
0000b0  2105              MOVS     r1,#5
0000b2  4638              MOV      r0,r7
0000b4  f7fffffe          BL       WM_NotifyParent
                  |L1.184|
;;;610                }
;;;611              }
0000b8  bf00              NOP      
                  |L1.186|
;;;612              break;
0000ba  e041              B        |L1.320|
                  |L1.188|
;;;613            case GUI_KEY_RIGHT:
;;;614              EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
0000bc  6c20              LDR      r0,[r4,#0x40]
0000be  1c41              ADDS     r1,r0,#1
0000c0  4620              MOV      r0,r4
0000c2  f7fffffe          BL       EDIT__SetCursorPos
;;;615              break;
0000c6  e03b              B        |L1.320|
                  |L1.200|
;;;616            case GUI_KEY_LEFT:
;;;617              EDIT__SetCursorPos(pObj, pObj->CursorPos - 1);
0000c8  6c20              LDR      r0,[r4,#0x40]
0000ca  1e41              SUBS     r1,r0,#1
0000cc  4620              MOV      r0,r4
0000ce  f7fffffe          BL       EDIT__SetCursorPos
;;;618              break;
0000d2  e035              B        |L1.320|
                  |L1.212|
;;;619            case GUI_KEY_BACKSPACE:
;;;620              EDIT__SetCursorPos(pObj, pObj->CursorPos - 1);
0000d4  6c20              LDR      r0,[r4,#0x40]
0000d6  1e41              SUBS     r1,r0,#1
0000d8  4620              MOV      r0,r4
0000da  f7fffffe          BL       EDIT__SetCursorPos
;;;621              _DeleteChar(hObj, pObj);
0000de  4621              MOV      r1,r4
0000e0  4638              MOV      r0,r7
0000e2  f7fffffe          BL       _DeleteChar
;;;622              break;
0000e6  e02b              B        |L1.320|
                  |L1.232|
;;;623            case GUI_KEY_DELETE:
;;;624              _DeleteChar(hObj, pObj);
0000e8  4621              MOV      r1,r4
0000ea  4638              MOV      r0,r7
0000ec  f7fffffe          BL       _DeleteChar
;;;625              break;
0000f0  e026              B        |L1.320|
                  |L1.242|
0000f2  e02c              B        |L1.334|
                  |L1.244|
0000f4  e028              B        |L1.328|
                  |L1.246|
;;;626            case GUI_KEY_INSERT:
;;;627              if (pObj->EditMode == GUI_EDIT_MODE_OVERWRITE) {
0000f6  f8940048          LDRB     r0,[r4,#0x48]
0000fa  2801              CMP      r0,#1
0000fc  d103              BNE      |L1.262|
;;;628                pObj->EditMode = GUI_EDIT_MODE_INSERT;
0000fe  2000              MOVS     r0,#0
000100  f8840048          STRB     r0,[r4,#0x48]
000104  e006              B        |L1.276|
                  |L1.262|
;;;629              } else {
;;;630                pObj->EditMode = GUI_EDIT_MODE_OVERWRITE;
000106  2001              MOVS     r0,#1
000108  f8840048          STRB     r0,[r4,#0x48]
;;;631                EDIT__SetCursorPos(pObj, pObj->CursorPos);
00010c  4620              MOV      r0,r4
00010e  6c21              LDR      r1,[r4,#0x40]
000110  f7fffffe          BL       EDIT__SetCursorPos
                  |L1.276|
;;;632              }
;;;633              break;
000114  e014              B        |L1.320|
                  |L1.278|
;;;634            default:
;;;635              if (Key >= 0x20) {
000116  2d20              CMP      r5,#0x20
000118  db11              BLT      |L1.318|
;;;636                if (pObj->EditMode != GUI_EDIT_MODE_INSERT) {
00011a  f8940048          LDRB     r0,[r4,#0x48]
00011e  b118              CBZ      r0,|L1.296|
;;;637                  _DeleteChar(hObj, pObj);
000120  4621              MOV      r1,r4
000122  4638              MOV      r0,r7
000124  f7fffffe          BL       _DeleteChar
                  |L1.296|
;;;638                }
;;;639                if (_InsertChar(hObj, pObj, Key)) {
000128  b2aa              UXTH     r2,r5
00012a  4621              MOV      r1,r4
00012c  4638              MOV      r0,r7
00012e  f7fffffe          BL       _InsertChar
000132  b120              CBZ      r0,|L1.318|
;;;640                  EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
000134  6c20              LDR      r0,[r4,#0x40]
000136  1c41              ADDS     r1,r0,#1
000138  4620              MOV      r0,r4
00013a  f7fffffe          BL       EDIT__SetCursorPos
                  |L1.318|
00013e  bf00              NOP                            ;586
                  |L1.320|
000140  bf00              NOP                            ;599
                  |L1.322|
;;;641                }
;;;642              }
;;;643            }
;;;644          }
;;;645          EDIT_Invalidate(hObj);
000142  4638              MOV      r0,r7
000144  f7fffffe          BL       WM_InvalidateWindow
                  |L1.328|
;;;646        }
;;;647        WM_UNLOCK();
000148  f7fffffe          BL       GUI_Unlock
;;;648      }
00014c  bf00              NOP      
                  |L1.334|
;;;649    }
00014e  e8bd81f0          POP      {r4-r8,pc}
;;;650    
                          ENDP


                          AREA ||i.EDIT_Callback||, CODE, READONLY, ALIGN=1

                  EDIT_Callback PROC
;;;438    */
;;;439    void EDIT_Callback (WM_MESSAGE * pMsg) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
;;;440      int IsEnabled;
;;;441      EDIT_Handle hObj;
;;;442      EDIT_Obj*   pObj;
;;;443      hObj = (EDIT_Handle) pMsg->hWin;       
000006  f9b45004          LDRSH    r5,[r4,#4]
;;;444      pObj = (EDIT_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       GUI_ALLOC_h2p
000010  4680              MOV      r8,r0
;;;445      IsEnabled = WM__IsEnabled(hObj);
000012  4628              MOV      r0,r5
000014  f7fffffe          BL       WM__IsEnabled
000018  4607              MOV      r7,r0
;;;446      /* Let widget handle the standard messages */
;;;447      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
00001a  4621              MOV      r1,r4
00001c  4628              MOV      r0,r5
00001e  f7fffffe          BL       WIDGET_HandleActive
000022  b908              CBNZ     r0,|L2.40|
                  |L2.36|
;;;448        return;
;;;449      }
;;;450      switch (pMsg->MsgId) {
;;;451      case WM_TOUCH:
;;;452        _OnTouch(hObj, pObj, pMsg);
;;;453        break;
;;;454      case WM_PAINT:
;;;455        GUI_DEBUG_LOG("EDIT: _Callback(WM_PAINT)\n");
;;;456        _Paint(pObj, hObj);
;;;457        return;
;;;458      case WM_DELETE:
;;;459        GUI_DEBUG_LOG("EDIT: _Callback(WM_DELETE)\n");
;;;460        _Delete(pObj);
;;;461        break;       /* No return here ... WM_DefaultProc needs to be called */
;;;462      case WM_KEY:
;;;463        if (IsEnabled) {
;;;464          if ( ((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt >0) {
;;;465            int Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
;;;466            switch (Key) {
;;;467              case GUI_KEY_ENTER:
;;;468              case GUI_KEY_ESCAPE:
;;;469              case GUI_KEY_TAB:
;;;470              case GUI_KEY_BACKTAB:
;;;471                break;                    /* Send to parent by not doing anything */
;;;472              default:
;;;473                EDIT_AddKey(hObj, Key);
;;;474                return;
;;;475            }
;;;476          }
;;;477        }
;;;478        break;
;;;479      }
;;;480      WM_DefaultProc(pMsg);
;;;481    }
000024  e8bd81f0          POP      {r4-r8,pc}
                  |L2.40|
000028  6820              LDR      r0,[r4,#0]            ;450
00002a  280b              CMP      r0,#0xb               ;450
00002c  d011              BEQ      |L2.82|
00002e  280c              CMP      r0,#0xc               ;450
000030  d004              BEQ      |L2.60|
000032  280e              CMP      r0,#0xe               ;450
000034  d011              BEQ      |L2.90|
000036  280f              CMP      r0,#0xf               ;450
000038  d12b              BNE      |L2.146|
00003a  e005              B        |L2.72|
                  |L2.60|
00003c  4622              MOV      r2,r4                 ;452
00003e  4641              MOV      r1,r8                 ;452
000040  4628              MOV      r0,r5                 ;452
000042  f7fffffe          BL       _OnTouch
000046  e024              B        |L2.146|
                  |L2.72|
000048  4629              MOV      r1,r5                 ;456
00004a  4640              MOV      r0,r8                 ;456
00004c  f7fffffe          BL       _Paint
000050  e7e8              B        |L2.36|
                  |L2.82|
000052  4640              MOV      r0,r8                 ;460
000054  f7fffffe          BL       _Delete
000058  e01b              B        |L2.146|
                  |L2.90|
00005a  b1cf              CBZ      r7,|L2.144|
00005c  68a0              LDR      r0,[r4,#8]            ;464
00005e  6840              LDR      r0,[r0,#4]            ;464
000060  2800              CMP      r0,#0                 ;464
000062  dd15              BLE      |L2.144|
000064  68a0              LDR      r0,[r4,#8]            ;465
000066  6806              LDR      r6,[r0,#0]            ;465
000068  2e09              CMP      r6,#9                 ;466
00006a  d008              BEQ      |L2.126|
00006c  2e0a              CMP      r6,#0xa               ;466
00006e  d007              BEQ      |L2.128|
000070  2e0d              CMP      r6,#0xd               ;466
000072  d002              BEQ      |L2.122|
000074  2e1b              CMP      r6,#0x1b              ;466
000076  d104              BNE      |L2.130|
000078  e000              B        |L2.124|
                  |L2.122|
00007a  bf00              NOP                            ;468
                  |L2.124|
00007c  bf00              NOP                            ;469
                  |L2.126|
00007e  bf00              NOP                            ;470
                  |L2.128|
000080  e004              B        |L2.140|
                  |L2.130|
000082  4631              MOV      r1,r6                 ;473
000084  4628              MOV      r0,r5                 ;473
000086  f7fffffe          BL       EDIT_AddKey
00008a  e7cb              B        |L2.36|
                  |L2.140|
00008c  bf00              NOP                            ;471
00008e  bf00              NOP                            ;476
                  |L2.144|
000090  bf00              NOP                            ;478
                  |L2.146|
000092  bf00              NOP                            ;453
000094  4620              MOV      r0,r4                 ;480
000096  f7fffffe          BL       WM_DefaultProc
00009a  bf00              NOP      
00009c  e7c2              B        |L2.36|
;;;482    
                          ENDP


                          AREA ||i.EDIT_CreateEx||, CODE, READONLY, ALIGN=2

                  EDIT_CreateEx PROC
;;;492    */
;;;493    EDIT_Handle EDIT_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent, int WinFlags, int ExFlags,
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;494                              int Id, int MaxLen)
;;;495    {
000004  b085              SUB      sp,sp,#0x14
000006  4607              MOV      r7,r0
000008  4688              MOV      r8,r1
00000a  4691              MOV      r9,r2
00000c  f8ddb058          LDR      r11,[sp,#0x58]
000010  e9dd5a13          LDRD     r5,r10,[sp,#0x4c]
;;;496      EDIT_Handle hObj;
;;;497      GUI_USE_PARA(ExFlags);
000014  bf00              NOP      
;;;498      WM_LOCK();
000016  f7fffffe          BL       GUI_Lock
;;;499      /* Alloc memory for obj */
;;;500      WinFlags |= WM_CF_LATE_CLIP;    /* Always use late clipping since widget is optimized for it. */
00001a  f4455580          ORR      r5,r5,#0x1000
;;;501      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WM_CF_SHOW | WinFlags, EDIT_Callback,
00001e  2250              MOVS     r2,#0x50
000020  4b1f              LDR      r3,|L3.160|
000022  b2a8              UXTH     r0,r5
000024  f0400002          ORR      r0,r0,#2
000028  9912              LDR      r1,[sp,#0x48]
00002a  e9cd3202          STRD     r3,r2,[sp,#8]
00002e  e9cd1000          STRD     r1,r0,[sp,#0]
000032  464a              MOV      r2,r9
000034  4641              MOV      r1,r8
000036  4638              MOV      r0,r7
000038  9b08              LDR      r3,[sp,#0x20]
00003a  f7fffffe          BL       WM_CreateWindowAsChild
00003e  4606              MOV      r6,r0
;;;502                                    sizeof(EDIT_Obj) - sizeof(WM_Obj));
;;;503      if (hObj) {
000040  b346              CBZ      r6,|L3.148|
;;;504        EDIT_Obj* pObj;
;;;505        pObj = (EDIT_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000042  4630              MOV      r0,r6
000044  f7fffffe          BL       GUI_ALLOC_h2p
000048  4604              MOV      r4,r0
;;;506        /* init widget specific variables */
;;;507        WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE);
00004a  2210              MOVS     r2,#0x10
00004c  4620              MOV      r0,r4
00004e  9915              LDR      r1,[sp,#0x54]
000050  f7fffffe          BL       WIDGET__Init
;;;508        /* init member variables */
;;;509        EDIT_INIT_ID(pObj);
;;;510        pObj->Props         = EDIT__DefaultProps;
000054  221c              MOVS     r2,#0x1c
000056  4913              LDR      r1,|L3.164|
000058  f1040054          ADD      r0,r4,#0x54
00005c  f7fffffe          BL       __aeabi_memcpy4
;;;511        pObj->XSizeCursor   = 1;
000060  2001              MOVS     r0,#1
000062  f8840049          STRB     r0,[r4,#0x49]
;;;512        pObj->MaxLen        = (MaxLen == 0) ? 8 : MaxLen;
000066  f1bb0f00          CMP      r11,#0
00006a  d101              BNE      |L3.112|
00006c  2008              MOVS     r0,#8
00006e  e000              B        |L3.114|
                  |L3.112|
000070  4658              MOV      r0,r11
                  |L3.114|
000072  b200              SXTH     r0,r0
000074  8560              STRH     r0,[r4,#0x2a]
;;;513        pObj->BufferSize    = 0;
000076  2000              MOVS     r0,#0
000078  85a0              STRH     r0,[r4,#0x2c]
;;;514        pObj->hpText        = 0;
00007a  8520              STRH     r0,[r4,#0x28]
;;;515        if (_IncrementBuffer(pObj, pObj->MaxLen + 1) == 0) {
00007c  f9b4002a          LDRSH    r0,[r4,#0x2a]
000080  1c41              ADDS     r1,r0,#1
000082  4620              MOV      r0,r4
000084  f7fffffe          BL       _IncrementBuffer
000088  b918              CBNZ     r0,|L3.146|
;;;516          GUI_DEBUG_ERROROUT("EDIT_Create failed to alloc buffer");
;;;517          EDIT_Delete(hObj);
00008a  4630              MOV      r0,r6
00008c  f7fffffe          BL       WM_DeleteWindow
;;;518          hObj = 0;
000090  2600              MOVS     r6,#0
                  |L3.146|
;;;519        }
;;;520      }
000092  bf00              NOP      
                  |L3.148|
;;;521      WM_UNLOCK();
000094  f7fffffe          BL       GUI_Unlock
;;;522      return hObj;
000098  4630              MOV      r0,r6
;;;523    }
00009a  b009              ADD      sp,sp,#0x24
00009c  e8bd8ff0          POP      {r4-r11,pc}
;;;524    
                          ENDP

                  |L3.160|
                          DCD      EDIT_Callback
                  |L3.164|
                          DCD      EDIT__DefaultProps

                          AREA ||i.EDIT_GetText||, CODE, READONLY, ALIGN=1

                  EDIT_GetText PROC
;;;752    */
;;;753    void EDIT_GetText(EDIT_Handle hObj, char* sDest, int MaxLen) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
;;;754      if (sDest) {
00000a  b33c              CBZ      r4,|L4.92|
;;;755        *sDest = 0;
00000c  2000              MOVS     r0,#0
00000e  7020              STRB     r0,[r4,#0]
;;;756        if (hObj) {
000010  b327              CBZ      r7,|L4.92|
;;;757          EDIT_Obj* pObj;
;;;758          WM_LOCK();
000012  f7fffffe          BL       GUI_Lock
;;;759          pObj = EDIT_H2P(hObj);
000016  4638              MOV      r0,r7
000018  f7fffffe          BL       GUI_ALLOC_h2p
00001c  4680              MOV      r8,r0
;;;760          if (pObj->hpText) {
00001e  f8b80028          LDRH     r0,[r8,#0x28]
000022  b1c0              CBZ      r0,|L4.86|
;;;761            char* pText;
;;;762            int NumChars, NumBytes;
;;;763            pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
000024  f9b80028          LDRSH    r0,[r8,#0x28]
000028  f7fffffe          BL       GUI_ALLOC_h2p
00002c  4682              MOV      r10,r0
;;;764            NumChars = GUI__GetNumChars(pText);
00002e  4650              MOV      r0,r10
000030  f7fffffe          BL       GUI__GetNumChars
000034  4681              MOV      r9,r0
;;;765            if (NumChars > MaxLen) {
000036  45a9              CMP      r9,r5
000038  dd00              BLE      |L4.60|
;;;766              NumChars = MaxLen;
00003a  46a9              MOV      r9,r5
                  |L4.60|
;;;767            }
;;;768            NumBytes = GUI_UC__NumChars2NumBytes(pText, NumChars);
00003c  4649              MOV      r1,r9
00003e  4650              MOV      r0,r10
000040  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000044  4606              MOV      r6,r0
;;;769            memcpy(sDest, pText, NumBytes);
000046  4632              MOV      r2,r6
000048  4651              MOV      r1,r10
00004a  4620              MOV      r0,r4
00004c  f7fffffe          BL       __aeabi_memcpy
;;;770            *(sDest + NumBytes) = 0;
000050  2000              MOVS     r0,#0
000052  55a0              STRB     r0,[r4,r6]
;;;771          }
000054  bf00              NOP      
                  |L4.86|
;;;772          WM_UNLOCK();
000056  f7fffffe          BL       GUI_Unlock
;;;773        }
00005a  bf00              NOP      
                  |L4.92|
;;;774      }
;;;775    }
00005c  e8bd87f0          POP      {r4-r10,pc}
;;;776    
                          ENDP


                          AREA ||i.EDIT_GetValue||, CODE, READONLY, ALIGN=1

                  EDIT_GetValue PROC
;;;780    */
;;;781    I32  EDIT_GetValue(EDIT_Handle hObj) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;782      EDIT_Obj* pObj;
;;;783      I32 r = 0;
000004  2600              MOVS     r6,#0
;;;784      if (hObj) {
000006  b144              CBZ      r4,|L5.26|
;;;785        WM_LOCK();
000008  f7fffffe          BL       GUI_Lock
;;;786        pObj = EDIT_H2P(hObj);
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       GUI_ALLOC_h2p
000012  4605              MOV      r5,r0
;;;787        r = pObj->CurrentValue;
000014  6bee              LDR      r6,[r5,#0x3c]
;;;788        WM_UNLOCK();
000016  f7fffffe          BL       GUI_Unlock
                  |L5.26|
;;;789      }
;;;790      return r;
00001a  4630              MOV      r0,r6
;;;791    }
00001c  bd70              POP      {r4-r6,pc}
;;;792    
                          ENDP


                          AREA ||i.EDIT_SetBkColor||, CODE, READONLY, ALIGN=1

                  EDIT_SetBkColor PROC
;;;671    */
;;;672    void EDIT_SetBkColor(EDIT_Handle hObj, unsigned int Index, GUI_COLOR color) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
000006  460d              MOV      r5,r1
000008  4617              MOV      r7,r2
;;;673      EDIT_Obj* pObj;
;;;674      if (hObj == 0)
00000a  b90e              CBNZ     r6,|L6.16|
                  |L6.12|
;;;675        return;
;;;676      WM_LOCK();
;;;677      pObj = EDIT_H2P(hObj);
;;;678      if (pObj) {
;;;679        if (Index < GUI_COUNTOF(pObj->Props.aBkColor)) {
;;;680          pObj->Props.aBkColor[Index] = color;
;;;681          EDIT_Invalidate(hObj);
;;;682        }
;;;683      }
;;;684      WM_UNLOCK();
;;;685    }
00000c  e8bd81f0          POP      {r4-r8,pc}
                  |L6.16|
000010  f7fffffe          BL       GUI_Lock
000014  4630              MOV      r0,r6                 ;677
000016  f7fffffe          BL       GUI_ALLOC_h2p
00001a  4604              MOV      r4,r0                 ;677
00001c  b144              CBZ      r4,|L6.48|
00001e  2d02              CMP      r5,#2                 ;679
000020  d206              BCS      |L6.48|
000022  f1040068          ADD      r0,r4,#0x68           ;680
000026  f8407025          STR      r7,[r0,r5,LSL #2]     ;680
00002a  4630              MOV      r0,r6                 ;681
00002c  f7fffffe          BL       WM_InvalidateWindow
                  |L6.48|
000030  f7fffffe          BL       GUI_Unlock
000034  bf00              NOP      
000036  e7e9              B        |L6.12|
;;;686    
                          ENDP


                          AREA ||i.EDIT_SetCursorAtPixel||, CODE, READONLY, ALIGN=1

                  EDIT_SetCursorAtPixel PROC
;;;534    */
;;;535    void EDIT_SetCursorAtPixel(EDIT_Handle hObj, int xPos) {
000000  e92d4ff8          PUSH     {r3-r11,lr}
000004  4607              MOV      r7,r0
000006  460d              MOV      r5,r1
;;;536      if (hObj) {
000008  2f00              CMP      r7,#0
00000a  d05e              BEQ      |L7.202|
;;;537        EDIT_Obj* pObj;
;;;538        WM_LOCK();
00000c  f7fffffe          BL       GUI_Lock
;;;539        pObj = EDIT_H2P(hObj);
000010  4638              MOV      r0,r7
000012  f7fffffe          BL       GUI_ALLOC_h2p
000016  4604              MOV      r4,r0
;;;540        if (pObj->hpText) {    
000018  8d20              LDRH     r0,[r4,#0x28]
00001a  2800              CMP      r0,#0
00001c  d052              BEQ      |L7.196|
;;;541          const GUI_FONT GUI_UNI_PTR *pOldFont;
;;;542          int xSize, TextWidth, NumChars;
;;;543          const char GUI_UNI_PTR * pText;
;;;544          pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
00001e  f9b40028          LDRSH    r0,[r4,#0x28]
000022  f7fffffe          BL       GUI_ALLOC_h2p
000026  9000              STR      r0,[sp,#0]
;;;545          pOldFont = GUI_SetFont(pObj->Props.pFont);
000028  6de0              LDR      r0,[r4,#0x5c]
00002a  f7fffffe          BL       GUI_SetFont
00002e  4682              MOV      r10,r0
;;;546          xSize = WM_GetWindowSizeX(hObj);
000030  4638              MOV      r0,r7
000032  f7fffffe          BL       WM_GetWindowSizeX
000036  4680              MOV      r8,r0
;;;547          TextWidth = GUI_GetStringDistX(pText);
000038  9800              LDR      r0,[sp,#0]
00003a  f7fffffe          BL       GUI_GetStringDistX
00003e  4606              MOV      r6,r0
;;;548          switch (pObj->Props.Align & GUI_TA_HORIZONTAL) {
000040  f8940054          LDRB     r0,[r4,#0x54]
000044  f0000003          AND      r0,r0,#3
000048  2801              CMP      r0,#1
00004a  d009              BEQ      |L7.96|
00004c  2802              CMP      r0,#2
00004e  d10e              BNE      |L7.110|
;;;549          case GUI_TA_HCENTER:
;;;550            xPos -= (xSize - TextWidth + 1) / 2;
000050  eba80106          SUB      r1,r8,r6
000054  1c48              ADDS     r0,r1,#1
000056  eb0071d0          ADD      r1,r0,r0,LSR #31
00005a  eba50561          SUB      r5,r5,r1,ASR #1
;;;551            break;
00005e  e00d              B        |L7.124|
                  |L7.96|
;;;552          case GUI_TA_RIGHT:
;;;553            xPos -= xSize - TextWidth - (pObj->Props.Border + EDIT_XOFF);
000060  eba80106          SUB      r1,r8,r6
000064  6da0              LDR      r0,[r4,#0x58]
000066  1c40              ADDS     r0,r0,#1
000068  1a08              SUBS     r0,r1,r0
00006a  1a2d              SUBS     r5,r5,r0
;;;554            break;
00006c  e006              B        |L7.124|
                  |L7.110|
;;;555          default:
;;;556            xPos -= (pObj->Props.Border + EDIT_XOFF) + pObj->Widget.pEffect->EffectSize;
00006e  6da0              LDR      r0,[r4,#0x58]
000070  1c40              ADDS     r0,r0,#1
000072  6a21              LDR      r1,[r4,#0x20]
000074  6949              LDR      r1,[r1,#0x14]
000076  4408              ADD      r0,r0,r1
000078  1a2d              SUBS     r5,r5,r0
00007a  bf00              NOP                            ;548
                  |L7.124|
00007c  bf00              NOP                            ;551
;;;557          }
;;;558          NumChars = GUI__GetNumChars(pText);
00007e  9800              LDR      r0,[sp,#0]
000080  f7fffffe          BL       GUI__GetNumChars
000084  4681              MOV      r9,r0
;;;559          if (xPos < 0) {
000086  2d00              CMP      r5,#0
000088  da04              BGE      |L7.148|
;;;560            EDIT__SetCursorPos(pObj, 0);
00008a  2100              MOVS     r1,#0
00008c  4620              MOV      r0,r4
00008e  f7fffffe          BL       EDIT__SetCursorPos
000092  e010              B        |L7.182|
                  |L7.148|
;;;561          } else if (xPos > TextWidth) {
000094  42b5              CMP      r5,r6
000096  dd04              BLE      |L7.162|
;;;562            EDIT__SetCursorPos(pObj, NumChars);
000098  4649              MOV      r1,r9
00009a  4620              MOV      r0,r4
00009c  f7fffffe          BL       EDIT__SetCursorPos
0000a0  e009              B        |L7.182|
                  |L7.162|
;;;563          } else {
;;;564            EDIT__SetCursorPos(pObj, GUI__GetCursorPosChar(pText, xPos, NumChars));
0000a2  464a              MOV      r2,r9
0000a4  4629              MOV      r1,r5
0000a6  9800              LDR      r0,[sp,#0]
0000a8  f7fffffe          BL       GUI__GetCursorPosChar
0000ac  4683              MOV      r11,r0
0000ae  4659              MOV      r1,r11
0000b0  4620              MOV      r0,r4
0000b2  f7fffffe          BL       EDIT__SetCursorPos
                  |L7.182|
;;;565          }
;;;566          GUI_SetFont(pOldFont);
0000b6  4650              MOV      r0,r10
0000b8  f7fffffe          BL       GUI_SetFont
;;;567          EDIT_Invalidate(hObj);
0000bc  4638              MOV      r0,r7
0000be  f7fffffe          BL       WM_InvalidateWindow
;;;568        }
0000c2  bf00              NOP      
                  |L7.196|
;;;569        WM_UNLOCK();
0000c4  f7fffffe          BL       GUI_Unlock
;;;570      }
0000c8  bf00              NOP      
                  |L7.202|
;;;571    }
0000ca  e8bd8ff8          POP      {r3-r11,pc}
;;;572    
                          ENDP


                          AREA ||i.EDIT_SetFont||, CODE, READONLY, ALIGN=1

                  EDIT_SetFont PROC
;;;654    */
;;;655    void EDIT_SetFont(EDIT_Handle hObj, const GUI_FONT GUI_UNI_PTR * pfont) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
;;;656      EDIT_Obj* pObj;
;;;657      if (hObj == 0)
000006  b905              CBNZ     r5,|L8.10|
                  |L8.8|
;;;658        return;
;;;659      WM_LOCK();
;;;660      pObj = EDIT_H2P(hObj);
;;;661      if (pObj) {
;;;662        pObj->Props.pFont = pfont;
;;;663        EDIT_Invalidate(hObj);
;;;664      }
;;;665      WM_UNLOCK();
;;;666    }
000008  bd70              POP      {r4-r6,pc}
                  |L8.10|
00000a  f7fffffe          BL       GUI_Lock
00000e  4628              MOV      r0,r5                 ;660
000010  f7fffffe          BL       GUI_ALLOC_h2p
000014  4604              MOV      r4,r0                 ;660
000016  b11c              CBZ      r4,|L8.32|
000018  65e6              STR      r6,[r4,#0x5c]         ;662
00001a  4628              MOV      r0,r5                 ;663
00001c  f7fffffe          BL       WM_InvalidateWindow
                  |L8.32|
000020  f7fffffe          BL       GUI_Unlock
000024  bf00              NOP      
000026  e7ef              B        |L8.8|
;;;667    
                          ENDP


                          AREA ||i.EDIT_SetMaxLen||, CODE, READONLY, ALIGN=1

                  EDIT_SetMaxLen PROC
;;;804    */
;;;805    void EDIT_SetMaxLen(EDIT_Handle  hObj, int MaxLen) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4606              MOV      r6,r0
000006  460d              MOV      r5,r1
;;;806      if (hObj) {
000008  b396              CBZ      r6,|L9.112|
;;;807        EDIT_Obj* pObj;
;;;808        WM_LOCK();
00000a  f7fffffe          BL       GUI_Lock
;;;809        pObj = EDIT_H2P(hObj);
00000e  4630              MOV      r0,r6
000010  f7fffffe          BL       GUI_ALLOC_h2p
000014  4604              MOV      r4,r0
;;;810        if (MaxLen != pObj->MaxLen) {
000016  f9b4002a          LDRSH    r0,[r4,#0x2a]
00001a  42a8              CMP      r0,r5
00001c  d025              BEQ      |L9.106|
;;;811          if (MaxLen < pObj->MaxLen) {
00001e  f9b4002a          LDRSH    r0,[r4,#0x2a]
000022  42a8              CMP      r0,r5
000024  dd16              BLE      |L9.84|
;;;812            if (pObj->hpText) {
000026  8d20              LDRH     r0,[r4,#0x28]
000028  b1a0              CBZ      r0,|L9.84|
;;;813              char* pText;
;;;814              int   NumChars;
;;;815              pText    = (char*) GUI_ALLOC_h2p(pObj->hpText);
00002a  f9b40028          LDRSH    r0,[r4,#0x28]
00002e  f7fffffe          BL       GUI_ALLOC_h2p
000032  4607              MOV      r7,r0
;;;816              NumChars = GUI__GetNumChars(pText);
000034  4638              MOV      r0,r7
000036  f7fffffe          BL       GUI__GetNumChars
00003a  4680              MOV      r8,r0
;;;817              if (NumChars > MaxLen) {
00003c  45a8              CMP      r8,r5
00003e  dd08              BLE      |L9.82|
;;;818                int NumBytes;
;;;819                NumBytes = GUI_UC__NumChars2NumBytes(pText, MaxLen);
000040  4629              MOV      r1,r5
000042  4638              MOV      r0,r7
000044  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000048  4681              MOV      r9,r0
;;;820                *(pText + NumBytes) = 0;
00004a  2000              MOVS     r0,#0
00004c  f8070009          STRB     r0,[r7,r9]
;;;821              }
000050  bf00              NOP      
                  |L9.82|
;;;822            }
000052  bf00              NOP      
                  |L9.84|
;;;823          }
;;;824          _IncrementBuffer(pObj, MaxLen - pObj->BufferSize + 1);
000054  8da0              LDRH     r0,[r4,#0x2c]
000056  1a28              SUBS     r0,r5,r0
000058  1c41              ADDS     r1,r0,#1
00005a  4620              MOV      r0,r4
00005c  f7fffffe          BL       _IncrementBuffer
;;;825          pObj->MaxLen = MaxLen;
000060  b228              SXTH     r0,r5
000062  8560              STRH     r0,[r4,#0x2a]
;;;826          EDIT_Invalidate(hObj);
000064  4630              MOV      r0,r6
000066  f7fffffe          BL       WM_InvalidateWindow
                  |L9.106|
;;;827        }
;;;828        WM_UNLOCK();
00006a  f7fffffe          BL       GUI_Unlock
;;;829      }
00006e  bf00              NOP      
                  |L9.112|
;;;830    }
000070  e8bd87f0          POP      {r4-r10,pc}
;;;831    
                          ENDP


                          AREA ||i.EDIT_SetText||, CODE, READONLY, ALIGN=1

                  EDIT_SetText PROC
;;;709    */
;;;710    void EDIT_SetText(EDIT_Handle hObj, const char* s) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4680              MOV      r8,r0
000006  460e              MOV      r6,r1
;;;711      if (hObj) {
000008  f1b80f00          CMP      r8,#0
00000c  d051              BEQ      |L10.178|
;;;712        EDIT_Obj* pObj;
;;;713        WM_LOCK();
00000e  f7fffffe          BL       GUI_Lock
;;;714        pObj = EDIT_H2P(hObj);
000012  4640              MOV      r0,r8
000014  f7fffffe          BL       GUI_ALLOC_h2p
000018  4604              MOV      r4,r0
;;;715        if (s) {
00001a  2e00              CMP      r6,#0
00001c  d03c              BEQ      |L10.152|
;;;716          int NumBytesNew, NumBytesOld = 0;
00001e  f04f0900          MOV      r9,#0
;;;717          int NumCharsNew;
;;;718          if (pObj->hpText) {
000022  8d20              LDRH     r0,[r4,#0x28]
000024  b150              CBZ      r0,|L10.60|
;;;719            char* pText;
;;;720            pText       = (char*) GUI_ALLOC_h2p(pObj->hpText);
000026  f9b40028          LDRSH    r0,[r4,#0x28]
00002a  f7fffffe          BL       GUI_ALLOC_h2p
00002e  4682              MOV      r10,r0
;;;721            NumBytesOld = strlen(pText) + 1;
000030  4650              MOV      r0,r10
000032  f7fffffe          BL       strlen
000036  f1000901          ADD      r9,r0,#1
;;;722          }
00003a  bf00              NOP      
                  |L10.60|
;;;723          NumCharsNew = GUI__GetNumChars(s);
00003c  4630              MOV      r0,r6
00003e  f7fffffe          BL       GUI__GetNumChars
000042  4605              MOV      r5,r0
;;;724          if (NumCharsNew > pObj->MaxLen) {
000044  f9b4102a          LDRSH    r1,[r4,#0x2a]
000048  42a9              CMP      r1,r5
00004a  da01              BGE      |L10.80|
;;;725            NumCharsNew = pObj->MaxLen;
00004c  f9b4502a          LDRSH    r5,[r4,#0x2a]
                  |L10.80|
;;;726          }
;;;727          NumBytesNew = GUI_UC__NumChars2NumBytes(s, NumCharsNew) + 1;
000050  4629              MOV      r1,r5
000052  4630              MOV      r0,r6
000054  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000058  1c47              ADDS     r7,r0,#1
;;;728          if (_IsSpaceInBuffer(pObj, NumBytesNew - NumBytesOld)) {
00005a  eba70109          SUB      r1,r7,r9
00005e  4620              MOV      r0,r4
000060  f7fffffe          BL       _IsSpaceInBuffer
000064  b1b8              CBZ      r0,|L10.150|
;;;729            char* pText;
;;;730            pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
000066  f9b40028          LDRSH    r0,[r4,#0x28]
00006a  f7fffffe          BL       GUI_ALLOC_h2p
00006e  4682              MOV      r10,r0
;;;731            memcpy(pText, s, NumBytesNew);
000070  463a              MOV      r2,r7
000072  4631              MOV      r1,r6
000074  4650              MOV      r0,r10
000076  f7fffffe          BL       __aeabi_memcpy
;;;732            pObj->CursorPos = NumCharsNew;
00007a  6425              STR      r5,[r4,#0x40]
;;;733            if (pObj->CursorPos == pObj->MaxLen) {
00007c  f9b4102a          LDRSH    r1,[r4,#0x2a]
000080  6c20              LDR      r0,[r4,#0x40]
000082  4288              CMP      r0,r1
000084  d106              BNE      |L10.148|
;;;734              if (pObj->EditMode == GUI_EDIT_MODE_OVERWRITE) {
000086  f8940048          LDRB     r0,[r4,#0x48]
00008a  2801              CMP      r0,#1
00008c  d102              BNE      |L10.148|
;;;735                pObj->CursorPos--;
00008e  6c20              LDR      r0,[r4,#0x40]
000090  1e40              SUBS     r0,r0,#1
000092  6420              STR      r0,[r4,#0x40]
                  |L10.148|
;;;736              }
;;;737            }
;;;738          }
000094  bf00              NOP      
                  |L10.150|
;;;739        } else {
000096  e006              B        |L10.166|
                  |L10.152|
;;;740          GUI_ALLOC_FreePtr(&pObj->hpText);
000098  f1040028          ADD      r0,r4,#0x28
00009c  f7fffffe          BL       GUI_ALLOC_FreePtr
;;;741          pObj->BufferSize = 0;
0000a0  2000              MOVS     r0,#0
0000a2  85a0              STRH     r0,[r4,#0x2c]
;;;742          pObj->CursorPos  = 0;
0000a4  6420              STR      r0,[r4,#0x40]
                  |L10.166|
;;;743        }
;;;744        EDIT_Invalidate(hObj);
0000a6  4640              MOV      r0,r8
0000a8  f7fffffe          BL       WM_InvalidateWindow
;;;745        WM_UNLOCK();
0000ac  f7fffffe          BL       GUI_Unlock
;;;746      }
0000b0  bf00              NOP      
                  |L10.178|
;;;747    }
0000b2  e8bd87f0          POP      {r4-r10,pc}
;;;748    
                          ENDP


                          AREA ||i.EDIT_SetTextAlign||, CODE, READONLY, ALIGN=1

                  EDIT_SetTextAlign PROC
;;;835    */
;;;836    void EDIT_SetTextAlign(EDIT_Handle hObj, int Align) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
;;;837      EDIT_Obj* pObj;
;;;838      if (hObj == 0)
000006  b905              CBNZ     r5,|L11.10|
                  |L11.8|
;;;839        return;
;;;840      WM_LOCK();
;;;841      pObj = EDIT_H2P(hObj);
;;;842      if (pObj) {
;;;843        pObj->Props.Align = Align;
;;;844        EDIT_Invalidate(hObj);
;;;845      }
;;;846      WM_UNLOCK();
;;;847    }
000008  bd70              POP      {r4-r6,pc}
                  |L11.10|
00000a  f7fffffe          BL       GUI_Lock
00000e  4628              MOV      r0,r5                 ;841
000010  f7fffffe          BL       GUI_ALLOC_h2p
000014  4604              MOV      r4,r0                 ;841
000016  b11c              CBZ      r4,|L11.32|
000018  6566              STR      r6,[r4,#0x54]         ;843
00001a  4628              MOV      r0,r5                 ;844
00001c  f7fffffe          BL       WM_InvalidateWindow
                  |L11.32|
000020  f7fffffe          BL       GUI_Unlock
000024  bf00              NOP      
000026  e7ef              B        |L11.8|
;;;848    
                          ENDP


                          AREA ||i.EDIT_SetTextColor||, CODE, READONLY, ALIGN=1

                  EDIT_SetTextColor PROC
;;;690    */
;;;691    void EDIT_SetTextColor(EDIT_Handle hObj, unsigned int Index, GUI_COLOR color) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
000006  460d              MOV      r5,r1
000008  4617              MOV      r7,r2
;;;692      EDIT_Obj* pObj;
;;;693      if (hObj == 0)
00000a  b90e              CBNZ     r6,|L12.16|
                  |L12.12|
;;;694        return;
;;;695      WM_LOCK();
;;;696      pObj = EDIT_H2P(hObj);
;;;697      if (pObj) {
;;;698        if (Index < GUI_COUNTOF(pObj->Props.aTextColor)) {
;;;699          pObj->Props.aTextColor[Index] = color;
;;;700          EDIT_Invalidate(hObj);
;;;701        }
;;;702      }
;;;703      WM_UNLOCK();
;;;704    }
00000c  e8bd81f0          POP      {r4-r8,pc}
                  |L12.16|
000010  f7fffffe          BL       GUI_Lock
000014  4630              MOV      r0,r6                 ;696
000016  f7fffffe          BL       GUI_ALLOC_h2p
00001a  4604              MOV      r4,r0                 ;696
00001c  b144              CBZ      r4,|L12.48|
00001e  2d02              CMP      r5,#2                 ;698
000020  d206              BCS      |L12.48|
000022  f1040060          ADD      r0,r4,#0x60           ;699
000026  f8407025          STR      r7,[r0,r5,LSL #2]     ;699
00002a  4630              MOV      r0,r6                 ;700
00002c  f7fffffe          BL       WM_InvalidateWindow
                  |L12.48|
000030  f7fffffe          BL       GUI_Unlock
000034  bf00              NOP      
000036  e7e9              B        |L12.12|
;;;705    
                          ENDP


                          AREA ||i.EDIT_SetValue||, CODE, READONLY, ALIGN=1

                  EDIT_SetValue PROC
;;;796    */
;;;797    void EDIT_SetValue(EDIT_Handle hObj, I32 Value) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;798      _SetValue(hObj, Value, 0);
000006  2200              MOVS     r2,#0
000008  4629              MOV      r1,r5
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       _SetValue
;;;799    }
000010  bd70              POP      {r4-r6,pc}
;;;800    
                          ENDP


                          AREA ||i.EDIT__GetCurrentChar||, CODE, READONLY, ALIGN=1

                  EDIT__GetCurrentChar PROC
;;;380    */
;;;381    U16 EDIT__GetCurrentChar(EDIT_Obj* pObj) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;382      U16 Char = 0;
000004  2600              MOVS     r6,#0
;;;383      if (pObj->hpText) {
000006  8d20              LDRH     r0,[r4,#0x28]
000008  b170              CBZ      r0,|L14.40|
;;;384        const char* pText;
;;;385        pText  = (const char*) GUI_ALLOC_h2p(pObj->hpText);
00000a  f9b40028          LDRSH    r0,[r4,#0x28]
00000e  f7fffffe          BL       GUI_ALLOC_h2p
000012  4605              MOV      r5,r0
;;;386        pText += GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
000014  4628              MOV      r0,r5
000016  6c21              LDR      r1,[r4,#0x40]
000018  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00001c  4405              ADD      r5,r5,r0
;;;387        Char   = GUI_UC_GetCharCode(pText);
00001e  4628              MOV      r0,r5
000020  f7fffffe          BL       GUI_UC_GetCharCode
000024  4606              MOV      r6,r0
;;;388      }
000026  bf00              NOP      
                  |L14.40|
;;;389      return Char;
000028  4630              MOV      r0,r6
;;;390    }
00002a  bd70              POP      {r4-r6,pc}
;;;391    
                          ENDP


                          AREA ||i.EDIT__SetCursorPos||, CODE, READONLY, ALIGN=1

                  EDIT__SetCursorPos PROC
;;;397    */
;;;398    void EDIT__SetCursorPos(EDIT_Obj* pObj, int CursorPos) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;399      if (pObj->hpText) {
000008  8d20              LDRH     r0,[r4,#0x28]
00000a  b320              CBZ      r0,|L15.86|
;;;400        char* pText;
;;;401        int NumChars, Offset;
;;;402        pText    = (char*) GUI_ALLOC_h2p(pObj->hpText);
00000c  f9b40028          LDRSH    r0,[r4,#0x28]
000010  f7fffffe          BL       GUI_ALLOC_h2p
000014  4680              MOV      r8,r0
;;;403        NumChars = GUI__GetNumChars(pText);
000016  4640              MOV      r0,r8
000018  f7fffffe          BL       GUI__GetNumChars
00001c  4606              MOV      r6,r0
;;;404        Offset   = (pObj->EditMode == GUI_EDIT_MODE_INSERT) ? 0 : 1;
00001e  f8940048          LDRB     r0,[r4,#0x48]
000022  b108              CBZ      r0,|L15.40|
000024  2001              MOVS     r0,#1
000026  e000              B        |L15.42|
                  |L15.40|
000028  2000              MOVS     r0,#0
                  |L15.42|
00002a  4607              MOV      r7,r0
;;;405        if (CursorPos < 0) {
00002c  2d00              CMP      r5,#0
00002e  da00              BGE      |L15.50|
;;;406          CursorPos = 0;
000030  2500              MOVS     r5,#0
                  |L15.50|
;;;407        }
;;;408        if (CursorPos > NumChars) {
000032  42b5              CMP      r5,r6
000034  dd00              BLE      |L15.56|
;;;409          CursorPos = NumChars;
000036  4635              MOV      r5,r6
                  |L15.56|
;;;410        }
;;;411        if (CursorPos > (pObj->MaxLen - Offset)) {
000038  f9b4002a          LDRSH    r0,[r4,#0x2a]
00003c  1bc0              SUBS     r0,r0,r7
00003e  42a8              CMP      r0,r5
000040  da02              BGE      |L15.72|
;;;412          CursorPos = pObj->MaxLen - Offset;
000042  f9b4002a          LDRSH    r0,[r4,#0x2a]
000046  1bc5              SUBS     r5,r0,r7
                  |L15.72|
;;;413        }
;;;414        if (pObj->CursorPos != CursorPos) {
000048  6c20              LDR      r0,[r4,#0x40]
00004a  42a8              CMP      r0,r5
00004c  d000              BEQ      |L15.80|
;;;415          pObj->CursorPos = CursorPos;
00004e  6425              STR      r5,[r4,#0x40]
                  |L15.80|
;;;416        }
;;;417        pObj->SelSize = 0;
000050  2000              MOVS     r0,#0
000052  6460              STR      r0,[r4,#0x44]
;;;418      }
000054  bf00              NOP      
                  |L15.86|
;;;419    }
000056  e8bd81f0          POP      {r4-r8,pc}
;;;420    
                          ENDP


                          AREA ||i.EDIT__SetValueUnsigned||, CODE, READONLY, ALIGN=1

                  EDIT__SetValueUnsigned PROC
;;;424    */
;;;425    void EDIT__SetValueUnsigned(EDIT_Handle hObj, I32 Value) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;426      _SetValue(hObj, Value, 1);
000006  2201              MOVS     r2,#1
000008  4629              MOV      r1,r5
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       _SetValue
;;;427    }
000010  bd70              POP      {r4-r6,pc}
;;;428    
                          ENDP


                          AREA ||i._Delete||, CODE, READONLY, ALIGN=1

                  _Delete PROC
;;;170    */
;;;171    static void _Delete(EDIT_Obj* pObj) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;172      GUI_ALLOC_FreePtr(&pObj->hpText);
000004  f1040028          ADD      r0,r4,#0x28
000008  f7fffffe          BL       GUI_ALLOC_FreePtr
;;;173    }
00000c  bd10              POP      {r4,pc}
;;;174    
                          ENDP


                          AREA ||i._DeleteChar||, CODE, READONLY, ALIGN=1

                  _DeleteChar PROC
;;;253    */
;;;254    static void _DeleteChar(EDIT_Handle hObj, EDIT_Obj* pObj) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
;;;255      if (pObj->hpText) {
000008  8d20              LDRH     r0,[r4,#0x28]
00000a  b1f0              CBZ      r0,|L18.74|
;;;256        unsigned CursorOffset;
;;;257        char* pText;
;;;258        pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
00000c  f9b40028          LDRSH    r0,[r4,#0x28]
000010  f7fffffe          BL       GUI_ALLOC_h2p
000014  4605              MOV      r5,r0
;;;259        CursorOffset = GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
000016  4628              MOV      r0,r5
000018  6c21              LDR      r1,[r4,#0x40]
00001a  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00001e  4606              MOV      r6,r0
;;;260        if (CursorOffset < strlen(pText)) {
000020  4628              MOV      r0,r5
000022  f7fffffe          BL       strlen
000026  42b0              CMP      r0,r6
000028  d90e              BLS      |L18.72|
;;;261          int NumBytes;
;;;262          pText += CursorOffset;
00002a  4435              ADD      r5,r5,r6
;;;263          NumBytes = GUI_UC_GetCharSize(pText);
00002c  4628              MOV      r0,r5
00002e  f7fffffe          BL       GUI_UC_GetCharSize
000032  4680              MOV      r8,r0
;;;264          strcpy(pText, pText + NumBytes);
000034  eb050108          ADD      r1,r5,r8
000038  4628              MOV      r0,r5
00003a  f7fffffe          BL       strcpy
;;;265          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
00003e  2105              MOVS     r1,#5
000040  4638              MOV      r0,r7
000042  f7fffffe          BL       WM_NotifyParent
;;;266        }
000046  bf00              NOP      
                  |L18.72|
;;;267      }
000048  bf00              NOP      
                  |L18.74|
;;;268    }
00004a  e8bd81f0          POP      {r4-r8,pc}
;;;269    
                          ENDP


                          AREA ||i._IncrementBuffer||, CODE, READONLY, ALIGN=1

                  _IncrementBuffer PROC
;;;180    */
;;;181    static int _IncrementBuffer(EDIT_Obj* pObj, unsigned AddBytes) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
;;;182      WM_HMEM hNew;
;;;183      int NewSize;
;;;184      NewSize = pObj->BufferSize + AddBytes;
000008  8da0              LDRH     r0,[r4,#0x2c]
00000a  1987              ADDS     r7,r0,r6
;;;185      hNew    = GUI_ALLOC_Realloc(pObj->hpText, NewSize);
00000c  f9b40028          LDRSH    r0,[r4,#0x28]
000010  4639              MOV      r1,r7
000012  f7fffffe          BL       GUI_ALLOC_Realloc
000016  4605              MOV      r5,r0
;;;186      if (hNew) {
000018  b175              CBZ      r5,|L19.56|
;;;187        if (!(pObj->hpText)) {
00001a  8d20              LDRH     r0,[r4,#0x28]
00001c  b938              CBNZ     r0,|L19.46|
;;;188          char* pText;
;;;189          pText  = (char*) GUI_ALLOC_h2p(hNew);
00001e  4628              MOV      r0,r5
000020  f7fffffe          BL       GUI_ALLOC_h2p
000024  4680              MOV      r8,r0
;;;190          *pText = 0;
000026  2000              MOVS     r0,#0
000028  f8880000          STRB     r0,[r8,#0]
;;;191        }
00002c  bf00              NOP      
                  |L19.46|
;;;192        pObj->BufferSize = NewSize;
00002e  85a7              STRH     r7,[r4,#0x2c]
;;;193        pObj->hpText     = hNew;
000030  8525              STRH     r5,[r4,#0x28]
;;;194        return 1;
000032  2001              MOVS     r0,#1
                  |L19.52|
;;;195      }
;;;196      return 0;
;;;197    }
000034  e8bd81f0          POP      {r4-r8,pc}
                  |L19.56|
000038  2000              MOVS     r0,#0                 ;196
00003a  e7fb              B        |L19.52|
;;;198    
                          ENDP


                          AREA ||i._InsertChar||, CODE, READONLY, ALIGN=1

                  _InsertChar PROC
;;;275    */
;;;276    static int _InsertChar(EDIT_Handle hObj, EDIT_Obj* pObj, U16 Char) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4680              MOV      r8,r0
000006  460c              MOV      r4,r1
000008  4616              MOV      r6,r2
;;;277      if (_IsCharsAvailable(pObj, 1)) {
00000a  2101              MOVS     r1,#1
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       _IsCharsAvailable
000012  b348              CBZ      r0,|L20.104|
;;;278        int BytesNeeded;
;;;279        BytesNeeded = GUI_UC__CalcSizeOfChar(Char);
000014  4630              MOV      r0,r6
000016  f7fffffe          BL       GUI_UC__CalcSizeOfChar
00001a  4607              MOV      r7,r0
;;;280        if (_IsSpaceInBuffer(pObj, BytesNeeded)) {
00001c  4639              MOV      r1,r7
00001e  4620              MOV      r0,r4
000020  f7fffffe          BL       _IsSpaceInBuffer
000024  b1f8              CBZ      r0,|L20.102|
;;;281          int CursorOffset;
;;;282          char* pText;
;;;283          pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
000026  f9b40028          LDRSH    r0,[r4,#0x28]
00002a  f7fffffe          BL       GUI_ALLOC_h2p
00002e  4605              MOV      r5,r0
;;;284          CursorOffset = GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
000030  4628              MOV      r0,r5
000032  6c21              LDR      r1,[r4,#0x40]
000034  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000038  4681              MOV      r9,r0
;;;285          pText += CursorOffset;
00003a  444d              ADD      r5,r5,r9
;;;286          memmove(pText + BytesNeeded, pText, strlen(pText) + 1);
00003c  4628              MOV      r0,r5
00003e  f7fffffe          BL       strlen
000042  f1000a01          ADD      r10,r0,#1
000046  19e8              ADDS     r0,r5,r7
000048  4652              MOV      r2,r10
00004a  4629              MOV      r1,r5
00004c  f7fffffe          BL       __aeabi_memmove
;;;287          GUI_UC_Encode(pText, Char);
000050  4631              MOV      r1,r6
000052  4628              MOV      r0,r5
000054  f7fffffe          BL       GUI_UC_Encode
;;;288          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
000058  2105              MOVS     r1,#5
00005a  4640              MOV      r0,r8
00005c  f7fffffe          BL       WM_NotifyParent
;;;289          return 1;
000060  2001              MOVS     r0,#1
                  |L20.98|
;;;290        }
;;;291      }
;;;292      return 0;
;;;293    }
000062  e8bd87f0          POP      {r4-r10,pc}
                  |L20.102|
000066  bf00              NOP                            ;291
                  |L20.104|
000068  2000              MOVS     r0,#0                 ;292
00006a  e7fa              B        |L20.98|
;;;294    
                          ENDP


                          AREA ||i._IsCharsAvailable||, CODE, READONLY, ALIGN=1

                  _IsCharsAvailable PROC
;;;233    */
;;;234    static int _IsCharsAvailable(EDIT_Obj* pObj, int CharsNeeded) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;235      if ((CharsNeeded > 0) && (pObj->MaxLen > 0)) {
000008  2d00              CMP      r5,#0
00000a  dd17              BLE      |L21.60|
00000c  f9b4002a          LDRSH    r0,[r4,#0x2a]
000010  2800              CMP      r0,#0
000012  dd13              BLE      |L21.60|
;;;236        int NumChars = 0;
000014  2600              MOVS     r6,#0
;;;237        if (pObj->hpText) {
000016  8d20              LDRH     r0,[r4,#0x28]
000018  b138              CBZ      r0,|L21.42|
;;;238          NumChars = GUI__GetNumChars((char*)GUI_ALLOC_h2p(pObj->hpText));
00001a  f9b40028          LDRSH    r0,[r4,#0x28]
00001e  f7fffffe          BL       GUI_ALLOC_h2p
000022  4607              MOV      r7,r0
000024  f7fffffe          BL       GUI__GetNumChars
000028  4606              MOV      r6,r0
                  |L21.42|
;;;239        }
;;;240        if ((CharsNeeded + NumChars) > pObj->MaxLen) {
00002a  19a8              ADDS     r0,r5,r6
00002c  f9b4102a          LDRSH    r1,[r4,#0x2a]
000030  4288              CMP      r0,r1
000032  dd02              BLE      |L21.58|
;;;241          return 0;
000034  2000              MOVS     r0,#0
                  |L21.54|
;;;242        }
;;;243      }
;;;244      return 1;
;;;245    }
000036  e8bd81f0          POP      {r4-r8,pc}
                  |L21.58|
00003a  bf00              NOP                            ;243
                  |L21.60|
00003c  2001              MOVS     r0,#1                 ;244
00003e  e7fa              B        |L21.54|
;;;246    
                          ENDP


                          AREA ||i._IsSpaceInBuffer||, CODE, READONLY, ALIGN=1

                  _IsSpaceInBuffer PROC
;;;209    */
;;;210    static int _IsSpaceInBuffer(EDIT_Obj* pObj, int BytesNeeded) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;211      int NumBytes = 0;
000008  2600              MOVS     r6,#0
;;;212      if (pObj->hpText) {
00000a  8d20              LDRH     r0,[r4,#0x28]
00000c  b138              CBZ      r0,|L22.30|
;;;213        NumBytes = strlen((char*)GUI_ALLOC_h2p(pObj->hpText));
00000e  f9b40028          LDRSH    r0,[r4,#0x28]
000012  f7fffffe          BL       GUI_ALLOC_h2p
000016  4607              MOV      r7,r0
000018  f7fffffe          BL       strlen
00001c  4606              MOV      r6,r0
                  |L22.30|
;;;214      }
;;;215      BytesNeeded = (BytesNeeded + NumBytes + 1) - pObj->BufferSize;
00001e  19a8              ADDS     r0,r5,r6
000020  1c40              ADDS     r0,r0,#1
000022  8da1              LDRH     r1,[r4,#0x2c]
000024  1a45              SUBS     r5,r0,r1
;;;216      if (BytesNeeded > 0) {
000026  2d00              CMP      r5,#0
000028  dd08              BLE      |L22.60|
;;;217        if (!_IncrementBuffer(pObj, BytesNeeded + EDIT_REALLOC_SIZE)) {
00002a  f1050110          ADD      r1,r5,#0x10
00002e  4620              MOV      r0,r4
000030  f7fffffe          BL       _IncrementBuffer
000034  b910              CBNZ     r0,|L22.60|
;;;218          return 0;
000036  2000              MOVS     r0,#0
                  |L22.56|
;;;219        }
;;;220      }
;;;221      return 1;
;;;222    }
000038  e8bd81f0          POP      {r4-r8,pc}
                  |L22.60|
00003c  2001              MOVS     r0,#1                 ;221
00003e  e7fb              B        |L22.56|
;;;223    
                          ENDP


                          AREA ||i._OnTouch||, CODE, READONLY, ALIGN=1

                  _OnTouch PROC
;;;298    */
;;;299    static void _OnTouch(EDIT_Handle hObj, EDIT_Obj* pObj, WM_MESSAGE*pMsg) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4607              MOV      r7,r0
000006  460d              MOV      r5,r1
000008  4614              MOV      r4,r2
;;;300      const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
00000a  68a6              LDR      r6,[r4,#8]
;;;301      GUI_USE_PARA(pObj);
00000c  bf00              NOP      
;;;302      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
00000e  68a0              LDR      r0,[r4,#8]
000010  b178              CBZ      r0,|L23.50|
;;;303        if (pState->Pressed) {
000012  7a30              LDRB     r0,[r6,#8]
000014  b140              CBZ      r0,|L23.40|
;;;304          GUI_DEBUG_LOG1("EDIT_Callback(WM_TOUCH, Pressed, Handle %d)\n",1);
;;;305          EDIT_SetCursorAtPixel(hObj, pState->x);
000016  4638              MOV      r0,r7
000018  6831              LDR      r1,[r6,#0]
00001a  f7fffffe          BL       EDIT_SetCursorAtPixel
;;;306          WM_NotifyParent(hObj, WM_NOTIFICATION_CLICKED);
00001e  2101              MOVS     r1,#1
000020  4638              MOV      r0,r7
000022  f7fffffe          BL       WM_NotifyParent
000026  e008              B        |L23.58|
                  |L23.40|
;;;307        } else {
;;;308          GUI_DEBUG_LOG1("EDIT_Callback(WM_TOUCH, Released, Handle %d)\n",1);
;;;309          WM_NotifyParent(hObj, WM_NOTIFICATION_RELEASED);
000028  2102              MOVS     r1,#2
00002a  4638              MOV      r0,r7
00002c  f7fffffe          BL       WM_NotifyParent
000030  e003              B        |L23.58|
                  |L23.50|
;;;310        }
;;;311      } else {
;;;312        GUI_DEBUG_LOG1("EDIT_Callback(WM_TOUCH, Moved out, Handle %d)\n",1);
;;;313        WM_NotifyParent(hObj, WM_NOTIFICATION_MOVED_OUT);
000032  2103              MOVS     r1,#3
000034  4638              MOV      r0,r7
000036  f7fffffe          BL       WM_NotifyParent
                  |L23.58|
;;;314      }
;;;315    }
00003a  e8bd81f0          POP      {r4-r8,pc}
;;;316    
                          ENDP


                          AREA ||i._Paint||, CODE, READONLY, ALIGN=1

                  _Paint PROC
;;;100    */
;;;101    static void _Paint(EDIT_Obj* pObj, EDIT_Handle hObj) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b089              SUB      sp,sp,#0x24
000006  4604              MOV      r4,r0
000008  4688              MOV      r8,r1
;;;102      GUI_RECT rFillRect, rInside, rText, rInvert;
;;;103      const char GUI_UNI_PTR * pText = NULL;
00000a  f04f0900          MOV      r9,#0
;;;104      int IsEnabled, CursorWidth;
;;;105      IsEnabled = WM__IsEnabled(hObj);
00000e  4640              MOV      r0,r8
000010  f7fffffe          BL       WM__IsEnabled
000014  4682              MOV      r10,r0
;;;106      /* Set colors and font */
;;;107      LCD_SetBkColor(pObj->Props.aBkColor[IsEnabled]);
000016  f1040168          ADD      r1,r4,#0x68
00001a  f851002a          LDR      r0,[r1,r10,LSL #2]
00001e  f7fffffe          BL       LCD_SetBkColor
;;;108      LCD_SetColor(pObj->Props.aTextColor[0]);
000022  6e20              LDR      r0,[r4,#0x60]
000024  f7fffffe          BL       LCD_SetColor
;;;109      GUI_SetFont(pObj->Props.pFont);
000028  6de0              LDR      r0,[r4,#0x5c]
00002a  f7fffffe          BL       GUI_SetFont
;;;110      /* Calculate size */
;;;111      WIDGET__GetInsideRect(&pObj->Widget, &rFillRect);
00002e  a907              ADD      r1,sp,#0x1c
000030  4620              MOV      r0,r4
000032  f7fffffe          BL       WIDGET__GetInsideRect
;;;112      if (pObj->hpText) {
000036  8d20              LDRH     r0,[r4,#0x28]
000038  b120              CBZ      r0,|L24.68|
;;;113        pText = (const char*) GUI_ALLOC_h2p(pObj->hpText);
00003a  f9b40028          LDRSH    r0,[r4,#0x28]
00003e  f7fffffe          BL       GUI_ALLOC_h2p
000042  4681              MOV      r9,r0
                  |L24.68|
;;;114      }
;;;115      rInside = rFillRect;
000044  e9dd0107          LDRD     r0,r1,[sp,#0x1c]
000048  e9cd0105          STRD     r0,r1,[sp,#0x14]
;;;116      rInside.x0 += pObj->Props.Border + EDIT_XOFF;
00004c  f8bd1014          LDRH     r1,[sp,#0x14]
000050  2058              MOVS     r0,#0x58
000052  5b00              LDRH     r0,[r0,r4]
000054  1c40              ADDS     r0,r0,#1
000056  4408              ADD      r0,r0,r1
000058  b200              SXTH     r0,r0
00005a  f8ad0014          STRH     r0,[sp,#0x14]
;;;117      rInside.x1 -= pObj->Props.Border + EDIT_XOFF;
00005e  f8bd1018          LDRH     r1,[sp,#0x18]
000062  2058              MOVS     r0,#0x58
000064  5b00              LDRH     r0,[r0,r4]
000066  1c40              ADDS     r0,r0,#1
000068  1a08              SUBS     r0,r1,r0
00006a  b200              SXTH     r0,r0
00006c  f8ad0018          STRH     r0,[sp,#0x18]
;;;118      GUI__CalcTextRect(pText, &rInside, &rText, pObj->Props.Align);
000070  aa03              ADD      r2,sp,#0xc
000072  a905              ADD      r1,sp,#0x14
000074  4648              MOV      r0,r9
000076  6d63              LDR      r3,[r4,#0x54]
000078  f7fffffe          BL       GUI__CalcTextRect
;;;119      /* Calculate position and size of cursor */
;;;120      if (pObj->Widget.State & WIDGET_STATE_FOCUS) {
00007c  f8940026          LDRB     r0,[r4,#0x26]
000080  f0100f01          TST      r0,#1
000084  d056              BEQ      |L24.308|
;;;121        int NumChars;
;;;122        CursorWidth = ((pObj->XSizeCursor > 0) ? (pObj->XSizeCursor) : (1));
000086  f8940049          LDRB     r0,[r4,#0x49]
00008a  2800              CMP      r0,#0
00008c  dd02              BLE      |L24.148|
00008e  f8940049          LDRB     r0,[r4,#0x49]
000092  e000              B        |L24.150|
                  |L24.148|
000094  2001              MOVS     r0,#1
                  |L24.150|
000096  4605              MOV      r5,r0
;;;123        NumChars    = GUI__GetNumChars(pText);
000098  4648              MOV      r0,r9
00009a  f7fffffe          BL       GUI__GetNumChars
00009e  4606              MOV      r6,r0
;;;124        if (pText) {
0000a0  f1b90f00          CMP      r9,#0
0000a4  d045              BEQ      |L24.306|
;;;125          U16 Char;
;;;126          int i, IsRTL = 0;
0000a6  2000              MOVS     r0,#0
0000a8  9000              STR      r0,[sp,#0]
;;;127          if ((pObj->EditMode != GUI_EDIT_MODE_INSERT) || (pObj->SelSize)) {
0000aa  f8940048          LDRB     r0,[r4,#0x48]
0000ae  b908              CBNZ     r0,|L24.180|
0000b0  6c60              LDR      r0,[r4,#0x44]
0000b2  b330              CBZ      r0,|L24.258|
                  |L24.180|
;;;128            if (pObj->CursorPos < NumChars) {
0000b4  6c20              LDR      r0,[r4,#0x40]
0000b6  42b0              CMP      r0,r6
0000b8  da23              BGE      |L24.258|
;;;129              if (pObj->SelSize) {
0000ba  6c60              LDR      r0,[r4,#0x44]
0000bc  b1b0              CBZ      r0,|L24.236|
;;;130                CursorWidth = 0;
0000be  2500              MOVS     r5,#0
;;;131                for (i = pObj->CursorPos; i < (int)(pObj->CursorPos + pObj->SelSize); i++) {
0000c0  6c27              LDR      r7,[r4,#0x40]
0000c2  e00b              B        |L24.220|
                  |L24.196|
;;;132                  Char = GUI__GetCursorCharacter(pText, i, NumChars, 0);
0000c4  2300              MOVS     r3,#0
0000c6  4632              MOV      r2,r6
0000c8  4639              MOV      r1,r7
0000ca  4648              MOV      r0,r9
0000cc  f7fffffe          BL       GUI__GetCursorCharacter
0000d0  4683              MOV      r11,r0
;;;133                  CursorWidth += GUI_GetCharDistX(Char);
0000d2  4658              MOV      r0,r11
0000d4  f7fffffe          BL       GUI_GetCharDistX
0000d8  4405              ADD      r5,r5,r0
0000da  1c7f              ADDS     r7,r7,#1              ;131
                  |L24.220|
0000dc  e9d40110          LDRD     r0,r1,[r4,#0x40]      ;131
0000e0  4408              ADD      r0,r0,r1              ;131
0000e2  42b8              CMP      r0,r7                 ;131
0000e4  dcee              BGT      |L24.196|
;;;134                }
;;;135                if (!CursorWidth) {
0000e6  b965              CBNZ     r5,|L24.258|
;;;136                  CursorWidth = 1;
0000e8  2501              MOVS     r5,#1
0000ea  e00a              B        |L24.258|
                  |L24.236|
;;;137                }
;;;138              } else {
;;;139                Char = GUI__GetCursorCharacter(pText, pObj->CursorPos, NumChars, &IsRTL);
0000ec  466b              MOV      r3,sp
0000ee  4632              MOV      r2,r6
0000f0  4648              MOV      r0,r9
0000f2  6c21              LDR      r1,[r4,#0x40]
0000f4  f7fffffe          BL       GUI__GetCursorCharacter
0000f8  4683              MOV      r11,r0
;;;140                CursorWidth = GUI_GetCharDistX(Char);
0000fa  4658              MOV      r0,r11
0000fc  f7fffffe          BL       GUI_GetCharDistX
000100  4605              MOV      r5,r0
                  |L24.258|
;;;141              }
;;;142            }
;;;143          }
;;;144          rInvert = rText;
000102  e9dd0103          LDRD     r0,r1,[sp,#0xc]
000106  e9cd0101          STRD     r0,r1,[sp,#4]
;;;145          if (IsRTL) {
00010a  9800              LDR      r0,[sp,#0]
00010c  b128              CBZ      r0,|L24.282|
;;;146            rInvert.x0 -= CursorWidth;
00010e  f8bd0004          LDRH     r0,[sp,#4]
000112  1b40              SUBS     r0,r0,r5
000114  b200              SXTH     r0,r0
000116  f8ad0004          STRH     r0,[sp,#4]
                  |L24.282|
;;;147          }
;;;148          rInvert.x0 += GUI__GetCursorPosX(pText, pObj->CursorPos, NumChars);
00011a  4632              MOV      r2,r6
00011c  4648              MOV      r0,r9
00011e  6c21              LDR      r1,[r4,#0x40]
000120  f7fffffe          BL       GUI__GetCursorPosX
000124  f8bd1004          LDRH     r1,[sp,#4]
000128  4408              ADD      r0,r0,r1
00012a  b200              SXTH     r0,r0
00012c  f8ad0004          STRH     r0,[sp,#4]
;;;149        }
000130  bf00              NOP      
                  |L24.306|
;;;150      }
000132  bf00              NOP      
                  |L24.308|
;;;151      /* WM loop */
;;;152      WM_ITERATE_START(NULL) {
000134  2000              MOVS     r0,#0
000136  f7fffffe          BL       WM__InitIVRSearch
00013a  b320              CBZ      r0,|L24.390|
00013c  bf00              NOP      
                  |L24.318|
;;;153        /* Set clipping rectangle */
;;;154        WM_SetUserClipRect(&rFillRect);
00013e  a807              ADD      r0,sp,#0x1c
000140  f7fffffe          BL       WM_SetUserClipRect
;;;155        /* Display text */
;;;156        WIDGET__FillStringInRect(pText, &rFillRect, &rInside, &rText);
000144  ab03              ADD      r3,sp,#0xc
000146  aa05              ADD      r2,sp,#0x14
000148  a907              ADD      r1,sp,#0x1c
00014a  4648              MOV      r0,r9
00014c  f7fffffe          BL       WIDGET__FillStringInRect
;;;157        /* Display cursor if needed */
;;;158        if (pObj->Widget.State & WIDGET_STATE_FOCUS) {
000150  f8940026          LDRB     r0,[r4,#0x26]
000154  f0100f01          TST      r0,#1
000158  d00b              BEQ      |L24.370|
;;;159          GUI_InvertRect(rInvert.x0, rInvert.y0, rInvert.x0 + CursorWidth - 1, rInvert.y1);
00015a  f9bd300a          LDRSH    r3,[sp,#0xa]
00015e  f9bd6004          LDRSH    r6,[sp,#4]
000162  442e              ADD      r6,r6,r5
000164  1e72              SUBS     r2,r6,#1
000166  f9bd1006          LDRSH    r1,[sp,#6]
00016a  f9bd0004          LDRSH    r0,[sp,#4]
00016e  f7fffffe          BL       GUI_InvertRect
                  |L24.370|
;;;160        }
;;;161        WM_SetUserClipRect(NULL);
000172  2000              MOVS     r0,#0
000174  f7fffffe          BL       WM_SetUserClipRect
;;;162        /* Draw the 3D effect (if configured) */
;;;163        WIDGET__EFFECT_DrawDown(&pObj->Widget);
000178  4620              MOV      r0,r4
00017a  f7fffffe          BL       WIDGET__EFFECT_DrawDown
;;;164      } WM_ITERATE_END();
00017e  f7fffffe          BL       WM__GetNextIVR
000182  2800              CMP      r0,#0
000184  d1db              BNE      |L24.318|
                  |L24.390|
;;;165    }
000186  b009              ADD      sp,sp,#0x24
000188  e8bd8ff0          POP      {r4-r11,pc}
;;;166    
                          ENDP


                          AREA ||i._SetValue||, CODE, READONLY, ALIGN=1

                  _SetValue PROC
;;;320    */
;;;321    static void _SetValue(EDIT_Handle hObj, I32 Value, int Unsigned) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
000006  460d              MOV      r5,r1
000008  4617              MOV      r7,r2
;;;322      EDIT_Obj* pObj;
;;;323      if (hObj) {
00000a  2e00              CMP      r6,#0
00000c  d029              BEQ      |L25.98|
;;;324        WM_LOCK();
00000e  f7fffffe          BL       GUI_Lock
;;;325        pObj = EDIT_H2P(hObj);
000012  4630              MOV      r0,r6
000014  f7fffffe          BL       GUI_ALLOC_h2p
000018  4604              MOV      r4,r0
;;;326        /* Put in min/max range */
;;;327        if (Unsigned) {
00001a  b147              CBZ      r7,|L25.46|
;;;328          if ((unsigned)Value < (unsigned)pObj->Min) {
00001c  6b20              LDR      r0,[r4,#0x30]
00001e  42a8              CMP      r0,r5
000020  d900              BLS      |L25.36|
;;;329            Value = pObj->Min;
000022  6b25              LDR      r5,[r4,#0x30]
                  |L25.36|
;;;330          }
;;;331          if ((unsigned)Value > (unsigned)pObj->Max) {
000024  6b60              LDR      r0,[r4,#0x34]
000026  42a8              CMP      r0,r5
000028  d209              BCS      |L25.62|
;;;332            Value = pObj->Max;
00002a  6b65              LDR      r5,[r4,#0x34]
00002c  e007              B        |L25.62|
                  |L25.46|
;;;333          }
;;;334        } else {
;;;335          if (Value < pObj->Min) {
00002e  6b20              LDR      r0,[r4,#0x30]
000030  42a8              CMP      r0,r5
000032  dd00              BLE      |L25.54|
;;;336            Value = pObj->Min;
000034  6b25              LDR      r5,[r4,#0x30]
                  |L25.54|
;;;337          }
;;;338          if (Value > pObj->Max) {
000036  6b60              LDR      r0,[r4,#0x34]
000038  42a8              CMP      r0,r5
00003a  da00              BGE      |L25.62|
;;;339            Value = pObj->Max;
00003c  6b65              LDR      r5,[r4,#0x34]
                  |L25.62|
;;;340          }
;;;341        }
;;;342        if (pObj->CurrentValue != (U32)Value) {
00003e  6be0              LDR      r0,[r4,#0x3c]
000040  42a8              CMP      r0,r5
000042  d00c              BEQ      |L25.94|
;;;343          pObj->CurrentValue = Value;
000044  63e5              STR      r5,[r4,#0x3c]
;;;344          if (pObj->pfUpdateBuffer) {
000046  6d20              LDR      r0,[r4,#0x50]
000048  b110              CBZ      r0,|L25.80|
;;;345            pObj->pfUpdateBuffer(hObj);
00004a  4630              MOV      r0,r6
00004c  6d21              LDR      r1,[r4,#0x50]
00004e  4788              BLX      r1
                  |L25.80|
;;;346          }
;;;347          WM_InvalidateWindow(hObj);
000050  4630              MOV      r0,r6
000052  f7fffffe          BL       WM_InvalidateWindow
;;;348          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
000056  2105              MOVS     r1,#5
000058  4630              MOV      r0,r6
00005a  f7fffffe          BL       WM_NotifyParent
                  |L25.94|
;;;349        }
;;;350        WM_UNLOCK();
00005e  f7fffffe          BL       GUI_Unlock
                  |L25.98|
;;;351      }
;;;352    }
000062  e8bd81f0          POP      {r4-r8,pc}
;;;353    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  EDIT__DefaultProps
                          DCD      0x0000000c
                          DCD      0x00000001
                          DCD      GUI_Font13_1
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00c0c0c0
                          DCD      0x00ffffff
