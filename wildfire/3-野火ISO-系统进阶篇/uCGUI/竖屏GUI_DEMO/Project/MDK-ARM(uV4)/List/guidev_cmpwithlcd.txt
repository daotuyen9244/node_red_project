; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\guidev_cmpwithlcd.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\guidev_cmpwithlcd.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\MemDev\GUIDEV_CmpWithLCD.c]
                          THUMB

                          AREA ||i.GUI_MEMDEV_CompareWithLCD||, CODE, READONLY, ALIGN=2

                  GUI_MEMDEV_CompareWithLCD PROC
;;;44     */
;;;45     int GUI_MEMDEV_CompareWithLCD(GUI_MEMDEV_Handle hMem, int*px, int*py, int *pExp, int*pAct) {
000000  e92d4fff          PUSH     {r0-r11,lr}
000004  b087              SUB      sp,sp,#0x1c
000006  4682              MOV      r10,r0
;;;46       int Ret = 0;
000008  2000              MOVS     r0,#0
00000a  9006              STR      r0,[sp,#0x18]
;;;47       /* Make sure memory handle is valid */
;;;48       if (!hMem) {
00000c  f1ba0f00          CMP      r10,#0
000010  d102              BNE      |L1.24|
;;;49         hMem = GUI_Context.hDevData;
000012  4838              LDR      r0,|L1.244|
000014  f9b0a050          LDRSH    r10,[r0,#0x50]  ; GUI_Context
                  |L1.24|
;;;50       }
;;;51       if (!hMem) {
000018  f1ba0f00          CMP      r10,#0
00001c  d103              BNE      |L1.38|
;;;52         return 1;
00001e  2001              MOVS     r0,#1
                  |L1.32|
;;;53       }
;;;54       GUI_LOCK();
;;;55       {
;;;56         GUI_MEMDEV * pDevData = (GUI_MEMDEV*) GUI_ALLOC_h2p(hMem);  /* Convert to pointer */
;;;57         int y    = pDevData->y0;
;;;58         int x0   = pDevData->x0;
;;;59         int XMax = pDevData->XSize + x0;
;;;60         int YMax = pDevData->YSize + y;
;;;61         int Max;
;;;62         int MagX = LCD_GetXMag();
;;;63         int MagY = LCD_GetYMag();
;;;64         /* Calculate limits */
;;;65         if (y < 0) {
;;;66     			y = 0;
;;;67         }
;;;68         if (x0 < 0) {
;;;69     			x0 = 0;
;;;70         }
;;;71         Max = LCD_GET_YSIZE();
;;;72     		if (YMax > Max) {
;;;73     			YMax = Max;
;;;74         }
;;;75         Max = LCD_GET_XSIZE();
;;;76     		if (XMax > Max) {
;;;77     			XMax = Max;
;;;78         }
;;;79         for (; y < YMax; y++) {
;;;80           int x = x0;
;;;81           U8 * pData = (U8 *)GUI_MEMDEV__XY2PTR(x, y);
;;;82           for (x = x0; x < XMax; x++) {
;;;83             int Exp = *pData++;
;;;84             int Act = LCD_L0_GetPixelIndex(x * MagX, y * MagY);
;;;85             #if (GUI_NUM_LAYERS > 1)
;;;86             if (LCD_GetBitsPerPixelEx(GUI_Context.SelLayer) > 8)
;;;87             #else
;;;88             if (LCD_GetBitsPerPixel() > 8)
;;;89             #endif
;;;90             {
;;;91               Exp |= (*pData++) << 8;
;;;92             }
;;;93             if (Act != Exp) {
;;;94               *px    = x;
;;;95               *py    = y;
;;;96               *pAct  = Act;
;;;97               *pExp  = Exp;
;;;98               Ret = 1;
;;;99               goto Skip;
;;;100            }
;;;101          }
;;;102        }
;;;103      }
;;;104    Skip:
;;;105      GUI_UNLOCK();
;;;106      return Ret;
;;;107    }
000020  b00b              ADD      sp,sp,#0x2c
000022  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.38|
000026  f7fffffe          BL       GUI_Lock
00002a  4650              MOV      r0,r10                ;56
00002c  f7fffffe          BL       GUI_ALLOC_h2p
000030  4607              MOV      r7,r0                 ;56
000032  f9b74002          LDRSH    r4,[r7,#2]            ;57
000036  f9b78000          LDRSH    r8,[r7,#0]            ;58
00003a  f9b70004          LDRSH    r0,[r7,#4]            ;59
00003e  4440              ADD      r0,r0,r8              ;59
000040  9005              STR      r0,[sp,#0x14]         ;59
000042  f9b70006          LDRSH    r0,[r7,#6]            ;60
000046  4420              ADD      r0,r0,r4              ;60
000048  9004              STR      r0,[sp,#0x10]         ;60
00004a  f7fffffe          BL       LCD_GetXMag
00004e  9003              STR      r0,[sp,#0xc]          ;62
000050  f7fffffe          BL       LCD_GetYMag
000054  9002              STR      r0,[sp,#8]            ;63
000056  2c00              CMP      r4,#0                 ;65
000058  da00              BGE      |L1.92|
00005a  2400              MOVS     r4,#0                 ;66
                  |L1.92|
00005c  f1b80f00          CMP      r8,#0                 ;68
000060  da01              BGE      |L1.102|
000062  f04f0800          MOV      r8,#0                 ;69
                  |L1.102|
000066  f7fffffe          BL       LCD_GetYSize
00006a  4605              MOV      r5,r0                 ;71
00006c  9904              LDR      r1,[sp,#0x10]         ;72
00006e  42a9              CMP      r1,r5                 ;72
000070  dd00              BLE      |L1.116|
000072  9504              STR      r5,[sp,#0x10]         ;73
                  |L1.116|
000074  f7fffffe          BL       LCD_GetXSize
000078  4605              MOV      r5,r0                 ;75
00007a  9805              LDR      r0,[sp,#0x14]         ;76
00007c  42a8              CMP      r0,r5                 ;76
00007e  dd00              BLE      |L1.130|
000080  9505              STR      r5,[sp,#0x14]         ;77
                  |L1.130|
000082  e02f              B        |L1.228|
                  |L1.132|
000084  4646              MOV      r6,r8                 ;80
000086  4621              MOV      r1,r4                 ;81
000088  4630              MOV      r0,r6                 ;81
00008a  f7fffffe          BL       GUI_MEMDEV__XY2PTR
00008e  4681              MOV      r9,r0                 ;81
000090  bf00              NOP                            ;82
000092  e023              B        |L1.220|
                  |L1.148|
000094  f819bb01          LDRB     r11,[r9],#1           ;83
000098  9a02              LDR      r2,[sp,#8]            ;84
00009a  fb04f102          MUL      r1,r4,r2              ;84
00009e  9a03              LDR      r2,[sp,#0xc]          ;84
0000a0  fb06f002          MUL      r0,r6,r2              ;84
0000a4  f7fffffe          BL       LCD_L0_GetPixelIndex
0000a8  9001              STR      r0,[sp,#4]            ;84
0000aa  f7fffffe          BL       LCD_GetBitsPerPixel
0000ae  2808              CMP      r0,#8                 ;88
0000b0  dd03              BLE      |L1.186|
0000b2  f8191b01          LDRB     r1,[r9],#1            ;91
0000b6  ea4b2b01          ORR      r11,r11,r1,LSL #8     ;91
                  |L1.186|
0000ba  9801              LDR      r0,[sp,#4]            ;93
0000bc  4558              CMP      r0,r11                ;93
0000be  d00c              BEQ      |L1.218|
0000c0  9808              LDR      r0,[sp,#0x20]         ;94
0000c2  6006              STR      r6,[r0,#0]            ;94
0000c4  9809              LDR      r0,[sp,#0x24]         ;95
0000c6  6004              STR      r4,[r0,#0]            ;95
0000c8  9914              LDR      r1,[sp,#0x50]         ;96
0000ca  9801              LDR      r0,[sp,#4]            ;96
0000cc  6008              STR      r0,[r1,#0]            ;96
0000ce  980a              LDR      r0,[sp,#0x28]         ;97
0000d0  f8c0b000          STR      r11,[r0,#0]           ;97
0000d4  2001              MOVS     r0,#1                 ;98
0000d6  9006              STR      r0,[sp,#0x18]         ;98
0000d8  e008              B        |L1.236|
                  |L1.218|
0000da  1c76              ADDS     r6,r6,#1              ;82
                  |L1.220|
0000dc  9805              LDR      r0,[sp,#0x14]         ;82
0000de  4286              CMP      r6,r0                 ;82
0000e0  dbd8              BLT      |L1.148|
0000e2  1c64              ADDS     r4,r4,#1              ;79
                  |L1.228|
0000e4  9804              LDR      r0,[sp,#0x10]         ;79
0000e6  4284              CMP      r4,r0                 ;79
0000e8  dbcc              BLT      |L1.132|
0000ea  bf00              NOP                            ;104
                  |L1.236|
0000ec  f7fffffe          BL       GUI_Unlock
0000f0  9806              LDR      r0,[sp,#0x18]         ;106
0000f2  e795              B        |L1.32|
;;;108    
                          ENDP

                  |L1.244|
                          DCD      GUI_Context
