; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\guidemo.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\guidemo.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\uCGUIDemo\GUIDEMO.c]
                          THUMB

                          AREA ||i.GUIDEMO_CheckCancel||, CODE, READONLY, ALIGN=2

                  GUIDEMO_CheckCancel PROC
;;;215    
;;;216    int GUIDEMO_CheckCancel(void) {
000000  b510              PUSH     {r4,lr}
;;;217      int c = GUI_GetKey();
000002  f7fffffe          BL       GUI_GetKey
000006  4604              MOV      r4,r0
;;;218      #if GUI_WINSUPPORT
;;;219        WM_ExecIdle();
000008  f7fffffe          BL       WM_Exec
;;;220      #endif
;;;221      if ((c == 'n') || (c=='N'))
00000c  2c6e              CMP      r4,#0x6e
00000e  d001              BEQ      |L1.20|
000010  2c4e              CMP      r4,#0x4e
000012  d102              BNE      |L1.26|
                  |L1.20|
;;;222        _CmdNext =1;
000014  2001              MOVS     r0,#1
000016  490c              LDR      r1,|L1.72|
000018  7008              STRB     r0,[r1,#0]
                  |L1.26|
;;;223      if ((c == 'h') || (c=='H')) {
00001a  2c68              CMP      r4,#0x68
00001c  d001              BEQ      |L1.34|
00001e  2c48              CMP      r4,#0x48
000020  d10e              BNE      |L1.64|
                  |L1.34|
;;;224        GUI_Delay(500);
000022  f44f70fa          MOV      r0,#0x1f4
000026  f7fffffe          BL       GUI_Delay
;;;225        do {
00002a  bf00              NOP      
                  |L1.44|
;;;226          GUI_Delay(10);
00002c  200a              MOVS     r0,#0xa
00002e  f7fffffe          BL       GUI_Delay
;;;227          #if GUI_WINSUPPORT
;;;228            WM_ExecIdle();
000032  f7fffffe          BL       WM_Exec
;;;229          #endif
;;;230          c = GUI_GetKey();
000036  f7fffffe          BL       GUI_GetKey
00003a  4604              MOV      r4,r0
;;;231        } while (!c);
00003c  2c00              CMP      r4,#0
00003e  d0f5              BEQ      |L1.44|
                  |L1.64|
;;;232      }
;;;233      return _CmdNext;
000040  4801              LDR      r0,|L1.72|
000042  7800              LDRB     r0,[r0,#0]  ; _CmdNext
;;;234    }
000044  bd10              POP      {r4,pc}
;;;235    
                          ENDP

000046  0000              DCW      0x0000
                  |L1.72|
                          DCD      _CmdNext

                          AREA ||i.GUIDEMO_Delay||, CODE, READONLY, ALIGN=2

                  GUIDEMO_Delay PROC
;;;177    
;;;178    int GUIDEMO_Delay(int t) {
000000  e92d43fe          PUSH     {r1-r9,lr}
000004  4604              MOV      r4,r0
;;;179      int r = 0;
000006  2700              MOVS     r7,#0
;;;180      #if GUI_WINSUPPORT
;;;181        U32 value, tm;
;;;182        #if GUIDEMO_LARGE
;;;183          PROGBAR_Handle hProg;
;;;184        #endif
;;;185        WM_SetForegroundWindow(_ahButton[0]);
000008  491e              LDR      r1,|L2.132|
00000a  f9b10000          LDRSH    r0,[r1,#0]  ; _ahButton
00000e  f7fffffe          BL       WM_BringToTop
;;;186        #if GUIDEMO_LARGE
;;;187          hProg = (t > 100) ? PROGBAR_CreateAsChild(10, 10, 60, 7, _ahInfoWin[1], 0,
000012  2c64              CMP      r4,#0x64
000014  dd0e              BLE      |L2.52|
000016  210e              MOVS     r1,#0xe
000018  2200              MOVS     r2,#0
00001a  481b              LDR      r0,|L2.136|
00001c  f9b00002          LDRSH    r0,[r0,#2]  ; _ahInfoWin
000020  2307              MOVS     r3,#7
000022  e9cd2101          STRD     r2,r1,[sp,#4]
000026  9000              STR      r0,[sp,#0]
000028  223c              MOVS     r2,#0x3c
00002a  210a              MOVS     r1,#0xa
00002c  4608              MOV      r0,r1
00002e  f7fffffe          BL       PROGBAR_CreateAsChild
000032  e000              B        |L2.54|
                  |L2.52|
;;;188                                            WM_CF_SHOW | WM_CF_STAYONTOP| WM_CF_MEMDEV) : 0;
000034  2000              MOVS     r0,#0
                  |L2.54|
000036  4680              MOV      r8,r0
;;;189          PROGBAR_SetMinMax(hProg, 0, t);
000038  4622              MOV      r2,r4
00003a  2100              MOVS     r1,#0
00003c  4640              MOV      r0,r8
00003e  f7fffffe          BL       PROGBAR_SetMinMax
;;;190        #endif
;;;191        tm = GUI_GetTime();
000042  f7fffffe          BL       GUI_GetTime
000046  4606              MOV      r6,r0
;;;192        do {
000048  bf00              NOP      
                  |L2.74|
;;;193          value = GUI_GetTime() - tm;
00004a  f7fffffe          BL       GUI_GetTime
00004e  1b85              SUBS     r5,r0,r6
;;;194          #if GUIDEMO_LARGE
;;;195            PROGBAR_SetValue(hProg, value);
000050  4629              MOV      r1,r5
000052  4640              MOV      r0,r8
000054  f7fffffe          BL       PROGBAR_SetValue
;;;196            WM_ExecIdle();
000058  f7fffffe          BL       WM_Exec
;;;197          #endif
;;;198          GUI_Delay(10);
00005c  200a              MOVS     r0,#0xa
00005e  f7fffffe          BL       GUI_Delay
;;;199        } while ((value < (U32)t) && !GUIDEMO_CheckCancel());
000062  42a5              CMP      r5,r4
000064  d203              BCS      |L2.110|
000066  f7fffffe          BL       GUIDEMO_CheckCancel
00006a  2800              CMP      r0,#0
00006c  d0ed              BEQ      |L2.74|
                  |L2.110|
;;;200        #if GUIDEMO_LARGE
;;;201          PROGBAR_Delete(hProg);
00006e  4640              MOV      r0,r8
000070  f7fffffe          BL       WM_DeleteWindow
;;;202        #endif
;;;203        _UpdateCmdWin();
000074  f7fffffe          BL       _UpdateCmdWin
;;;204        WM_ExecIdle();
000078  f7fffffe          BL       WM_Exec
;;;205      #else
;;;206        GUI_Delay(t);
;;;207      #endif
;;;208      return r;
00007c  4638              MOV      r0,r7
;;;209    }
00007e  e8bd83fe          POP      {r1-r9,pc}
;;;210    
                          ENDP

000082  0000              DCW      0x0000
                  |L2.132|
                          DCD      _ahButton
                  |L2.136|
                          DCD      _ahInfoWin

                          AREA ||i.GUIDEMO_HideInfoWin||, CODE, READONLY, ALIGN=2

                  GUIDEMO_HideInfoWin PROC
;;;240    
;;;241    void GUIDEMO_HideInfoWin(void) {
000000  b510              PUSH     {r4,lr}
;;;242      #if GUI_WINSUPPORT
;;;243        WM_HideWindow(_ahFrameWin[0]);
000002  4903              LDR      r1,|L3.16|
000004  f9b10000          LDRSH    r0,[r1,#0]  ; _ahFrameWin
000008  f7fffffe          BL       WM_HideWindow
;;;244      #endif
;;;245    }
00000c  bd10              POP      {r4,pc}
;;;246    
                          ENDP

00000e  0000              DCW      0x0000
                  |L3.16|
                          DCD      _ahFrameWin

                          AREA ||i.GUIDEMO_NotifyStartNext||, CODE, READONLY, ALIGN=2

                  GUIDEMO_NotifyStartNext PROC
;;;247    
;;;248    void GUIDEMO_NotifyStartNext(void) {
000000  b510              PUSH     {r4,lr}
;;;249      _CmdNext = 0;
000002  2000              MOVS     r0,#0
000004  4904              LDR      r1,|L4.24|
000006  7008              STRB     r0,[r1,#0]
;;;250      _UpdateCmdWin();
000008  f7fffffe          BL       _UpdateCmdWin
;;;251      _iTestMinor++;
00000c  4803              LDR      r0,|L4.28|
00000e  6800              LDR      r0,[r0,#0]  ; _iTestMinor
000010  1c40              ADDS     r0,r0,#1
000012  4902              LDR      r1,|L4.28|
000014  6008              STR      r0,[r1,#0]  ; _iTestMinor
;;;252    }
000016  bd10              POP      {r4,pc}
;;;253    
                          ENDP

                  |L4.24|
                          DCD      _CmdNext
                  |L4.28|
                          DCD      _iTestMinor

                          AREA ||i.GUIDEMO_SetBkColor||, CODE, READONLY, ALIGN=1

                  GUIDEMO_SetBkColor PROC
;;;155    
;;;156    GUI_COLOR GUIDEMO_SetBkColor(GUI_COLOR Color) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
;;;157      GUI_COLOR r;
;;;158      if (GUI_ColorIsAvailable(GUI_RED)) {
000004  20ff              MOVS     r0,#0xff
000006  f7fffffe          BL       GUI_ColorIsAvailable
00000a  b108              CBZ      r0,|L5.16|
;;;159        r = Color;
00000c  462c              MOV      r4,r5
00000e  e000              B        |L5.18|
                  |L5.16|
;;;160      } else {
;;;161        r = GUI_BLACK;
000010  2400              MOVS     r4,#0
                  |L5.18|
;;;162      }
;;;163      GUI_SetBkColor(r);
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       GUI_SetBkColor
;;;164      return r;
000018  4620              MOV      r0,r4
;;;165    }
00001a  bd70              POP      {r4-r6,pc}
;;;166    
                          ENDP


                          AREA ||i.GUIDEMO_SetColor||, CODE, READONLY, ALIGN=1

                  GUIDEMO_SetColor PROC
;;;166    
;;;167    GUI_COLOR GUIDEMO_SetColor(GUI_COLOR Color) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
;;;168      GUI_COLOR r;
;;;169      if (GUI_ColorIsAvailable(GUI_RED)) {
000004  20ff              MOVS     r0,#0xff
000006  f7fffffe          BL       GUI_ColorIsAvailable
00000a  b108              CBZ      r0,|L6.16|
;;;170        r = Color;
00000c  462c              MOV      r4,r5
00000e  e001              B        |L6.20|
                  |L6.16|
;;;171      } else {
;;;172        r = GUI_WHITE;
000010  f06f447f          MVN      r4,#0xff000000
                  |L6.20|
;;;173      }
;;;174      GUI_SetColor(r);
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       GUI_SetColor
;;;175      return r;
00001a  4620              MOV      r0,r4
;;;176    }
00001c  bd70              POP      {r4-r6,pc}
;;;177    
                          ENDP


                          AREA ||i.GUIDEMO_ShowInfo||, CODE, READONLY, ALIGN=2

                  GUIDEMO_ShowInfo PROC
;;;235    
;;;236    void GUIDEMO_ShowInfo(const char* s) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;237      _sExplain = s;
000004  4802              LDR      r0,|L7.16|
000006  6004              STR      r4,[r0,#0]  ; _sExplain
;;;238      _UpdateInfoWin();
000008  f7fffffe          BL       _UpdateInfoWin
;;;239    }
00000c  bd10              POP      {r4,pc}
;;;240    
                          ENDP

00000e  0000              DCW      0x0000
                  |L7.16|
                          DCD      _sExplain

                          AREA ||i.GUIDEMO_ShowIntro||, CODE, READONLY, ALIGN=2

                  GUIDEMO_ShowIntro PROC
;;;273    
;;;274    void GUIDEMO_ShowIntro(const char * s, const char * sExp) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  b09a              SUB      sp,sp,#0x68
000006  4604              MOV      r4,r0
000008  460d              MOV      r5,r1
;;;275      GUI_CONTEXT ContextOld;
;;;276      GUI_SaveContext(&ContextOld);
00000a  a801              ADD      r0,sp,#4
00000c  f7fffffe          BL       GUI_SaveContext_W_M
;;;277    #if GUI_WINSUPPORT && GUIDEMO_LARGE
;;;278      _sInfo = s;
000010  482e              LDR      r0,|L8.204|
000012  6004              STR      r4,[r0,#0]  ; _sInfo
;;;279    #endif
;;;280      _sExplain = sExp;
000014  482e              LDR      r0,|L8.208|
000016  6005              STR      r5,[r0,#0]  ; _sExplain
;;;281      GUI_SetDefault();
000018  f7fffffe          BL       GUI_SetDefault
;;;282      GUIDEMO_HideInfoWin();
00001c  f7fffffe          BL       GUIDEMO_HideInfoWin
;;;283      GUIDEMO_SetBkColor(GUI_BLUE);
000020  f44f007f          MOV      r0,#0xff0000
000024  f7fffffe          BL       GUIDEMO_SetBkColor
;;;284      GUI_SetColor(GUI_WHITE);
000028  f06f407f          MVN      r0,#0xff000000
00002c  f7fffffe          BL       GUI_SetColor
;;;285      GUI_Clear();
000030  f7fffffe          BL       GUI_Clear
;;;286      #if !(GUIDEMO_TINY)
;;;287        GUI_SetFont(&GUI_FontComic18B_ASCII);
000034  4827              LDR      r0,|L8.212|
000036  f7fffffe          BL       GUI_SetFont
;;;288        GUI_DispStringHCenterAt(s, LCD_GET_XSIZE() / 2, LCD_GET_YSIZE() / 3 - 10);
00003a  f7fffffe          BL       LCD_GetYSize
00003e  2103              MOVS     r1,#3
000040  fb90f0f1          SDIV     r0,r0,r1
000044  f1a0070a          SUB      r7,r0,#0xa
000048  f7fffffe          BL       LCD_GetXSize
00004c  4606              MOV      r6,r0
00004e  eb0070d6          ADD      r0,r0,r6,LSR #31
000052  1041              ASRS     r1,r0,#1
000054  463a              MOV      r2,r7
000056  4620              MOV      r0,r4
000058  f7fffffe          BL       GUI_DispStringHCenterAt
;;;289      #else
;;;290        GUI_SetFont(&GUI_Font13B_ASCII);
;;;291        GUI_DispStringHCenterAt(s, LCD_GET_XSIZE() / 2, LCD_GET_YSIZE() / 3 - 18);
;;;292      #endif
;;;293      if (_sExplain) {
00005c  481c              LDR      r0,|L8.208|
00005e  6800              LDR      r0,[r0,#0]  ; _sExplain
000060  b1a8              CBZ      r0,|L8.142|
;;;294        GUI_SetFont(&GUI_Font8_ASCII);
000062  481d              LDR      r0,|L8.216|
000064  f7fffffe          BL       GUI_SetFont
;;;295        #if !(GUIDEMO_TINY)
;;;296          GUI_DispStringHCenterAt(_sExplain, LCD_GET_XSIZE() / 2, LCD_GET_YSIZE() / 2 - 10);
000068  f7fffffe          BL       LCD_GetYSize
00006c  4606              MOV      r6,r0
00006e  eb0070d6          ADD      r0,r0,r6,LSR #31
000072  1040              ASRS     r0,r0,#1
000074  f1a0080a          SUB      r8,r0,#0xa
000078  f7fffffe          BL       LCD_GetXSize
00007c  4607              MOV      r7,r0
00007e  eb0070d7          ADD      r0,r0,r7,LSR #31
000082  1041              ASRS     r1,r0,#1
000084  4642              MOV      r2,r8
000086  4812              LDR      r0,|L8.208|
000088  6800              LDR      r0,[r0,#0]  ; _sExplain
00008a  f7fffffe          BL       GUI_DispStringHCenterAt
                  |L8.142|
;;;297        #else
;;;298          GUI_DispStringHCenterAt(_sExplain, LCD_GET_XSIZE() / 2, LCD_GET_YSIZE() / 2 - 14);
;;;299        #endif
;;;300      }
;;;301      GUIDEMO_Delay(_sExplain ? 2000 : 4000);
00008e  4910              LDR      r1,|L8.208|
000090  6809              LDR      r1,[r1,#0]  ; _sExplain
000092  b111              CBZ      r1,|L8.154|
000094  f44f61fa          MOV      r1,#0x7d0
000098  e001              B        |L8.158|
                  |L8.154|
00009a  f44f617a          MOV      r1,#0xfa0
                  |L8.158|
00009e  4608              MOV      r0,r1
0000a0  f7fffffe          BL       GUIDEMO_Delay
;;;302    #if GUI_WINSUPPORT
;;;303      _UpdateInfoWin();
0000a4  f7fffffe          BL       _UpdateInfoWin
;;;304      _UpdateCmdWin();
0000a8  f7fffffe          BL       _UpdateCmdWin
;;;305    #endif
;;;306      GUI_RestoreContext(&ContextOld);
0000ac  a801              ADD      r0,sp,#4
0000ae  f7fffffe          BL       GUI_RestoreContext
;;;307      #if GUI_WINSUPPORT
;;;308        WM_ExecIdle();
0000b2  f7fffffe          BL       WM_Exec
;;;309      #endif
;;;310      GUIDEMO_NotifyStartNext();
0000b6  f7fffffe          BL       GUIDEMO_NotifyStartNext
;;;311      GUIDEMO_SetBkColor(GUI_RED);
0000ba  20ff              MOVS     r0,#0xff
0000bc  f7fffffe          BL       GUIDEMO_SetBkColor
;;;312      GUI_Clear();
0000c0  f7fffffe          BL       GUI_Clear
;;;313    }
0000c4  b01a              ADD      sp,sp,#0x68
0000c6  e8bd81f0          POP      {r4-r8,pc}
;;;314    
                          ENDP

0000ca  0000              DCW      0x0000
                  |L8.204|
                          DCD      _sInfo
                  |L8.208|
                          DCD      _sExplain
                  |L8.212|
                          DCD      GUI_FontComic18B_ASCII
                  |L8.216|
                          DCD      GUI_Font8_ASCII

                          AREA ||i.GUIDEMO_Wait||, CODE, READONLY, ALIGN=1

                  GUIDEMO_Wait PROC
;;;210    
;;;211    void GUIDEMO_Wait(void) {
000000  b510              PUSH     {r4,lr}
;;;212      GUIDEMO_Delay(4000);
000002  f44f607a          MOV      r0,#0xfa0
000006  f7fffffe          BL       GUIDEMO_Delay
;;;213      GUIDEMO_NotifyStartNext();
00000a  f7fffffe          BL       GUIDEMO_NotifyStartNext
;;;214    }
00000e  bd10              POP      {r4,pc}
;;;215    
                          ENDP


                          AREA ||i.GUIDEMO_WaitKey||, CODE, READONLY, ALIGN=1

                  GUIDEMO_WaitKey PROC
;;;253    
;;;254    int GUIDEMO_WaitKey(void) {
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;255      int r = 0;
000004  2500              MOVS     r5,#0
;;;256      U32 tMax = GUI_GetTime() + 4000;
000006  f7fffffe          BL       GUI_GetTime
00000a  f500667a          ADD      r6,r0,#0xfa0
;;;257      U32 tDiff; 
;;;258      #if GUI_WINSUPPORT
;;;259        PROGBAR_Handle hProg = PROGBAR_Create(LCD_GetXSize() - 70, 
00000e  f7fffffe          BL       LCD_GetYSize
000012  f1a00828          SUB      r8,r0,#0x28
000016  f7fffffe          BL       LCD_GetXSize
00001a  f1a00946          SUB      r9,r0,#0x46
00001e  2002              MOVS     r0,#2
000020  2305              MOVS     r3,#5
000022  2250              MOVS     r2,#0x50
000024  4641              MOV      r1,r8
000026  9000              STR      r0,[sp,#0]
000028  4648              MOV      r0,r9
00002a  f7fffffe          BL       PROGBAR_Create
00002e  4607              MOV      r7,r0
;;;260                                              LCD_GetYSize() - 40, 
;;;261                                              80, 5, WM_CF_SHOW);
;;;262      #endif
;;;263      while (tDiff = tMax - GUI_GetTime(), (tDiff > 0) && !GUIDEMO_CheckCancel()) {
000030  e004              B        |L10.60|
                  |L10.50|
;;;264        if ((r = GUI_GetKey()) != 0)
000032  f7fffffe          BL       GUI_GetKey
000036  0005              MOVS     r5,r0
000038  d000              BEQ      |L10.60|
;;;265          break;
00003a  e00b              B        |L10.84|
                  |L10.60|
00003c  f7fffffe          BL       GUI_GetTime
000040  1a34              SUBS     r4,r6,r0              ;263
000042  b124              CBZ      r4,|L10.78|
000044  f7fffffe          BL       GUIDEMO_CheckCancel
000048  b908              CBNZ     r0,|L10.78|
00004a  2001              MOVS     r0,#1                 ;263
00004c  e000              B        |L10.80|
                  |L10.78|
00004e  2000              MOVS     r0,#0                 ;263
                  |L10.80|
000050  2800              CMP      r0,#0                 ;263
000052  d1ee              BNE      |L10.50|
                  |L10.84|
000054  bf00              NOP      
;;;266      }
;;;267      #if GUI_WINSUPPORT
;;;268        PROGBAR_Delete(hProg);
000056  4638              MOV      r0,r7
000058  f7fffffe          BL       WM_DeleteWindow
;;;269        WM_ExecIdle();
00005c  f7fffffe          BL       WM_Exec
;;;270      #endif
;;;271      return r;
000060  4628              MOV      r0,r5
;;;272    }
000062  e8bd83f8          POP      {r3-r9,pc}
;;;273    
                          ENDP


                          AREA ||i.GUIDEMO_main||, CODE, READONLY, ALIGN=2

                  GUIDEMO_main PROC
;;;323    
;;;324    void GUIDEMO_main(void) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  b09a              SUB      sp,sp,#0x68
;;;325      #if GUI_WINSUPPORT
;;;326        int i;
;;;327        int xSize, ySize, xPos, yPos;
;;;328      #endif
;;;329      #if (GUI_SUPPORT_CURSOR|GUI_SUPPORT_TOUCH)
;;;330       GUI_CURSOR_Show();
000006  f7fffffe          BL       GUI_CURSOR_Show
;;;331      #endif
;;;332      GUI_Clear();
00000a  f7fffffe          BL       GUI_Clear
;;;333      #if GUI_WINSUPPORT
;;;334        #if GUI_NUM_LAYERS > 1
;;;335          _ahFrameWin[2] = FRAMEWIN_CreateAsChild(10, 10, 100, 100, WM_GetDesktopWindowEx(1), "Display 1", NULL, WM_CF_SHOW);
;;;336          WM_SetDesktopColorEx(GUI_RED, 1);
;;;337          GUI_Delay(1000);
;;;338        #endif
;;;339        WM_SetCreateFlags(WM_CF_MEMDEV);  /* Automatically use memory devices on all windows */
00000e  2004              MOVS     r0,#4
000010  f7fffffe          BL       WM_SetCreateFlags
;;;340        /* Calculate position and size of FrameWin[1] */
;;;341        _ButtonSizeX = 30;
000014  201e              MOVS     r0,#0x1e
000016  495c              LDR      r1,|L11.392|
000018  6008              STR      r0,[r1,#0]  ; _ButtonSizeX
;;;342        _ButtonSizeY = 20;
00001a  2014              MOVS     r0,#0x14
00001c  495b              LDR      r1,|L11.396|
00001e  6008              STR      r0,[r1,#0]  ; _ButtonSizeY
;;;343        /* Create the control window incl. buttons */
;;;344        _ahFrameWin[1] = FRAMEWIN_Create("Control", &_cbCmdWin, WM_CF_SHOW | WM_CF_STAYONTOP,
000020  f7fffffe          BL       LCD_GetYSize
000024  f1a0093c          SUB      r9,r0,#0x3c
000028  f7fffffe          BL       LCD_GetXSize
00002c  f1a00a50          SUB      r10,r0,#0x50
000030  203c              MOVS     r0,#0x3c
000032  2150              MOVS     r1,#0x50
000034  4653              MOV      r3,r10
000036  220a              MOVS     r2,#0xa
000038  e9cd9100          STRD     r9,r1,[sp,#0]
00003c  9002              STR      r0,[sp,#8]
00003e  4954              LDR      r1,|L11.400|
000040  a054              ADR      r0,|L11.404|
000042  f7fffffe          BL       FRAMEWIN_Create
000046  4955              LDR      r1,|L11.412|
000048  8048              STRH     r0,[r1,#2]
;;;345                                                    LCD_GetXSize() - 80, LCD_GetYSize() - 60, 80, 60);
;;;346        _ahInfoWin[1] = WM_GetClientWindow(_ahFrameWin[1]);
00004a  f9b10002          LDRSH    r0,[r1,#2]  ; _ahFrameWin
00004e  f7fffffe          BL       WM_GetClientWindow
000052  4953              LDR      r1,|L11.416|
000054  8048              STRH     r0,[r1,#2]
;;;347        _ahButton[0] = BUTTON_CreateAsChild(4, 20, _ButtonSizeX, _ButtonSizeY, _ahInfoWin[1], 
000056  210e              MOVS     r1,#0xe
000058  2248              MOVS     r2,#0x48
00005a  4851              LDR      r0,|L11.416|
00005c  f9b00002          LDRSH    r0,[r0,#2]  ; _ahInfoWin
000060  e9cd2101          STRD     r2,r1,[sp,#4]
000064  9000              STR      r0,[sp,#0]
000066  4849              LDR      r0,|L11.396|
000068  6803              LDR      r3,[r0,#0]  ; _ButtonSizeY
00006a  4847              LDR      r0,|L11.392|
00006c  2114              MOVS     r1,#0x14
00006e  6802              LDR      r2,[r0,#0]  ; _ButtonSizeX
000070  2004              MOVS     r0,#4
000072  f7fffffe          BL       BUTTON_CreateAsChild
000076  494b              LDR      r1,|L11.420|
000078  8008              STRH     r0,[r1,#0]
;;;348                                            'H' , WM_CF_SHOW | WM_CF_STAYONTOP | WM_CF_MEMDEV);
;;;349        _ahButton[1] = BUTTON_CreateAsChild(40, 20, _ButtonSizeX, _ButtonSizeY, _ahInfoWin[1], 
00007a  210e              MOVS     r1,#0xe
00007c  224e              MOVS     r2,#0x4e
00007e  4848              LDR      r0,|L11.416|
000080  f9b00002          LDRSH    r0,[r0,#2]  ; _ahInfoWin
000084  e9cd2101          STRD     r2,r1,[sp,#4]
000088  9000              STR      r0,[sp,#0]
00008a  4840              LDR      r0,|L11.396|
00008c  6803              LDR      r3,[r0,#0]  ; _ButtonSizeY
00008e  483e              LDR      r0,|L11.392|
000090  2114              MOVS     r1,#0x14
000092  6802              LDR      r2,[r0,#0]  ; _ButtonSizeX
000094  2028              MOVS     r0,#0x28
000096  f7fffffe          BL       BUTTON_CreateAsChild
00009a  4942              LDR      r1,|L11.420|
00009c  8048              STRH     r0,[r1,#2]
;;;350                                            'N' , WM_CF_SHOW | WM_CF_STAYONTOP | WM_CF_MEMDEV);
;;;351        BUTTON_SetText(_ahButton[0], "Halt");
00009e  f9b10000          LDRSH    r0,[r1,#0]  ; _ahButton
0000a2  a141              ADR      r1,|L11.424|
0000a4  f7fffffe          BL       BUTTON_SetText
;;;352        BUTTON_SetText(_ahButton[1], "Next");
0000a8  493e              LDR      r1,|L11.420|
0000aa  f9b10002          LDRSH    r0,[r1,#2]  ; _ahButton
0000ae  a140              ADR      r1,|L11.432|
0000b0  f7fffffe          BL       BUTTON_SetText
;;;353        _UpdateCmdWin();
0000b4  f7fffffe          BL       _UpdateCmdWin
;;;354        WM_ExecIdle();
0000b8  f7fffffe          BL       WM_Exec
;;;355      #endif
;;;356      /* Show Intro */
;;;357      GUIDEMO_Intro();
0000bc  f7fffffe          BL       GUIDEMO_Intro
;;;358      #if GUI_WINSUPPORT
;;;359        /* Calculate position and size of FrameWin[0] */
;;;360        xSize = LCD_GetXSize() / 2;
0000c0  f7fffffe          BL       LCD_GetXSize
0000c4  4681              MOV      r9,r0
0000c6  eb0070d9          ADD      r0,r0,r9,LSR #31
0000ca  1045              ASRS     r5,r0,#1
;;;361        ySize = 65;
0000cc  2641              MOVS     r6,#0x41
;;;362        xPos  = LCD_GetXSize() - xSize;
0000ce  f7fffffe          BL       LCD_GetXSize
0000d2  1b47              SUBS     r7,r0,r5
;;;363        yPos  = 0;
0000d4  f04f0800          MOV      r8,#0
;;;364        /* Create info window and run the individual demos */
;;;365        _ahFrameWin[0] = FRAMEWIN_Create("emWin Demo", NULL, WM_CF_STAYONTOP, 
0000d8  463b              MOV      r3,r7
0000da  2208              MOVS     r2,#8
0000dc  2100              MOVS     r1,#0
0000de  a036              ADR      r0,|L11.440|
0000e0  e9cd8500          STRD     r8,r5,[sp,#0]
0000e4  9602              STR      r6,[sp,#8]
0000e6  f7fffffe          BL       FRAMEWIN_Create
0000ea  492c              LDR      r1,|L11.412|
0000ec  8008              STRH     r0,[r1,#0]
;;;366                                         xPos, yPos, xSize, ySize);
;;;367        _ahInfoWin[0] = WM_GetFirstChild(_ahFrameWin[0]);
0000ee  f9b10000          LDRSH    r0,[r1,#0]  ; _ahFrameWin
0000f2  f7fffffe          BL       WM_GetFirstChild
0000f6  492a              LDR      r1,|L11.416|
0000f8  8008              STRH     r0,[r1,#0]
;;;368        _ahInfoWin[0] = WM_CreateWindowAsChild(0, 0, 0, 0, WM_GetFirstChild(_ahFrameWin[0]), WM_CF_SHOW | WM_CF_STAYONTOP, 0, 0);
0000fa  4928              LDR      r1,|L11.412|
0000fc  f9b10000          LDRSH    r0,[r1,#0]  ; _ahFrameWin
000100  f7fffffe          BL       WM_GetFirstChild
000104  4681              MOV      r9,r0
000106  2000              MOVS     r0,#0
000108  220a              MOVS     r2,#0xa
00010a  e9cd2001          STRD     r2,r0,[sp,#4]
00010e  4603              MOV      r3,r0
000110  4602              MOV      r2,r0
000112  4601              MOV      r1,r0
000114  f8cd9000          STR      r9,[sp,#0]
000118  9003              STR      r0,[sp,#0xc]
00011a  f7fffffe          BL       WM_CreateWindowAsChild
00011e  4920              LDR      r1,|L11.416|
000120  8008              STRH     r0,[r1,#0]
;;;369        WM_ExecIdle();
000122  f7fffffe          BL       WM_Exec
;;;370      #endif
;;;371      /* Run the individual demos !  */
;;;372      for (_iTest = 0; _apfTest[_iTest]; _iTest++) {
000126  2000              MOVS     r0,#0
000128  4926              LDR      r1,|L11.452|
00012a  6008              STR      r0,[r1,#0]  ; _iTest
00012c  e018              B        |L11.352|
                  |L11.302|
;;;373        GUI_CONTEXT ContextOld;
;;;374        GUI_SaveContext(&ContextOld);
00012e  a801              ADD      r0,sp,#4
000130  f7fffffe          BL       GUI_SaveContext_W_M
;;;375        _iTestMinor = 0;
000134  2000              MOVS     r0,#0
000136  4924              LDR      r1,|L11.456|
000138  6008              STR      r0,[r1,#0]  ; _iTestMinor
;;;376        _UpdateCmdWin();
00013a  f7fffffe          BL       _UpdateCmdWin
;;;377        (*_apfTest[_iTest])();
00013e  4923              LDR      r1,|L11.460|
000140  4a20              LDR      r2,|L11.452|
000142  6812              LDR      r2,[r2,#0]  ; _iTest
000144  f8510022          LDR      r0,[r1,r2,LSL #2]
000148  4780              BLX      r0
;;;378        _CmdNext = 0;
00014a  2000              MOVS     r0,#0
00014c  4920              LDR      r1,|L11.464|
00014e  7008              STRB     r0,[r1,#0]
;;;379        GUI_RestoreContext(&ContextOld);
000150  a801              ADD      r0,sp,#4
000152  f7fffffe          BL       GUI_RestoreContext
000156  481b              LDR      r0,|L11.452|
000158  6800              LDR      r0,[r0,#0]            ;372  ; _iTest
00015a  1c40              ADDS     r0,r0,#1              ;372
00015c  4919              LDR      r1,|L11.452|
00015e  6008              STR      r0,[r1,#0]            ;372  ; _iTest
                  |L11.352|
000160  481a              LDR      r0,|L11.460|
000162  4918              LDR      r1,|L11.452|
000164  6809              LDR      r1,[r1,#0]            ;372  ; _iTest
000166  f8500021          LDR      r0,[r0,r1,LSL #2]     ;372
00016a  2800              CMP      r0,#0                 ;372
00016c  d1df              BNE      |L11.302|
;;;380      }
;;;381      /* Cleanup */
;;;382      #if GUI_WINSUPPORT
;;;383        for (i = 0; i < countof(_ahFrameWin); i++) {
00016e  2400              MOVS     r4,#0
000170  e005              B        |L11.382|
                  |L11.370|
;;;384          WM_DeleteWindow(_ahFrameWin[i]);
000172  490a              LDR      r1,|L11.412|
000174  f9310014          LDRSH    r0,[r1,r4,LSL #1]
000178  f7fffffe          BL       WM_DeleteWindow
00017c  1c64              ADDS     r4,r4,#1              ;383
                  |L11.382|
00017e  2c03              CMP      r4,#3                 ;383
000180  d3f7              BCC      |L11.370|
;;;385        }
;;;386      #endif
;;;387    }
000182  b01a              ADD      sp,sp,#0x68
000184  e8bd87f0          POP      {r4-r10,pc}
;;;388    
                          ENDP

                  |L11.392|
                          DCD      _ButtonSizeX
                  |L11.396|
                          DCD      _ButtonSizeY
                  |L11.400|
                          DCD      _cbCmdWin
                  |L11.404|
000194  436f6e74          DCB      "Control",0
000198  726f6c00
                  |L11.412|
                          DCD      _ahFrameWin
                  |L11.416|
                          DCD      _ahInfoWin
                  |L11.420|
                          DCD      _ahButton
                  |L11.424|
0001a8  48616c74          DCB      "Halt",0
0001ac  00      
0001ad  00                DCB      0
0001ae  00                DCB      0
0001af  00                DCB      0
                  |L11.432|
0001b0  4e657874          DCB      "Next",0
0001b4  00      
0001b5  00                DCB      0
0001b6  00                DCB      0
0001b7  00                DCB      0
                  |L11.440|
0001b8  656d5769          DCB      "emWin Demo",0
0001bc  6e204465
0001c0  6d6f00  
0001c3  00                DCB      0
                  |L11.452|
                          DCD      _iTest
                  |L11.456|
                          DCD      _iTestMinor
                  |L11.460|
                          DCD      _apfTest
                  |L11.464|
                          DCD      _CmdNext

                          AREA ||i._UpdateCmdWin||, CODE, READONLY, ALIGN=2

                  _UpdateCmdWin PROC
;;;98     
;;;99     static void _UpdateCmdWin(void) {
000000  b510              PUSH     {r4,lr}
;;;100      #if GUI_WINSUPPORT && GUIDEMO_LARGE
;;;101        WM_InvalidateWindow(_ahInfoWin[1]);
000002  4903              LDR      r1,|L12.16|
000004  f9b10002          LDRSH    r0,[r1,#2]  ; _ahInfoWin
000008  f7fffffe          BL       WM_InvalidateWindow
;;;102      #endif
;;;103    }
00000c  bd10              POP      {r4,pc}
;;;104    
                          ENDP

00000e  0000              DCW      0x0000
                  |L12.16|
                          DCD      _ahInfoWin

                          AREA ||i._UpdateInfoWin||, CODE, READONLY, ALIGN=2

                  _UpdateInfoWin PROC
;;;123    
;;;124    static void _UpdateInfoWin(void) {
000000  b530              PUSH     {r4,r5,lr}
000002  b09b              SUB      sp,sp,#0x6c
;;;125      #if GUI_WINSUPPORT && GUIDEMO_LARGE
;;;126        GUI_RECT rClient;
;;;127        WM_HWIN hWin;
;;;128        GUI_CONTEXT ContextOld;
;;;129        GUI_SaveContext(&ContextOld);
000004  4668              MOV      r0,sp
000006  f7fffffe          BL       GUI_SaveContext_W_M
;;;130        /* Update info  window */
;;;131        WM_ShowWindow(_ahInfoWin[0]);
00000a  4921              LDR      r1,|L13.144|
00000c  f9b10000          LDRSH    r0,[r1,#0]  ; _ahInfoWin
000010  f7fffffe          BL       WM_ShowWindow
;;;132        WM_ShowWindow(_ahFrameWin[0]);
000014  491f              LDR      r1,|L13.148|
000016  f9b10000          LDRSH    r0,[r1,#0]  ; _ahFrameWin
00001a  f7fffffe          BL       WM_ShowWindow
;;;133        hWin = WM_SelectWindow(_ahInfoWin[0]);
00001e  491c              LDR      r1,|L13.144|
000020  f9b10000          LDRSH    r0,[r1,#0]  ; _ahInfoWin
000024  f7fffffe          BL       WM_SelectWindow
000028  4605              MOV      r5,r0
;;;134        GUI_GetClientRect(&rClient);
00002a  a819              ADD      r0,sp,#0x64
00002c  f7fffffe          BL       GUI_GetClientRect
;;;135        GUI_SetBkColor(GUI_WHITE);
000030  f06f407f          MVN      r0,#0xff000000
000034  f7fffffe          BL       GUI_SetBkColor
;;;136        GUI_Clear();
000038  f7fffffe          BL       GUI_Clear
;;;137        GUI_SetColor(GUI_BLACK);
00003c  2000              MOVS     r0,#0
00003e  f7fffffe          BL       GUI_SetColor
;;;138        GUI_SetFont(&GUI_Font13_1);
000042  4815              LDR      r0,|L13.152|
000044  f7fffffe          BL       GUI_SetFont
;;;139        GUI_SetTextAlign(GUI_TA_HCENTER);
000048  2002              MOVS     r0,#2
00004a  f7fffffe          BL       GUI_SetTextAlign
;;;140        GUI_DispStringHCenterAt(_sInfo, (rClient.x1 - rClient.x0) / 2, 0);
00004e  f9bd0068          LDRSH    r0,[sp,#0x68]
000052  f9bd1064          LDRSH    r1,[sp,#0x64]
000056  1a44              SUBS     r4,r0,r1
000058  eb0470d4          ADD      r0,r4,r4,LSR #31
00005c  1041              ASRS     r1,r0,#1
00005e  2200              MOVS     r2,#0
000060  480e              LDR      r0,|L13.156|
000062  6800              LDR      r0,[r0,#0]  ; _sInfo
000064  f7fffffe          BL       GUI_DispStringHCenterAt
;;;141        GUI_SetTextAlign(GUI_TA_LEFT);
000068  2000              MOVS     r0,#0
00006a  f7fffffe          BL       GUI_SetTextAlign
;;;142        GUI_SetFont(&GUI_Font8_ASCII);
00006e  480c              LDR      r0,|L13.160|
000070  f7fffffe          BL       GUI_SetFont
;;;143        GUI_DispStringAt(_sExplain, 0, 20);
000074  2214              MOVS     r2,#0x14
000076  2100              MOVS     r1,#0
000078  480a              LDR      r0,|L13.164|
00007a  6800              LDR      r0,[r0,#0]  ; _sExplain
00007c  f7fffffe          BL       GUI_DispStringAt
;;;144        WM_SelectWindow(hWin);
000080  4628              MOV      r0,r5
000082  f7fffffe          BL       WM_SelectWindow
;;;145        GUI_RestoreContext(&ContextOld);
000086  4668              MOV      r0,sp
000088  f7fffffe          BL       GUI_RestoreContext
;;;146      #endif
;;;147    }
00008c  b01b              ADD      sp,sp,#0x6c
00008e  bd30              POP      {r4,r5,pc}
;;;148    
                          ENDP

                  |L13.144|
                          DCD      _ahInfoWin
                  |L13.148|
                          DCD      _ahFrameWin
                  |L13.152|
                          DCD      GUI_Font13_1
                  |L13.156|
                          DCD      _sInfo
                  |L13.160|
                          DCD      GUI_Font8_ASCII
                  |L13.164|
                          DCD      _sExplain

                          AREA ||i._cbCmdWin||, CODE, READONLY, ALIGN=2

                  _cbCmdWin PROC
;;;105    #if (GUI_WINSUPPORT && GUIDEMO_LARGE)
;;;106    static void _cbCmdWin(WM_MESSAGE* pMsg) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;107      switch (pMsg->MsgId) {
000004  6820              LDR      r0,[r4,#0]
000006  280f              CMP      r0,#0xf
000008  d11c              BNE      |L14.68|
;;;108      case WM_PAINT:
;;;109        /* Update info in command window */
;;;110        GUI_SetBkColor(GUI_GRAY);
00000a  4811              LDR      r0,|L14.80|
00000c  f7fffffe          BL       GUI_SetBkColor
;;;111        GUI_Clear();
000010  f7fffffe          BL       GUI_Clear
;;;112        GUI_DispStringAt("Demo ", 0, 0);
000014  2200              MOVS     r2,#0
000016  4611              MOV      r1,r2
000018  a00e              ADR      r0,|L14.84|
00001a  f7fffffe          BL       GUI_DispStringAt
;;;113        GUI_DispDecMin(_iTest + 1);
00001e  480f              LDR      r0,|L14.92|
000020  6800              LDR      r0,[r0,#0]  ; _iTest
000022  1c40              ADDS     r0,r0,#1
000024  f7fffffe          BL       GUI_DispDecMin
;;;114        GUI_DispString(".");
000028  a00d              ADR      r0,|L14.96|
00002a  f7fffffe          BL       GUI_DispString
;;;115        GUI_DispDecMin(_iTestMinor);
00002e  480d              LDR      r0,|L14.100|
000030  6800              LDR      r0,[r0,#0]  ; _iTestMinor
000032  f7fffffe          BL       GUI_DispDecMin
;;;116        GUI_DispString("/");
000036  a00c              ADR      r0,|L14.104|
000038  f7fffffe          BL       GUI_DispString
;;;117        GUI_DispDecMin(countof(_apfTest));
00003c  2012              MOVS     r0,#0x12
00003e  f7fffffe          BL       GUI_DispDecMin
;;;118      default:
000042  bf00              NOP      
                  |L14.68|
;;;119        WM_DefaultProc(pMsg);
000044  4620              MOV      r0,r4
000046  f7fffffe          BL       WM_DefaultProc
00004a  bf00              NOP                            ;107
00004c  bf00              NOP                            ;107
;;;120      }
;;;121    }
00004e  bd10              POP      {r4,pc}
;;;122    #endif
                          ENDP

                  |L14.80|
                          DCD      0x00808080
                  |L14.84|
000054  44656d6f          DCB      "Demo ",0
000058  2000    
00005a  00                DCB      0
00005b  00                DCB      0
                  |L14.92|
                          DCD      _iTest
                  |L14.96|
000060  2e00              DCB      ".",0
000062  00                DCB      0
000063  00                DCB      0
                  |L14.100|
                          DCD      _iTestMinor
                  |L14.104|
000068  2f00              DCB      "/",0
00006a  00                DCB      0
00006b  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=2

                  _apfTest
                          DCD      GUIDEMO_HardwareInfo
                          DCD      GUIDEMO_Speed
                          DCD      GUIDEMO_Graph
                          DCD      GUIDEMO_Bitmap
                          DCD      GUIDEMO_Cursor
                          DCD      GUIDEMO_ShowInternationalFonts
                          DCD      GUIDEMO_ShowColorBar
                          DCD      GUIDEMO_ShowColorList
                          DCD      GUIDEMO_DemoLUT
                          DCD      GUIDEMO_DemoPolygon
                          DCD      GUIDEMO_Circle
                          DCD      GUIDEMO_Automotive
                          DCD      GUIDEMO_Navigation
                          DCD      GUIDEMO_Dialog
                          DCD      GUIDEMO_DemoProgBar
                          DCD      GUIDEMO_DemoFrameWin
                          DCD      GUIDEMO_Touch
                          DCD      0x00000000
                  _ahButton
                          DCD      0x00000000
                  _ahFrameWin
                          DCD      0x00000000
000050  00000000          DCB      0x00,0x00,0x00,0x00
                  _ButtonSizeX
                          DCD      0x00000000
                  _ButtonSizeY
                          DCD      0x00000000
                  _ahInfoWin
                          DCD      0x00000000
                  _sInfo
                          DCD      0x00000000
                  _iTest
                          DCD      0x00000000
                  _iTestMinor
                          DCD      0x00000000
                  _CmdNext
00006c  00000000          DCB      0x00,0x00,0x00,0x00
                  _sExplain
                          DCD      0x00000000
