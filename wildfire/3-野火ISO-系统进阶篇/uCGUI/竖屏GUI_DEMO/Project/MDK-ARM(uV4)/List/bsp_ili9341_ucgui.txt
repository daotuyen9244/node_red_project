; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\bsp_ili9341_ucgui.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\bsp_ili9341_ucgui.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\LCDDriver\bsp_ili9341_ucgui.c]
                          THUMB

                          AREA ||i.DrawBitLine16BPP||, CODE, READONLY, ALIGN=2

                  DrawBitLine16BPP PROC
;;;553    
;;;554    void DrawBitLine16BPP(int x, int y, U16 const*p, int xsize)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;555    {
000004  4604              MOV      r4,r0
000006  460f              MOV      r7,r1
000008  4616              MOV      r6,r2
00000a  461d              MOV      r5,r3
;;;556      LCD_PIXELINDEX Index;
;;;557      if ((GUI_Context.DrawMode & LCD_DRAWMODE_TRANS)==0)
00000c  4815              LDR      r0,|L1.100|
00000e  7c00              LDRB     r0,[r0,#0x10]  ; GUI_Context
000010  f0100f02          TST      r0,#2
000014  d114              BNE      |L1.64|
;;;558      {
;;;559          #if 0
;;;560    		for (;xsize > 0; xsize--,x++,p++)
;;;561    		{
;;;562    		  LCD9341_SetPoint(x, y, *p);
;;;563    		}
;;;564    	  #else
;;;565    		LCD9341_SetDispWin(x, y,x+xsize-1, y);
000016  b2bb              UXTH     r3,r7
000018  eb040c05          ADD      r12,r4,r5
00001c  f1ac0c01          SUB      r12,r12,#1
000020  fa1ff28c          UXTH     r2,r12
000024  b2b9              UXTH     r1,r7
000026  b2a0              UXTH     r0,r4
000028  f7fffffe          BL       LCD9341_SetDispWin
;;;566    		for (;xsize > 0; xsize--,p++)
00002c  e005              B        |L1.58|
                  |L1.46|
;;;567    		{
;;;568    			ILI9341_RAM = *p;
00002e  8830              LDRH     r0,[r6,#0]
000030  f04f41da          MOV      r1,#0x6d000000
000034  8008              STRH     r0,[r1,#0]
000036  1e6d              SUBS     r5,r5,#1              ;566
000038  1cb6              ADDS     r6,r6,#2              ;566
                  |L1.58|
00003a  2d00              CMP      r5,#0                 ;566
00003c  dcf7              BGT      |L1.46|
00003e  e00f              B        |L1.96|
                  |L1.64|
;;;569    		}
;;;570    	  #endif
;;;571      }
;;;572      else
;;;573      {   /* Handle transparent bitmap */
;;;574        for (; xsize > 0; xsize--, x++, p++)
000040  e00c              B        |L1.92|
                  |L1.66|
;;;575        {
;;;576          Index = *p;
000042  f8b68000          LDRH     r8,[r6,#0]
;;;577          if (Index)
000046  f1b80f00          CMP      r8,#0
00004a  d004              BEQ      |L1.86|
;;;578          {
;;;579            LCD9341_SetPoint(x+0, y, Index);
00004c  b2b9              UXTH     r1,r7
00004e  b2a0              UXTH     r0,r4
000050  4642              MOV      r2,r8
000052  f7fffffe          BL       LCD9341_SetPoint
                  |L1.86|
000056  1e6d              SUBS     r5,r5,#1              ;574
000058  1c64              ADDS     r4,r4,#1              ;574
00005a  1cb6              ADDS     r6,r6,#2              ;574
                  |L1.92|
00005c  2d00              CMP      r5,#0                 ;574
00005e  dcf0              BGT      |L1.66|
                  |L1.96|
;;;580          }
;;;581        }
;;;582      }
;;;583    }
000060  e8bd81f0          POP      {r4-r8,pc}
;;;584    
                          ENDP

                  |L1.100|
                          DCD      GUI_Context

                          AREA ||i.DrawBitLine1BPP||, CODE, READONLY, ALIGN=2

                  DrawBitLine1BPP PROC
;;;76     
;;;77     void DrawBitLine1BPP(int x, int y, U8 const*p, int Diff, int xsize, const LCD_PIXELINDEX*pTrans)
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;78     {
000004  4604              MOV      r4,r0
000006  460f              MOV      r7,r1
000008  4690              MOV      r8,r2
00000a  4699              MOV      r9,r3
00000c  e9dd5a0a          LDRD     r5,r10,[sp,#0x28]
;;;79       LCD_PIXELINDEX pixels;
;;;80       LCD_PIXELINDEX Index0 = *(pTrans+0);
000010  f8ba0000          LDRH     r0,[r10,#0]
000014  9000              STR      r0,[sp,#0]
;;;81       LCD_PIXELINDEX Index1 = *(pTrans+1);
000016  f8bab002          LDRH     r11,[r10,#2]
;;;82     /*
;;;83     // Jump to right entry point
;;;84     */
;;;85       pixels = *p;
00001a  f8986000          LDRB     r6,[r8,#0]
;;;86       switch (GUI_Context.DrawMode & (LCD_DRAWMODE_TRANS|LCD_DRAWMODE_XOR)) {
00001e  48d5              LDR      r0,|L2.884|
000020  7c00              LDRB     r0,[r0,#0x10]  ; GUI_Context
000022  f0100003          ANDS     r0,r0,#3
000026  d004              BEQ      |L2.50|
000028  2801              CMP      r0,#1
00002a  d028              BEQ      |L2.126|
00002c  2802              CMP      r0,#2
00002e  d139              BNE      |L2.164|
000030  e012              B        |L2.88|
                  |L2.50|
;;;87       case 0:
;;;88         #if defined (SETNEXTPIXEL)   /* Optimization ! */
;;;89           x+=Diff;
;;;90           LCD9341_SetPoint(x,y);
;;;91         #endif
;;;92         switch (Diff&7) {
000032  f0090007          AND      r0,r9,#7
000036  2808              CMP      r0,#8
000038  d20d              BCS      |L2.86|
00003a  e8dff000          TBB      [pc,r0]
00003e  0405              DCB      0x04,0x05
000040  06070809          DCB      0x06,0x07,0x08,0x09
000044  0a0b              DCB      0x0a,0x0b
;;;93         case 0:   
;;;94           goto WriteBit0;
000046  e0a4              B        |L2.402|
;;;95         case 1:   
;;;96           goto WriteBit1;
000048  e0b3              B        |L2.434|
;;;97         case 2:
;;;98           goto WriteBit2;
00004a  e0c3              B        |L2.468|
;;;99         case 3:
;;;100          goto WriteBit3;
00004c  e0d3              B        |L2.502|
;;;101        case 4:
;;;102          goto WriteBit4;
00004e  e0e3              B        |L2.536|
;;;103        case 5:   
;;;104          goto WriteBit5;
000050  e0f3              B        |L2.570|
;;;105        case 6:   
;;;106          goto WriteBit6;
000052  e103              B        |L2.604|
;;;107        case 7:   
;;;108          goto WriteBit7;
000054  e113              B        |L2.638|
                  |L2.86|
;;;109        }
;;;110        break;
000056  e025              B        |L2.164|
                  |L2.88|
;;;111      case LCD_DRAWMODE_TRANS:
;;;112        switch (Diff&7) {
000058  f0090007          AND      r0,r9,#7
00005c  2808              CMP      r0,#8
00005e  d20d              BCS      |L2.124|
000060  e8dff000          TBB      [pc,r0]
000064  04050607          DCB      0x04,0x05,0x06,0x07
000068  08090a0b          DCB      0x08,0x09,0x0a,0x0b
;;;113        case 0:
;;;114          goto WriteTBit0;
00006c  e01c              B        |L2.168|
;;;115        case 1:
;;;116          goto WriteTBit1;
00006e  e029              B        |L2.196|
;;;117        case 2:
;;;118          goto WriteTBit2;
000070  e036              B        |L2.224|
;;;119        case 3:
;;;120          goto WriteTBit3;
000072  e043              B        |L2.252|
;;;121        case 4:
;;;122          goto WriteTBit4;
000074  e050              B        |L2.280|
;;;123        case 5:   
;;;124          goto WriteTBit5;
000076  e05d              B        |L2.308|
;;;125        case 6:   
;;;126          goto WriteTBit6;
000078  e06a              B        |L2.336|
;;;127        case 7:   
;;;128          goto WriteTBit7;
00007a  e077              B        |L2.364|
                  |L2.124|
;;;129        }
;;;130        break;
00007c  e012              B        |L2.164|
                  |L2.126|
;;;131      case LCD_DRAWMODE_XOR:
;;;132        switch (Diff&7) {
00007e  f0090007          AND      r0,r9,#7
000082  2808              CMP      r0,#8
000084  d20d              BCS      |L2.162|
000086  e8dff000          TBB      [pc,r0]
00008a  0405              DCB      0x04,0x05
00008c  06070809          DCB      0x06,0x07,0x08,0x09
000090  0a0b              DCB      0x0a,0x0b
;;;133        case 0:   
;;;134          goto WriteXBit0;
000092  e10a              B        |L2.682|
;;;135        case 1:   
;;;136          goto WriteXBit1;
000094  e115              B        |L2.706|
;;;137        case 2:
;;;138          goto WriteXBit2;
000096  e120              B        |L2.730|
;;;139        case 3:
;;;140          goto WriteXBit3;
000098  e12b              B        |L2.754|
;;;141        case 4:
;;;142          goto WriteXBit4;
00009a  e136              B        |L2.778|
;;;143        case 5:   
;;;144          goto WriteXBit5;
00009c  e141              B        |L2.802|
;;;145        case 6:   
;;;146          goto WriteXBit6;
00009e  e14c              B        |L2.826|
;;;147        case 7:   
;;;148          goto WriteXBit7;
0000a0  e157              B        |L2.850|
                  |L2.162|
0000a2  bf00              NOP                            ;86
                  |L2.164|
0000a4  bf00              NOP                            ;110
;;;149        }
;;;150      }
;;;151    /*
;;;152            Write with transparency
;;;153    */
;;;154      WriteTBit0:
0000a6  bf00              NOP      
                  |L2.168|
;;;155        if (pixels&(1<<7)) LCD9341_SetPoint(x+0, y, Index1);
0000a8  f0160f80          TST      r6,#0x80
0000ac  d004              BEQ      |L2.184|
0000ae  b2b9              UXTH     r1,r7
0000b0  b2a0              UXTH     r0,r4
0000b2  465a              MOV      r2,r11
0000b4  f7fffffe          BL       LCD9341_SetPoint
                  |L2.184|
;;;156        if (!--xsize)
0000b8  1e68              SUBS     r0,r5,#1
0000ba  0005              MOVS     r5,r0
0000bc  d101              BNE      |L2.194|
                  |L2.190|
;;;157          return;
;;;158      WriteTBit1:
;;;159        if (pixels&(1<<6)) LCD9341_SetPoint(x+1, y, Index1);
;;;160        if (!--xsize)
;;;161          return;
;;;162      WriteTBit2:
;;;163        if (pixels&(1<<5)) LCD9341_SetPoint(x+2, y, Index1);
;;;164        if (!--xsize)
;;;165          return;
;;;166      WriteTBit3:
;;;167        if (pixels&(1<<4)) LCD9341_SetPoint(x+3, y, Index1);
;;;168        if (!--xsize)
;;;169          return;
;;;170      WriteTBit4:
;;;171        if (pixels&(1<<3)) LCD9341_SetPoint(x+4, y, Index1);
;;;172        if (!--xsize)
;;;173          return;
;;;174      WriteTBit5:
;;;175        if (pixels&(1<<2)) LCD9341_SetPoint(x+5, y, Index1);
;;;176        if (!--xsize)
;;;177          return;
;;;178      WriteTBit6:
;;;179        if (pixels&(1<<1)) LCD9341_SetPoint(x+6, y, Index1);
;;;180        if (!--xsize)
;;;181          return;
;;;182      WriteTBit7:
;;;183        if (pixels&(1<<0)) LCD9341_SetPoint(x+7, y, Index1);
;;;184        if (!--xsize)
;;;185          return;
;;;186        x+=8;
;;;187        pixels = *(++p);
;;;188        goto WriteTBit0;
;;;189    
;;;190    /*
;;;191            Write without transparency
;;;192    */
;;;193    
;;;194      WriteBit0:
;;;195        LCD9341_SetPoint(x+0, y, (pixels&(1<<7)) ? Index1 : Index0);
;;;196        if (!--xsize)
;;;197          return;
;;;198      WriteBit1:
;;;199        LCD9341_SetPoint(x+1, y, (pixels&(1<<6)) ? Index1 : Index0);
;;;200        if (!--xsize)
;;;201          return;
;;;202      WriteBit2:
;;;203        LCD9341_SetPoint(x+2, y, (pixels&(1<<5)) ? Index1 : Index0);
;;;204        if (!--xsize)
;;;205          return;
;;;206      WriteBit3:
;;;207        LCD9341_SetPoint(x+3, y, (pixels&(1<<4)) ? Index1 : Index0);
;;;208        if (!--xsize)
;;;209          return;
;;;210      WriteBit4:
;;;211        LCD9341_SetPoint(x+4, y, (pixels&(1<<3)) ? Index1 : Index0);
;;;212        if (!--xsize)
;;;213          return;
;;;214      WriteBit5:
;;;215        LCD9341_SetPoint(x+5, y, (pixels&(1<<2)) ? Index1 : Index0);
;;;216        if (!--xsize)
;;;217          return;
;;;218      WriteBit6:
;;;219        LCD9341_SetPoint(x+6, y, (pixels&(1<<1)) ? Index1 : Index0);
;;;220        if (!--xsize)
;;;221          return;
;;;222      WriteBit7:
;;;223        LCD9341_SetPoint(x+7, y, (pixels&(1<<0)) ? Index1 : Index0);
;;;224        if (!--xsize)
;;;225          return;
;;;226        x+=8;
;;;227        pixels = *(++p);
;;;228        goto WriteBit0;
;;;229    
;;;230    /*
;;;231            Write XOR mode
;;;232    */
;;;233      WriteXBit0:
;;;234        if (pixels&(1<<7))
;;;235          LCD_L0_XorPixel(x+0, y);
;;;236        if (!--xsize)
;;;237          return;
;;;238      WriteXBit1:
;;;239        if (pixels&(1<<6))
;;;240          LCD_L0_XorPixel(x+1, y);
;;;241        if (!--xsize)
;;;242          return;
;;;243      WriteXBit2:
;;;244        if (pixels&(1<<5))
;;;245          LCD_L0_XorPixel(x+2, y);
;;;246        if (!--xsize)
;;;247          return;
;;;248      WriteXBit3:
;;;249        if (pixels&(1<<4))
;;;250          LCD_L0_XorPixel(x+3, y);
;;;251        if (!--xsize)
;;;252          return;
;;;253      WriteXBit4:
;;;254        if (pixels&(1<<3))
;;;255          LCD_L0_XorPixel(x+4, y);
;;;256        if (!--xsize)
;;;257          return;
;;;258      WriteXBit5:
;;;259        if (pixels&(1<<2))
;;;260          LCD_L0_XorPixel(x+5, y);
;;;261        if (!--xsize)
;;;262          return;
;;;263      WriteXBit6:
;;;264        if (pixels&(1<<1))
;;;265          LCD_L0_XorPixel(x+6, y);
;;;266        if (!--xsize)
;;;267          return;
;;;268      WriteXBit7:
;;;269        if (pixels&(1<<0))
;;;270          LCD_L0_XorPixel(x+7, y);
;;;271        if (!--xsize)
;;;272          return;
;;;273        x+=8;
;;;274        pixels = *(++p);
;;;275        goto WriteXBit0;
;;;276    }
0000be  e8bd8ff8          POP      {r3-r11,pc}
                  |L2.194|
0000c2  bf00              NOP                            ;158
                  |L2.196|
0000c4  f0160f40          TST      r6,#0x40              ;159
0000c8  d005              BEQ      |L2.214|
0000ca  b2b9              UXTH     r1,r7                 ;159
0000cc  1c62              ADDS     r2,r4,#1              ;159
0000ce  b290              UXTH     r0,r2                 ;159
0000d0  465a              MOV      r2,r11                ;159
0000d2  f7fffffe          BL       LCD9341_SetPoint
                  |L2.214|
0000d6  1e68              SUBS     r0,r5,#1              ;160
0000d8  0005              MOVS     r5,r0                 ;160
0000da  d100              BNE      |L2.222|
0000dc  e7ef              B        |L2.190|
                  |L2.222|
0000de  bf00              NOP                            ;162
                  |L2.224|
0000e0  f0160f20          TST      r6,#0x20              ;163
0000e4  d005              BEQ      |L2.242|
0000e6  b2b9              UXTH     r1,r7                 ;163
0000e8  1ca2              ADDS     r2,r4,#2              ;163
0000ea  b290              UXTH     r0,r2                 ;163
0000ec  465a              MOV      r2,r11                ;163
0000ee  f7fffffe          BL       LCD9341_SetPoint
                  |L2.242|
0000f2  1e68              SUBS     r0,r5,#1              ;164
0000f4  0005              MOVS     r5,r0                 ;164
0000f6  d100              BNE      |L2.250|
0000f8  e7e1              B        |L2.190|
                  |L2.250|
0000fa  bf00              NOP                            ;166
                  |L2.252|
0000fc  f0160f10          TST      r6,#0x10              ;167
000100  d005              BEQ      |L2.270|
000102  b2b9              UXTH     r1,r7                 ;167
000104  1ce2              ADDS     r2,r4,#3              ;167
000106  b290              UXTH     r0,r2                 ;167
000108  465a              MOV      r2,r11                ;167
00010a  f7fffffe          BL       LCD9341_SetPoint
                  |L2.270|
00010e  1e68              SUBS     r0,r5,#1              ;168
000110  0005              MOVS     r5,r0                 ;168
000112  d100              BNE      |L2.278|
000114  e7d3              B        |L2.190|
                  |L2.278|
000116  bf00              NOP                            ;170
                  |L2.280|
000118  f0160f08          TST      r6,#8                 ;171
00011c  d005              BEQ      |L2.298|
00011e  b2b9              UXTH     r1,r7                 ;171
000120  1d22              ADDS     r2,r4,#4              ;171
000122  b290              UXTH     r0,r2                 ;171
000124  465a              MOV      r2,r11                ;171
000126  f7fffffe          BL       LCD9341_SetPoint
                  |L2.298|
00012a  1e68              SUBS     r0,r5,#1              ;172
00012c  0005              MOVS     r5,r0                 ;172
00012e  d100              BNE      |L2.306|
000130  e7c5              B        |L2.190|
                  |L2.306|
000132  bf00              NOP                            ;174
                  |L2.308|
000134  f0160f04          TST      r6,#4                 ;175
000138  d005              BEQ      |L2.326|
00013a  b2b9              UXTH     r1,r7                 ;175
00013c  1d62              ADDS     r2,r4,#5              ;175
00013e  b290              UXTH     r0,r2                 ;175
000140  465a              MOV      r2,r11                ;175
000142  f7fffffe          BL       LCD9341_SetPoint
                  |L2.326|
000146  1e68              SUBS     r0,r5,#1              ;176
000148  0005              MOVS     r5,r0                 ;176
00014a  d100              BNE      |L2.334|
00014c  e7b7              B        |L2.190|
                  |L2.334|
00014e  bf00              NOP                            ;178
                  |L2.336|
000150  f0160f02          TST      r6,#2                 ;179
000154  d005              BEQ      |L2.354|
000156  b2b9              UXTH     r1,r7                 ;179
000158  1da2              ADDS     r2,r4,#6              ;179
00015a  b290              UXTH     r0,r2                 ;179
00015c  465a              MOV      r2,r11                ;179
00015e  f7fffffe          BL       LCD9341_SetPoint
                  |L2.354|
000162  1e68              SUBS     r0,r5,#1              ;180
000164  0005              MOVS     r5,r0                 ;180
000166  d100              BNE      |L2.362|
000168  e7a9              B        |L2.190|
                  |L2.362|
00016a  bf00              NOP                            ;182
                  |L2.364|
00016c  f0160f01          TST      r6,#1                 ;183
000170  d005              BEQ      |L2.382|
000172  b2b9              UXTH     r1,r7                 ;183
000174  1de2              ADDS     r2,r4,#7              ;183
000176  b290              UXTH     r0,r2                 ;183
000178  465a              MOV      r2,r11                ;183
00017a  f7fffffe          BL       LCD9341_SetPoint
                  |L2.382|
00017e  1e68              SUBS     r0,r5,#1              ;184
000180  0005              MOVS     r5,r0                 ;184
000182  d100              BNE      |L2.390|
000184  e79b              B        |L2.190|
                  |L2.390|
000186  3408              ADDS     r4,r4,#8              ;186
000188  f1080001          ADD      r0,r8,#1              ;187
00018c  4680              MOV      r8,r0                 ;187
00018e  7806              LDRB     r6,[r0,#0]            ;187
000190  e78a              B        |L2.168|
                  |L2.402|
000192  f0160f80          TST      r6,#0x80              ;195
000196  d001              BEQ      |L2.412|
000198  465b              MOV      r3,r11                ;195
00019a  e000              B        |L2.414|
                  |L2.412|
00019c  9b00              LDR      r3,[sp,#0]            ;195
                  |L2.414|
00019e  461a              MOV      r2,r3                 ;195
0001a0  b2b9              UXTH     r1,r7                 ;195
0001a2  b2a0              UXTH     r0,r4                 ;195
0001a4  f7fffffe          BL       LCD9341_SetPoint
0001a8  1e68              SUBS     r0,r5,#1              ;196
0001aa  0005              MOVS     r5,r0                 ;196
0001ac  d100              BNE      |L2.432|
0001ae  e786              B        |L2.190|
                  |L2.432|
0001b0  bf00              NOP                            ;198
                  |L2.434|
0001b2  f0160f40          TST      r6,#0x40              ;199
0001b6  d001              BEQ      |L2.444|
0001b8  465b              MOV      r3,r11                ;199
0001ba  e000              B        |L2.446|
                  |L2.444|
0001bc  9b00              LDR      r3,[sp,#0]            ;199
                  |L2.446|
0001be  461a              MOV      r2,r3                 ;199
0001c0  b2b9              UXTH     r1,r7                 ;199
0001c2  1c63              ADDS     r3,r4,#1              ;199
0001c4  b298              UXTH     r0,r3                 ;199
0001c6  f7fffffe          BL       LCD9341_SetPoint
0001ca  1e68              SUBS     r0,r5,#1              ;200
0001cc  0005              MOVS     r5,r0                 ;200
0001ce  d100              BNE      |L2.466|
0001d0  e775              B        |L2.190|
                  |L2.466|
0001d2  bf00              NOP                            ;202
                  |L2.468|
0001d4  f0160f20          TST      r6,#0x20              ;203
0001d8  d001              BEQ      |L2.478|
0001da  465b              MOV      r3,r11                ;203
0001dc  e000              B        |L2.480|
                  |L2.478|
0001de  9b00              LDR      r3,[sp,#0]            ;203
                  |L2.480|
0001e0  461a              MOV      r2,r3                 ;203
0001e2  b2b9              UXTH     r1,r7                 ;203
0001e4  1ca3              ADDS     r3,r4,#2              ;203
0001e6  b298              UXTH     r0,r3                 ;203
0001e8  f7fffffe          BL       LCD9341_SetPoint
0001ec  1e68              SUBS     r0,r5,#1              ;204
0001ee  0005              MOVS     r5,r0                 ;204
0001f0  d100              BNE      |L2.500|
0001f2  e764              B        |L2.190|
                  |L2.500|
0001f4  bf00              NOP                            ;206
                  |L2.502|
0001f6  f0160f10          TST      r6,#0x10              ;207
0001fa  d001              BEQ      |L2.512|
0001fc  465b              MOV      r3,r11                ;207
0001fe  e000              B        |L2.514|
                  |L2.512|
000200  9b00              LDR      r3,[sp,#0]            ;207
                  |L2.514|
000202  461a              MOV      r2,r3                 ;207
000204  b2b9              UXTH     r1,r7                 ;207
000206  1ce3              ADDS     r3,r4,#3              ;207
000208  b298              UXTH     r0,r3                 ;207
00020a  f7fffffe          BL       LCD9341_SetPoint
00020e  1e68              SUBS     r0,r5,#1              ;208
000210  0005              MOVS     r5,r0                 ;208
000212  d100              BNE      |L2.534|
000214  e753              B        |L2.190|
                  |L2.534|
000216  bf00              NOP                            ;210
                  |L2.536|
000218  f0160f08          TST      r6,#8                 ;211
00021c  d001              BEQ      |L2.546|
00021e  465b              MOV      r3,r11                ;211
000220  e000              B        |L2.548|
                  |L2.546|
000222  9b00              LDR      r3,[sp,#0]            ;211
                  |L2.548|
000224  461a              MOV      r2,r3                 ;211
000226  b2b9              UXTH     r1,r7                 ;211
000228  1d23              ADDS     r3,r4,#4              ;211
00022a  b298              UXTH     r0,r3                 ;211
00022c  f7fffffe          BL       LCD9341_SetPoint
000230  1e68              SUBS     r0,r5,#1              ;212
000232  0005              MOVS     r5,r0                 ;212
000234  d100              BNE      |L2.568|
000236  e742              B        |L2.190|
                  |L2.568|
000238  bf00              NOP                            ;214
                  |L2.570|
00023a  f0160f04          TST      r6,#4                 ;215
00023e  d001              BEQ      |L2.580|
000240  465b              MOV      r3,r11                ;215
000242  e000              B        |L2.582|
                  |L2.580|
000244  9b00              LDR      r3,[sp,#0]            ;215
                  |L2.582|
000246  461a              MOV      r2,r3                 ;215
000248  b2b9              UXTH     r1,r7                 ;215
00024a  1d63              ADDS     r3,r4,#5              ;215
00024c  b298              UXTH     r0,r3                 ;215
00024e  f7fffffe          BL       LCD9341_SetPoint
000252  1e68              SUBS     r0,r5,#1              ;216
000254  0005              MOVS     r5,r0                 ;216
000256  d100              BNE      |L2.602|
000258  e731              B        |L2.190|
                  |L2.602|
00025a  bf00              NOP                            ;218
                  |L2.604|
00025c  f0160f02          TST      r6,#2                 ;219
000260  d001              BEQ      |L2.614|
000262  465b              MOV      r3,r11                ;219
000264  e000              B        |L2.616|
                  |L2.614|
000266  9b00              LDR      r3,[sp,#0]            ;219
                  |L2.616|
000268  461a              MOV      r2,r3                 ;219
00026a  b2b9              UXTH     r1,r7                 ;219
00026c  1da3              ADDS     r3,r4,#6              ;219
00026e  b298              UXTH     r0,r3                 ;219
000270  f7fffffe          BL       LCD9341_SetPoint
000274  1e68              SUBS     r0,r5,#1              ;220
000276  0005              MOVS     r5,r0                 ;220
000278  d100              BNE      |L2.636|
00027a  e720              B        |L2.190|
                  |L2.636|
00027c  bf00              NOP                            ;222
                  |L2.638|
00027e  f0160f01          TST      r6,#1                 ;223
000282  d001              BEQ      |L2.648|
000284  465b              MOV      r3,r11                ;223
000286  e000              B        |L2.650|
                  |L2.648|
000288  9b00              LDR      r3,[sp,#0]            ;223
                  |L2.650|
00028a  461a              MOV      r2,r3                 ;223
00028c  b2b9              UXTH     r1,r7                 ;223
00028e  1de3              ADDS     r3,r4,#7              ;223
000290  b298              UXTH     r0,r3                 ;223
000292  f7fffffe          BL       LCD9341_SetPoint
000296  1e68              SUBS     r0,r5,#1              ;224
000298  0005              MOVS     r5,r0                 ;224
00029a  d100              BNE      |L2.670|
00029c  e70f              B        |L2.190|
                  |L2.670|
00029e  3408              ADDS     r4,r4,#8              ;226
0002a0  f1080001          ADD      r0,r8,#1              ;227
0002a4  4680              MOV      r8,r0                 ;227
0002a6  7806              LDRB     r6,[r0,#0]            ;227
0002a8  e773              B        |L2.402|
                  |L2.682|
0002aa  f0160f80          TST      r6,#0x80              ;234
0002ae  d003              BEQ      |L2.696|
0002b0  4639              MOV      r1,r7                 ;235
0002b2  4620              MOV      r0,r4                 ;235
0002b4  f7fffffe          BL       LCD_L0_XorPixel
                  |L2.696|
0002b8  1e68              SUBS     r0,r5,#1              ;236
0002ba  0005              MOVS     r5,r0                 ;236
0002bc  d100              BNE      |L2.704|
0002be  e6fe              B        |L2.190|
                  |L2.704|
0002c0  bf00              NOP                            ;238
                  |L2.706|
0002c2  f0160f40          TST      r6,#0x40              ;239
0002c6  d003              BEQ      |L2.720|
0002c8  4639              MOV      r1,r7                 ;240
0002ca  1c60              ADDS     r0,r4,#1              ;240
0002cc  f7fffffe          BL       LCD_L0_XorPixel
                  |L2.720|
0002d0  1e68              SUBS     r0,r5,#1              ;241
0002d2  0005              MOVS     r5,r0                 ;241
0002d4  d100              BNE      |L2.728|
0002d6  e6f2              B        |L2.190|
                  |L2.728|
0002d8  bf00              NOP                            ;243
                  |L2.730|
0002da  f0160f20          TST      r6,#0x20              ;244
0002de  d003              BEQ      |L2.744|
0002e0  4639              MOV      r1,r7                 ;245
0002e2  1ca0              ADDS     r0,r4,#2              ;245
0002e4  f7fffffe          BL       LCD_L0_XorPixel
                  |L2.744|
0002e8  1e68              SUBS     r0,r5,#1              ;246
0002ea  0005              MOVS     r5,r0                 ;246
0002ec  d100              BNE      |L2.752|
0002ee  e6e6              B        |L2.190|
                  |L2.752|
0002f0  bf00              NOP                            ;248
                  |L2.754|
0002f2  f0160f10          TST      r6,#0x10              ;249
0002f6  d003              BEQ      |L2.768|
0002f8  4639              MOV      r1,r7                 ;250
0002fa  1ce0              ADDS     r0,r4,#3              ;250
0002fc  f7fffffe          BL       LCD_L0_XorPixel
                  |L2.768|
000300  1e68              SUBS     r0,r5,#1              ;251
000302  0005              MOVS     r5,r0                 ;251
000304  d100              BNE      |L2.776|
000306  e6da              B        |L2.190|
                  |L2.776|
000308  bf00              NOP                            ;253
                  |L2.778|
00030a  f0160f08          TST      r6,#8                 ;254
00030e  d003              BEQ      |L2.792|
000310  4639              MOV      r1,r7                 ;255
000312  1d20              ADDS     r0,r4,#4              ;255
000314  f7fffffe          BL       LCD_L0_XorPixel
                  |L2.792|
000318  1e68              SUBS     r0,r5,#1              ;256
00031a  0005              MOVS     r5,r0                 ;256
00031c  d100              BNE      |L2.800|
00031e  e6ce              B        |L2.190|
                  |L2.800|
000320  bf00              NOP                            ;258
                  |L2.802|
000322  f0160f04          TST      r6,#4                 ;259
000326  d003              BEQ      |L2.816|
000328  4639              MOV      r1,r7                 ;260
00032a  1d60              ADDS     r0,r4,#5              ;260
00032c  f7fffffe          BL       LCD_L0_XorPixel
                  |L2.816|
000330  1e68              SUBS     r0,r5,#1              ;261
000332  0005              MOVS     r5,r0                 ;261
000334  d100              BNE      |L2.824|
000336  e6c2              B        |L2.190|
                  |L2.824|
000338  bf00              NOP                            ;263
                  |L2.826|
00033a  f0160f02          TST      r6,#2                 ;264
00033e  d003              BEQ      |L2.840|
000340  4639              MOV      r1,r7                 ;265
000342  1da0              ADDS     r0,r4,#6              ;265
000344  f7fffffe          BL       LCD_L0_XorPixel
                  |L2.840|
000348  1e68              SUBS     r0,r5,#1              ;266
00034a  0005              MOVS     r5,r0                 ;266
00034c  d100              BNE      |L2.848|
00034e  e6b6              B        |L2.190|
                  |L2.848|
000350  bf00              NOP                            ;268
                  |L2.850|
000352  f0160f01          TST      r6,#1                 ;269
000356  d003              BEQ      |L2.864|
000358  4639              MOV      r1,r7                 ;270
00035a  1de0              ADDS     r0,r4,#7              ;270
00035c  f7fffffe          BL       LCD_L0_XorPixel
                  |L2.864|
000360  1e68              SUBS     r0,r5,#1              ;271
000362  0005              MOVS     r5,r0                 ;271
000364  d100              BNE      |L2.872|
000366  e6aa              B        |L2.190|
                  |L2.872|
000368  3408              ADDS     r4,r4,#8              ;273
00036a  f1080001          ADD      r0,r8,#1              ;274
00036e  4680              MOV      r8,r0                 ;274
000370  7806              LDRB     r6,[r0,#0]            ;274
000372  e79a              B        |L2.682|
;;;277    
                          ENDP

                  |L2.884|
                          DCD      GUI_Context

                          AREA ||i.DrawBitLine2BPP||, CODE, READONLY, ALIGN=2

                  DrawBitLine2BPP PROC
;;;277    
;;;278    static void  DrawBitLine2BPP(int x, int y, U8 const*p, int Diff, int xsize, const LCD_PIXELINDEX*pTrans) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
000008  4691              MOV      r9,r2
00000a  469a              MOV      r10,r3
00000c  e9dd7808          LDRD     r7,r8,[sp,#0x20]
;;;279      LCD_PIXELINDEX pixels;
;;;280    /*
;;;281    // Jump to right entry point
;;;282    */
;;;283      pixels = *p;
000010  f8995000          LDRB     r5,[r9,#0]
;;;284      if (pTrans) {
000014  f1b80f00          CMP      r8,#0
000018  d07a              BEQ      |L3.272|
;;;285        /*
;;;286          with palette
;;;287        */
;;;288        if (GUI_Context.DrawMode & LCD_DRAWMODE_TRANS) switch (Diff&3) {
00001a  489c              LDR      r0,|L3.652|
00001c  7c00              LDRB     r0,[r0,#0x10]  ; GUI_Context
00001e  f0100f02          TST      r0,#2
000022  d00b              BEQ      |L3.60|
000024  f01a0003          ANDS     r0,r10,#3
000028  d004              BEQ      |L3.52|
00002a  2801              CMP      r0,#1
00002c  d003              BEQ      |L3.54|
00002e  2802              CMP      r0,#2
000030  d103              BNE      |L3.58|
000032  e001              B        |L3.56|
                  |L3.52|
;;;289        case 0:
;;;290          goto WriteTBit0;
000034  e04c              B        |L3.208|
                  |L3.54|
;;;291        case 1:
;;;292          goto WriteTBit1;
000036  e05a              B        |L3.238|
                  |L3.56|
;;;293        case 2:
;;;294          goto WriteTBit2;
000038  e06c              B        |L3.276|
                  |L3.58|
;;;295        default:
;;;296          goto WriteTBit3;
00003a  e07d              B        |L3.312|
                  |L3.60|
;;;297        } else switch (Diff&3) {
00003c  f01a0003          ANDS     r0,r10,#3
000040  d004              BEQ      |L3.76|
000042  2801              CMP      r0,#1
000044  d003              BEQ      |L3.78|
000046  2802              CMP      r0,#2
000048  d103              BNE      |L3.82|
00004a  e001              B        |L3.80|
                  |L3.76|
;;;298        case 0:
;;;299          goto WriteBit0;
00004c  e002              B        |L3.84|
                  |L3.78|
;;;300        case 1:
;;;301          goto WriteBit1;
00004e  e00e              B        |L3.110|
                  |L3.80|
;;;302        case 2:
;;;303          goto WriteBit2;
000050  e01c              B        |L3.140|
                  |L3.82|
;;;304        default:
;;;305          goto WriteBit3;
000052  e02a              B        |L3.170|
                  |L3.84|
;;;306        }
;;;307      /*
;;;308              Write without transparency
;;;309      */
;;;310      WriteBit0:
;;;311        LCD9341_SetPoint(x+0, y, *(pTrans+(pixels>>6)));
000054  11ab              ASRS     r3,r5,#6
000056  f8382013          LDRH     r2,[r8,r3,LSL #1]
00005a  b2b1              UXTH     r1,r6
00005c  b2a0              UXTH     r0,r4
00005e  f7fffffe          BL       LCD9341_SetPoint
;;;312        if (!--xsize)
000062  1e78              SUBS     r0,r7,#1
000064  0007              MOVS     r7,r0
000066  d101              BNE      |L3.108|
                  |L3.104|
;;;313          return;
;;;314      WriteBit1:
;;;315        LCD9341_SetPoint(x+1, y, *(pTrans+(3&(pixels>>4))));
;;;316        if (!--xsize)
;;;317          return;
;;;318      WriteBit2:
;;;319        LCD9341_SetPoint(x+2, y, *(pTrans+(3&(pixels>>2))));
;;;320        if (!--xsize)
;;;321          return;
;;;322      WriteBit3:
;;;323        LCD9341_SetPoint(x+3, y, *(pTrans+(3&(pixels))));
;;;324        if (!--xsize)
;;;325          return;
;;;326        pixels = *(++p);
;;;327        x+=4;
;;;328        goto WriteBit0;
;;;329      /*
;;;330              Write with transparency
;;;331      */
;;;332      WriteTBit0:
;;;333        if (pixels&(3<<6))
;;;334          LCD9341_SetPoint(x+0, y, *(pTrans+(pixels>>6)));
;;;335        if (!--xsize)
;;;336          return;
;;;337      WriteTBit1:
;;;338        if (pixels&(3<<4))
;;;339          LCD9341_SetPoint(x+1, y, *(pTrans+(3&(pixels>>4))));
;;;340        if (!--xsize)
;;;341          return;
;;;342      WriteTBit2:
;;;343        if (pixels&(3<<2))
;;;344          LCD9341_SetPoint(x+2, y, *(pTrans+(3&(pixels>>2))));
;;;345        if (!--xsize)
;;;346          return;
;;;347      WriteTBit3:
;;;348        if (pixels&(3<<0))
;;;349          LCD9341_SetPoint(x+3, y, *(pTrans+(3&(pixels))));
;;;350        if (!--xsize)
;;;351          return;
;;;352        pixels = *(++p);
;;;353        x+=4;
;;;354        goto WriteTBit0;
;;;355      } else { 
;;;356        /* 
;;;357          without palette 
;;;358        */
;;;359        if (GUI_Context.DrawMode & LCD_DRAWMODE_TRANS) switch (Diff&3) {
;;;360        case 0:
;;;361          goto WriteDDPTBit0;
;;;362        case 1:
;;;363          goto WriteDDPTBit1;
;;;364        case 2:
;;;365          goto WriteDDPTBit2;
;;;366        default:
;;;367          goto WriteDDPTBit3;
;;;368        } else switch (Diff&3) {
;;;369        case 0:
;;;370          goto WriteDDPBit0;
;;;371        case 1:
;;;372          goto WriteDDPBit1;
;;;373        case 2:
;;;374          goto WriteDDPBit2;
;;;375        default:
;;;376          goto WriteDDPBit3;
;;;377        }
;;;378      /*
;;;379              Write without transparency
;;;380      */
;;;381      WriteDDPBit0:
;;;382        LCD9341_SetPoint(x+0, y, (pixels>>6));
;;;383        if (!--xsize)
;;;384          return;
;;;385      WriteDDPBit1:
;;;386        LCD9341_SetPoint(x+1, y, (3&(pixels>>4)));
;;;387        if (!--xsize)
;;;388          return;
;;;389      WriteDDPBit2:
;;;390        LCD9341_SetPoint(x+2, y, (3&(pixels>>2)));
;;;391        if (!--xsize)
;;;392          return;
;;;393      WriteDDPBit3:
;;;394        LCD9341_SetPoint(x+3, y, (3&(pixels)));
;;;395        if (!--xsize)
;;;396          return;
;;;397        pixels = *(++p);
;;;398        x+=4;
;;;399        goto WriteDDPBit0;
;;;400      /*
;;;401              Write with transparency
;;;402      */
;;;403      WriteDDPTBit0:
;;;404        if (pixels&(3<<6))
;;;405          LCD9341_SetPoint(x+0, y, (pixels>>6));
;;;406        if (!--xsize)
;;;407          return;
;;;408      WriteDDPTBit1:
;;;409        if (pixels&(3<<4))
;;;410          LCD9341_SetPoint(x+1, y, (3&(pixels>>4)));
;;;411        if (!--xsize)
;;;412          return;
;;;413      WriteDDPTBit2:
;;;414        if (pixels&(3<<2))
;;;415          LCD9341_SetPoint(x+2, y, (3&(pixels>>2)));
;;;416        if (!--xsize)
;;;417          return;
;;;418      WriteDDPTBit3:
;;;419        if (pixels&(3<<0))
;;;420          LCD9341_SetPoint(x+3, y, (3&(pixels)));
;;;421        if (!--xsize)
;;;422          return;
;;;423        pixels = *(++p);
;;;424        x+=4;
;;;425        goto WriteDDPTBit0;
;;;426      }
;;;427    }
000068  e8bd87f0          POP      {r4-r10,pc}
                  |L3.108|
00006c  bf00              NOP                            ;314
                  |L3.110|
00006e  2303              MOVS     r3,#3                 ;315
000070  ea031325          AND      r3,r3,r5,ASR #4       ;315
000074  f8382013          LDRH     r2,[r8,r3,LSL #1]     ;315
000078  b2b1              UXTH     r1,r6                 ;315
00007a  1c63              ADDS     r3,r4,#1              ;315
00007c  b298              UXTH     r0,r3                 ;315
00007e  f7fffffe          BL       LCD9341_SetPoint
000082  1e78              SUBS     r0,r7,#1              ;316
000084  0007              MOVS     r7,r0                 ;316
000086  d100              BNE      |L3.138|
000088  e7ee              B        |L3.104|
                  |L3.138|
00008a  bf00              NOP                            ;318
                  |L3.140|
00008c  2303              MOVS     r3,#3                 ;319
00008e  ea0303a5          AND      r3,r3,r5,ASR #2       ;319
000092  f8382013          LDRH     r2,[r8,r3,LSL #1]     ;319
000096  b2b1              UXTH     r1,r6                 ;319
000098  1ca3              ADDS     r3,r4,#2              ;319
00009a  b298              UXTH     r0,r3                 ;319
00009c  f7fffffe          BL       LCD9341_SetPoint
0000a0  1e78              SUBS     r0,r7,#1              ;320
0000a2  0007              MOVS     r7,r0                 ;320
0000a4  d100              BNE      |L3.168|
0000a6  e7df              B        |L3.104|
                  |L3.168|
0000a8  bf00              NOP                            ;322
                  |L3.170|
0000aa  f0050303          AND      r3,r5,#3              ;323
0000ae  f8382013          LDRH     r2,[r8,r3,LSL #1]     ;323
0000b2  b2b1              UXTH     r1,r6                 ;323
0000b4  1ce3              ADDS     r3,r4,#3              ;323
0000b6  b298              UXTH     r0,r3                 ;323
0000b8  f7fffffe          BL       LCD9341_SetPoint
0000bc  1e78              SUBS     r0,r7,#1              ;324
0000be  0007              MOVS     r7,r0                 ;324
0000c0  d100              BNE      |L3.196|
0000c2  e7d1              B        |L3.104|
                  |L3.196|
0000c4  f1090001          ADD      r0,r9,#1              ;326
0000c8  4681              MOV      r9,r0                 ;326
0000ca  7805              LDRB     r5,[r0,#0]            ;326
0000cc  1d24              ADDS     r4,r4,#4              ;327
0000ce  e7c1              B        |L3.84|
                  |L3.208|
0000d0  f0150fc0          TST      r5,#0xc0              ;333
0000d4  d006              BEQ      |L3.228|
0000d6  11ab              ASRS     r3,r5,#6              ;334
0000d8  f8382013          LDRH     r2,[r8,r3,LSL #1]     ;334
0000dc  b2b1              UXTH     r1,r6                 ;334
0000de  b2a0              UXTH     r0,r4                 ;334
0000e0  f7fffffe          BL       LCD9341_SetPoint
                  |L3.228|
0000e4  1e78              SUBS     r0,r7,#1              ;335
0000e6  0007              MOVS     r7,r0                 ;335
0000e8  d100              BNE      |L3.236|
0000ea  e7bd              B        |L3.104|
                  |L3.236|
0000ec  bf00              NOP                            ;337
                  |L3.238|
0000ee  f0150f30          TST      r5,#0x30              ;338
0000f2  d009              BEQ      |L3.264|
0000f4  2303              MOVS     r3,#3                 ;339
0000f6  ea031325          AND      r3,r3,r5,ASR #4       ;339
0000fa  f8382013          LDRH     r2,[r8,r3,LSL #1]     ;339
0000fe  b2b1              UXTH     r1,r6                 ;339
000100  1c63              ADDS     r3,r4,#1              ;339
000102  b298              UXTH     r0,r3                 ;339
000104  f7fffffe          BL       LCD9341_SetPoint
                  |L3.264|
000108  1e78              SUBS     r0,r7,#1              ;340
00010a  0007              MOVS     r7,r0                 ;340
00010c  d101              BNE      |L3.274|
00010e  e7ab              B        |L3.104|
                  |L3.272|
000110  e028              B        |L3.356|
                  |L3.274|
000112  bf00              NOP                            ;342
                  |L3.276|
000114  f0150f0c          TST      r5,#0xc               ;343
000118  d009              BEQ      |L3.302|
00011a  2303              MOVS     r3,#3                 ;344
00011c  ea0303a5          AND      r3,r3,r5,ASR #2       ;344
000120  f8382013          LDRH     r2,[r8,r3,LSL #1]     ;344
000124  b2b1              UXTH     r1,r6                 ;344
000126  1ca3              ADDS     r3,r4,#2              ;344
000128  b298              UXTH     r0,r3                 ;344
00012a  f7fffffe          BL       LCD9341_SetPoint
                  |L3.302|
00012e  1e78              SUBS     r0,r7,#1              ;345
000130  0007              MOVS     r7,r0                 ;345
000132  d100              BNE      |L3.310|
000134  e798              B        |L3.104|
                  |L3.310|
000136  bf00              NOP                            ;347
                  |L3.312|
000138  f0150f03          TST      r5,#3                 ;348
00013c  d008              BEQ      |L3.336|
00013e  f0050303          AND      r3,r5,#3              ;349
000142  f8382013          LDRH     r2,[r8,r3,LSL #1]     ;349
000146  b2b1              UXTH     r1,r6                 ;349
000148  1ce3              ADDS     r3,r4,#3              ;349
00014a  b298              UXTH     r0,r3                 ;349
00014c  f7fffffe          BL       LCD9341_SetPoint
                  |L3.336|
000150  1e78              SUBS     r0,r7,#1              ;350
000152  0007              MOVS     r7,r0                 ;350
000154  d100              BNE      |L3.344|
000156  e787              B        |L3.104|
                  |L3.344|
000158  f1090001          ADD      r0,r9,#1              ;352
00015c  4681              MOV      r9,r0                 ;352
00015e  7805              LDRB     r5,[r0,#0]            ;352
000160  1d24              ADDS     r4,r4,#4              ;353
000162  e7b5              B        |L3.208|
                  |L3.356|
000164  4849              LDR      r0,|L3.652|
000166  7c00              LDRB     r0,[r0,#0x10]         ;359  ; GUI_Context
000168  f0100f02          TST      r0,#2                 ;359
00016c  d00b              BEQ      |L3.390|
00016e  f01a0003          ANDS     r0,r10,#3             ;359
000172  d004              BEQ      |L3.382|
000174  2801              CMP      r0,#1                 ;359
000176  d003              BEQ      |L3.384|
000178  2802              CMP      r0,#2                 ;359
00017a  d103              BNE      |L3.388|
00017c  e001              B        |L3.386|
                  |L3.382|
00017e  e043              B        |L3.520|
                  |L3.384|
000180  e04f              B        |L3.546|
                  |L3.386|
000182  e05e              B        |L3.578|
                  |L3.388|
000184  e06d              B        |L3.610|
                  |L3.390|
000186  f01a0003          ANDS     r0,r10,#3             ;368
00018a  d004              BEQ      |L3.406|
00018c  2801              CMP      r0,#1                 ;368
00018e  d003              BEQ      |L3.408|
000190  2802              CMP      r0,#2                 ;368
000192  d103              BNE      |L3.412|
000194  e001              B        |L3.410|
                  |L3.406|
000196  e002              B        |L3.414|
                  |L3.408|
000198  e00b              B        |L3.434|
                  |L3.410|
00019a  e017              B        |L3.460|
                  |L3.412|
00019c  e023              B        |L3.486|
                  |L3.414|
00019e  11aa              ASRS     r2,r5,#6              ;382
0001a0  b2b1              UXTH     r1,r6                 ;382
0001a2  b2a0              UXTH     r0,r4                 ;382
0001a4  f7fffffe          BL       LCD9341_SetPoint
0001a8  1e78              SUBS     r0,r7,#1              ;383
0001aa  0007              MOVS     r7,r0                 ;383
0001ac  d100              BNE      |L3.432|
0001ae  e75b              B        |L3.104|
                  |L3.432|
0001b0  bf00              NOP                            ;385
                  |L3.434|
0001b2  2303              MOVS     r3,#3                 ;386
0001b4  ea031225          AND      r2,r3,r5,ASR #4       ;386
0001b8  b2b1              UXTH     r1,r6                 ;386
0001ba  1c63              ADDS     r3,r4,#1              ;386
0001bc  b298              UXTH     r0,r3                 ;386
0001be  f7fffffe          BL       LCD9341_SetPoint
0001c2  1e78              SUBS     r0,r7,#1              ;387
0001c4  0007              MOVS     r7,r0                 ;387
0001c6  d100              BNE      |L3.458|
0001c8  e74e              B        |L3.104|
                  |L3.458|
0001ca  bf00              NOP                            ;389
                  |L3.460|
0001cc  2303              MOVS     r3,#3                 ;390
0001ce  ea0302a5          AND      r2,r3,r5,ASR #2       ;390
0001d2  b2b1              UXTH     r1,r6                 ;390
0001d4  1ca3              ADDS     r3,r4,#2              ;390
0001d6  b298              UXTH     r0,r3                 ;390
0001d8  f7fffffe          BL       LCD9341_SetPoint
0001dc  1e78              SUBS     r0,r7,#1              ;391
0001de  0007              MOVS     r7,r0                 ;391
0001e0  d100              BNE      |L3.484|
0001e2  e741              B        |L3.104|
                  |L3.484|
0001e4  bf00              NOP                            ;393
                  |L3.486|
0001e6  f0050203          AND      r2,r5,#3              ;394
0001ea  b2b1              UXTH     r1,r6                 ;394
0001ec  1ce3              ADDS     r3,r4,#3              ;394
0001ee  b298              UXTH     r0,r3                 ;394
0001f0  f7fffffe          BL       LCD9341_SetPoint
0001f4  1e78              SUBS     r0,r7,#1              ;395
0001f6  0007              MOVS     r7,r0                 ;395
0001f8  d100              BNE      |L3.508|
0001fa  e735              B        |L3.104|
                  |L3.508|
0001fc  f1090001          ADD      r0,r9,#1              ;397
000200  4681              MOV      r9,r0                 ;397
000202  7805              LDRB     r5,[r0,#0]            ;397
000204  1d24              ADDS     r4,r4,#4              ;398
000206  e7ca              B        |L3.414|
                  |L3.520|
000208  f0150fc0          TST      r5,#0xc0              ;404
00020c  d004              BEQ      |L3.536|
00020e  11aa              ASRS     r2,r5,#6              ;405
000210  b2b1              UXTH     r1,r6                 ;405
000212  b2a0              UXTH     r0,r4                 ;405
000214  f7fffffe          BL       LCD9341_SetPoint
                  |L3.536|
000218  1e78              SUBS     r0,r7,#1              ;406
00021a  0007              MOVS     r7,r0                 ;406
00021c  d100              BNE      |L3.544|
00021e  e723              B        |L3.104|
                  |L3.544|
000220  bf00              NOP                            ;408
                  |L3.546|
000222  f0150f30          TST      r5,#0x30              ;409
000226  d007              BEQ      |L3.568|
000228  2303              MOVS     r3,#3                 ;410
00022a  ea031225          AND      r2,r3,r5,ASR #4       ;410
00022e  b2b1              UXTH     r1,r6                 ;410
000230  1c63              ADDS     r3,r4,#1              ;410
000232  b298              UXTH     r0,r3                 ;410
000234  f7fffffe          BL       LCD9341_SetPoint
                  |L3.568|
000238  1e78              SUBS     r0,r7,#1              ;411
00023a  0007              MOVS     r7,r0                 ;411
00023c  d100              BNE      |L3.576|
00023e  e713              B        |L3.104|
                  |L3.576|
000240  bf00              NOP                            ;413
                  |L3.578|
000242  f0150f0c          TST      r5,#0xc               ;414
000246  d007              BEQ      |L3.600|
000248  2303              MOVS     r3,#3                 ;415
00024a  ea0302a5          AND      r2,r3,r5,ASR #2       ;415
00024e  b2b1              UXTH     r1,r6                 ;415
000250  1ca3              ADDS     r3,r4,#2              ;415
000252  b298              UXTH     r0,r3                 ;415
000254  f7fffffe          BL       LCD9341_SetPoint
                  |L3.600|
000258  1e78              SUBS     r0,r7,#1              ;416
00025a  0007              MOVS     r7,r0                 ;416
00025c  d100              BNE      |L3.608|
00025e  e703              B        |L3.104|
                  |L3.608|
000260  bf00              NOP                            ;418
                  |L3.610|
000262  f0150f03          TST      r5,#3                 ;419
000266  d006              BEQ      |L3.630|
000268  f0050203          AND      r2,r5,#3              ;420
00026c  b2b1              UXTH     r1,r6                 ;420
00026e  1ce3              ADDS     r3,r4,#3              ;420
000270  b298              UXTH     r0,r3                 ;420
000272  f7fffffe          BL       LCD9341_SetPoint
                  |L3.630|
000276  1e78              SUBS     r0,r7,#1              ;421
000278  0007              MOVS     r7,r0                 ;421
00027a  d100              BNE      |L3.638|
00027c  e6f4              B        |L3.104|
                  |L3.638|
00027e  f1090001          ADD      r0,r9,#1              ;423
000282  4681              MOV      r9,r0                 ;423
000284  7805              LDRB     r5,[r0,#0]            ;423
000286  1d24              ADDS     r4,r4,#4              ;424
000288  e7be              B        |L3.520|
;;;428    
                          ENDP

00028a  0000              DCW      0x0000
                  |L3.652|
                          DCD      GUI_Context

                          AREA ||i.DrawBitLine4BPP||, CODE, READONLY, ALIGN=2

                  DrawBitLine4BPP PROC
;;;428    
;;;429    static void  DrawBitLine4BPP(int x, int y, U8 const*p, int Diff, int xsize, const LCD_PIXELINDEX*pTrans)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;430    {
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
000008  4690              MOV      r8,r2
00000a  4699              MOV      r9,r3
00000c  e9dd7a08          LDRD     r7,r10,[sp,#0x20]
;;;431      LCD_PIXELINDEX pixels;
;;;432    
;;;433      pixels = *p;
000010  f8985000          LDRB     r5,[r8,#0]
;;;434      if (pTrans)
000014  f1ba0f00          CMP      r10,#0
000018  d052              BEQ      |L4.192|
;;;435      {
;;;436        if (GUI_Context.DrawMode & LCD_DRAWMODE_TRANS)
00001a  484e              LDR      r0,|L4.340|
00001c  7c00              LDRB     r0,[r0,#0x10]  ; GUI_Context
00001e  f0100f02          TST      r0,#2
000022  d004              BEQ      |L4.46|
;;;437        {
;;;438          if ((Diff&1) ==0)
000024  f0190f01          TST      r9,#1
000028  d100              BNE      |L4.44|
;;;439            goto WriteTBit0;
00002a  e025              B        |L4.120|
                  |L4.44|
;;;440            goto WriteTBit1;
00002c  e032              B        |L4.148|
                  |L4.46|
;;;441        }
;;;442        else
;;;443        {
;;;444          if ((Diff&1) ==0)
00002e  f0190f01          TST      r9,#1
000032  d100              BNE      |L4.54|
;;;445            goto WriteBit0;
000034  e000              B        |L4.56|
                  |L4.54|
;;;446            goto WriteBit1;
000036  e00c              B        |L4.82|
                  |L4.56|
;;;447        }
;;;448    
;;;449      WriteBit0:
;;;450        LCD9341_SetPoint(x+0, y, *(pTrans+(pixels>>4)));
000038  112b              ASRS     r3,r5,#4
00003a  f83a2013          LDRH     r2,[r10,r3,LSL #1]
00003e  b2b1              UXTH     r1,r6
000040  b2a0              UXTH     r0,r4
000042  f7fffffe          BL       LCD9341_SetPoint
;;;451        if (!--xsize)
000046  1e78              SUBS     r0,r7,#1
000048  0007              MOVS     r7,r0
00004a  d101              BNE      |L4.80|
                  |L4.76|
;;;452          return;
;;;453      WriteBit1:
;;;454        LCD9341_SetPoint(x+1, y, *(pTrans+(pixels&0xf)));
;;;455        if (!--xsize)
;;;456          return;
;;;457        x+=2;
;;;458        pixels = *(++p);
;;;459        goto WriteBit0;
;;;460      /*
;;;461              Write with transparency
;;;462      */
;;;463      WriteTBit0:
;;;464        if (pixels>>4)
;;;465          LCD9341_SetPoint(x+0, y, *(pTrans+(pixels>>4)));
;;;466        if (!--xsize)
;;;467          return;
;;;468      WriteTBit1:
;;;469        if (pixels&0xf)
;;;470          LCD9341_SetPoint(x+1, y, *(pTrans+(pixels&0xf)));
;;;471        if (!--xsize)
;;;472          return;
;;;473        x+=2;
;;;474        pixels = *(++p);
;;;475        goto WriteTBit0;
;;;476      } else {
;;;477        /*
;;;478          without palette
;;;479        */
;;;480        if (GUI_Context.DrawMode & LCD_DRAWMODE_TRANS) {
;;;481          if ((Diff&1) ==0)
;;;482            goto WriteDDPTBit0;
;;;483          goto WriteDDPTBit1;
;;;484        } else {
;;;485          if ((Diff&1) ==0)
;;;486            goto WriteDDPBit0;
;;;487          goto WriteDDPBit1;
;;;488        }
;;;489      /*
;;;490              Write without transparency
;;;491      */
;;;492      WriteDDPBit0:
;;;493        LCD9341_SetPoint(x+0, y, (pixels>>4));
;;;494        if (!--xsize)
;;;495          return;
;;;496      WriteDDPBit1:
;;;497        LCD9341_SetPoint(x+1, y, (pixels&0xf));
;;;498        if (!--xsize)
;;;499          return;
;;;500        x+=2;
;;;501        pixels = *(++p);
;;;502        goto WriteDDPBit0;
;;;503      /*
;;;504              Write with transparency
;;;505      */
;;;506      WriteDDPTBit0:
;;;507        if (pixels>>4)
;;;508          LCD9341_SetPoint(x+0, y, (pixels>>4));
;;;509        if (!--xsize)
;;;510          return;
;;;511      WriteDDPTBit1:
;;;512        if (pixels&0xf)
;;;513          LCD9341_SetPoint(x+1, y, (pixels&0xf));
;;;514        if (!--xsize)
;;;515          return;
;;;516        x+=2;
;;;517        pixels = *(++p);
;;;518        goto WriteDDPTBit0;
;;;519      }
;;;520    }
00004c  e8bd87f0          POP      {r4-r10,pc}
                  |L4.80|
000050  bf00              NOP                            ;453
                  |L4.82|
000052  f005030f          AND      r3,r5,#0xf            ;454
000056  f83a2013          LDRH     r2,[r10,r3,LSL #1]    ;454
00005a  b2b1              UXTH     r1,r6                 ;454
00005c  1c63              ADDS     r3,r4,#1              ;454
00005e  b298              UXTH     r0,r3                 ;454
000060  f7fffffe          BL       LCD9341_SetPoint
000064  1e78              SUBS     r0,r7,#1              ;455
000066  0007              MOVS     r7,r0                 ;455
000068  d100              BNE      |L4.108|
00006a  e7ef              B        |L4.76|
                  |L4.108|
00006c  1ca4              ADDS     r4,r4,#2              ;457
00006e  f1080001          ADD      r0,r8,#1              ;458
000072  4680              MOV      r8,r0                 ;458
000074  7805              LDRB     r5,[r0,#0]            ;458
000076  e7df              B        |L4.56|
                  |L4.120|
000078  1128              ASRS     r0,r5,#4              ;464
00007a  d006              BEQ      |L4.138|
00007c  112b              ASRS     r3,r5,#4              ;465
00007e  f83a2013          LDRH     r2,[r10,r3,LSL #1]    ;465
000082  b2b1              UXTH     r1,r6                 ;465
000084  b2a0              UXTH     r0,r4                 ;465
000086  f7fffffe          BL       LCD9341_SetPoint
                  |L4.138|
00008a  1e78              SUBS     r0,r7,#1              ;466
00008c  0007              MOVS     r7,r0                 ;466
00008e  d100              BNE      |L4.146|
000090  e7dc              B        |L4.76|
                  |L4.146|
000092  bf00              NOP                            ;468
                  |L4.148|
000094  f0150f0f          TST      r5,#0xf               ;469
000098  d008              BEQ      |L4.172|
00009a  f005030f          AND      r3,r5,#0xf            ;470
00009e  f83a2013          LDRH     r2,[r10,r3,LSL #1]    ;470
0000a2  b2b1              UXTH     r1,r6                 ;470
0000a4  1c63              ADDS     r3,r4,#1              ;470
0000a6  b298              UXTH     r0,r3                 ;470
0000a8  f7fffffe          BL       LCD9341_SetPoint
                  |L4.172|
0000ac  1e78              SUBS     r0,r7,#1              ;471
0000ae  0007              MOVS     r7,r0                 ;471
0000b0  d100              BNE      |L4.180|
0000b2  e7cb              B        |L4.76|
                  |L4.180|
0000b4  1ca4              ADDS     r4,r4,#2              ;473
0000b6  f1080001          ADD      r0,r8,#1              ;474
0000ba  4680              MOV      r8,r0                 ;474
0000bc  7805              LDRB     r5,[r0,#0]            ;474
0000be  e7db              B        |L4.120|
                  |L4.192|
0000c0  4824              LDR      r0,|L4.340|
0000c2  7c00              LDRB     r0,[r0,#0x10]         ;480  ; GUI_Context
0000c4  f0100f02          TST      r0,#2                 ;480
0000c8  d004              BEQ      |L4.212|
0000ca  f0190f01          TST      r9,#1                 ;481
0000ce  d100              BNE      |L4.210|
0000d0  e020              B        |L4.276|
                  |L4.210|
0000d2  e02b              B        |L4.300|
                  |L4.212|
0000d4  f0190f01          TST      r9,#1                 ;485
0000d8  d100              BNE      |L4.220|
0000da  e000              B        |L4.222|
                  |L4.220|
0000dc  e009              B        |L4.242|
                  |L4.222|
0000de  112a              ASRS     r2,r5,#4              ;493
0000e0  b2b1              UXTH     r1,r6                 ;493
0000e2  b2a0              UXTH     r0,r4                 ;493
0000e4  f7fffffe          BL       LCD9341_SetPoint
0000e8  1e78              SUBS     r0,r7,#1              ;494
0000ea  0007              MOVS     r7,r0                 ;494
0000ec  d100              BNE      |L4.240|
0000ee  e7ad              B        |L4.76|
                  |L4.240|
0000f0  bf00              NOP                            ;496
                  |L4.242|
0000f2  f005020f          AND      r2,r5,#0xf            ;497
0000f6  b2b1              UXTH     r1,r6                 ;497
0000f8  1c63              ADDS     r3,r4,#1              ;497
0000fa  b298              UXTH     r0,r3                 ;497
0000fc  f7fffffe          BL       LCD9341_SetPoint
000100  1e78              SUBS     r0,r7,#1              ;498
000102  0007              MOVS     r7,r0                 ;498
000104  d100              BNE      |L4.264|
000106  e7a1              B        |L4.76|
                  |L4.264|
000108  1ca4              ADDS     r4,r4,#2              ;500
00010a  f1080001          ADD      r0,r8,#1              ;501
00010e  4680              MOV      r8,r0                 ;501
000110  7805              LDRB     r5,[r0,#0]            ;501
000112  e7e4              B        |L4.222|
                  |L4.276|
000114  1128              ASRS     r0,r5,#4              ;507
000116  d004              BEQ      |L4.290|
000118  112a              ASRS     r2,r5,#4              ;508
00011a  b2b1              UXTH     r1,r6                 ;508
00011c  b2a0              UXTH     r0,r4                 ;508
00011e  f7fffffe          BL       LCD9341_SetPoint
                  |L4.290|
000122  1e78              SUBS     r0,r7,#1              ;509
000124  0007              MOVS     r7,r0                 ;509
000126  d100              BNE      |L4.298|
000128  e790              B        |L4.76|
                  |L4.298|
00012a  bf00              NOP                            ;511
                  |L4.300|
00012c  f0150f0f          TST      r5,#0xf               ;512
000130  d006              BEQ      |L4.320|
000132  f005020f          AND      r2,r5,#0xf            ;513
000136  b2b1              UXTH     r1,r6                 ;513
000138  1c63              ADDS     r3,r4,#1              ;513
00013a  b298              UXTH     r0,r3                 ;513
00013c  f7fffffe          BL       LCD9341_SetPoint
                  |L4.320|
000140  1e78              SUBS     r0,r7,#1              ;514
000142  0007              MOVS     r7,r0                 ;514
000144  d100              BNE      |L4.328|
000146  e781              B        |L4.76|
                  |L4.328|
000148  1ca4              ADDS     r4,r4,#2              ;516
00014a  f1080001          ADD      r0,r8,#1              ;517
00014e  4680              MOV      r8,r0                 ;517
000150  7805              LDRB     r5,[r0,#0]            ;517
000152  e7df              B        |L4.276|
;;;521    
                          ENDP

                  |L4.340|
                          DCD      GUI_Context

                          AREA ||i.DrawBitLine8BPP||, CODE, READONLY, ALIGN=2

                  DrawBitLine8BPP PROC
;;;521    
;;;522    void DrawBitLine8BPP(int x, int y, U8 const*p, int xsize, const LCD_PIXELINDEX*pTrans) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4604              MOV      r4,r0
000006  4688              MOV      r8,r1
000008  4615              MOV      r5,r2
00000a  461e              MOV      r6,r3
00000c  f8dd9020          LDR      r9,[sp,#0x20]
;;;523      LCD_PIXELINDEX pixel;
;;;524      if ((GUI_Context.DrawMode & LCD_DRAWMODE_TRANS)==0) {
000010  4823              LDR      r0,|L5.160|
000012  7c00              LDRB     r0,[r0,#0x10]  ; GUI_Context
000014  f0100f02          TST      r0,#2
000018  d11e              BNE      |L5.88|
;;;525        if (pTrans) {
00001a  f1b90f00          CMP      r9,#0
00001e  d00e              BEQ      |L5.62|
;;;526          for (;xsize > 0; xsize--,x++,p++) {
000020  e00a              B        |L5.56|
                  |L5.34|
;;;527            pixel = *p;
000022  782f              LDRB     r7,[r5,#0]
;;;528            LCD9341_SetPoint(x, y, *(pTrans+pixel));
000024  f8392017          LDRH     r2,[r9,r7,LSL #1]
000028  fa1ff188          UXTH     r1,r8
00002c  b2a0              UXTH     r0,r4
00002e  f7fffffe          BL       LCD9341_SetPoint
000032  1e76              SUBS     r6,r6,#1              ;526
000034  1c64              ADDS     r4,r4,#1              ;526
000036  1c6d              ADDS     r5,r5,#1              ;526
                  |L5.56|
000038  2e00              CMP      r6,#0                 ;526
00003a  dcf2              BGT      |L5.34|
00003c  e02d              B        |L5.154|
                  |L5.62|
;;;529          }
;;;530        } else {
;;;531          for (;xsize > 0; xsize--,x++,p++) {
00003e  e008              B        |L5.82|
                  |L5.64|
;;;532            LCD9341_SetPoint(x, y, *p);
000040  782a              LDRB     r2,[r5,#0]
000042  fa1ff188          UXTH     r1,r8
000046  b2a0              UXTH     r0,r4
000048  f7fffffe          BL       LCD9341_SetPoint
00004c  1e76              SUBS     r6,r6,#1              ;531
00004e  1c64              ADDS     r4,r4,#1              ;531
000050  1c6d              ADDS     r5,r5,#1              ;531
                  |L5.82|
000052  2e00              CMP      r6,#0                 ;531
000054  dcf4              BGT      |L5.64|
000056  e020              B        |L5.154|
                  |L5.88|
;;;533          }
;;;534        }
;;;535      } else {   /* Handle transparent bitmap */
;;;536        if (pTrans) {
000058  f1b90f00          CMP      r9,#0
00005c  d00f              BEQ      |L5.126|
;;;537          for (; xsize > 0; xsize--, x++, p++) {
00005e  e00b              B        |L5.120|
                  |L5.96|
;;;538            pixel = *p;
000060  782f              LDRB     r7,[r5,#0]
;;;539            if (pixel) {
000062  b137              CBZ      r7,|L5.114|
;;;540              LCD9341_SetPoint(x+0, y, *(pTrans+pixel));
000064  f8392017          LDRH     r2,[r9,r7,LSL #1]
000068  fa1ff188          UXTH     r1,r8
00006c  b2a0              UXTH     r0,r4
00006e  f7fffffe          BL       LCD9341_SetPoint
                  |L5.114|
000072  1e76              SUBS     r6,r6,#1              ;537
000074  1c64              ADDS     r4,r4,#1              ;537
000076  1c6d              ADDS     r5,r5,#1              ;537
                  |L5.120|
000078  2e00              CMP      r6,#0                 ;537
00007a  dcf1              BGT      |L5.96|
00007c  e00d              B        |L5.154|
                  |L5.126|
;;;541            }
;;;542          }
;;;543        } else {
;;;544          for (; xsize > 0; xsize--, x++, p++) {
00007e  e00a              B        |L5.150|
                  |L5.128|
;;;545            pixel = *p;
000080  782f              LDRB     r7,[r5,#0]
;;;546            if (pixel) {
000082  b12f              CBZ      r7,|L5.144|
;;;547              LCD9341_SetPoint(x+0, y, pixel);
000084  fa1ff188          UXTH     r1,r8
000088  b2a0              UXTH     r0,r4
00008a  463a              MOV      r2,r7
00008c  f7fffffe          BL       LCD9341_SetPoint
                  |L5.144|
000090  1e76              SUBS     r6,r6,#1              ;544
000092  1c64              ADDS     r4,r4,#1              ;544
000094  1c6d              ADDS     r5,r5,#1              ;544
                  |L5.150|
000096  2e00              CMP      r6,#0                 ;544
000098  dcf2              BGT      |L5.128|
                  |L5.154|
;;;548            }
;;;549          }
;;;550        }
;;;551      }
;;;552    }
00009a  e8bd87f0          POP      {r4-r10,pc}
;;;553    
                          ENDP

00009e  0000              DCW      0x0000
                  |L5.160|
                          DCD      GUI_Context

                          AREA ||i.LCD_L0_DrawBitmap||, CODE, READONLY, ALIGN=1

                  LCD_L0_DrawBitmap PROC
;;;584    
;;;585    void LCD_L0_DrawBitmap   (int x0, int y0,
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;586                           int xsize, int ysize,
;;;587                           int BitsPerPixel, 
;;;588                           int BytesPerLine,
;;;589                           const U8* pData, int Diff,
;;;590                           const LCD_PIXELINDEX* pTrans)
;;;591    {
000004  b083              SUB      sp,sp,#0xc
000006  460d              MOV      r5,r1
000008  4690              MOV      r8,r2
00000a  461e              MOV      r6,r3
00000c  e9ddb910          LDRD     r11,r9,[sp,#0x40]
000010  f8dda050          LDR      r10,[sp,#0x50]
000014  9f12              LDR      r7,[sp,#0x48]
;;;592      int i;
;;;593      switch (BitsPerPixel)
000016  f1bb0f04          CMP      r11,#4
00001a  d02c              BEQ      |L6.118|
00001c  dc06              BGT      |L6.44|
00001e  f1bb0f01          CMP      r11,#1
000022  d00a              BEQ      |L6.58|
000024  f1bb0f02          CMP      r11,#2
000028  d150              BNE      |L6.204|
00002a  e015              B        |L6.88|
                  |L6.44|
00002c  f1bb0f08          CMP      r11,#8
000030  d030              BEQ      |L6.148|
000032  f1bb0f10          CMP      r11,#0x10
000036  d149              BNE      |L6.204|
000038  e03b              B        |L6.178|
                  |L6.58|
;;;594      {
;;;595      case 1:
;;;596        for (i=0; i<ysize; i++)
00003a  2400              MOVS     r4,#0
00003c  e009              B        |L6.82|
                  |L6.62|
;;;597        {
;;;598          DrawBitLine1BPP(x0, i+y0, pData, Diff, xsize, pTrans);
00003e  1961              ADDS     r1,r4,r5
000040  e9cd8a00          STRD     r8,r10,[sp,#0]
000044  463a              MOV      r2,r7
000046  9b13              LDR      r3,[sp,#0x4c]
000048  9803              LDR      r0,[sp,#0xc]
00004a  f7fffffe          BL       DrawBitLine1BPP
;;;599          pData += BytesPerLine;
00004e  444f              ADD      r7,r7,r9
000050  1c64              ADDS     r4,r4,#1              ;596
                  |L6.82|
000052  42b4              CMP      r4,r6                 ;596
000054  dbf3              BLT      |L6.62|
;;;600        }
;;;601        break;
000056  e039              B        |L6.204|
                  |L6.88|
;;;602      case 2:
;;;603        for (i=0; i<ysize; i++)
000058  2400              MOVS     r4,#0
00005a  e009              B        |L6.112|
                  |L6.92|
;;;604        {
;;;605          DrawBitLine2BPP(x0, i+y0, pData, Diff, xsize, pTrans);
00005c  1961              ADDS     r1,r4,r5
00005e  e9cd8a00          STRD     r8,r10,[sp,#0]
000062  463a              MOV      r2,r7
000064  9b13              LDR      r3,[sp,#0x4c]
000066  9803              LDR      r0,[sp,#0xc]
000068  f7fffffe          BL       DrawBitLine2BPP
;;;606          pData += BytesPerLine;
00006c  444f              ADD      r7,r7,r9
00006e  1c64              ADDS     r4,r4,#1              ;603
                  |L6.112|
000070  42b4              CMP      r4,r6                 ;603
000072  dbf3              BLT      |L6.92|
;;;607        }
;;;608        break;
000074  e02a              B        |L6.204|
                  |L6.118|
;;;609      case 4:
;;;610        for (i=0; i<ysize; i++)
000076  2400              MOVS     r4,#0
000078  e009              B        |L6.142|
                  |L6.122|
;;;611        {
;;;612          DrawBitLine4BPP(x0, i+y0, pData, Diff, xsize, pTrans);
00007a  1961              ADDS     r1,r4,r5
00007c  e9cd8a00          STRD     r8,r10,[sp,#0]
000080  463a              MOV      r2,r7
000082  9b13              LDR      r3,[sp,#0x4c]
000084  9803              LDR      r0,[sp,#0xc]
000086  f7fffffe          BL       DrawBitLine4BPP
;;;613          pData += BytesPerLine;
00008a  444f              ADD      r7,r7,r9
00008c  1c64              ADDS     r4,r4,#1              ;610
                  |L6.142|
00008e  42b4              CMP      r4,r6                 ;610
000090  dbf3              BLT      |L6.122|
;;;614        }
;;;615        break;
000092  e01b              B        |L6.204|
                  |L6.148|
;;;616      case 8:
;;;617        for (i=0; i<ysize; i++)
000094  2400              MOVS     r4,#0
000096  e009              B        |L6.172|
                  |L6.152|
;;;618        {
;;;619          DrawBitLine8BPP(x0, i+y0, pData, xsize, pTrans);
000098  1961              ADDS     r1,r4,r5
00009a  4643              MOV      r3,r8
00009c  463a              MOV      r2,r7
00009e  f8cda000          STR      r10,[sp,#0]
0000a2  9803              LDR      r0,[sp,#0xc]
0000a4  f7fffffe          BL       DrawBitLine8BPP
;;;620          pData += BytesPerLine;
0000a8  444f              ADD      r7,r7,r9
0000aa  1c64              ADDS     r4,r4,#1              ;617
                  |L6.172|
0000ac  42b4              CMP      r4,r6                 ;617
0000ae  dbf3              BLT      |L6.152|
;;;621        }
;;;622        break;
0000b0  e00c              B        |L6.204|
                  |L6.178|
;;;623      case 16:
;;;624        for (i=0; i<ysize; i++)
0000b2  2400              MOVS     r4,#0
0000b4  e007              B        |L6.198|
                  |L6.182|
;;;625        {
;;;626          DrawBitLine16BPP(x0, i+y0, (U16*)pData, xsize);
0000b6  1961              ADDS     r1,r4,r5
0000b8  4643              MOV      r3,r8
0000ba  463a              MOV      r2,r7
0000bc  9803              LDR      r0,[sp,#0xc]
0000be  f7fffffe          BL       DrawBitLine16BPP
;;;627          pData += BytesPerLine;
0000c2  444f              ADD      r7,r7,r9
0000c4  1c64              ADDS     r4,r4,#1              ;624
                  |L6.198|
0000c6  42b4              CMP      r4,r6                 ;624
0000c8  dbf5              BLT      |L6.182|
;;;628        }
;;;629        break;
0000ca  bf00              NOP      
                  |L6.204|
0000cc  bf00              NOP                            ;601
;;;630      }
;;;631    }
0000ce  b007              ADD      sp,sp,#0x1c
0000d0  e8bd8ff0          POP      {r4-r11,pc}
;;;632    
                          ENDP


                          AREA ||i.LCD_L0_DrawHLine||, CODE, READONLY, ALIGN=2

                  LCD_L0_DrawHLine PROC
;;;52     
;;;53     void LCD_L0_DrawHLine  (int x0, int y,  int x1)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;54     {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
;;;55     	LCD9341_DrawHLine(x0,y,x1,LCD_COLORINDEX);
00000a  4f04              LDR      r7,|L7.28|
00000c  887b              LDRH     r3,[r7,#2]  ; GUI_Context
00000e  b2b2              UXTH     r2,r6
000010  b2a9              UXTH     r1,r5
000012  b2a0              UXTH     r0,r4
000014  f7fffffe          BL       LCD9341_DrawHLine
;;;56     }
000018  e8bd81f0          POP      {r4-r8,pc}
;;;57     
                          ENDP

                  |L7.28|
                          DCD      GUI_Context

                          AREA ||i.LCD_L0_DrawVLine||, CODE, READONLY, ALIGN=2

                  LCD_L0_DrawVLine PROC
;;;57     
;;;58     void LCD_L0_DrawVLine  (int x, int y0,  int y1)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;59     {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
;;;60       	LCD9341_DrawVLine(x,y0,y1,LCD_COLORINDEX);
00000a  4f04              LDR      r7,|L8.28|
00000c  887b              LDRH     r3,[r7,#2]  ; GUI_Context
00000e  b2b2              UXTH     r2,r6
000010  b2a9              UXTH     r1,r5
000012  b2a0              UXTH     r0,r4
000014  f7fffffe          BL       LCD9341_DrawVLine
;;;61     }
000018  e8bd81f0          POP      {r4-r8,pc}
;;;62     
                          ENDP

                  |L8.28|
                          DCD      GUI_Context

                          AREA ||i.LCD_L0_FillRect||, CODE, READONLY, ALIGN=2

                  LCD_L0_FillRect PROC
;;;62     
;;;63     void LCD_L0_FillRect(int x0, int y0, int x1, int y1) {
000000  b5f8              PUSH     {r3-r7,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
000008  461f              MOV      r7,r3
;;;64     //	#if !LCD_SWAP_XY
;;;65     //	  for (; y0 <= y1; y0++) {
;;;66     //	    LCD_L0_DrawHLine(x0,y0, x1);
;;;67     //	  }
;;;68     //	#else
;;;69     //	  for (; x0 <= x1; x0++) {
;;;70     //	    LCD_L0_DrawVLine(x0,y0, y1);
;;;71     //	  }
;;;72     //	#endif
;;;73     
;;;74     	LCD9341_FillRect(x0,y0,x1,y1,LCD_COLORINDEX);
00000a  4805              LDR      r0,|L9.32|
00000c  8840              LDRH     r0,[r0,#2]  ; GUI_Context
00000e  b2bb              UXTH     r3,r7
000010  b2b2              UXTH     r2,r6
000012  b2a9              UXTH     r1,r5
000014  9000              STR      r0,[sp,#0]
000016  b2a0              UXTH     r0,r4
000018  f7fffffe          BL       LCD9341_FillRect
;;;75     }
00001c  bdf8              POP      {r3-r7,pc}
;;;76     
                          ENDP

00001e  0000              DCW      0x0000
                  |L9.32|
                          DCD      GUI_Context

                          AREA ||i.LCD_L0_GetDevFunc||, CODE, READONLY, ALIGN=1

                  LCD_L0_GetDevFunc PROC
;;;635    void LCD_L0_On(void){}
;;;636    void * LCD_L0_GetDevFunc(int Index) {
000000  4601              MOV      r1,r0
;;;637      GUI_USE_PARA(Index);
000002  bf00              NOP      
;;;638      return 0;
000004  2000              MOVS     r0,#0
;;;639    }
000006  4770              BX       lr
;;;640    
                          ENDP


                          AREA ||i.LCD_L0_GetPixelIndex||, CODE, READONLY, ALIGN=1

                  LCD_L0_GetPixelIndex PROC
;;;41     
;;;42     unsigned int LCD_L0_GetPixelIndex(int x, int y)
000000  b570              PUSH     {r4-r6,lr}
;;;43     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;44     	return LCD9341_GetPoint(x,y);
000006  b2a9              UXTH     r1,r5
000008  b2a0              UXTH     r0,r4
00000a  f7fffffe          BL       LCD9341_GetPoint
;;;45     }
00000e  bd70              POP      {r4-r6,pc}
;;;46     
                          ENDP


                          AREA ||i.LCD_L0_Init||, CODE, READONLY, ALIGN=1

                  LCD_L0_Init PROC
;;;26     
;;;27     int LCD_L0_Init(void)
000000  2000              MOVS     r0,#0
;;;28     {  
;;;29     	return 0;
;;;30     }
000002  4770              BX       lr
;;;31     
                          ENDP


                          AREA ||i.LCD_L0_On||, CODE, READONLY, ALIGN=1

                  LCD_L0_On PROC
;;;634    void LCD_L0_SetLUTEntry(U8 Pos, LCD_COLOR color){}
;;;635    void LCD_L0_On(void){}
000000  4770              BX       lr
;;;636    void * LCD_L0_GetDevFunc(int Index) {
                          ENDP


                          AREA ||i.LCD_L0_SetLUTEntry||, CODE, READONLY, ALIGN=1

                  LCD_L0_SetLUTEntry PROC
;;;633    
;;;634    void LCD_L0_SetLUTEntry(U8 Pos, LCD_COLOR color){}
000000  4770              BX       lr
;;;635    void LCD_L0_On(void){}
                          ENDP


                          AREA ||i.LCD_L0_SetOrg||, CODE, READONLY, ALIGN=1

                  LCD_L0_SetOrg PROC
;;;31     
;;;32     void LCD_L0_SetOrg(int x,int y)
000000  4770              BX       lr
;;;33     {
;;;34     
;;;35     }
;;;36     
                          ENDP


                          AREA ||i.LCD_L0_SetPixelIndex||, CODE, READONLY, ALIGN=1

                  LCD_L0_SetPixelIndex PROC
;;;36     
;;;37     void LCD_L0_SetPixelIndex(int x, int y, int PixelIndex)
000000  b570              PUSH     {r4-r6,lr}
;;;38     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;39     	LCD9341_SetPoint(x,y,PixelIndex);
000008  b2b2              UXTH     r2,r6
00000a  b2a9              UXTH     r1,r5
00000c  b2a0              UXTH     r0,r4
00000e  f7fffffe          BL       LCD9341_SetPoint
;;;40     }
000012  bd70              POP      {r4-r6,pc}
;;;41     
                          ENDP


                          AREA ||i.LCD_L0_XorPixel||, CODE, READONLY, ALIGN=1

                  LCD_L0_XorPixel PROC
;;;46     
;;;47     void LCD_L0_XorPixel(int x, int y)
000000  b570              PUSH     {r4-r6,lr}
;;;48     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;49     	LCD_PIXELINDEX Index = LCD9341_GetPoint(x,y);
000006  b2a9              UXTH     r1,r5
000008  b2a0              UXTH     r0,r4
00000a  f7fffffe          BL       LCD9341_GetPoint
00000e  4606              MOV      r6,r0
;;;50     	LCD9341_SetPoint(x,y,LCD_NUM_COLORS-1-Index);
000010  f64f73ff          MOV      r3,#0xffff
000014  1b9a              SUBS     r2,r3,r6
000016  b2a9              UXTH     r1,r5
000018  b2a0              UXTH     r0,r4
00001a  f7fffffe          BL       LCD9341_SetPoint
;;;51     }
00001e  bd70              POP      {r4-r6,pc}
;;;52     
                          ENDP

