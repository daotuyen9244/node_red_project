; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\wm_attachwindow.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\wm_attachwindow.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\WM\WM_AttachWindow.c]
                          THUMB

                          AREA ||i.WM_AttachWindow||, CODE, READONLY, ALIGN=1

                  WM_AttachWindow PROC
;;;55     */
;;;56     void WM_AttachWindow(WM_HWIN hWin, WM_HWIN hParent) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
;;;57       WM_LOCK();
000008  f7fffffe          BL       GUI_Lock
;;;58       if (hParent && (hParent != hWin)) {
00000c  b1e4              CBZ      r4,|L1.72|
00000e  42ac              CMP      r4,r5
000010  d01a              BEQ      |L1.72|
;;;59         WM_Obj* pWin    = WM_H2P(hWin);
000012  4628              MOV      r0,r5
000014  f7fffffe          BL       GUI_ALLOC_h2p
000018  4607              MOV      r7,r0
;;;60         WM_Obj* pParent = WM_H2P(hParent);
00001a  4620              MOV      r0,r4
00001c  f7fffffe          BL       GUI_ALLOC_h2p
000020  4606              MOV      r6,r0
;;;61         if (pWin->hParent != hParent) {
000022  f9b70016          LDRSH    r0,[r7,#0x16]
000026  42a0              CMP      r0,r4
000028  d00d              BEQ      |L1.70|
;;;62           WM_DetachWindow(hWin);
00002a  4628              MOV      r0,r5
00002c  f7fffffe          BL       WM_DetachWindow
;;;63           WM__InsertWindowIntoList(hWin, hParent);
000030  4621              MOV      r1,r4
000032  4628              MOV      r0,r5
000034  f7fffffe          BL       WM__InsertWindowIntoList
;;;64           WM_MoveWindow(hWin, pParent->Rect.x0,  pParent->Rect.y0);    /* Convert parent coordinates -> screen coordinates */
000038  f9b62002          LDRSH    r2,[r6,#2]
00003c  f9b61000          LDRSH    r1,[r6,#0]
000040  4628              MOV      r0,r5
000042  f7fffffe          BL       WM_MoveWindow
                  |L1.70|
;;;65         }
;;;66       }
000046  bf00              NOP      
                  |L1.72|
;;;67       WM_UNLOCK();
000048  f7fffffe          BL       GUI_Unlock
;;;68     }
00004c  e8bd81f0          POP      {r4-r8,pc}
;;;69     
                          ENDP


                          AREA ||i.WM_AttachWindowAt||, CODE, READONLY, ALIGN=1

                  WM_AttachWindowAt PROC
;;;73     */
;;;74     void WM_AttachWindowAt(WM_HWIN hWin, WM_HWIN hParent, int x, int y) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
000008  4614              MOV      r4,r2
00000a  461d              MOV      r5,r3
;;;75       WM_DetachWindow(hWin);
00000c  4630              MOV      r0,r6
00000e  f7fffffe          BL       WM_DetachWindow
;;;76       WM_MoveTo(hWin, x, y);
000012  462a              MOV      r2,r5
000014  4621              MOV      r1,r4
000016  4630              MOV      r0,r6
000018  f7fffffe          BL       WM_MoveTo
;;;77       WM_AttachWindow(hWin, hParent);
00001c  4639              MOV      r1,r7
00001e  4630              MOV      r0,r6
000020  f7fffffe          BL       WM_AttachWindow
;;;78     }
000024  e8bd81f0          POP      {r4-r8,pc}
;;;79     
                          ENDP


                          AREA ||i.WM_DetachWindow||, CODE, READONLY, ALIGN=1

                  WM_DetachWindow PROC
;;;33     */
;;;34     void WM_DetachWindow(WM_HWIN hWin) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
;;;35       if (hWin) {
000006  b1e4              CBZ      r4,|L3.66|
;;;36         WM_HWIN hParent;
;;;37         WM_Obj* pWin;
;;;38         WM_LOCK();
000008  f7fffffe          BL       GUI_Lock
;;;39         pWin = WM_H2P(hWin);
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       GUI_ALLOC_h2p
000012  4607              MOV      r7,r0
;;;40         hParent = pWin->hParent;
000014  f9b75016          LDRSH    r5,[r7,#0x16]
;;;41         if (hParent) {
000018  b185              CBZ      r5,|L3.60|
;;;42           WM_Obj* pParent;
;;;43           WM__DetachWindow(hWin);
00001a  4620              MOV      r0,r4
00001c  f7fffffe          BL       WM__DetachWindow
;;;44           pParent = WM_H2P(hParent);
000020  4628              MOV      r0,r5
000022  f7fffffe          BL       GUI_ALLOC_h2p
000026  4606              MOV      r6,r0
;;;45           WM_MoveWindow(hWin, -pParent->Rect.x0,  -pParent->Rect.y0);   /* Convert screen coordinates -> parent coordinates */
000028  f9b60002          LDRSH    r0,[r6,#2]
00002c  4242              RSBS     r2,r0,#0
00002e  f9b60000          LDRSH    r0,[r6,#0]
000032  4241              RSBS     r1,r0,#0
000034  4620              MOV      r0,r4
000036  f7fffffe          BL       WM_MoveWindow
;;;46           /* ToDo: Invalidate. If Parent window is located at (0,0). */
;;;47         }
00003a  bf00              NOP      
                  |L3.60|
;;;48         WM_UNLOCK();
00003c  f7fffffe          BL       GUI_Unlock
;;;49       }
000040  bf00              NOP      
                  |L3.66|
;;;50     }
000042  e8bd81f0          POP      {r4-r8,pc}
;;;51     
                          ENDP

