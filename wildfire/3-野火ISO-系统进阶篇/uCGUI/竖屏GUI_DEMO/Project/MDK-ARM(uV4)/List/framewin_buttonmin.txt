; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\framewin_buttonmin.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\framewin_buttonmin.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Widget\FRAMEWIN_ButtonMin.c]
                          THUMB

                          AREA ||i.FRAMEWIN_AddMinButton||, CODE, READONLY, ALIGN=2

                  FRAMEWIN_AddMinButton PROC
;;;124    */
;;;125    WM_HWIN FRAMEWIN_AddMinButton(FRAMEWIN_Handle hObj, int Flags, int Off) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
;;;126      WM_HWIN hButton;
;;;127      hButton = FRAMEWIN_AddButton(hObj, Flags, Off, GUI_ID_MINIMIZE);
00000a  2308              MOVS     r3,#8
00000c  4632              MOV      r2,r6
00000e  4629              MOV      r1,r5
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       FRAMEWIN_AddButton
000016  4607              MOV      r7,r0
;;;128      BUTTON_SetSelfDraw(hButton, 0, &_Draw);
000018  4a05              LDR      r2,|L1.48|
00001a  2100              MOVS     r1,#0
00001c  4638              MOV      r0,r7
00001e  f7fffffe          BL       BUTTON_SetSelfDraw
;;;129      WM_SetCallback(hButton, _cbMin);
000022  4904              LDR      r1,|L1.52|
000024  4638              MOV      r0,r7
000026  f7fffffe          BL       WM_SetCallback
;;;130      return hButton;
00002a  4638              MOV      r0,r7
;;;131    }
00002c  e8bd81f0          POP      {r4-r8,pc}
;;;132    
                          ENDP

                  |L1.48|
                          DCD      _Draw
                  |L1.52|
                          DCD      _cbMin

                          AREA ||i._Draw||, CODE, READONLY, ALIGN=1

                  _Draw PROC
;;;101    */
;;;102    static void _Draw(void) {
000000  b570              PUSH     {r4-r6,lr}
;;;103      FRAMEWIN_Obj* pObj;
;;;104      WM_HWIN hWin;
;;;105      hWin = WM_GetActiveWindow();
000002  f7fffffe          BL       WM_GetActiveWindow
000006  4605              MOV      r5,r0
;;;106      hWin = WM_GetParent(hWin);
000008  4628              MOV      r0,r5
00000a  f7fffffe          BL       WM_GetParent
00000e  4605              MOV      r5,r0
;;;107      pObj = FRAMEWIN_H2P(hWin);
000010  4628              MOV      r0,r5
000012  f7fffffe          BL       GUI_ALLOC_h2p
000016  4604              MOV      r4,r0
;;;108      if (pObj->Flags & FRAMEWIN_SF_MINIMIZED) {
000018  f894005a          LDRB     r0,[r4,#0x5a]
00001c  f0100f40          TST      r0,#0x40
000020  d002              BEQ      |L2.40|
;;;109        _DrawRestore();
000022  f7fffffe          BL       _DrawRestore
000026  e001              B        |L2.44|
                  |L2.40|
;;;110      } else {
;;;111        _DrawMin();
000028  f7fffffe          BL       _DrawMin
                  |L2.44|
;;;112      }
;;;113    }
00002c  bd70              POP      {r4-r6,pc}
;;;114    
                          ENDP


                          AREA ||i._DrawMin||, CODE, READONLY, ALIGN=2

                  _DrawMin PROC
;;;65     */
;;;66     static void _DrawMin(void) {
000000  b57c              PUSH     {r2-r6,lr}
;;;67       GUI_RECT r;
;;;68       int i, Size;
;;;69       WM_GetInsideRect(&r);
000002  4668              MOV      r0,sp
000004  f7fffffe          BL       WM_GetInsideRect
;;;70       WM_ADDORG(r.x0, r.y0);
000008  f8bd0000          LDRH     r0,[sp,#0]
00000c  4922              LDR      r1,|L3.152|
00000e  f8b11044          LDRH     r1,[r1,#0x44]  ; GUI_Context
000012  4408              ADD      r0,r0,r1
000014  b200              SXTH     r0,r0
000016  f8ad0000          STRH     r0,[sp,#0]
00001a  f8bd0002          LDRH     r0,[sp,#2]
00001e  491e              LDR      r1,|L3.152|
000020  f8b11048          LDRH     r1,[r1,#0x48]  ; GUI_Context
000024  4408              ADD      r0,r0,r1
000026  b200              SXTH     r0,r0
000028  f8ad0002          STRH     r0,[sp,#2]
;;;71       WM_ADDORG(r.x1, r.y1);
00002c  f8bd0004          LDRH     r0,[sp,#4]
000030  4919              LDR      r1,|L3.152|
000032  f8b11044          LDRH     r1,[r1,#0x44]  ; GUI_Context
000036  4408              ADD      r0,r0,r1
000038  b200              SXTH     r0,r0
00003a  f8ad0004          STRH     r0,[sp,#4]
00003e  f8bd0006          LDRH     r0,[sp,#6]
000042  4915              LDR      r1,|L3.152|
000044  f8b11048          LDRH     r1,[r1,#0x48]  ; GUI_Context
000048  4408              ADD      r0,r0,r1
00004a  b200              SXTH     r0,r0
00004c  f8ad0006          STRH     r0,[sp,#6]
;;;72       Size = (r.x1 - r.x0 + 1) >> 1;
000050  f9bd0004          LDRSH    r0,[sp,#4]
000054  f9bd1000          LDRSH    r1,[sp,#0]
000058  1a40              SUBS     r0,r0,r1
00005a  1c40              ADDS     r0,r0,#1
00005c  1045              ASRS     r5,r0,#1
;;;73       WM_ITERATE_START(&r); {
00005e  4668              MOV      r0,sp
000060  f7fffffe          BL       WM__InitIVRSearch
000064  b1b0              CBZ      r0,|L3.148|
000066  bf00              NOP      
                  |L3.104|
;;;74         for (i = 1; i < Size; i++) {
000068  2401              MOVS     r4,#1
00006a  e00d              B        |L3.136|
                  |L3.108|
;;;75           LCD_DrawHLine(r.x0 + i, r.y1 - i - (Size >> 1), r.x1 - i);
00006c  f9bd3006          LDRSH    r3,[sp,#6]
000070  1b1b              SUBS     r3,r3,r4
000072  eba30165          SUB      r1,r3,r5,ASR #1
000076  f9bd3004          LDRSH    r3,[sp,#4]
00007a  1b1a              SUBS     r2,r3,r4
00007c  f9bd3000          LDRSH    r3,[sp,#0]
000080  1918              ADDS     r0,r3,r4
000082  f7fffffe          BL       LCD_DrawHLine
000086  1c64              ADDS     r4,r4,#1              ;74
                  |L3.136|
000088  42ac              CMP      r4,r5                 ;74
00008a  dbef              BLT      |L3.108|
;;;76         }
;;;77       } WM_ITERATE_END();
00008c  f7fffffe          BL       WM__GetNextIVR
000090  2800              CMP      r0,#0
000092  d1e9              BNE      |L3.104|
                  |L3.148|
;;;78     }
000094  bd7c              POP      {r2-r6,pc}
;;;79     
                          ENDP

000096  0000              DCW      0x0000
                  |L3.152|
                          DCD      GUI_Context

                          AREA ||i._DrawRestore||, CODE, READONLY, ALIGN=2

                  _DrawRestore PROC
;;;83     */
;;;84     static void _DrawRestore(void) {
000000  b57c              PUSH     {r2-r6,lr}
;;;85       GUI_RECT r;
;;;86       int i, Size;
;;;87       WM_GetInsideRect(&r);
000002  4668              MOV      r0,sp
000004  f7fffffe          BL       WM_GetInsideRect
;;;88       WM_ADDORG(r.x0, r.y0);
000008  f8bd0000          LDRH     r0,[sp,#0]
00000c  4922              LDR      r1,|L4.152|
00000e  f8b11044          LDRH     r1,[r1,#0x44]  ; GUI_Context
000012  4408              ADD      r0,r0,r1
000014  b200              SXTH     r0,r0
000016  f8ad0000          STRH     r0,[sp,#0]
00001a  f8bd0002          LDRH     r0,[sp,#2]
00001e  491e              LDR      r1,|L4.152|
000020  f8b11048          LDRH     r1,[r1,#0x48]  ; GUI_Context
000024  4408              ADD      r0,r0,r1
000026  b200              SXTH     r0,r0
000028  f8ad0002          STRH     r0,[sp,#2]
;;;89       WM_ADDORG(r.x1, r.y1);
00002c  f8bd0004          LDRH     r0,[sp,#4]
000030  4919              LDR      r1,|L4.152|
000032  f8b11044          LDRH     r1,[r1,#0x44]  ; GUI_Context
000036  4408              ADD      r0,r0,r1
000038  b200              SXTH     r0,r0
00003a  f8ad0004          STRH     r0,[sp,#4]
00003e  f8bd0006          LDRH     r0,[sp,#6]
000042  4915              LDR      r1,|L4.152|
000044  f8b11048          LDRH     r1,[r1,#0x48]  ; GUI_Context
000048  4408              ADD      r0,r0,r1
00004a  b200              SXTH     r0,r0
00004c  f8ad0006          STRH     r0,[sp,#6]
;;;90       Size = (r.x1 - r.x0 + 1) >> 1;
000050  f9bd0004          LDRSH    r0,[sp,#4]
000054  f9bd1000          LDRSH    r1,[sp,#0]
000058  1a40              SUBS     r0,r0,r1
00005a  1c40              ADDS     r0,r0,#1
00005c  1045              ASRS     r5,r0,#1
;;;91       WM_ITERATE_START(&r); {
00005e  4668              MOV      r0,sp
000060  f7fffffe          BL       WM__InitIVRSearch
000064  b1b0              CBZ      r0,|L4.148|
000066  bf00              NOP      
                  |L4.104|
;;;92         for (i = 1; i < Size; i++) {
000068  2401              MOVS     r4,#1
00006a  e00d              B        |L4.136|
                  |L4.108|
;;;93           LCD_DrawHLine(r.x0 + i, r.y0 + i + (Size >> 1), r.x1 - i);
00006c  f9bd3002          LDRSH    r3,[sp,#2]
000070  4423              ADD      r3,r3,r4
000072  eb030165          ADD      r1,r3,r5,ASR #1
000076  f9bd3004          LDRSH    r3,[sp,#4]
00007a  1b1a              SUBS     r2,r3,r4
00007c  f9bd3000          LDRSH    r3,[sp,#0]
000080  1918              ADDS     r0,r3,r4
000082  f7fffffe          BL       LCD_DrawHLine
000086  1c64              ADDS     r4,r4,#1              ;92
                  |L4.136|
000088  42ac              CMP      r4,r5                 ;92
00008a  dbef              BLT      |L4.108|
;;;94         }
;;;95       } WM_ITERATE_END();
00008c  f7fffffe          BL       WM__GetNextIVR
000090  2800              CMP      r0,#0
000092  d1e9              BNE      |L4.104|
                  |L4.148|
;;;96     }
000094  bd7c              POP      {r2-r6,pc}
;;;97     
                          ENDP

000096  0000              DCW      0x0000
                  |L4.152|
                          DCD      GUI_Context

                          AREA ||i._cbMin||, CODE, READONLY, ALIGN=1

                  _cbMin PROC
;;;47     */
;;;48     static void _cbMin(WM_MESSAGE* pMsg) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;49       if (pMsg->MsgId == WM_NOTIFY_PARENT_REFLECTION) {
000004  6820              LDR      r0,[r4,#0]
000006  2827              CMP      r0,#0x27
000008  d112              BNE      |L5.48|
;;;50         WM_HWIN hWin = pMsg->hWinSrc;
00000a  f9b45006          LDRSH    r5,[r4,#6]
;;;51         FRAMEWIN_Obj* pObj = FRAMEWIN_H2P(hWin);
00000e  4628              MOV      r0,r5
000010  f7fffffe          BL       GUI_ALLOC_h2p
000014  4606              MOV      r6,r0
;;;52         if (pObj->Flags & FRAMEWIN_SF_MINIMIZED) {
000016  f896005a          LDRB     r0,[r6,#0x5a]
00001a  f0100f40          TST      r0,#0x40
00001e  d003              BEQ      |L5.40|
;;;53           FRAMEWIN_Restore(hWin);
000020  4628              MOV      r0,r5
000022  f7fffffe          BL       FRAMEWIN_Restore
000026  e002              B        |L5.46|
                  |L5.40|
;;;54         } else {
;;;55           FRAMEWIN_Minimize(hWin);
000028  4628              MOV      r0,r5
00002a  f7fffffe          BL       FRAMEWIN_Minimize
                  |L5.46|
;;;56         }
;;;57         return;                                       /* We are done ! */
;;;58       }
;;;59       BUTTON_Callback(pMsg);
;;;60     }
00002e  bd70              POP      {r4-r6,pc}
                  |L5.48|
000030  4620              MOV      r0,r4                 ;59
000032  f7fffffe          BL       BUTTON_Callback
000036  bf00              NOP      
000038  e7f9              B        |L5.46|
;;;61     
                          ENDP

