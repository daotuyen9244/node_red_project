; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\guitask.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\guitask.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Core\GUITask.c]
                          THUMB

                          AREA ||i.GUITASK_CopyContext||, CODE, READONLY, ALIGN=2

                  GUITASK_CopyContext PROC
;;;178    */
;;;179    void GUITASK_CopyContext(void) {
000000  b510              PUSH     {r4,lr}
;;;180      int i;
;;;181      for (i = 0; i < GUI_MAXTASK; i++) {
000002  2400              MOVS     r4,#0
000004  e014              B        |L1.48|
                  |L1.6|
;;;182        _Save[i].Context = GUI_Context;
000006  eb040184          ADD      r1,r4,r4,LSL #2
00000a  eb0101c4          ADD      r1,r1,r4,LSL #3
00000e  4a0a              LDR      r2,|L1.56|
000010  eb0201c1          ADD      r1,r2,r1,LSL #3
000014  1d08              ADDS     r0,r1,#4
000016  2264              MOVS     r2,#0x64
000018  4908              LDR      r1,|L1.60|
00001a  f7fffffe          BL       __aeabi_memcpy4
;;;183        _Save[i].TaskID  = 0;
00001e  2000              MOVS     r0,#0
000020  eb040184          ADD      r1,r4,r4,LSL #2
000024  eb0101c4          ADD      r1,r1,r4,LSL #3
000028  4a03              LDR      r2,|L1.56|
00002a  f8420031          STR      r0,[r2,r1,LSL #3]
00002e  1c64              ADDS     r4,r4,#1              ;181
                  |L1.48|
000030  2c04              CMP      r4,#4                 ;181
000032  dbe8              BLT      |L1.6|
;;;184      }
;;;185    }
000034  bd10              POP      {r4,pc}
;;;186    
                          ENDP

000036  0000              DCW      0x0000
                  |L1.56|
                          DCD      _Save
                  |L1.60|
                          DCD      GUI_Context

                          AREA ||i.GUITASK_GetpContext||, CODE, READONLY, ALIGN=2

                  GUITASK_GetpContext PROC
;;;191    */
;;;192    GUI_CONTEXT * GUITASK_GetpContext(int Index) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;193      GUI_CONTEXT * pContext;
;;;194      pContext = NULL;
000004  2500              MOVS     r5,#0
;;;195      GUI_Lock();
000006  f7fffffe          BL       GUI_Lock
;;;196      if (Index < GUI_MAXTASK) {
00000a  2c04              CMP      r4,#4
00000c  da07              BGE      |L2.30|
;;;197        pContext = &_Save[Index].Context;
00000e  eb040084          ADD      r0,r4,r4,LSL #2
000012  eb0000c4          ADD      r0,r0,r4,LSL #3
000016  4904              LDR      r1,|L2.40|
000018  eb0100c0          ADD      r0,r1,r0,LSL #3
00001c  1d05              ADDS     r5,r0,#4
                  |L2.30|
;;;198      }
;;;199      GUI_Unlock();
00001e  f7fffffe          BL       GUI_Unlock
;;;200      return pContext;
000022  4628              MOV      r0,r5
;;;201    }
000024  bd70              POP      {r4-r6,pc}
;;;202    
                          ENDP

000026  0000              DCW      0x0000
                  |L2.40|
                          DCD      _Save

                          AREA ||i.GUITASK_Init||, CODE, READONLY, ALIGN=2

                  GUITASK_Init PROC
;;;168    */
;;;169    void GUITASK_Init(void) {
000000  b510              PUSH     {r4,lr}
;;;170      _CurrentTaskNo =-1;   /* Invalidate */
000002  f04f30ff          MOV      r0,#0xffffffff
000006  4902              LDR      r1,|L3.16|
000008  6008              STR      r0,[r1,#0]  ; _CurrentTaskNo
;;;171      GUI_X_InitOS();
00000a  f7fffffe          BL       GUI_X_InitOS
;;;172    }
00000e  bd10              POP      {r4,pc}
;;;173    
                          ENDP

                  |L3.16|
                          DCD      _CurrentTaskNo

                          AREA ||i.GUI_Lock||, CODE, READONLY, ALIGN=2

                  GUI_Lock PROC
;;;138    */
;;;139    void GUI_Lock(void) {
000000  b510              PUSH     {r4,lr}
;;;140      if (GUITASK__EntranceCnt == 0) {
000002  4823              LDR      r0,|L4.144|
000004  6800              LDR      r0,[r0,#0]  ; GUITASK__EntranceCnt
000006  b930              CBNZ     r0,|L4.22|
;;;141        GUI_X_Lock();
000008  f7fffffe          BL       GUI_X_Lock
;;;142        _TaskIDLock = GUI_X_GetTaskId();         /* Save task ID */
00000c  f7fffffe          BL       GUI_X_GetTaskId
000010  4920              LDR      r1,|L4.148|
000012  6008              STR      r0,[r1,#0]  ; _TaskIDLock
000014  e00b              B        |L4.46|
                  |L4.22|
;;;143      } else {
;;;144        if (_TaskIDLock != GUI_X_GetTaskId()) {
000016  f7fffffe          BL       GUI_X_GetTaskId
00001a  491e              LDR      r1,|L4.148|
00001c  6809              LDR      r1,[r1,#0]  ; _TaskIDLock
00001e  4288              CMP      r0,r1
000020  d005              BEQ      |L4.46|
;;;145          GUI_X_Lock();
000022  f7fffffe          BL       GUI_X_Lock
;;;146          _TaskIDLock = GUI_X_GetTaskId();         /* Save task ID */
000026  f7fffffe          BL       GUI_X_GetTaskId
00002a  491a              LDR      r1,|L4.148|
00002c  6008              STR      r0,[r1,#0]  ; _TaskIDLock
                  |L4.46|
;;;147        }
;;;148      }
;;;149      if (++GUITASK__EntranceCnt == 1) {
00002e  4818              LDR      r0,|L4.144|
000030  6800              LDR      r0,[r0,#0]  ; GUITASK__EntranceCnt
000032  1c40              ADDS     r0,r0,#1
000034  4916              LDR      r1,|L4.144|
000036  6008              STR      r0,[r1,#0]  ; GUITASK__EntranceCnt
000038  2801              CMP      r0,#1
00003a  d127              BNE      |L4.140|
;;;150        int TaskNo = _GetTaskNo();
00003c  f7fffffe          BL       _GetTaskNo
000040  4604              MOV      r4,r0
;;;151        if (TaskNo != _CurrentTaskNo) {
000042  4815              LDR      r0,|L4.152|
000044  6800              LDR      r0,[r0,#0]  ; _CurrentTaskNo
000046  4284              CMP      r4,r0
000048  d01f              BEQ      |L4.138|
;;;152          /* Save data of current task */
;;;153          if (_CurrentTaskNo>=0) {  /* Make sure _CurrentTaskNo is valid */
00004a  4813              LDR      r0,|L4.152|
00004c  6800              LDR      r0,[r0,#0]  ; _CurrentTaskNo
00004e  2800              CMP      r0,#0
000050  db19              BLT      |L4.134|
;;;154            _Save[_CurrentTaskNo].Context = GUI_Context;
000052  4911              LDR      r1,|L4.152|
000054  6809              LDR      r1,[r1,#0]  ; _CurrentTaskNo
000056  eb010281          ADD      r2,r1,r1,LSL #2
00005a  eb0201c1          ADD      r1,r2,r1,LSL #3
00005e  4a0f              LDR      r2,|L4.156|
000060  eb0201c1          ADD      r1,r2,r1,LSL #3
000064  1d08              ADDS     r0,r1,#4
000066  2264              MOVS     r2,#0x64
000068  490d              LDR      r1,|L4.160|
00006a  f7fffffe          BL       __aeabi_memcpy4
;;;155            /* Load data of this task */
;;;156            GUI_Context = _Save[TaskNo].Context;
00006e  eb040084          ADD      r0,r4,r4,LSL #2
000072  eb0000c4          ADD      r0,r0,r4,LSL #3
000076  4a09              LDR      r2,|L4.156|
000078  eb0200c0          ADD      r0,r2,r0,LSL #3
00007c  1d01              ADDS     r1,r0,#4
00007e  2264              MOVS     r2,#0x64
000080  4807              LDR      r0,|L4.160|
000082  f7fffffe          BL       __aeabi_memcpy4
                  |L4.134|
;;;157          }
;;;158          _CurrentTaskNo = TaskNo;
000086  4804              LDR      r0,|L4.152|
000088  6004              STR      r4,[r0,#0]  ; _CurrentTaskNo
                  |L4.138|
;;;159        }
;;;160      }
00008a  bf00              NOP      
                  |L4.140|
;;;161      /* Test if GUITASK__EntranceCnt is in reasonable range ... Not required in release builds */
;;;162      GUI_DEBUG_ERROROUT_IF((GUITASK__EntranceCnt > GUI_MAX_LOCK_NESTING), "GUITASK.c: GUI_Lock() GUITASK__EntranceCnt overflow ");
;;;163    }
00008c  bd10              POP      {r4,pc}
;;;164    
                          ENDP

00008e  0000              DCW      0x0000
                  |L4.144|
                          DCD      GUITASK__EntranceCnt
                  |L4.148|
                          DCD      _TaskIDLock
                  |L4.152|
                          DCD      _CurrentTaskNo
                  |L4.156|
                          DCD      _Save
                  |L4.160|
                          DCD      GUI_Context

                          AREA ||i.GUI_Unlock||, CODE, READONLY, ALIGN=2

                  GUI_Unlock PROC
;;;126    */
;;;127    void GUI_Unlock(void) {
000000  b510              PUSH     {r4,lr}
;;;128      if (--GUITASK__EntranceCnt == 0) {
000002  4804              LDR      r0,|L5.20|
000004  6800              LDR      r0,[r0,#0]  ; GUITASK__EntranceCnt
000006  1e40              SUBS     r0,r0,#1
000008  4902              LDR      r1,|L5.20|
00000a  6008              STR      r0,[r1,#0]  ; GUITASK__EntranceCnt
00000c  d101              BNE      |L5.18|
;;;129        GUI_X_Unlock();
00000e  f7fffffe          BL       GUI_X_Unlock
                  |L5.18|
;;;130      }
;;;131      /* Test if GUITASK__EntranceCnt is in reasonable range ... Not required in release builds */
;;;132      GUI_DEBUG_ERROROUT_IF((GUITASK__EntranceCnt < 0), "GUITASK.c: GUI_Unlock() GUITASK__EntranceCnt underflow ");
;;;133    }
000012  bd10              POP      {r4,pc}
;;;134    
                          ENDP

                  |L5.20|
                          DCD      GUITASK__EntranceCnt

                          AREA ||i._GetTaskNo||, CODE, READONLY, ALIGN=2

                  _GetTaskNo PROC
;;;101    */
;;;102    static int _GetTaskNo(void) {
000000  b570              PUSH     {r4-r6,lr}
;;;103      int i;
;;;104      for (i=0; i< GUI_MAXTASK; i++) {
000002  2400              MOVS     r4,#0
000004  e01e              B        |L6.68|
                  |L6.6|
;;;105        U32 TaskId = GUI_X_GetTaskId();
000006  f7fffffe          BL       GUI_X_GetTaskId
00000a  4605              MOV      r5,r0
;;;106        if (_Save[i].TaskID == TaskId)
00000c  eb040084          ADD      r0,r4,r4,LSL #2
000010  eb0000c4          ADD      r0,r0,r4,LSL #3
000014  490d              LDR      r1,|L6.76|
000016  f8510030          LDR      r0,[r1,r0,LSL #3]
00001a  42a8              CMP      r0,r5
00001c  d101              BNE      |L6.34|
;;;107          return i;
00001e  4620              MOV      r0,r4
                  |L6.32|
;;;108        if (_Save[i].TaskID == 0) {
;;;109          _Save[i].TaskID = TaskId;
;;;110          return i;
;;;111        }
;;;112      }
;;;113      GUI_DEBUG_ERROROUT("No Context available for task ... (increase GUI_MAXTASK)");
;;;114      return 0;
;;;115    }
000020  bd70              POP      {r4-r6,pc}
                  |L6.34|
000022  eb040084          ADD      r0,r4,r4,LSL #2       ;108
000026  eb0000c4          ADD      r0,r0,r4,LSL #3       ;108
00002a  4908              LDR      r1,|L6.76|
00002c  f8510030          LDR      r0,[r1,r0,LSL #3]     ;108
000030  b938              CBNZ     r0,|L6.66|
000032  eb040084          ADD      r0,r4,r4,LSL #2       ;109
000036  eb0000c4          ADD      r0,r0,r4,LSL #3       ;109
00003a  f8415030          STR      r5,[r1,r0,LSL #3]     ;109
00003e  4620              MOV      r0,r4                 ;110
000040  e7ee              B        |L6.32|
                  |L6.66|
000042  1c64              ADDS     r4,r4,#1              ;104
                  |L6.68|
000044  2c04              CMP      r4,#4                 ;104
000046  dbde              BLT      |L6.6|
000048  2000              MOVS     r0,#0                 ;114
00004a  e7e9              B        |L6.32|
;;;116    
                          ENDP

                  |L6.76|
                          DCD      _Save

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  _Save
                          %        416

                          AREA ||.data||, DATA, ALIGN=2

                  _CurrentTaskNo
                          DCD      0xffffffff
                  _TaskIDLock
                          DCD      0x00000000
                  GUITASK__EntranceCnt
                          DCD      0x00000000
