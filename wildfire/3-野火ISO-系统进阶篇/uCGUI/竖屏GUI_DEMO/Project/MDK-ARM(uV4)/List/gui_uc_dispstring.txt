; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\gui_uc_dispstring.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\gui_uc_dispstring.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Core\GUI_UC_DispString.c]
                          THUMB

                          AREA ||i.GUI_UC_DispString||, CODE, READONLY, ALIGN=2

                  GUI_UC_DispString PROC
;;;110    */
;;;111    void GUI_UC_DispString(const U16 GUI_UNI_PTR *s) {
000000  e92d47fc          PUSH     {r2-r10,lr}
000004  4604              MOV      r4,r0
;;;112      int xAdjust, yAdjust, xOrg;
;;;113      int FontSizeY;
;;;114      if (!s)
000006  b90c              CBNZ     r4,|L1.12|
                  |L1.8|
;;;115        return;
;;;116      GUI_LOCK();
;;;117      FontSizeY = GUI_Context.pAFont->YSize;
;;;118      xOrg = GUI_Context.DispPosX;
;;;119     /* Adjust vertical position */
;;;120      yAdjust = GUI_GetYAdjust();
;;;121      GUI_Context.DispPosY -= yAdjust;
;;;122      for (; *s; s++) {
;;;123        GUI_RECT r;
;;;124        int LineLen= _GetLineLen(s,0x7fff);
;;;125        int xLineSize = _GetLineDistX(s, LineLen);
;;;126      /* Check if x-position needs to be changed due to h-alignment */
;;;127        switch (GUI_Context.TextAlign & GUI_TA_HORIZONTAL) { 
;;;128        case GUI_TA_CENTER: xAdjust= xLineSize/2; break;
;;;129        case GUI_TA_RIGHT:  xAdjust= xLineSize; break;
;;;130        default:            xAdjust= 0;
;;;131        }
;;;132        r.x0 = GUI_Context.DispPosX -= xAdjust;
;;;133        r.x1 = r.x0 + xLineSize-1;    
;;;134        r.y0 = GUI_Context.DispPosY;
;;;135        r.y1 = r.y0 + FontSizeY-1;    
;;;136        _DispLine(s, LineLen, &r);
;;;137        GUI_Context.DispPosY = r.y0;
;;;138        s += LineLen;
;;;139        if (*s=='\n') {
;;;140          switch (GUI_Context.TextAlign & GUI_TA_HORIZONTAL) { 
;;;141          case GUI_TA_CENTER:
;;;142          case GUI_TA_RIGHT:
;;;143            GUI_Context.DispPosX = xOrg;
;;;144            break;
;;;145          default:
;;;146            GUI_Context.DispPosX = GUI_Context.LBorder;
;;;147            break;
;;;148          }
;;;149          GUI_Context.DispPosY += GUI_GetFontDistY();
;;;150        } else {
;;;151          GUI_Context.DispPosX = r.x0+xLineSize;
;;;152        }
;;;153        if (*s==0)    /* end of string (last line) reached ? */
;;;154          break;
;;;155      }
;;;156      GUI_Context.DispPosY += yAdjust;
;;;157      GUI_Context.TextAlign &= ~GUI_TA_HORIZONTAL;
;;;158      GUI_UNLOCK();
;;;159    }
000008  e8bd87fc          POP      {r2-r10,pc}
                  |L1.12|
00000c  f7fffffe          BL       GUI_Lock
000010  484a              LDR      r0,|L1.316|
000012  69c0              LDR      r0,[r0,#0x1c]         ;117  ; GUI_Context
000014  f8908014          LDRB     r8,[r0,#0x14]         ;117
000018  4848              LDR      r0,|L1.316|
00001a  f9b07026          LDRSH    r7,[r0,#0x26]         ;118  ; GUI_Context
00001e  f7fffffe          BL       GUI_GetYAdjust
000022  4606              MOV      r6,r0                 ;120
000024  4845              LDR      r0,|L1.316|
000026  8d00              LDRH     r0,[r0,#0x28]         ;121  ; GUI_Context
000028  1b80              SUBS     r0,r0,r6              ;121
00002a  b200              SXTH     r0,r0                 ;121
00002c  4943              LDR      r1,|L1.316|
00002e  8508              STRH     r0,[r1,#0x28]         ;121
000030  e06f              B        |L1.274|
                  |L1.50|
000032  f64771ff          MOV      r1,#0x7fff            ;124
000036  4620              MOV      r0,r4                 ;124
000038  f7fffffe          BL       _GetLineLen
00003c  4681              MOV      r9,r0                 ;124
00003e  4649              MOV      r1,r9                 ;125
000040  4620              MOV      r0,r4                 ;125
000042  f7fffffe          BL       _GetLineDistX
000046  4605              MOV      r5,r0                 ;125
000048  483c              LDR      r0,|L1.316|
00004a  f8900030          LDRB     r0,[r0,#0x30]         ;127  ; GUI_Context
00004e  f0000003          AND      r0,r0,#3              ;127
000052  2801              CMP      r0,#1                 ;127
000054  d007              BEQ      |L1.102|
000056  2802              CMP      r0,#2                 ;127
000058  d107              BNE      |L1.106|
00005a  4628              MOV      r0,r5                 ;128
00005c  eb0571d0          ADD      r1,r5,r0,LSR #31      ;128
000060  ea4f0a61          ASR      r10,r1,#1             ;128
000064  e004              B        |L1.112|
                  |L1.102|
000066  46aa              MOV      r10,r5                ;129
000068  e002              B        |L1.112|
                  |L1.106|
00006a  f04f0a00          MOV      r10,#0                ;130
00006e  bf00              NOP                            ;127
                  |L1.112|
000070  bf00              NOP                            ;128
000072  4832              LDR      r0,|L1.316|
000074  8cc0              LDRH     r0,[r0,#0x26]         ;132  ; GUI_Context
000076  eba0000a          SUB      r0,r0,r10             ;132
00007a  b200              SXTH     r0,r0                 ;132
00007c  492f              LDR      r1,|L1.316|
00007e  84c8              STRH     r0,[r1,#0x26]         ;132
000080  f8ad0000          STRH     r0,[sp,#0]            ;132
000084  f8bd0000          LDRH     r0,[sp,#0]            ;133
000088  4428              ADD      r0,r0,r5              ;133
00008a  1e40              SUBS     r0,r0,#1              ;133
00008c  b200              SXTH     r0,r0                 ;133
00008e  f8ad0004          STRH     r0,[sp,#4]            ;133
000092  4608              MOV      r0,r1                 ;134
000094  8d00              LDRH     r0,[r0,#0x28]         ;134  ; GUI_Context
000096  f8ad0002          STRH     r0,[sp,#2]            ;134
00009a  f8bd0002          LDRH     r0,[sp,#2]            ;135
00009e  4440              ADD      r0,r0,r8              ;135
0000a0  1e40              SUBS     r0,r0,#1              ;135
0000a2  b200              SXTH     r0,r0                 ;135
0000a4  f8ad0006          STRH     r0,[sp,#6]            ;135
0000a8  466a              MOV      r2,sp                 ;136
0000aa  4649              MOV      r1,r9                 ;136
0000ac  4620              MOV      r0,r4                 ;136
0000ae  f7fffffe          BL       _DispLine
0000b2  f8bd0002          LDRH     r0,[sp,#2]            ;137
0000b6  4921              LDR      r1,|L1.316|
0000b8  8508              STRH     r0,[r1,#0x28]         ;137
0000ba  eb040449          ADD      r4,r4,r9,LSL #1       ;138
0000be  8820              LDRH     r0,[r4,#0]            ;139
0000c0  280a              CMP      r0,#0xa               ;139
0000c2  d11c              BNE      |L1.254|
0000c4  4608              MOV      r0,r1                 ;140
0000c6  f8900030          LDRB     r0,[r0,#0x30]         ;140  ; GUI_Context
0000ca  f0000003          AND      r0,r0,#3              ;140
0000ce  2801              CMP      r0,#1                 ;140
0000d0  d002              BEQ      |L1.216|
0000d2  2802              CMP      r0,#2                 ;140
0000d4  d104              BNE      |L1.224|
0000d6  bf00              NOP                            ;142
                  |L1.216|
0000d8  b238              SXTH     r0,r7                 ;143
0000da  4918              LDR      r1,|L1.316|
0000dc  84c8              STRH     r0,[r1,#0x26]         ;143
0000de  e004              B        |L1.234|
                  |L1.224|
0000e0  4816              LDR      r0,|L1.316|
0000e2  8c80              LDRH     r0,[r0,#0x24]         ;146  ; GUI_Context
0000e4  4915              LDR      r1,|L1.316|
0000e6  84c8              STRH     r0,[r1,#0x26]         ;146
0000e8  bf00              NOP                            ;147
                  |L1.234|
0000ea  bf00              NOP                            ;144
0000ec  f7fffffe          BL       GUI_GetFontDistY
0000f0  4912              LDR      r1,|L1.316|
0000f2  8d09              LDRH     r1,[r1,#0x28]         ;149  ; GUI_Context
0000f4  4408              ADD      r0,r0,r1              ;149
0000f6  b200              SXTH     r0,r0                 ;149
0000f8  4910              LDR      r1,|L1.316|
0000fa  8508              STRH     r0,[r1,#0x28]         ;149
0000fc  e005              B        |L1.266|
                  |L1.254|
0000fe  f8bd0000          LDRH     r0,[sp,#0]            ;151
000102  4428              ADD      r0,r0,r5              ;151
000104  b200              SXTH     r0,r0                 ;151
000106  490d              LDR      r1,|L1.316|
000108  84c8              STRH     r0,[r1,#0x26]         ;151
                  |L1.266|
00010a  8820              LDRH     r0,[r4,#0]            ;153
00010c  b900              CBNZ     r0,|L1.272|
00010e  e003              B        |L1.280|
                  |L1.272|
000110  1ca4              ADDS     r4,r4,#2              ;122
                  |L1.274|
000112  8820              LDRH     r0,[r4,#0]            ;122
000114  2800              CMP      r0,#0                 ;122
000116  d18c              BNE      |L1.50|
                  |L1.280|
000118  bf00              NOP                            ;154
00011a  4808              LDR      r0,|L1.316|
00011c  8d00              LDRH     r0,[r0,#0x28]         ;156  ; GUI_Context
00011e  4430              ADD      r0,r0,r6              ;156
000120  b200              SXTH     r0,r0                 ;156
000122  4906              LDR      r1,|L1.316|
000124  8508              STRH     r0,[r1,#0x28]         ;156
000126  4608              MOV      r0,r1                 ;157
000128  f9b00030          LDRSH    r0,[r0,#0x30]         ;157  ; GUI_Context
00012c  f0200003          BIC      r0,r0,#3              ;157
000130  8608              STRH     r0,[r1,#0x30]         ;157
000132  f7fffffe          BL       GUI_Unlock
000136  bf00              NOP      
000138  e766              B        |L1.8|
;;;160    
                          ENDP

00013a  0000              DCW      0x0000
                  |L1.316|
                          DCD      GUI_Context

                          AREA ||i._DispLine||, CODE, READONLY, ALIGN=2

                  _DispLine PROC
;;;83     */
;;;84     static void _DispLine(const U16 GUI_UNI_PTR *s, int Len, const GUI_RECT* pr) {
000000  b57c              PUSH     {r2-r6,lr}
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
000006  4614              MOV      r4,r2
;;;85       GUI_RECT r;
;;;86       r = *pr;
000008  6820              LDR      r0,[r4,#0]
00000a  9000              STR      r0,[sp,#0]
00000c  6860              LDR      r0,[r4,#4]
00000e  9001              STR      r0,[sp,#4]
;;;87       #if GUI_WINSUPPORT
;;;88       WM_ADDORG(r.x0,r.y0);
000010  f8bd0000          LDRH     r0,[sp,#0]
000014  4924              LDR      r1,|L2.168|
000016  f8b11044          LDRH     r1,[r1,#0x44]  ; GUI_Context
00001a  4408              ADD      r0,r0,r1
00001c  b200              SXTH     r0,r0
00001e  f8ad0000          STRH     r0,[sp,#0]
000022  f8bd0002          LDRH     r0,[sp,#2]
000026  4920              LDR      r1,|L2.168|
000028  f8b11048          LDRH     r1,[r1,#0x48]  ; GUI_Context
00002c  4408              ADD      r0,r0,r1
00002e  b200              SXTH     r0,r0
000030  f8ad0002          STRH     r0,[sp,#2]
;;;89       WM_ADDORG(r.x1,r.y1);
000034  f8bd0004          LDRH     r0,[sp,#4]
000038  491b              LDR      r1,|L2.168|
00003a  f8b11044          LDRH     r1,[r1,#0x44]  ; GUI_Context
00003e  4408              ADD      r0,r0,r1
000040  b200              SXTH     r0,r0
000042  f8ad0004          STRH     r0,[sp,#4]
000046  f8bd0006          LDRH     r0,[sp,#6]
00004a  4917              LDR      r1,|L2.168|
00004c  f8b11048          LDRH     r1,[r1,#0x48]  ; GUI_Context
000050  4408              ADD      r0,r0,r1
000052  b200              SXTH     r0,r0
000054  f8ad0006          STRH     r0,[sp,#6]
;;;90       WM_ITERATE_START(&r) {
000058  4668              MOV      r0,sp
00005a  f7fffffe          BL       WM__InitIVRSearch
00005e  b180              CBZ      r0,|L2.130|
000060  bf00              NOP      
                  |L2.98|
;;;91       #endif
;;;92          GUI_Context.DispPosX = r.x0;
000062  f8bd0000          LDRH     r0,[sp,#0]
000066  4910              LDR      r1,|L2.168|
000068  84c8              STRH     r0,[r1,#0x26]
;;;93          GUI_Context.DispPosY = r.y0;
00006a  f8bd0002          LDRH     r0,[sp,#2]
00006e  8508              STRH     r0,[r1,#0x28]
;;;94          _DispLine_UC(s, Len, &r);    /* Do the actual drawing via routine call. */
000070  466a              MOV      r2,sp
000072  4631              MOV      r1,r6
000074  4628              MOV      r0,r5
000076  f7fffffe          BL       _DispLine_UC
;;;95       #if GUI_WINSUPPORT
;;;96       } WM_ITERATE_END();
00007a  f7fffffe          BL       WM__GetNextIVR
00007e  2800              CMP      r0,#0
000080  d1ef              BNE      |L2.98|
                  |L2.130|
;;;97       WM_SUBORG(GUI_Context.DispPosX, GUI_Context.DispPosY);
000082  4809              LDR      r0,|L2.168|
000084  8cc0              LDRH     r0,[r0,#0x26]  ; GUI_Context
000086  4908              LDR      r1,|L2.168|
000088  f8b11044          LDRH     r1,[r1,#0x44]  ; GUI_Context
00008c  1a40              SUBS     r0,r0,r1
00008e  b200              SXTH     r0,r0
000090  4905              LDR      r1,|L2.168|
000092  84c8              STRH     r0,[r1,#0x26]
000094  4608              MOV      r0,r1
000096  8d00              LDRH     r0,[r0,#0x28]  ; GUI_Context
000098  f8b11048          LDRH     r1,[r1,#0x48]  ; GUI_Context
00009c  1a40              SUBS     r0,r0,r1
00009e  b200              SXTH     r0,r0
0000a0  4901              LDR      r1,|L2.168|
0000a2  8508              STRH     r0,[r1,#0x28]
;;;98       #endif
;;;99     }
0000a4  bd7c              POP      {r2-r6,pc}
;;;100    
                          ENDP

0000a6  0000              DCW      0x0000
                  |L2.168|
                          DCD      GUI_Context

                          AREA ||i._DispLine_UC||, CODE, READONLY, ALIGN=2

                  _DispLine_UC PROC
;;;65     */
;;;66     static void _DispLine_UC(const U16 GUI_UNI_PTR *s, int Len, const GUI_RECT *pRect) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
;;;67       if (GUI_Context.pClipRect_HL) {
00000a  480b              LDR      r0,|L3.56|
00000c  6940              LDR      r0,[r0,#0x14]  ; GUI_Context
00000e  b138              CBZ      r0,|L3.32|
;;;68         if (GUI_RectsIntersect(GUI_Context.pClipRect_HL, pRect) == 0)
000010  4909              LDR      r1,|L3.56|
000012  6948              LDR      r0,[r1,#0x14]  ; GUI_Context
000014  4631              MOV      r1,r6
000016  f7fffffe          BL       GUI_RectsIntersect
00001a  b908              CBNZ     r0,|L3.32|
                  |L3.28|
;;;69           return;
;;;70       }
;;;71       {
;;;72         U16 c0;
;;;73         while (--Len >=0) {
;;;74           c0=*s++;
;;;75           GL_DispChar(c0);
;;;76         }
;;;77       }
;;;78     }
00001c  e8bd81f0          POP      {r4-r8,pc}
                  |L3.32|
000020  e004              B        |L3.44|
                  |L3.34|
000022  f8347b02          LDRH     r7,[r4],#2            ;74
000026  4638              MOV      r0,r7                 ;75
000028  f7fffffe          BL       GL_DispChar
                  |L3.44|
00002c  1e68              SUBS     r0,r5,#1              ;73
00002e  1e05              SUBS     r5,r0,#0              ;73
000030  daf7              BGE      |L3.34|
000032  bf00              NOP      
000034  e7f2              B        |L3.28|
;;;79     
                          ENDP

000036  0000              DCW      0x0000
                  |L3.56|
                          DCD      GUI_Context

                          AREA ||i._GetLineDistX||, CODE, READONLY, ALIGN=1

                  _GetLineDistX PROC
;;;32     */
;;;33     static int _GetLineDistX(const U16 GUI_UNI_PTR *s, int MaxNumChars) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;34       int Dist =0;
000008  2600              MOVS     r6,#0
;;;35       if (s) {
00000a  b15c              CBZ      r4,|L4.36|
;;;36         U16 Char;
;;;37         while (((Char = *s) != 0) && MaxNumChars >= 0) {
00000c  e005              B        |L4.26|
                  |L4.14|
;;;38           s++;
00000e  1ca4              ADDS     r4,r4,#2
;;;39           MaxNumChars--;
000010  1e6d              SUBS     r5,r5,#1
;;;40           Dist += GUI_GetCharDistX(Char);
000012  4638              MOV      r0,r7
000014  f7fffffe          BL       GUI_GetCharDistX
000018  4406              ADD      r6,r6,r0
                  |L4.26|
00001a  8827              LDRH     r7,[r4,#0]            ;37
00001c  b10f              CBZ      r7,|L4.34|
00001e  2d00              CMP      r5,#0                 ;37
000020  daf5              BGE      |L4.14|
                  |L4.34|
;;;41         }
;;;42       }
000022  bf00              NOP      
                  |L4.36|
;;;43       return Dist;
000024  4630              MOV      r0,r6
;;;44     }
000026  e8bd81f0          POP      {r4-r8,pc}
;;;45     
                          ENDP


                          AREA ||i._GetLineLen||, CODE, READONLY, ALIGN=1

                  _GetLineLen PROC
;;;49     */
;;;50     static int _GetLineLen(const U16 GUI_UNI_PTR *s, int MaxLen) {
000000  4602              MOV      r2,r0
000002  460b              MOV      r3,r1
;;;51       int Len =0;
000004  2100              MOVS     r1,#0
;;;52       if (!s)
000006  b90a              CBNZ     r2,|L5.12|
;;;53         return 0;
000008  2000              MOVS     r0,#0
                  |L5.10|
;;;54       {
;;;55         while ((*s !=0) && Len < MaxLen) {
;;;56           Len++; s++;
;;;57         }
;;;58       }
;;;59       return Len;
;;;60     }
00000a  4770              BX       lr
                  |L5.12|
00000c  e001              B        |L5.18|
                  |L5.14|
00000e  1c49              ADDS     r1,r1,#1              ;56
000010  1c92              ADDS     r2,r2,#2              ;56
                  |L5.18|
000012  8810              LDRH     r0,[r2,#0]            ;55
000014  b108              CBZ      r0,|L5.26|
000016  4299              CMP      r1,r3                 ;55
000018  dbf9              BLT      |L5.14|
                  |L5.26|
00001a  4608              MOV      r0,r1                 ;59
00001c  e7f5              B        |L5.10|
;;;61     
                          ENDP

