; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\guidev_aa.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\guidev_aa.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\MemDev\GUIDEV_AA.c]
                          THUMB

                          AREA ||i.GUI_MEMDEV_CopyFromLCDAA||, CODE, READONLY, ALIGN=2

                  GUI_MEMDEV_CopyFromLCDAA PROC
;;;123    */
;;;124    void GUI_MEMDEV_CopyFromLCDAA(GUI_MEMDEV_Handle hMem) {
000000  e92d4ffe          PUSH     {r1-r11,lr}
000004  4680              MOV      r8,r0
;;;125      /* Make sure memory handle is valid */
;;;126      if (!hMem) {
000006  f1b80f00          CMP      r8,#0
00000a  d102              BNE      |L1.18|
;;;127        hMem = GUI_Context.hDevData;
00000c  4830              LDR      r0,|L1.208|
00000e  f9b08050          LDRSH    r8,[r0,#0x50]  ; GUI_Context
                  |L1.18|
;;;128      }
;;;129      if (hMem) {
000012  f1b80f00          CMP      r8,#0
000016  d059              BEQ      |L1.204|
;;;130        int x, y;
;;;131        GUI_MEMDEV* pDevData = (GUI_MEMDEV*) GUI_ALLOC_h2p(hMem);  /* Convert to pointer */
000018  4640              MOV      r0,r8
00001a  f7fffffe          BL       GUI_ALLOC_h2p
00001e  4604              MOV      r4,r0
;;;132        GUI_USAGE* pUsage = 0;
000020  2700              MOVS     r7,#0
;;;133        int x0 = pDevData->x0;
000022  f9b4b000          LDRSH    r11,[r4,#0]
;;;134        int y0 = pDevData->y0;
000026  f9b40002          LDRSH    r0,[r4,#2]
00002a  9002              STR      r0,[sp,#8]
;;;135        int XMax = pDevData->XSize/2;
00002c  f9b40004          LDRSH    r0,[r4,#4]
000030  eb0071d0          ADD      r1,r0,r0,LSR #31
000034  1049              ASRS     r1,r1,#1
000036  9101              STR      r1,[sp,#4]
;;;136        int YMax = pDevData->YSize/2;
000038  f9b40006          LDRSH    r0,[r4,#6]
00003c  eb0071d0          ADD      r1,r0,r0,LSR #31
000040  1049              ASRS     r1,r1,#1
000042  9100              STR      r1,[sp,#0]
;;;137        LCD_PIXELINDEX* pData = (LCD_PIXELINDEX*)(pDevData+1);
000044  f104062c          ADD      r6,r4,#0x2c
;;;138        int LineOff = pDevData->BytesPerLine;
000048  f8d4a00c          LDR      r10,[r4,#0xc]
;;;139        if (pDevData->hUsage) 
00004c  8b20              LDRH     r0,[r4,#0x18]
00004e  b120              CBZ      r0,|L1.90|
;;;140          pUsage = GUI_USAGE_H2P(pDevData->hUsage);
000050  f9b40018          LDRSH    r0,[r4,#0x18]
000054  f7fffffe          BL       GUI_ALLOC_h2p
000058  4607              MOV      r7,r0
                  |L1.90|
;;;141        for (y=0; y< YMax; y++) {
00005a  2500              MOVS     r5,#0
00005c  e032              B        |L1.196|
                  |L1.94|
;;;142          if (pUsage) {
00005e  b19f              CBZ      r7,|L1.136|
;;;143            GUI_USAGE_AddHLine(pUsage, 0, y*2, pDevData->XSize);
000060  f9b43004          LDRSH    r3,[r4,#4]
000064  006a              LSLS     r2,r5,#1
000066  68b8              LDR      r0,[r7,#8]
000068  2100              MOVS     r1,#0
00006a  f8d0c004          LDR      r12,[r0,#4]
00006e  4638              MOV      r0,r7
000070  47e0              BLX      r12
;;;144            GUI_USAGE_AddHLine(pUsage, 0, y*2+1, pDevData->XSize);
000072  f9b43004          LDRSH    r3,[r4,#4]
000076  2001              MOVS     r0,#1
000078  eb000245          ADD      r2,r0,r5,LSL #1
00007c  68b8              LDR      r0,[r7,#8]
00007e  2100              MOVS     r1,#0
000080  f8d0c004          LDR      r12,[r0,#4]
000084  4638              MOV      r0,r7
000086  47e0              BLX      r12
                  |L1.136|
;;;145          }
;;;146          for (x=0; x< XMax; x++) {
000088  f04f0900          MOV      r9,#0
00008c  e010              B        |L1.176|
                  |L1.142|
;;;147            *pData = *(pData+1) = *(pData+LineOff) = *(pData+LineOff+1) = LCD_GetPixelIndex(x+x0,y+y0);
00008e  9a02              LDR      r2,[sp,#8]
000090  18a9              ADDS     r1,r5,r2
000092  eb09000b          ADD      r0,r9,r11
000096  f7fffffe          BL       LCD_GetPixelIndex
00009a  b280              UXTH     r0,r0
00009c  eb06014a          ADD      r1,r6,r10,LSL #1
0000a0  8048              STRH     r0,[r1,#2]
0000a2  f826001a          STRH     r0,[r6,r10,LSL #1]
0000a6  8070              STRH     r0,[r6,#2]
0000a8  8030              STRH     r0,[r6,#0]
;;;148            pData+=2;
0000aa  1d36              ADDS     r6,r6,#4
0000ac  f1090901          ADD      r9,r9,#1              ;146
                  |L1.176|
0000b0  9801              LDR      r0,[sp,#4]            ;146
0000b2  4581              CMP      r9,r0                 ;146
0000b4  dbeb              BLT      |L1.142|
;;;149          }
;;;150          pData += LineOff + (pDevData->XSize&1);
0000b6  7920              LDRB     r0,[r4,#4]
0000b8  f0000001          AND      r0,r0,#1
0000bc  4450              ADD      r0,r0,r10
0000be  eb060640          ADD      r6,r6,r0,LSL #1
0000c2  1c6d              ADDS     r5,r5,#1              ;141
                  |L1.196|
0000c4  9800              LDR      r0,[sp,#0]            ;141
0000c6  4285              CMP      r5,r0                 ;141
0000c8  dbc9              BLT      |L1.94|
;;;151        }
;;;152      }
0000ca  bf00              NOP      
                  |L1.204|
;;;153    }
0000cc  e8bd8ffe          POP      {r1-r11,pc}
;;;154    
                          ENDP

                  |L1.208|
                          DCD      GUI_Context

                          AREA ||i.GUI_MEMDEV_CopyToLCDAA||, CODE, READONLY, ALIGN=2

                  GUI_MEMDEV_CopyToLCDAA PROC
;;;58     */
;;;59     void GUI_MEMDEV_CopyToLCDAA(GUI_MEMDEV_Handle hMem) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b089              SUB      sp,sp,#0x24
000006  4682              MOV      r10,r0
;;;60       GUI_LOCK();
000008  f7fffffe          BL       GUI_Lock
;;;61       /* Make sure memory handle is valid */
;;;62       if (hMem) {
00000c  f1ba0f00          CMP      r10,#0
000010  d07e              BEQ      |L2.272|
;;;63         GUI_MEMDEV_Handle hMemPrev;
;;;64       #if GUI_NUM_LAYERS > 1
;;;65         int PrevLayer;
;;;66       #endif
;;;67         int x, y;
;;;68         GUI_MEMDEV* pDev = (GUI_MEMDEV*)GUI_ALLOC_h2p(hMem);  /* Convert to pointer */
000012  4650              MOV      r0,r10
000014  f7fffffe          BL       GUI_ALLOC_h2p
000018  4605              MOV      r5,r0
;;;69         LCD_PIXELINDEX* pData0 = (LCD_PIXELINDEX*)(pDev+1);
00001a  f1050b2c          ADD      r11,r5,#0x2c
;;;70         int LineOff = pDev->XSize;
00001e  f9b59004          LDRSH    r9,[r5,#4]
;;;71         int x0 = pDev->x0;
000022  f9b50000          LDRSH    r0,[r5,#0]
000026  9007              STR      r0,[sp,#0x1c]
;;;72         int y0 = pDev->y0;
000028  f9b50002          LDRSH    r0,[r5,#2]
00002c  9006              STR      r0,[sp,#0x18]
;;;73         int XMax = pDev->XSize / 2;
00002e  f9b50004          LDRSH    r0,[r5,#4]
000032  eb0071d0          ADD      r1,r0,r0,LSR #31
000036  1049              ASRS     r1,r1,#1
000038  9105              STR      r1,[sp,#0x14]
;;;74         int YMax = pDev->YSize / 2;
00003a  f9b50006          LDRSH    r0,[r5,#6]
00003e  eb0071d0          ADD      r1,r0,r0,LSR #31
000042  1049              ASRS     r1,r1,#1
000044  9104              STR      r1,[sp,#0x10]
;;;75         hMemPrev = GUI_Context.hDevData;
000046  4841              LDR      r0,|L2.332|
000048  f9b00050          LDRSH    r0,[r0,#0x50]  ; GUI_Context
00004c  9008              STR      r0,[sp,#0x20]
;;;76       #if GUI_NUM_LAYERS > 1
;;;77         PrevLayer = GUI_SelectLayer(pDev->LayerIndex);   /* Should not we switch back to the orig. layer when done ? */
;;;78       #else
;;;79         GUI_SelectLCD();  /* Activate LCD */
00004e  f7fffffe          BL       GUI_SelectLCD
;;;80       #endif
;;;81         for (y = 0; y < YMax; y++) {
000052  f04f0800          MOV      r8,#0
000056  e06c              B        |L2.306|
                  |L2.88|
;;;82           LCD_PIXELINDEX* pData = pData0;
000058  465e              MOV      r6,r11
;;;83           for (x = 0; x < XMax; x++) {
00005a  2700              MOVS     r7,#0
00005c  e062              B        |L2.292|
                  |L2.94|
;;;84             LCD_PIXELINDEX PixelIndex;
;;;85             int ColorSep[3];
;;;86             U32 Color = LCD_Index2Color(*pData);
00005e  8830              LDRH     r0,[r6,#0]
000060  f7fffffe          BL       LCD_Index2Color
000064  4604              MOV      r4,r0
;;;87             ColorSep[0] = Color&255;
000066  b2e0              UXTB     r0,r4
000068  9000              STR      r0,[sp,#0]
;;;88             ColorSep[1] = (Color>>8)  &255;
00006a  f3c42007          UBFX     r0,r4,#8,#8
00006e  9001              STR      r0,[sp,#4]
;;;89             ColorSep[2] = (Color>>16) &255;
000070  f3c44007          UBFX     r0,r4,#16,#8
000074  9002              STR      r0,[sp,#8]
;;;90             Color = LCD_Index2Color(*(pData+1));
000076  8870              LDRH     r0,[r6,#2]
000078  f7fffffe          BL       LCD_Index2Color
00007c  4604              MOV      r4,r0
;;;91             ColorSep[0] += Color&255;
00007e  b2e1              UXTB     r1,r4
000080  9800              LDR      r0,[sp,#0]
000082  4408              ADD      r0,r0,r1
000084  9000              STR      r0,[sp,#0]
;;;92             ColorSep[1] += (Color>>8)  &255;
000086  f3c42107          UBFX     r1,r4,#8,#8
00008a  9801              LDR      r0,[sp,#4]
00008c  4408              ADD      r0,r0,r1
00008e  9001              STR      r0,[sp,#4]
;;;93             ColorSep[2] += (Color>>16) &255;
000090  f3c44107          UBFX     r1,r4,#16,#8
000094  9802              LDR      r0,[sp,#8]
000096  4408              ADD      r0,r0,r1
000098  9002              STR      r0,[sp,#8]
;;;94             Color = LCD_Index2Color(*(pData+LineOff));
00009a  f8360019          LDRH     r0,[r6,r9,LSL #1]
00009e  f7fffffe          BL       LCD_Index2Color
0000a2  4604              MOV      r4,r0
;;;95             ColorSep[0] += Color&255;
0000a4  b2e1              UXTB     r1,r4
0000a6  9800              LDR      r0,[sp,#0]
0000a8  4408              ADD      r0,r0,r1
0000aa  9000              STR      r0,[sp,#0]
;;;96             ColorSep[1] += (Color>>8)  &255;
0000ac  f3c42107          UBFX     r1,r4,#8,#8
0000b0  9801              LDR      r0,[sp,#4]
0000b2  4408              ADD      r0,r0,r1
0000b4  9001              STR      r0,[sp,#4]
;;;97             ColorSep[2] += (Color>>16) &255;
0000b6  f3c44107          UBFX     r1,r4,#16,#8
0000ba  9802              LDR      r0,[sp,#8]
0000bc  4408              ADD      r0,r0,r1
0000be  9002              STR      r0,[sp,#8]
;;;98             Color = LCD_Index2Color(*(pData+LineOff+1));
0000c0  eb060149          ADD      r1,r6,r9,LSL #1
0000c4  8848              LDRH     r0,[r1,#2]
0000c6  f7fffffe          BL       LCD_Index2Color
0000ca  4604              MOV      r4,r0
;;;99             ColorSep[0] += Color&255;
0000cc  b2e1              UXTB     r1,r4
0000ce  9800              LDR      r0,[sp,#0]
0000d0  4408              ADD      r0,r0,r1
0000d2  9000              STR      r0,[sp,#0]
;;;100            ColorSep[1] += (Color>>8)  &255;
0000d4  f3c42107          UBFX     r1,r4,#8,#8
0000d8  9801              LDR      r0,[sp,#4]
0000da  4408              ADD      r0,r0,r1
0000dc  9001              STR      r0,[sp,#4]
;;;101            ColorSep[2] += (Color>>16) &255;
0000de  f3c44107          UBFX     r1,r4,#16,#8
0000e2  9802              LDR      r0,[sp,#8]
0000e4  4408              ADD      r0,r0,r1
0000e6  9002              STR      r0,[sp,#8]
;;;102            Color  = (ColorSep[0]+2)>>2;
0000e8  9800              LDR      r0,[sp,#0]
0000ea  1c80              ADDS     r0,r0,#2
0000ec  1084              ASRS     r4,r0,#2
;;;103            Color |= ((ColorSep[1]+2)>>2)<<8;
0000ee  9801              LDR      r0,[sp,#4]
0000f0  1c80              ADDS     r0,r0,#2
0000f2  1080              ASRS     r0,r0,#2
0000f4  ea442400          ORR      r4,r4,r0,LSL #8
;;;104            Color |= ((U32)((ColorSep[2]+2)>>2))<<16;
0000f8  9802              LDR      r0,[sp,#8]
0000fa  1c80              ADDS     r0,r0,#2
0000fc  1080              ASRS     r0,r0,#2
0000fe  ea444400          ORR      r4,r4,r0,LSL #16
;;;105            PixelIndex = LCD_Color2Index(Color);
000102  4620              MOV      r0,r4
000104  f7fffffe          BL       LCD_Color2Index
000108  b280              UXTH     r0,r0
00010a  9003              STR      r0,[sp,#0xc]
;;;106            LCD_SetPixelIndex(x+x0, y+y0, PixelIndex);
00010c  9a06              LDR      r2,[sp,#0x18]
00010e  e000              B        |L2.274|
                  |L2.272|
000110  e016              B        |L2.320|
                  |L2.274|
000112  eb080102          ADD      r1,r8,r2
000116  9a07              LDR      r2,[sp,#0x1c]
000118  18b8              ADDS     r0,r7,r2
00011a  9a03              LDR      r2,[sp,#0xc]
00011c  f7fffffe          BL       LCD_SetPixelIndex
;;;107            pData += 2;
000120  1d36              ADDS     r6,r6,#4
000122  1c7f              ADDS     r7,r7,#1              ;83
                  |L2.292|
000124  9805              LDR      r0,[sp,#0x14]         ;83
000126  4287              CMP      r7,r0                 ;83
000128  db99              BLT      |L2.94|
;;;108          }
;;;109          pData0 += 2 * LineOff;
00012a  eb0b0b89          ADD      r11,r11,r9,LSL #2
00012e  f1080801          ADD      r8,r8,#1              ;81
                  |L2.306|
000132  9804              LDR      r0,[sp,#0x10]         ;81
000134  4580              CMP      r8,r0                 ;81
000136  db8f              BLT      |L2.88|
;;;110        }
;;;111      #if GUI_NUM_LAYERS > 1
;;;112        GUI_SelectLayer(PrevLayer);
;;;113      #endif
;;;114        /* Reactivate previously used device */
;;;115        GUI_MEMDEV_Select(hMemPrev);
000138  9808              LDR      r0,[sp,#0x20]
00013a  f7fffffe          BL       GUI_MEMDEV_Select
;;;116      }
00013e  bf00              NOP      
                  |L2.320|
;;;117      GUI_UNLOCK();
000140  f7fffffe          BL       GUI_Unlock
;;;118    }
000144  b009              ADD      sp,sp,#0x24
000146  e8bd8ff0          POP      {r4-r11,pc}
;;;119    
                          ENDP

00014a  0000              DCW      0x0000
                  |L2.332|
                          DCD      GUI_Context
