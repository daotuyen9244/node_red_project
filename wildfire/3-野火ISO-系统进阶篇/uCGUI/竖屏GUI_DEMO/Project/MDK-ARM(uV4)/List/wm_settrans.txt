; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\wm_settrans.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\wm_settrans.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\WM\WM_SetTrans.c]
                          THUMB

                          AREA ||i.WM_ClrHasTrans||, CODE, READONLY, ALIGN=2

                  WM_ClrHasTrans PROC
;;;55     */
;;;56     void WM_ClrHasTrans(WM_HWIN hWin) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
;;;57       WM_Obj *pWin;
;;;58       WM_LOCK();
000004  f7fffffe          BL       GUI_Lock
;;;59       if (hWin) {
000008  b19d              CBZ      r5,|L1.50|
;;;60         pWin = WM_H2P(hWin);  
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       GUI_ALLOC_h2p
000010  4604              MOV      r4,r0
;;;61         /* First check if this is necessary at all */
;;;62         if (pWin->Status & WM_SF_HASTRANS) {
000012  7f20              LDRB     r0,[r4,#0x1c]
000014  f0100f01          TST      r0,#1
000018  d00b              BEQ      |L1.50|
;;;63           pWin->Status &= ~WM_SF_HASTRANS;
00001a  8ba0              LDRH     r0,[r4,#0x1c]
00001c  f0200001          BIC      r0,r0,#1
000020  83a0              STRH     r0,[r4,#0x1c]
;;;64           WM__TransWindowCnt--;            /* Decrement counter for transparency windows */
000022  4805              LDR      r0,|L1.56|
000024  6800              LDR      r0,[r0,#0]  ; WM__TransWindowCnt
000026  1e40              SUBS     r0,r0,#1
000028  4903              LDR      r1,|L1.56|
00002a  6008              STR      r0,[r1,#0]  ; WM__TransWindowCnt
;;;65           WM_InvalidateWindow(hWin);        /* Mark content as invalid */
00002c  4628              MOV      r0,r5
00002e  f7fffffe          BL       WM_InvalidateWindow
                  |L1.50|
;;;66         }
;;;67       }
;;;68       WM_UNLOCK();
000032  f7fffffe          BL       GUI_Unlock
;;;69     }
000036  bd70              POP      {r4-r6,pc}
;;;70     
                          ENDP

                  |L1.56|
                          DCD      WM__TransWindowCnt

                          AREA ||i.WM_GetHasTrans||, CODE, READONLY, ALIGN=1

                  WM_GetHasTrans PROC
;;;74     */
;;;75     int WM_GetHasTrans(WM_HWIN hWin) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
;;;76       int r = 0;
000004  2600              MOVS     r6,#0
;;;77       WM_Obj *pWin;
;;;78       WM_LOCK();
000006  f7fffffe          BL       GUI_Lock
;;;79       if (hWin) {
00000a  b135              CBZ      r5,|L2.26|
;;;80         pWin = WM_H2P(hWin);  
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       GUI_ALLOC_h2p
000012  4604              MOV      r4,r0
;;;81         r = pWin->Status & WM_SF_HASTRANS;
000014  7f20              LDRB     r0,[r4,#0x1c]
000016  f0000601          AND      r6,r0,#1
                  |L2.26|
;;;82       }
;;;83       WM_UNLOCK();
00001a  f7fffffe          BL       GUI_Unlock
;;;84       return r;
00001e  4630              MOV      r0,r6
;;;85     }
000020  bd70              POP      {r4-r6,pc}
;;;86     
                          ENDP


                          AREA ||i.WM_SetHasTrans||, CODE, READONLY, ALIGN=2

                  WM_SetHasTrans PROC
;;;36     */
;;;37     void WM_SetHasTrans(WM_HWIN hWin) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
;;;38       WM_Obj *pWin;
;;;39       WM_LOCK();
000004  f7fffffe          BL       GUI_Lock
;;;40       if (hWin) {
000008  b19d              CBZ      r5,|L3.50|
;;;41         pWin = WM_H2P(hWin);  
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       GUI_ALLOC_h2p
000010  4604              MOV      r4,r0
;;;42         /* First check if this is necessary at all */
;;;43         if ((pWin->Status & WM_SF_HASTRANS) == 0) {
000012  7f20              LDRB     r0,[r4,#0x1c]
000014  f0100f01          TST      r0,#1
000018  d10b              BNE      |L3.50|
;;;44           pWin->Status |= WM_SF_HASTRANS; /* Set Transparency flag */
00001a  8ba0              LDRH     r0,[r4,#0x1c]
00001c  f0400001          ORR      r0,r0,#1
000020  83a0              STRH     r0,[r4,#0x1c]
;;;45           WM__TransWindowCnt++;          /* Increment counter for transparency windows */
000022  4805              LDR      r0,|L3.56|
000024  6800              LDR      r0,[r0,#0]  ; WM__TransWindowCnt
000026  1c40              ADDS     r0,r0,#1
000028  4903              LDR      r1,|L3.56|
00002a  6008              STR      r0,[r1,#0]  ; WM__TransWindowCnt
;;;46           WM_InvalidateWindow(hWin);      /* Mark content as invalid */
00002c  4628              MOV      r0,r5
00002e  f7fffffe          BL       WM_InvalidateWindow
                  |L3.50|
;;;47         }
;;;48       }
;;;49       WM_UNLOCK();
000032  f7fffffe          BL       GUI_Unlock
;;;50     }
000036  bd70              POP      {r4-r6,pc}
;;;51     
                          ENDP

                  |L3.56|
                          DCD      WM__TransWindowCnt
