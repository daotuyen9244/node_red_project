; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\lcdinfo1.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\lcdinfo1.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Core\LCDInfo1.c]
                          THUMB

                          AREA ||i.LCD_GetBitsPerPixel_1||, CODE, READONLY, ALIGN=1

                  LCD_GetBitsPerPixel_1 PROC
;;;45       int LCD_GetVYSize_1(void)       { return 0; }
;;;46       int LCD_GetBitsPerPixel_1(void) { return 0; }
000000  2000              MOVS     r0,#0
000002  4770              BX       lr
;;;47       U32 LCD_GetNumColors_1(void)    { return 0; }
                          ENDP


                          AREA ||i.LCD_GetFixedPalette_1||, CODE, READONLY, ALIGN=1

                  LCD_GetFixedPalette_1 PROC
;;;49       int LCD_GetXMag_1(void)         { return 0; }
;;;50       int LCD_GetFixedPalette_1(void) { return 0; }
000000  2000              MOVS     r0,#0
000002  4770              BX       lr
;;;51     #endif
                          ENDP


                          AREA ||i.LCD_GetNumColors_1||, CODE, READONLY, ALIGN=1

                  LCD_GetNumColors_1 PROC
;;;46       int LCD_GetBitsPerPixel_1(void) { return 0; }
;;;47       U32 LCD_GetNumColors_1(void)    { return 0; }
000000  2000              MOVS     r0,#0
000002  4770              BX       lr
;;;48       int LCD_GetYMag_1(void)         { return 0; }
                          ENDP


                          AREA ||i.LCD_GetVXSize_1||, CODE, READONLY, ALIGN=1

                  LCD_GetVXSize_1 PROC
;;;43       int LCD_GetYSize_1(void)        { return 0; }
;;;44       int LCD_GetVXSize_1(void)       { return 0; }
000000  2000              MOVS     r0,#0
000002  4770              BX       lr
;;;45       int LCD_GetVYSize_1(void)       { return 0; }
                          ENDP


                          AREA ||i.LCD_GetVYSize_1||, CODE, READONLY, ALIGN=1

                  LCD_GetVYSize_1 PROC
;;;44       int LCD_GetVXSize_1(void)       { return 0; }
;;;45       int LCD_GetVYSize_1(void)       { return 0; }
000000  2000              MOVS     r0,#0
000002  4770              BX       lr
;;;46       int LCD_GetBitsPerPixel_1(void) { return 0; }
                          ENDP


                          AREA ||i.LCD_GetXMag_1||, CODE, READONLY, ALIGN=1

                  LCD_GetXMag_1 PROC
;;;48       int LCD_GetYMag_1(void)         { return 0; }
;;;49       int LCD_GetXMag_1(void)         { return 0; }
000000  2000              MOVS     r0,#0
000002  4770              BX       lr
;;;50       int LCD_GetFixedPalette_1(void) { return 0; }
                          ENDP


                          AREA ||i.LCD_GetXSize_1||, CODE, READONLY, ALIGN=1

                  LCD_GetXSize_1 PROC
;;;41     #else
;;;42       int LCD_GetXSize_1(void)        { return 0; }
000000  2000              MOVS     r0,#0
000002  4770              BX       lr
;;;43       int LCD_GetYSize_1(void)        { return 0; }
                          ENDP


                          AREA ||i.LCD_GetYMag_1||, CODE, READONLY, ALIGN=1

                  LCD_GetYMag_1 PROC
;;;47       U32 LCD_GetNumColors_1(void)    { return 0; }
;;;48       int LCD_GetYMag_1(void)         { return 0; }
000000  2000              MOVS     r0,#0
000002  4770              BX       lr
;;;49       int LCD_GetXMag_1(void)         { return 0; }
                          ENDP


                          AREA ||i.LCD_GetYSize_1||, CODE, READONLY, ALIGN=1

                  LCD_GetYSize_1 PROC
;;;42       int LCD_GetXSize_1(void)        { return 0; }
;;;43       int LCD_GetYSize_1(void)        { return 0; }
000000  2000              MOVS     r0,#0
000002  4770              BX       lr
;;;44       int LCD_GetVXSize_1(void)       { return 0; }
                          ENDP

