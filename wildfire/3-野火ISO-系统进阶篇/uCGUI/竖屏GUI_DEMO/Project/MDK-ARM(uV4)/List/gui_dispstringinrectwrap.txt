; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\gui_dispstringinrectwrap.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\gui_dispstringinrectwrap.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Core\GUI_DispStringInRectWrap.c]
                          THUMB

                          AREA ||i.GUI_DispStringInRectWrap||, CODE, READONLY, ALIGN=1

                  GUI_DispStringInRectWrap PROC
;;;31     */
;;;32     void GUI_DispStringInRectWrap(const char GUI_UNI_PTR * s, GUI_RECT * pRect, int TextAlign, GUI_WRAPMODE WrapMode) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b087              SUB      sp,sp,#0x1c
000006  4606              MOV      r6,r0
000008  460c              MOV      r4,r1
00000a  4690              MOV      r8,r2
00000c  469a              MOV      r10,r3
;;;33       const GUI_RECT * pOldClipRect;
;;;34       GUI_RECT Rect;
;;;35       int xSize, ySizeFont, NumBytesToNextLine, NumCharsDisp;
;;;36       if (!s) {
00000e  b916              CBNZ     r6,|L1.22|
                  |L1.16|
;;;37         return;
;;;38       }
;;;39       GUI_LOCK();
;;;40       Rect      = *pRect;
;;;41       xSize     = Rect.x1 - Rect.x0 + 1;
;;;42       ySizeFont = GUI_GetFontDistY();
;;;43       /* Vertical alignment */
;;;44       if ((TextAlign & GUI_TA_VERTICAL) != GUI_TA_TOP) {
;;;45         int NumLines = 0;
;;;46         const char GUI_UNI_PTR * pText;
;;;47         pText = s;
;;;48         /* Count the number of lines */
;;;49         do {
;;;50           NumBytesToNextLine = GUI__WrapGetNumBytesToNextLine(pText, xSize, WrapMode);
;;;51           pText += NumBytesToNextLine;
;;;52           if (NumBytesToNextLine) {
;;;53             NumLines++;
;;;54           }
;;;55         } while (NumBytesToNextLine);
;;;56         /* Do the vertical alignment */
;;;57         switch (TextAlign & GUI_TA_VERTICAL) {
;;;58     	  case GUI_TA_BASELINE:
;;;59     	  case GUI_TA_BOTTOM:
;;;60           Rect.y0 = Rect.y1 - NumLines * ySizeFont + 1;
;;;61           break;
;;;62     	  case GUI_TA_VCENTER:
;;;63     		  Rect.y0 = Rect.y0 + (Rect.y1 - Rect.y0 + 1 - NumLines * ySizeFont) / 2;
;;;64           break;
;;;65     	  }
;;;66       }
;;;67       pOldClipRect = GUI_SetClipRect(pRect);
;;;68       do {
;;;69         int xLineSize;
;;;70         GUI_RECT RectText;
;;;71         NumCharsDisp = GUI__WrapGetNumCharsDisp(s, xSize, WrapMode);
;;;72         Rect.y1      = Rect.y0 + ySizeFont - 1;
;;;73         RectText     = Rect;
;;;74         /* Horizontal alignment */
;;;75         xLineSize = GUI__GetLineDistX(s, NumCharsDisp);
;;;76         switch (TextAlign & GUI_TA_HORIZONTAL) {
;;;77         case GUI_TA_HCENTER:
;;;78           RectText.x0 = pRect->x0 + (pRect->x1 - pRect->x0 - xLineSize) / 2;
;;;79           break;
;;;80         case GUI_TA_LEFT:
;;;81           RectText.x0 = pRect->x0;
;;;82           break;
;;;83         case GUI_TA_RIGHT:
;;;84           RectText.x0 = pRect->x1 - xLineSize + 1;
;;;85           break;
;;;86         }
;;;87         GUI__DispLine(s, NumCharsDisp, &RectText);
;;;88         s += GUI__WrapGetNumBytesToNextLine(s, xSize, WrapMode);
;;;89         Rect.y0 += ySizeFont;
;;;90       } while (*s);
;;;91       GUI_SetClipRect(pOldClipRect);
;;;92       GUI_UNLOCK();
;;;93     }
000010  b007              ADD      sp,sp,#0x1c
000012  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.22|
000016  f7fffffe          BL       GUI_Lock
00001a  6820              LDR      r0,[r4,#0]            ;40
00001c  9004              STR      r0,[sp,#0x10]         ;40
00001e  6860              LDR      r0,[r4,#4]            ;40
000020  9005              STR      r0,[sp,#0x14]         ;40
000022  f9bd0014          LDRSH    r0,[sp,#0x14]         ;41
000026  f9bd1010          LDRSH    r1,[sp,#0x10]         ;41
00002a  1a40              SUBS     r0,r0,r1              ;41
00002c  1c40              ADDS     r0,r0,#1              ;41
00002e  9003              STR      r0,[sp,#0xc]          ;41
000030  f7fffffe          BL       GUI_GetFontDistY
000034  4605              MOV      r5,r0                 ;42
000036  f0180f0c          TST      r8,#0xc               ;44
00003a  d035              BEQ      |L1.168|
00003c  f04f0900          MOV      r9,#0                 ;45
000040  46b3              MOV      r11,r6                ;47
000042  bf00              NOP                            ;49
                  |L1.68|
000044  4652              MOV      r2,r10                ;50
000046  4658              MOV      r0,r11                ;50
000048  9903              LDR      r1,[sp,#0xc]          ;50
00004a  f7fffffe          BL       GUI__WrapGetNumBytesToNextLine
00004e  4607              MOV      r7,r0                 ;50
000050  44bb              ADD      r11,r11,r7            ;51
000052  b10f              CBZ      r7,|L1.88|
000054  f1090901          ADD      r9,r9,#1              ;53
                  |L1.88|
000058  2f00              CMP      r7,#0                 ;55
00005a  d1f3              BNE      |L1.68|
00005c  f008000c          AND      r0,r8,#0xc            ;57
000060  2804              CMP      r0,#4                 ;57
000062  d005              BEQ      |L1.112|
000064  2808              CMP      r0,#8                 ;57
000066  d002              BEQ      |L1.110|
000068  280c              CMP      r0,#0xc               ;57
00006a  d11b              BNE      |L1.164|
00006c  e009              B        |L1.130|
                  |L1.110|
00006e  bf00              NOP                            ;59
                  |L1.112|
000070  f9bd0016          LDRSH    r0,[sp,#0x16]         ;60
000074  fb090015          MLS      r0,r9,r5,r0           ;60
000078  1c40              ADDS     r0,r0,#1              ;60
00007a  b200              SXTH     r0,r0                 ;60
00007c  f8ad0012          STRH     r0,[sp,#0x12]         ;60
000080  e010              B        |L1.164|
                  |L1.130|
000082  f9bd1016          LDRSH    r1,[sp,#0x16]         ;63
000086  f9bd2012          LDRSH    r2,[sp,#0x12]         ;63
00008a  1a89              SUBS     r1,r1,r2              ;63
00008c  1c49              ADDS     r1,r1,#1              ;63
00008e  fb091015          MLS      r0,r9,r5,r1           ;63
000092  eb0071d0          ADD      r1,r0,r0,LSR #31      ;63
000096  b292              UXTH     r2,r2                 ;63
000098  eb020161          ADD      r1,r2,r1,ASR #1       ;63
00009c  b209              SXTH     r1,r1                 ;63
00009e  f8ad1012          STRH     r1,[sp,#0x12]         ;63
0000a2  bf00              NOP                            ;64
                  |L1.164|
0000a4  bf00              NOP                            ;61
0000a6  bf00              NOP                            ;66
                  |L1.168|
0000a8  4620              MOV      r0,r4                 ;67
0000aa  f7fffffe          BL       GUI_SetClipRect
0000ae  9006              STR      r0,[sp,#0x18]         ;67
0000b0  bf00              NOP                            ;68
                  |L1.178|
0000b2  4652              MOV      r2,r10                ;71
0000b4  4630              MOV      r0,r6                 ;71
0000b6  9903              LDR      r1,[sp,#0xc]          ;71
0000b8  f7fffffe          BL       GUI__WrapGetNumCharsDisp
0000bc  9002              STR      r0,[sp,#8]            ;71
0000be  f8bd0012          LDRH     r0,[sp,#0x12]         ;72
0000c2  4428              ADD      r0,r0,r5              ;72
0000c4  1e40              SUBS     r0,r0,#1              ;72
0000c6  b200              SXTH     r0,r0                 ;72
0000c8  f8ad0016          STRH     r0,[sp,#0x16]         ;72
0000cc  e9dd0104          LDRD     r0,r1,[sp,#0x10]      ;73
0000d0  e9cd0100          STRD     r0,r1,[sp,#0]         ;73
0000d4  4630              MOV      r0,r6                 ;75
0000d6  9902              LDR      r1,[sp,#8]            ;75
0000d8  f7fffffe          BL       GUI__GetLineDistX
0000dc  4681              MOV      r9,r0                 ;75
0000de  f0180003          ANDS     r0,r8,#3              ;76
0000e2  d013              BEQ      |L1.268|
0000e4  2801              CMP      r0,#1                 ;76
0000e6  d015              BEQ      |L1.276|
0000e8  2802              CMP      r0,#2                 ;76
0000ea  d11b              BNE      |L1.292|
0000ec  f9b41004          LDRSH    r1,[r4,#4]            ;78
0000f0  f9b42000          LDRSH    r2,[r4,#0]            ;78
0000f4  1a89              SUBS     r1,r1,r2              ;78
0000f6  eba10009          SUB      r0,r1,r9              ;78
0000fa  eb0071d0          ADD      r1,r0,r0,LSR #31      ;78
0000fe  b292              UXTH     r2,r2                 ;78
000100  eb020161          ADD      r1,r2,r1,ASR #1       ;78
000104  b209              SXTH     r1,r1                 ;78
000106  f8ad1000          STRH     r1,[sp,#0]            ;78
00010a  e00b              B        |L1.292|
                  |L1.268|
00010c  8820              LDRH     r0,[r4,#0]            ;81
00010e  f8ad0000          STRH     r0,[sp,#0]            ;81
000112  e007              B        |L1.292|
                  |L1.276|
000114  88a0              LDRH     r0,[r4,#4]            ;84
000116  eba00009          SUB      r0,r0,r9              ;84
00011a  1c40              ADDS     r0,r0,#1              ;84
00011c  b200              SXTH     r0,r0                 ;84
00011e  f8ad0000          STRH     r0,[sp,#0]            ;84
000122  bf00              NOP                            ;85
                  |L1.292|
000124  bf00              NOP                            ;79
000126  466a              MOV      r2,sp                 ;87
000128  4630              MOV      r0,r6                 ;87
00012a  9902              LDR      r1,[sp,#8]            ;87
00012c  f7fffffe          BL       GUI__DispLine
000130  4652              MOV      r2,r10                ;88
000132  4630              MOV      r0,r6                 ;88
000134  9903              LDR      r1,[sp,#0xc]          ;88
000136  f7fffffe          BL       GUI__WrapGetNumBytesToNextLine
00013a  4406              ADD      r6,r6,r0              ;88
00013c  f8bd0012          LDRH     r0,[sp,#0x12]         ;89
000140  4428              ADD      r0,r0,r5              ;89
000142  b200              SXTH     r0,r0                 ;89
000144  f8ad0012          STRH     r0,[sp,#0x12]         ;89
000148  7830              LDRB     r0,[r6,#0]            ;90
00014a  2800              CMP      r0,#0                 ;90
00014c  d1b1              BNE      |L1.178|
00014e  9806              LDR      r0,[sp,#0x18]         ;91
000150  f7fffffe          BL       GUI_SetClipRect
000154  f7fffffe          BL       GUI_Unlock
000158  bf00              NOP      
00015a  e759              B        |L1.16|
;;;94     
                          ENDP

