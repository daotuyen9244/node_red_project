; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\lcdrle16.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\lcdrle16.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\Core\LCDRLE16.c]
                          THUMB

                          AREA ||i._DrawBitmap_RLE||, CODE, READONLY, ALIGN=2

                  _DrawBitmap_RLE PROC
;;;81     */
;;;82     static void _DrawBitmap_RLE(int x0, int y0, int xsize, int ysize, const U8 GUI_UNI_PTR * pPixel, int xMag, int yMag) {
000000  e92d4fff          PUSH     {r0-r11,lr}
000004  b089              SUB      sp,sp,#0x24
000006  4607              MOV      r7,r0
000008  460e              MOV      r6,r1
00000a  4692              MOV      r10,r2
00000c  e9ddb817          LDRD     r11,r8,[sp,#0x5c]
;;;83       LCD_PIXELINDEX OldColorIndex, PixelIndex;
;;;84       int xi, y, xL, yL;
;;;85       const U8 GUI_UNI_PTR * pPixelOrg;
;;;86       char NoTrans, IsMagnified;
;;;87       pPixelOrg     = pPixel;
000010  9816              LDR      r0,[sp,#0x58]
000012  9004              STR      r0,[sp,#0x10]
;;;88       NoTrans       = !(GUI_Context.DrawMode & LCD_DRAWMODE_TRANS);
000014  487b              LDR      r0,|L1.516|
000016  7c00              LDRB     r0,[r0,#0x10]  ; GUI_Context
000018  2101              MOVS     r1,#1
00001a  ea210050          BIC      r0,r1,r0,LSR #1
00001e  9003              STR      r0,[sp,#0xc]
;;;89       IsMagnified   = ((yMag | xMag) != 1);
000020  ea48000b          ORR      r0,r8,r11
000024  2801              CMP      r0,#1
000026  d001              BEQ      |L1.44|
000028  2001              MOVS     r0,#1
00002a  e000              B        |L1.46|
                  |L1.44|
00002c  2000              MOVS     r0,#0
                  |L1.46|
00002e  9002              STR      r0,[sp,#8]
;;;90       OldColorIndex = LCD_ACOLORINDEX[1];
000030  4874              LDR      r0,|L1.516|
000032  8840              LDRH     r0,[r0,#2]  ; GUI_Context
000034  9008              STR      r0,[sp,#0x20]
;;;91       _DisplayMode   = LCD_GetFixedPaletteEx(GUI_Context.SelLayer);
000036  4973              LDR      r1,|L1.516|
000038  7c48              LDRB     r0,[r1,#0x11]  ; GUI_Context
00003a  f7fffffe          BL       LCD_GetFixedPaletteEx
00003e  4972              LDR      r1,|L1.520|
000040  6008              STR      r0,[r1,#0]  ; _DisplayMode
;;;92       _DisplaySwapRB = LCD_GetSwapRBEx(GUI_Context.SelLayer);
000042  4970              LDR      r1,|L1.516|
000044  7c48              LDRB     r0,[r1,#0x11]  ; GUI_Context
000046  f7fffffe          BL       LCD_GetSwapRBEx
00004a  4970              LDR      r1,|L1.524|
00004c  7008              STRB     r0,[r1,#0]
;;;93      /* Check if we can limit the number of lines due to clipping) */
;;;94       if (yMag == 1) {
00004e  f1b80f01          CMP      r8,#1
000052  d10d              BNE      |L1.112|
;;;95         if (ysize > GUI_Context.ClipRect.y1 - y0 + 1) {
000054  486b              LDR      r0,|L1.516|
000056  f9b0000e          LDRSH    r0,[r0,#0xe]
00005a  1b80              SUBS     r0,r0,r6
00005c  1c40              ADDS     r0,r0,#1
00005e  990c              LDR      r1,[sp,#0x30]
000060  4288              CMP      r0,r1
000062  da05              BGE      |L1.112|
;;;96           ysize = GUI_Context.ClipRect.y1 - y0 + 1;
000064  4867              LDR      r0,|L1.516|
000066  f9b0000e          LDRSH    r0,[r0,#0xe]
00006a  1b80              SUBS     r0,r0,r6
00006c  1c40              ADDS     r0,r0,#1
00006e  900c              STR      r0,[sp,#0x30]
                  |L1.112|
;;;97         }
;;;98       }
;;;99       /* Init variables for looping */
;;;100      xi = y = 0;
000070  2400              MOVS     r4,#0
000072  4625              MOV      r5,r4
;;;101      /* Check if we can use the cache to save some unnecessary iterations */
;;;102      if (!IsMagnified) {
000074  9802              LDR      r0,[sp,#8]
000076  b990              CBNZ     r0,|L1.158|
;;;103        int yDiff = GUI_Context.ClipRect.y0 - y0;
000078  4962              LDR      r1,|L1.516|
00007a  f9b1100a          LDRSH    r1,[r1,#0xa]
00007e  1b88              SUBS     r0,r1,r6
;;;104        if ((_Cache.pPixelStart == pPixel) && (yDiff > _Cache.y)) {
000080  4963              LDR      r1,|L1.528|
000082  68c9              LDR      r1,[r1,#0xc]  ; _Cache
000084  9a16              LDR      r2,[sp,#0x58]
000086  4291              CMP      r1,r2
000088  d108              BNE      |L1.156|
00008a  4961              LDR      r1,|L1.528|
00008c  6849              LDR      r1,[r1,#4]  ; _Cache
00008e  4281              CMP      r1,r0
000090  da04              BGE      |L1.156|
;;;105          /* Accept cache values */
;;;106          y      = _Cache.y;
000092  495f              LDR      r1,|L1.528|
000094  684d              LDR      r5,[r1,#4]  ; _Cache
;;;107          xi     = _Cache.x;
000096  680c              LDR      r4,[r1,#0]  ; _Cache
;;;108          pPixel = _Cache.pPixel;
000098  6889              LDR      r1,[r1,#8]  ; _Cache
00009a  9116              STR      r1,[sp,#0x58]
                  |L1.156|
;;;109        }
;;;110      }
00009c  bf00              NOP      
                  |L1.158|
;;;111      /* Init values for caching */
;;;112      _Cache.pPixel = _Cache.pPixelStart = pPixelOrg;
00009e  495c              LDR      r1,|L1.528|
0000a0  9804              LDR      r0,[sp,#0x10]
0000a2  60c8              STR      r0,[r1,#0xc]  ; _Cache
0000a4  6088              STR      r0,[r1,#8]  ; _Cache
;;;113      _Cache.x = _Cache.y = 0;
0000a6  2000              MOVS     r0,#0
0000a8  6048              STR      r0,[r1,#4]  ; _Cache
0000aa  6008              STR      r0,[r1,#0]  ; _Cache
;;;114      /* Repeat until we have reached bottom */
;;;115      for (; y < ysize; ) {
0000ac  e0a0              B        |L1.496|
                  |L1.174|
;;;116        U8 NumCompressedPixels = *pPixel++;
0000ae  9816              LDR      r0,[sp,#0x58]
0000b0  7800              LDRB     r0,[r0,#0]
0000b2  9001              STR      r0,[sp,#4]
0000b4  9816              LDR      r0,[sp,#0x58]
0000b6  1c40              ADDS     r0,r0,#1
0000b8  9016              STR      r0,[sp,#0x58]
;;;117        if (NumCompressedPixels) {
0000ba  9801              LDR      r0,[sp,#4]
0000bc  2800              CMP      r0,#0
0000be  d045              BEQ      |L1.332|
;;;118          PixelIndex = _GetPixelIndex(&pPixel);
0000c0  a816              ADD      r0,sp,#0x58
0000c2  f7fffffe          BL       _GetPixelIndex
0000c6  9007              STR      r0,[sp,#0x1c]
;;;119          /* Save cache info */
;;;120          _Cache.pPixel = pPixel - 3;
0000c8  9816              LDR      r0,[sp,#0x58]
0000ca  1ec0              SUBS     r0,r0,#3
0000cc  4950              LDR      r1,|L1.528|
0000ce  6088              STR      r0,[r1,#8]  ; _Cache
;;;121          _Cache.x      = xi;
0000d0  4608              MOV      r0,r1
0000d2  6004              STR      r4,[r0,#0]  ; _Cache
;;;122          _Cache.y      = y;
0000d4  6045              STR      r5,[r0,#4]  ; _Cache
;;;123          LCD_ACOLORINDEX[1] = PixelIndex;
0000d6  494b              LDR      r1,|L1.516|
0000d8  9807              LDR      r0,[sp,#0x1c]
0000da  8048              STRH     r0,[r1,#2]
;;;124          while (NumCompressedPixels) {
0000dc  e032              B        |L1.324|
                  |L1.222|
;;;125            int xi1 = xi + NumCompressedPixels;
0000de  9801              LDR      r0,[sp,#4]
0000e0  eb040900          ADD      r9,r4,r0
;;;126            if (xi1 >= xsize) {
0000e4  45d1              CMP      r9,r10
0000e6  db00              BLT      |L1.234|
;;;127              xi1 = xsize;
0000e8  46d1              MOV      r9,r10
                  |L1.234|
;;;128            }
;;;129            NumCompressedPixels -= (xi1 - xi);
0000ea  eba90104          SUB      r1,r9,r4
0000ee  9801              LDR      r0,[sp,#4]
0000f0  1a40              SUBS     r0,r0,r1
0000f2  b2c0              UXTB     r0,r0
0000f4  9001              STR      r0,[sp,#4]
;;;130            if (PixelIndex || NoTrans) {  /* Skip transparent pixels */
0000f6  9807              LDR      r0,[sp,#0x1c]
0000f8  b908              CBNZ     r0,|L1.254|
0000fa  9803              LDR      r0,[sp,#0xc]
0000fc  b1e0              CBZ      r0,|L1.312|
                  |L1.254|
;;;131              if (IsMagnified) {
0000fe  9802              LDR      r0,[sp,#8]
000100  b198              CBZ      r0,|L1.298|
;;;132                xL = xMag * xi + x0;
000102  fb0b7004          MLA      r0,r11,r4,r7
000106  9006              STR      r0,[sp,#0x18]
;;;133                yL = yMag * y + y0;
000108  fb086005          MLA      r0,r8,r5,r6
00010c  9005              STR      r0,[sp,#0x14]
;;;134                LCD_FillRect(xL, yL, xL + xMag * (xi1 - xi) -1 , yL + yMag - 1);
00010e  9805              LDR      r0,[sp,#0x14]
000110  4440              ADD      r0,r0,r8
000112  1e43              SUBS     r3,r0,#1
000114  eba90104          SUB      r1,r9,r4
000118  9806              LDR      r0,[sp,#0x18]
00011a  fb0b0001          MLA      r0,r11,r1,r0
00011e  1e42              SUBS     r2,r0,#1
000120  e9dd1005          LDRD     r1,r0,[sp,#0x14]
000124  f7fffffe          BL       LCD_FillRect
000128  e006              B        |L1.312|
                  |L1.298|
;;;135              } else {
;;;136                LCD_DrawHLine(x0 + xi, y + y0, xi1 + x0 - 1);
00012a  eb090307          ADD      r3,r9,r7
00012e  1e5a              SUBS     r2,r3,#1
000130  19a9              ADDS     r1,r5,r6
000132  1938              ADDS     r0,r7,r4
000134  f7fffffe          BL       LCD_DrawHLine
                  |L1.312|
;;;137              }
;;;138            }
;;;139            xi = xi1;
000138  464c              MOV      r4,r9
;;;140            if (xi1 == xsize) {
00013a  45d1              CMP      r9,r10
00013c  d101              BNE      |L1.322|
;;;141              y++;
00013e  1c6d              ADDS     r5,r5,#1
;;;142              xi = 0;
000140  2400              MOVS     r4,#0
                  |L1.322|
;;;143            }
;;;144          }
000142  bf00              NOP      
                  |L1.324|
000144  9801              LDR      r0,[sp,#4]            ;124
000146  2800              CMP      r0,#0                 ;124
000148  d1c9              BNE      |L1.222|
00014a  e050              B        |L1.494|
                  |L1.332|
;;;145        } else {
;;;146          U8 NumPixels = *pPixel++;
00014c  9816              LDR      r0,[sp,#0x58]
00014e  7800              LDRB     r0,[r0,#0]
000150  9000              STR      r0,[sp,#0]
000152  9816              LDR      r0,[sp,#0x58]
000154  1c40              ADDS     r0,r0,#1
000156  9016              STR      r0,[sp,#0x58]
;;;147          do {
000158  bf00              NOP      
                  |L1.346|
;;;148            PixelIndex = _GetPixelIndex(&pPixel);
00015a  a816              ADD      r0,sp,#0x58
00015c  f7fffffe          BL       _GetPixelIndex
000160  9007              STR      r0,[sp,#0x1c]
;;;149            if (PixelIndex || NoTrans) {  /* Skip transparent pixels */
000162  9807              LDR      r0,[sp,#0x1c]
000164  b908              CBNZ     r0,|L1.362|
000166  9803              LDR      r0,[sp,#0xc]
000168  b378              CBZ      r0,|L1.458|
                  |L1.362|
;;;150              int x = x0 + xi;
00016a  eb070904          ADD      r9,r7,r4
;;;151              if (IsMagnified) {
00016e  9802              LDR      r0,[sp,#8]
000170  b198              CBZ      r0,|L1.410|
;;;152                LCD_SetColorIndex(PixelIndex);
000172  9807              LDR      r0,[sp,#0x1c]
000174  f7fffffe          BL       LCD_SetColorIndex
;;;153                xL = xMag * xi + x0;
000178  fb0b7004          MLA      r0,r11,r4,r7
00017c  9006              STR      r0,[sp,#0x18]
;;;154                yL = yMag * y + y0;
00017e  fb086005          MLA      r0,r8,r5,r6
000182  9005              STR      r0,[sp,#0x14]
;;;155                LCD_FillRect(xL, yL, xL + xMag - 1 , yL + yMag - 1);
000184  9805              LDR      r0,[sp,#0x14]
000186  4440              ADD      r0,r0,r8
000188  1e43              SUBS     r3,r0,#1
00018a  9806              LDR      r0,[sp,#0x18]
00018c  4458              ADD      r0,r0,r11
00018e  1e42              SUBS     r2,r0,#1
000190  e9dd1005          LDRD     r1,r0,[sp,#0x14]
000194  f7fffffe          BL       LCD_FillRect
000198  e016              B        |L1.456|
                  |L1.410|
;;;156              } else {
;;;157                if ((y + y0) >= GUI_Context.ClipRect.y0) {
00019a  19a9              ADDS     r1,r5,r6
00019c  4819              LDR      r0,|L1.516|
00019e  f9b0000a          LDRSH    r0,[r0,#0xa]
0001a2  4281              CMP      r1,r0
0001a4  db10              BLT      |L1.456|
;;;158                  if (x >= GUI_Context.ClipRect.x0) {
0001a6  4817              LDR      r0,|L1.516|
0001a8  f9b00008          LDRSH    r0,[r0,#8]  ; GUI_Context
0001ac  4548              CMP      r0,r9
0001ae  dc0b              BGT      |L1.456|
;;;159                    if (x <= GUI_Context.ClipRect.x1) {
0001b0  4814              LDR      r0,|L1.516|
0001b2  f9b0000c          LDRSH    r0,[r0,#0xc]
0001b6  4548              CMP      r0,r9
0001b8  db06              BLT      |L1.456|
;;;160                      LCDDEV_L0_SetPixelIndex(x, y + y0, PixelIndex);
0001ba  19a9              ADDS     r1,r5,r6
0001bc  4811              LDR      r0,|L1.516|
0001be  6cc0              LDR      r0,[r0,#0x4c]  ; GUI_Context
0001c0  6a43              LDR      r3,[r0,#0x24]
0001c2  4648              MOV      r0,r9
0001c4  9a07              LDR      r2,[sp,#0x1c]
0001c6  4798              BLX      r3
                  |L1.456|
;;;161                    }
;;;162                  }
;;;163                }
;;;164              }
;;;165            }
0001c8  bf00              NOP      
                  |L1.458|
;;;166            if (++xi >= xsize) {
0001ca  1c60              ADDS     r0,r4,#1
0001cc  4604              MOV      r4,r0
0001ce  4550              CMP      r0,r10
0001d0  db05              BLT      |L1.478|
;;;167              y++;
0001d2  1c6d              ADDS     r5,r5,#1
;;;168              xi = 0;
0001d4  2400              MOVS     r4,#0
;;;169              if (y >= ysize) {
0001d6  980c              LDR      r0,[sp,#0x30]
0001d8  4285              CMP      r5,r0
0001da  db00              BLT      |L1.478|
;;;170                break;
0001dc  e005              B        |L1.490|
                  |L1.478|
;;;171              }
;;;172            }
;;;173          } while (--NumPixels);
0001de  9800              LDR      r0,[sp,#0]
0001e0  1e40              SUBS     r0,r0,#1
0001e2  f01000ff          ANDS     r0,r0,#0xff
0001e6  9000              STR      r0,[sp,#0]
0001e8  d1b7              BNE      |L1.346|
                  |L1.490|
0001ea  bf00              NOP                            ;170
;;;174        }
0001ec  bf00              NOP      
                  |L1.494|
;;;175      }
0001ee  bf00              NOP      
                  |L1.496|
0001f0  980c              LDR      r0,[sp,#0x30]         ;115
0001f2  4285              CMP      r5,r0                 ;115
0001f4  f6ffaf5b          BLT      |L1.174|
;;;176      LCD_ACOLORINDEX[1] = OldColorIndex;
0001f8  4902              LDR      r1,|L1.516|
0001fa  9808              LDR      r0,[sp,#0x20]
0001fc  8048              STRH     r0,[r1,#2]
;;;177    }
0001fe  b00d              ADD      sp,sp,#0x34
000200  e8bd8ff0          POP      {r4-r11,pc}
;;;178    
                          ENDP

                  |L1.516|
                          DCD      GUI_Context
                  |L1.520|
                          DCD      _DisplayMode
                  |L1.524|
                          DCD      _DisplaySwapRB
                  |L1.528|
                          DCD      _Cache

                          AREA ||i._DrawBitmap_RLE16||, CODE, READONLY, ALIGN=2

                  _DrawBitmap_RLE16 PROC
;;;182    */
;;;183    static void _DrawBitmap_RLE16(int x0, int y0, int xsize, int ysize, const U8 GUI_UNI_PTR * pPixel, const LCD_LOGPALETTE GUI_UNI_PTR * pLogPal, int xMag, int yMag) {
000000  e92d4ffe          PUSH     {r1-r11,lr}
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
00000c  e9ddab0e          LDRD     r10,r11,[sp,#0x38]
000010  e9dd890c          LDRD     r8,r9,[sp,#0x30]
;;;184      GUI_USE_PARA(pLogPal);
000014  bf00              NOP      
;;;185      _BitmapSwapRB = 0;
000016  2000              MOVS     r0,#0
000018  4905              LDR      r1,|L2.48|
00001a  7008              STRB     r0,[r1,#0]
;;;186      _DrawBitmap_RLE(x0, y0, xsize, ysize, pPixel, xMag, yMag);
00001c  463b              MOV      r3,r7
00001e  4632              MOV      r2,r6
000020  4629              MOV      r1,r5
000022  4620              MOV      r0,r4
000024  e88d0d00          STM      sp,{r8,r10,r11}
000028  f7fffffe          BL       _DrawBitmap_RLE
;;;187    }
00002c  e8bd8ffe          POP      {r1-r11,pc}
;;;188    
                          ENDP

                  |L2.48|
                          DCD      _BitmapSwapRB

                          AREA ||i._DrawBitmap_RLEM16||, CODE, READONLY, ALIGN=2

                  _DrawBitmap_RLEM16 PROC
;;;192    */
;;;193    static void _DrawBitmap_RLEM16(int x0, int y0, int xsize, int ysize, const U8 GUI_UNI_PTR * pPixel, const LCD_LOGPALETTE GUI_UNI_PTR * pLogPal, int xMag, int yMag) {
000000  e92d4ffe          PUSH     {r1-r11,lr}
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
00000c  e9ddab0e          LDRD     r10,r11,[sp,#0x38]
000010  e9dd890c          LDRD     r8,r9,[sp,#0x30]
;;;194      GUI_USE_PARA(pLogPal);
000014  bf00              NOP      
;;;195      _BitmapSwapRB = 1;
000016  2001              MOVS     r0,#1
000018  4905              LDR      r1,|L3.48|
00001a  7008              STRB     r0,[r1,#0]
;;;196      _DrawBitmap_RLE(x0, y0, xsize, ysize, pPixel, xMag, yMag);
00001c  463b              MOV      r3,r7
00001e  4632              MOV      r2,r6
000020  4629              MOV      r1,r5
000022  4620              MOV      r0,r4
000024  e88d0d00          STM      sp,{r8,r10,r11}
000028  f7fffffe          BL       _DrawBitmap_RLE
;;;197    }
00002c  e8bd8ffe          POP      {r1-r11,pc}
;;;198    
                          ENDP

                  |L3.48|
                          DCD      _BitmapSwapRB

                          AREA ||i._GetPixelIndex||, CODE, READONLY, ALIGN=2

                  _GetPixelIndex PROC
;;;66     */
;;;67     static LCD_PIXELINDEX _GetPixelIndex(const U8 GUI_UNI_PTR ** ppPixel) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;68       U16 Data = _Read16(ppPixel);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       _Read16
00000a  4605              MOV      r5,r0
;;;69       if ((_DisplayMode == 565) && (_DisplaySwapRB == _BitmapSwapRB)) {
00000c  4810              LDR      r0,|L4.80|
00000e  6800              LDR      r0,[r0,#0]  ; _DisplayMode
000010  f5a07100          SUB      r1,r0,#0x200
000014  3935              SUBS     r1,r1,#0x35
000016  d107              BNE      |L4.40|
000018  480e              LDR      r0,|L4.84|
00001a  7800              LDRB     r0,[r0,#0]  ; _DisplaySwapRB
00001c  490e              LDR      r1,|L4.88|
00001e  7809              LDRB     r1,[r1,#0]  ; _BitmapSwapRB
000020  4288              CMP      r0,r1
000022  d101              BNE      |L4.40|
;;;70         return (LCD_PIXELINDEX)Data;
000024  4628              MOV      r0,r5
                  |L4.38|
;;;71       }
;;;72       if (_BitmapSwapRB) {
;;;73         return LCD_Color2Index(LCD_Index2Color_M565(Data));
;;;74       }
;;;75       return LCD_Color2Index(LCD_Index2Color_565(Data));
;;;76     }
000026  bd70              POP      {r4-r6,pc}
                  |L4.40|
000028  480b              LDR      r0,|L4.88|
00002a  7800              LDRB     r0,[r0,#0]            ;72  ; _BitmapSwapRB
00002c  b138              CBZ      r0,|L4.62|
00002e  4628              MOV      r0,r5                 ;73
000030  f7fffffe          BL       LCD_Index2Color_M565
000034  4606              MOV      r6,r0                 ;73
000036  f7fffffe          BL       LCD_Color2Index
00003a  b280              UXTH     r0,r0                 ;73
00003c  e7f3              B        |L4.38|
                  |L4.62|
00003e  4628              MOV      r0,r5                 ;75
000040  f7fffffe          BL       LCD_Index2Color_565
000044  4606              MOV      r6,r0                 ;75
000046  f7fffffe          BL       LCD_Color2Index
00004a  b280              UXTH     r0,r0                 ;75
00004c  e7eb              B        |L4.38|
;;;77     
                          ENDP

00004e  0000              DCW      0x0000
                  |L4.80|
                          DCD      _DisplayMode
                  |L4.84|
                          DCD      _DisplaySwapRB
                  |L4.88|
                          DCD      _BitmapSwapRB

                          AREA ||i._Read16||, CODE, READONLY, ALIGN=1

                  _Read16 PROC
;;;51     */
;;;52     static U16 _Read16(const U8 GUI_UNI_PTR ** ppData) {
000000  4602              MOV      r2,r0
;;;53       const U8 GUI_UNI_PTR * pData;
;;;54       U16  Value;
;;;55       pData = *ppData;
000002  6811              LDR      r1,[r2,#0]
;;;56       Value = *pData;
000004  7808              LDRB     r0,[r1,#0]
;;;57       Value |= (U16)(*(pData + 1) << 8);
000006  784b              LDRB     r3,[r1,#1]
000008  ea402003          ORR      r0,r0,r3,LSL #8
;;;58       pData += 2;
00000c  1c89              ADDS     r1,r1,#2
;;;59       *ppData = pData;
00000e  6011              STR      r1,[r2,#0]
;;;60       return Value;
;;;61     }
000010  4770              BX       lr
;;;62     
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  _Cache
                          %        16

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  GUI_BitmapMethodsRLE16
                          DCD      _DrawBitmap_RLE16
                          DCD      0x00000000
                  GUI_BitmapMethodsRLEM16
                          DCD      _DrawBitmap_RLEM16
                          DCD      0x00000000

                          AREA ||.data||, DATA, ALIGN=2

                  _DisplayMode
                          DCD      0x00000000
                  _DisplaySwapRB
000004  00                DCB      0x00
                  _BitmapSwapRB
000005  00                DCB      0x00
