; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\bsp_touch.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\bsp_touch.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\LCDDriver\bsp_touch.c]
                          THUMB

                          AREA ||i.XPT2046_ReadAdc||, CODE, READONLY, ALIGN=1

                  XPT2046_ReadAdc PROC
;;;152    */
;;;153    uint16_t XPT2046_ReadAdc(uint8_t _ucCh)
000000  b510              PUSH     {r4,lr}
;;;154    {
000002  4604              MOV      r4,r0
;;;155    	uint16_t usAdc;
;;;156    
;;;157        XPT2046_WriteCMD(_ucCh);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       XPT2046_WriteCMD
;;;158    
;;;159    	return 	XPT2046_ReadCMD();
00000a  f7fffffe          BL       XPT2046_ReadCMD
;;;160    }
00000e  bd10              POP      {r4,pc}
                          ENDP


                          AREA ||i.XPT2046_ReadCMD||, CODE, READONLY, ALIGN=2

                  XPT2046_ReadCMD PROC
;;;126    
;;;127    static unsigned short XPT2046_ReadCMD(void) 
000000  b570              PUSH     {r4-r6,lr}
;;;128    {
;;;129        unsigned short buf=0,temp;
000002  2400              MOVS     r4,#0
;;;130        unsigned char i;
;;;131        TP_DIN(0);
000004  f44f6100          MOV      r1,#0x800
000008  4813              LDR      r0,|L2.88|
00000a  f7fffffe          BL       GPIO_ResetBits
;;;132        TP_DCLK(1);
00000e  2180              MOVS     r1,#0x80
000010  4812              LDR      r0,|L2.92|
000012  f7fffffe          BL       GPIO_SetBits
;;;133        for(i=0;i<12;i++) 
000016  2500              MOVS     r5,#0
000018  e018              B        |L2.76|
                  |L2.26|
;;;134        {
;;;135            TP_DCLK(0);          
00001a  2180              MOVS     r1,#0x80
00001c  480f              LDR      r0,|L2.92|
00001e  f7fffffe          BL       GPIO_ResetBits
;;;136            temp= (TP_DOUT) ? 1:0;
000022  2140              MOVS     r1,#0x40
000024  480c              LDR      r0,|L2.88|
000026  f7fffffe          BL       GPIO_ReadInputDataBit
00002a  b108              CBZ      r0,|L2.48|
00002c  2001              MOVS     r0,#1
00002e  e000              B        |L2.50|
                  |L2.48|
000030  2000              MOVS     r0,#0
                  |L2.50|
000032  4606              MOV      r6,r0
;;;137            buf|=(temp<<(11-i));
000034  f1c5000b          RSB      r0,r5,#0xb
000038  fa06f000          LSL      r0,r6,r0
00003c  4320              ORRS     r0,r0,r4
00003e  b284              UXTH     r4,r0
;;;138            TP_DCLK(1);
000040  2180              MOVS     r1,#0x80
000042  4806              LDR      r0,|L2.92|
000044  f7fffffe          BL       GPIO_SetBits
000048  1c68              ADDS     r0,r5,#1              ;133
00004a  b2c5              UXTB     r5,r0                 ;133
                  |L2.76|
00004c  2d0c              CMP      r5,#0xc               ;133
00004e  dbe4              BLT      |L2.26|
;;;139        }
;;;140        buf&=0x0fff;
000050  f3c4040b          UBFX     r4,r4,#0,#12
;;;141    
;;;142        return(buf);
000054  4620              MOV      r0,r4
;;;143    }
000056  bd70              POP      {r4-r6,pc}
;;;144    
                          ENDP

                  |L2.88|
                          DCD      0x40011c00
                  |L2.92|
                          DCD      0x40012000

                          AREA ||i.XPT2046_WriteCMD||, CODE, READONLY, ALIGN=2

                  XPT2046_WriteCMD PROC
;;;98     */
;;;99     static void XPT2046_WriteCMD(unsigned char cmd) 
000000  b570              PUSH     {r4-r6,lr}
;;;100    {
000002  4606              MOV      r6,r0
;;;101        unsigned char buf;
;;;102        unsigned char i;
;;;103    //     TP_CS(1);
;;;104        TP_DIN(0);
000004  f44f6100          MOV      r1,#0x800
000008  4813              LDR      r0,|L3.88|
00000a  f7fffffe          BL       GPIO_ResetBits
;;;105        TP_DCLK(0);
00000e  2180              MOVS     r1,#0x80
000010  4812              LDR      r0,|L3.92|
000012  f7fffffe          BL       GPIO_ResetBits
;;;106    //     TP_CS(0);
;;;107        for(i=0;i<8;i++) 
000016  2400              MOVS     r4,#0
000018  e01b              B        |L3.82|
                  |L3.26|
;;;108        {
;;;109            buf=(cmd>>(7-i))&0x1;
00001a  f1c40007          RSB      r0,r4,#7
00001e  fa46f000          ASR      r0,r6,r0
000022  f0000501          AND      r5,r0,#1
;;;110            TP_DIN(buf);
000026  b12d              CBZ      r5,|L3.52|
000028  f44f6100          MOV      r1,#0x800
00002c  480a              LDR      r0,|L3.88|
00002e  f7fffffe          BL       GPIO_SetBits
000032  e004              B        |L3.62|
                  |L3.52|
000034  f44f6100          MOV      r1,#0x800
000038  4807              LDR      r0,|L3.88|
00003a  f7fffffe          BL       GPIO_ResetBits
                  |L3.62|
;;;111            //Delayus(5);
;;;112            TP_DCLK(1);
00003e  2180              MOVS     r1,#0x80
000040  4806              LDR      r0,|L3.92|
000042  f7fffffe          BL       GPIO_SetBits
;;;113            //Delayus(5);
;;;114            TP_DCLK(0);
000046  2180              MOVS     r1,#0x80
000048  4804              LDR      r0,|L3.92|
00004a  f7fffffe          BL       GPIO_ResetBits
00004e  1c60              ADDS     r0,r4,#1              ;107
000050  b2c4              UXTB     r4,r0                 ;107
                  |L3.82|
000052  2c08              CMP      r4,#8                 ;107
000054  dbe1              BLT      |L3.26|
;;;115        }
;;;116    }
000056  bd70              POP      {r4-r6,pc}
;;;117    
                          ENDP

                  |L3.88|
                          DCD      0x40011c00
                  |L3.92|
                          DCD      0x40012000

                          AREA ||i.bsp_InitTouch||, CODE, READONLY, ALIGN=2

                  bsp_InitTouch PROC
;;;61     */
;;;62     void bsp_InitTouch(void) 
000000  b508              PUSH     {r3,lr}
;;;63     { 
;;;64     	GPIO_InitTypeDef  GPIO_InitStructure;
;;;65     
;;;66     	/* 开启GPIO时钟 */
;;;67     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOG | RCC_APB2Periph_GPIOF, ENABLE);
000002  2101              MOVS     r1,#1
000004  f44f70c0          MOV      r0,#0x180
000008  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;68     
;;;69         //////下面是SPI相关GPIO初始化//////            
;;;70         GPIO_InitStructure.GPIO_Pin=SPI_CLK;
00000c  2080              MOVS     r0,#0x80
00000e  f8ad0000          STRH     r0,[sp,#0]
;;;71         GPIO_InitStructure.GPIO_Speed=GPIO_Speed_10MHz ;	  
000012  2001              MOVS     r0,#1
000014  f88d0002          STRB     r0,[sp,#2]
;;;72         GPIO_InitStructure.GPIO_Mode=GPIO_Mode_Out_PP;
000018  2010              MOVS     r0,#0x10
00001a  f88d0003          STRB     r0,[sp,#3]
;;;73         GPIO_Init(GPIOG, &GPIO_InitStructure);
00001e  4669              MOV      r1,sp
000020  4815              LDR      r0,|L4.120|
000022  f7fffffe          BL       GPIO_Init
;;;74     	
;;;75     	GPIO_InitStructure.GPIO_Pin = SPI_MOSI;
000026  f44f6000          MOV      r0,#0x800
00002a  f8ad0000          STRH     r0,[sp,#0]
;;;76     	GPIO_Init(GPIOF, &GPIO_InitStructure);
00002e  4669              MOV      r1,sp
000030  4812              LDR      r0,|L4.124|
000032  f7fffffe          BL       GPIO_Init
;;;77     	
;;;78         GPIO_InitStructure.GPIO_Pin = SPI_MISO; 
000036  2040              MOVS     r0,#0x40
000038  f8ad0000          STRH     r0,[sp,#0]
;;;79     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz ;
00003c  2001              MOVS     r0,#1
00003e  f88d0002          STRB     r0,[sp,#2]
;;;80         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;      
000042  2048              MOVS     r0,#0x48
000044  f88d0003          STRB     r0,[sp,#3]
;;;81         GPIO_Init(GPIOF, &GPIO_InitStructure);
000048  4669              MOV      r1,sp
00004a  480c              LDR      r0,|L4.124|
00004c  f7fffffe          BL       GPIO_Init
;;;82         
;;;83         GPIO_InitStructure.GPIO_Pin = SPI_CS; 
000050  f44f6080          MOV      r0,#0x400
000054  f8ad0000          STRH     r0,[sp,#0]
;;;84     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz ;
000058  2001              MOVS     r0,#1
00005a  f88d0002          STRB     r0,[sp,#2]
;;;85         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;      
00005e  2010              MOVS     r0,#0x10
000060  f88d0003          STRB     r0,[sp,#3]
;;;86         GPIO_Init(GPIOF, &GPIO_InitStructure);		
000064  4669              MOV      r1,sp
000066  4805              LDR      r0,|L4.124|
000068  f7fffffe          BL       GPIO_Init
;;;87     
;;;88         GPIO_ResetBits(GPIOF,SPI_CS);
00006c  f44f6180          MOV      r1,#0x400
000070  4802              LDR      r0,|L4.124|
000072  f7fffffe          BL       GPIO_ResetBits
;;;89     }
000076  bd08              POP      {r3,pc}
;;;90     
                          ENDP

                  |L4.120|
                          DCD      0x40012000
                  |L4.124|
                          DCD      0x40011c00
