; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\guidev_banding.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\guidev_banding.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\uCOS-II\Source -I..\..\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\..\User\app -I..\..\User\bsp -I..\..\uCGUI\inc -I..\..\uCGUI\Config -I..\..\uCGUI\LCDDriver -I..\..\uCGUI\uCGUIDemo -I..\..\User\fatfs -I..\..\User\mp3\pub -I..\..\User\Memory -Id:\Keil\ARM\RV31\INC -Id:\Keil\ARM\CMSIS\Include -Id:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER ..\..\uCGUI\MemDev\GUIDEV_Banding.c]
                          THUMB

                          AREA ||i.GUI_MEMDEV_Draw||, CODE, READONLY, ALIGN=1

                  GUI_MEMDEV_Draw PROC
;;;75     */
;;;76     int GUI_MEMDEV_Draw(GUI_RECT* pRect, GUI_CALLBACK_VOID_P* pfDraw, void* pData, int NumLines, int Flags) {
000000  e92d4fff          PUSH     {r0-r11,lr}
000004  b085              SUB      sp,sp,#0x14
000006  4604              MOV      r4,r0
000008  468b              MOV      r11,r1
00000a  461f              MOV      r7,r3
;;;77       int x0, y0, x1, y1, xsize, ysize;
;;;78       GUI_MEMDEV_Handle hMD;
;;;79       if (pRect) {
00000c  b36c              CBZ      r4,|L1.106|
;;;80         x0 = (pRect->x0 < 0) ? 0 : pRect->x0;
00000e  f9b40000          LDRSH    r0,[r4,#0]
000012  2800              CMP      r0,#0
000014  da01              BGE      |L1.26|
000016  2000              MOVS     r0,#0
000018  e001              B        |L1.30|
                  |L1.26|
00001a  f9b40000          LDRSH    r0,[r4,#0]
                  |L1.30|
00001e  4680              MOV      r8,r0
;;;81         y0 = (pRect->y0 < 0) ? 0 : pRect->y0;
000020  f9b40002          LDRSH    r0,[r4,#2]
000024  2800              CMP      r0,#0
000026  da01              BGE      |L1.44|
000028  2000              MOVS     r0,#0
00002a  e001              B        |L1.48|
                  |L1.44|
00002c  f9b40002          LDRSH    r0,[r4,#2]
                  |L1.48|
000030  4681              MOV      r9,r0
;;;82         #if GUI_NUM_LAYERS == 1
;;;83           x1 = _Min(pRect->x1, LCD_GET_XSIZE() - 1);
000032  f7fffffe          BL       LCD_GetXSize
000036  1e46              SUBS     r6,r0,#1
000038  f9b40004          LDRSH    r0,[r4,#4]
00003c  4631              MOV      r1,r6
00003e  f7fffffe          BL       _Min
000042  9004              STR      r0,[sp,#0x10]
;;;84           y1 = _Min(pRect->y1, LCD_GET_YSIZE() - 1);
000044  f7fffffe          BL       LCD_GetYSize
000048  1e46              SUBS     r6,r0,#1
00004a  f9b40006          LDRSH    r0,[r4,#6]
00004e  4631              MOV      r1,r6
000050  f7fffffe          BL       _Min
000054  9003              STR      r0,[sp,#0xc]
;;;85         #else
;;;86           x1 = _Min(pRect->x1, LCD_GetXSizeEx(GUI_Context.SelLayer) - 1);
;;;87           y1 = _Min(pRect->y1, LCD_GetYSizeEx(GUI_Context.SelLayer) - 1);
;;;88         #endif
;;;89         xsize = x1 - x0 + 1;
000056  9804              LDR      r0,[sp,#0x10]
000058  eba00008          SUB      r0,r0,r8
00005c  f1000a01          ADD      r10,r0,#1
;;;90         ysize = y1 - y0 + 1;
000060  9803              LDR      r0,[sp,#0xc]
000062  eba00009          SUB      r0,r0,r9
000066  1c45              ADDS     r5,r0,#1
000068  e008              B        |L1.124|
                  |L1.106|
;;;91       } else {
;;;92         x0 = 0;
00006a  f04f0800          MOV      r8,#0
;;;93         y0 = 0;
00006e  46c1              MOV      r9,r8
;;;94         #if GUI_NUM_LAYERS == 1
;;;95           xsize = LCD_GET_XSIZE();
000070  f7fffffe          BL       LCD_GetXSize
000074  4682              MOV      r10,r0
;;;96           ysize = LCD_GET_YSIZE();
000076  f7fffffe          BL       LCD_GetYSize
00007a  4605              MOV      r5,r0
                  |L1.124|
;;;97         #else
;;;98           xsize = LCD_GetXSizeEx(GUI_Context.SelLayer);
;;;99           ysize = LCD_GetYSizeEx(GUI_Context.SelLayer);
;;;100        #endif
;;;101      }
;;;102      if (NumLines == 0) {
00007c  b907              CBNZ     r7,|L1.128|
;;;103        NumLines = -ysize;   /* Request <ysize> lines ... Less is o.k. */
00007e  426f              RSBS     r7,r5,#0
                  |L1.128|
;;;104      }
;;;105      if ((xsize <= 0) || (ysize <= 0))
000080  f1ba0f00          CMP      r10,#0
000084  dd01              BLE      |L1.138|
000086  2d00              CMP      r5,#0
000088  dc03              BGT      |L1.146|
                  |L1.138|
;;;106        return 0;           /* Nothing to do ... */
00008a  2000              MOVS     r0,#0
                  |L1.140|
;;;107    /* Create memory device */
;;;108      hMD = GUI_MEMDEV_CreateEx(x0, y0, xsize, NumLines, Flags);
;;;109      if (!hMD) {
;;;110        GUI_DEBUG_ERROROUT("GUI_MEMDEV_Draw() Not enough memory ...");            /* Not enough memory ! */
;;;111        pfDraw(pData);
;;;112        return 1;
;;;113      }
;;;114      NumLines = GUI_MEMDEV_GetYSize(hMD);
;;;115      GUI_MEMDEV_Select(hMD);
;;;116    /* Start drawing ... */
;;;117      {
;;;118        int i;
;;;119        for (i = 0; i < ysize; i += NumLines) {
;;;120          int RemLines = ysize - i;
;;;121          if (RemLines < NumLines) {
;;;122            GUI_MEMDEV_ReduceYSize(hMD, RemLines);
;;;123          }
;;;124          if (i) {
;;;125            GUI_MEMDEV_SetOrg(hMD, x0, y0 + i);
;;;126            GUI_MEMDEV_Clear(hMD);
;;;127          }
;;;128          pfDraw(pData);
;;;129          GUI_MEMDEV_CopyToLCD(hMD);
;;;130        }
;;;131      }
;;;132      GUI_MEMDEV_Delete(hMD);
;;;133      GUI_MEMDEV_Select(0);
;;;134      return 0;             /* Success ! */
;;;135    }
00008c  b009              ADD      sp,sp,#0x24
00008e  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.146|
000092  9812              LDR      r0,[sp,#0x48]         ;108
000094  463b              MOV      r3,r7                 ;108
000096  4652              MOV      r2,r10                ;108
000098  4649              MOV      r1,r9                 ;108
00009a  9000              STR      r0,[sp,#0]            ;108
00009c  4640              MOV      r0,r8                 ;108
00009e  f7fffffe          BL       GUI_MEMDEV_CreateEx
0000a2  9002              STR      r0,[sp,#8]            ;108
0000a4  9802              LDR      r0,[sp,#8]            ;109
0000a6  b918              CBNZ     r0,|L1.176|
0000a8  9807              LDR      r0,[sp,#0x1c]         ;111
0000aa  47d8              BLX      r11                   ;111
0000ac  2001              MOVS     r0,#1                 ;112
0000ae  e7ed              B        |L1.140|
                  |L1.176|
0000b0  9802              LDR      r0,[sp,#8]            ;114
0000b2  f7fffffe          BL       GUI_MEMDEV_GetYSize
0000b6  4607              MOV      r7,r0                 ;114
0000b8  9802              LDR      r0,[sp,#8]            ;115
0000ba  f7fffffe          BL       GUI_MEMDEV_Select
0000be  2600              MOVS     r6,#0                 ;119
0000c0  e018              B        |L1.244|
                  |L1.194|
0000c2  1ba8              SUBS     r0,r5,r6              ;120
0000c4  9001              STR      r0,[sp,#4]            ;120
0000c6  9801              LDR      r0,[sp,#4]            ;121
0000c8  42b8              CMP      r0,r7                 ;121
0000ca  da03              BGE      |L1.212|
0000cc  e9dd1001          LDRD     r1,r0,[sp,#4]         ;122
0000d0  f7fffffe          BL       GUI_MEMDEV_ReduceYSize
                  |L1.212|
0000d4  b146              CBZ      r6,|L1.232|
0000d6  eb090206          ADD      r2,r9,r6              ;125
0000da  4641              MOV      r1,r8                 ;125
0000dc  9802              LDR      r0,[sp,#8]            ;125
0000de  f7fffffe          BL       GUI_MEMDEV_SetOrg
0000e2  9802              LDR      r0,[sp,#8]            ;126
0000e4  f7fffffe          BL       GUI_MEMDEV_Clear
                  |L1.232|
0000e8  9807              LDR      r0,[sp,#0x1c]         ;128
0000ea  47d8              BLX      r11                   ;128
0000ec  9802              LDR      r0,[sp,#8]            ;129
0000ee  f7fffffe          BL       GUI_MEMDEV_CopyToLCD
0000f2  443e              ADD      r6,r6,r7              ;119
                  |L1.244|
0000f4  42ae              CMP      r6,r5                 ;119
0000f6  dbe4              BLT      |L1.194|
0000f8  9802              LDR      r0,[sp,#8]            ;132
0000fa  f7fffffe          BL       GUI_MEMDEV_Delete
0000fe  2000              MOVS     r0,#0                 ;133
000100  f7fffffe          BL       GUI_MEMDEV_Select
000104  2000              MOVS     r0,#0                 ;134
000106  e7c1              B        |L1.140|
;;;136    
                          ENDP


                          AREA ||i._Min||, CODE, READONLY, ALIGN=1

                  _Min PROC
;;;53     */
;;;54     static int _Min(int v0, int v1) {
000000  4602              MOV      r2,r0
;;;55       if (v0 <= v1) {
000002  428a              CMP      r2,r1
000004  dc01              BGT      |L2.10|
;;;56         return v0;
000006  4610              MOV      r0,r2
                  |L2.8|
;;;57       }
;;;58       return v1;
;;;59     }
000008  4770              BX       lr
                  |L2.10|
00000a  4608              MOV      r0,r1                 ;58
00000c  e7fc              B        |L2.8|
;;;60     
                          ENDP

