// API callback
showRelatedPost({"version":"1.0","encoding":"UTF-8","feed":{"xmlns":"http://www.w3.org/2005/Atom","xmlns$openSearch":"http://a9.com/-/spec/opensearchrss/1.0/","xmlns$blogger":"http://schemas.google.com/blogger/2008","xmlns$georss":"http://www.georss.org/georss","xmlns$gd":"http://schemas.google.com/g/2005","xmlns$thr":"http://purl.org/syndication/thread/1.0","id":{"$t":"tag:blogger.com,1999:blog-7549705215513488945"},"updated":{"$t":"2018-08-12T20:43:41.820-07:00"},"category":[{"term":"ESP32"},{"term":"ESP8266"},{"term":"FreeRTOS"},{"term":"Backend"},{"term":"Projects"},{"term":"Tools"},{"term":"Raspberry Pi"},{"term":"Orange Pi"},{"term":"apache"},{"term":"fota"},{"term":"http"},{"term":"mqtt"},{"term":"sdcard"},{"term":"CAN protocol"},{"term":"chatbot"},{"term":"facebook messenger"},{"term":"ibm watson"},{"term":"iot dashboard"},{"term":"iot platform"},{"term":"node-red"},{"term":"paho mqtt"},{"term":"ultrasonic sensor"}],"title":{"type":"text","$t":"IoT Sharing"},"subtitle":{"type":"html","$t":""},"link":[{"rel":"http://schemas.google.com/g/2005#feed","type":"application/atom+xml","href":"http:\/\/www.iotsharing.com\/feeds\/posts\/summary"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7549705215513488945\/posts\/summary\/-\/ESP32?alt=json-in-script\u0026start-index=38\u0026max-results=5\u0026orderby=updated"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.iotsharing.com\/search\/label\/ESP32"},{"rel":"hub","href":"http://pubsubhubbub.appspot.com/"},{"rel":"previous","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7549705215513488945\/posts\/summary\/-\/ESP32\/-\/ESP32?alt=json-in-script\u0026start-index=33\u0026max-results=5\u0026orderby=updated"},{"rel":"next","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7549705215513488945\/posts\/summary\/-\/ESP32\/-\/ESP32?alt=json-in-script\u0026start-index=43\u0026max-results=5\u0026orderby=updated"}],"author":[{"name":{"$t":"iotsharing dotcom"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh3.googleusercontent.com\/-k4dCJVaugDI\/AAAAAAAAAAI\/AAAAAAAAEAk\/Lvv-YTR2jgM\/s512-c\/photo.jpg"}}],"generator":{"version":"7.00","uri":"http://www.blogger.com","$t":"Blogger"},"openSearch$totalResults":{"$t":"52"},"openSearch$startIndex":{"$t":"38"},"openSearch$itemsPerPage":{"$t":"5"},"entry":[{"id":{"$t":"tag:blogger.com,1999:blog-7549705215513488945.post-6740844149038025873"},"published":{"$t":"2017-06-21T08:24:00.002-07:00"},"updated":{"$t":"2017-06-25T02:32:54.979-07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"ESP32"},{"scheme":"http://www.blogger.com/atom/ns#","term":"FreeRTOS"}],"title":{"type":"text","$t":"Demo 22: How to use Timer interrupt in Arduino ESP32"},"summary":{"type":"text","$t":"\n1. Introduction\n- In blinky demo we use delay() function to make the LED blink. In this demo we will replcae delay() function by using Timer (this is hardware timer). Using Timer we can schedule when a task need to be started and repeat or not. Applying to this demo, when the Timer is timeout we will change the current state of LED (ON to OFF to ON) every 1 second.\n2. Hardware\n\n \n\nFigure: ESP32 "},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.iotsharing.com\/feeds\/6740844149038025873\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.blogger.com\/comment.g?blogID=7549705215513488945\u0026postID=6740844149038025873","title":"3 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7549705215513488945\/posts\/default\/6740844149038025873"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7549705215513488945\/posts\/default\/6740844149038025873"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.iotsharing.com\/2017\/06\/how-to-use-interrupt-timer-in-arduino-esp32.html","title":"Demo 22: How to use Timer interrupt in Arduino ESP32"}],"author":[{"name":{"$t":"iotsharing dotcom"},"uri":{"$t":"https:\/\/plus.google.com\/100068993027571899198"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh3.googleusercontent.com\/-k4dCJVaugDI\/AAAAAAAAAAI\/AAAAAAAAEAk\/Lvv-YTR2jgM\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/2.bp.blogspot.com\/-Edc2Mnm_Rh8\/WRjx2wVCVhI\/AAAAAAAADzc\/NK8uFvWzGC8dW6XMTuiXrDEsX9UCDajzQCPcBGAYYCw\/s72-c\/led2.png","height":"72","width":"72"},"thr$total":{"$t":"3"}},{"id":{"$t":"tag:blogger.com,1999:blog-7549705215513488945.post-8695242155478721314"},"published":{"$t":"2017-06-22T06:22:00.000-07:00"},"updated":{"$t":"2017-06-25T01:49:17.070-07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"ESP32"},{"scheme":"http://www.blogger.com/atom/ns#","term":"ESP8266"}],"title":{"type":"text","$t":"Demo 23: How to use Preferences to backup Arduino ESP32 data in main flash memory when power is off"},"summary":{"type":"text","$t":"\n1. Introduction\n- This library use a portion of main flash memory to store data (beside this way we can use sdcard to store data Demo 7: How to use Arduino ESP32 to store data to sdcard).\n- Data is stored under key-value pair. Key is 15 ASCII characters length and must be unique. Value can be:\n+ integer types\n+ variable length binary data (blob)\n- Data type of writing and reading value must be "},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.iotsharing.com\/feeds\/8695242155478721314\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.blogger.com\/comment.g?blogID=7549705215513488945\u0026postID=8695242155478721314","title":"2 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7549705215513488945\/posts\/default\/8695242155478721314"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7549705215513488945\/posts\/default\/8695242155478721314"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.iotsharing.com\/2017\/06\/how-to-use-preferences-to-backup-data-in-main-flash-when-power-off.html","title":"Demo 23: How to use Preferences to backup Arduino ESP32 data in main flash memory when power is off"}],"author":[{"name":{"$t":"iotsharing dotcom"},"uri":{"$t":"https:\/\/plus.google.com\/100068993027571899198"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh3.googleusercontent.com\/-k4dCJVaugDI\/AAAAAAAAAAI\/AAAAAAAAEAk\/Lvv-YTR2jgM\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/3.bp.blogspot.com\/-l4J89YnBhIs\/WUvEH8ec8uI\/AAAAAAAAEFs\/VUz2JFsAV-saTTWXDLMEnKW_mcvREFRgQCLcBGAs\/s72-c\/esp32preferences.png","height":"72","width":"72"},"thr$total":{"$t":"2"}},{"id":{"$t":"tag:blogger.com,1999:blog-7549705215513488945.post-6925575461076363928"},"published":{"$t":"2017-05-20T19:37:00.000-07:00"},"updated":{"$t":"2017-06-23T20:08:55.441-07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"ESP32"}],"title":{"type":"text","$t":"Demo 10: How to turn the Arduino ESP32 into an Access Point"},"summary":{"type":"text","$t":"\n\n1. Introduction\n\nAll the previous demonstrations which are related to WiFi, ESP32 operate in Station mode in which ESP32 will become a client of a WiFi network.  In this demonstration, we will make it an Access Point in which it is a WiFi emission point so that WiFi clients can connect to it. Note that ESP32 can operation in both Station and Access Point mode where it is a WiFi client and emit "},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.iotsharing.com\/feeds\/6925575461076363928\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.blogger.com\/comment.g?blogID=7549705215513488945\u0026postID=6925575461076363928","title":"11 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7549705215513488945\/posts\/default\/6925575461076363928"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7549705215513488945\/posts\/default\/6925575461076363928"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.iotsharing.com\/2017\/05\/how-to-turn-esp32-into-access-point.html","title":"Demo 10: How to turn the Arduino ESP32 into an Access Point"}],"author":[{"name":{"$t":"iotsharing dotcom"},"uri":{"$t":"https:\/\/plus.google.com\/100068993027571899198"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh3.googleusercontent.com\/-k4dCJVaugDI\/AAAAAAAAAAI\/AAAAAAAAEAk\/Lvv-YTR2jgM\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/1.bp.blogspot.com\/-fqIOtg-k6Us\/WSD8mOwGgFI\/AAAAAAAAD48\/XgURsi2-7NIur1aw2N-FukyamH4y0XKkwCEw\/s72-c\/ap1.png","height":"72","width":"72"},"thr$total":{"$t":"11"}},{"id":{"$t":"tag:blogger.com,1999:blog-7549705215513488945.post-6560747076453500346"},"published":{"$t":"2017-06-13T09:18:00.000-07:00"},"updated":{"$t":"2017-06-17T20:52:29.812-07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"ESP32"},{"scheme":"http://www.blogger.com/atom/ns#","term":"FreeRTOS"}],"title":{"type":"text","$t":"Arduino ESP32 FreeRTOS 2: How to use Task Parameter - Task Priorities - Task Handle - Idle Task Hook"},"summary":{"type":"text","$t":"\n1. Introduction\n- In order to create a task in FreeRTOS, we use this API below. It has some parameters that we knew in Arduino ESP32 FreeRTOS 1. In this tutorial we will learn how to use other parameters: \"void *pvParameters\" and \"UBaseType_t uxPriority\" and \"TaskHandle_t *pxCreatedTask\"\nBaseType_t xTaskCreate( TaskFunction_t pvTaskCode,                        const char * const pcName,"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.iotsharing.com\/feeds\/6560747076453500346\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.blogger.com\/comment.g?blogID=7549705215513488945\u0026postID=6560747076453500346","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7549705215513488945\/posts\/default\/6560747076453500346"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7549705215513488945\/posts\/default\/6560747076453500346"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.iotsharing.com\/2017\/06\/arduino-esp32-freertos-how-to-use-task-param-task-priority-task-handle.html","title":"Arduino ESP32 FreeRTOS 2: How to use Task Parameter - Task Priorities - Task Handle - Idle Task Hook"}],"author":[{"name":{"$t":"iotsharing dotcom"},"uri":{"$t":"https:\/\/plus.google.com\/100068993027571899198"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh3.googleusercontent.com\/-k4dCJVaugDI\/AAAAAAAAAAI\/AAAAAAAAEAk\/Lvv-YTR2jgM\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/2.bp.blogspot.com\/-q52wqwqq5pk\/WT_qyWrR8_I\/AAAAAAAAEDA\/UwskhO6O_TMT0yLmCvTSXUq6_2iZKkTYwCEw\/s72-c\/esp32task_param.png","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-7549705215513488945.post-8423476916561747242"},"published":{"$t":"2017-05-20T00:47:00.002-07:00"},"updated":{"$t":"2017-06-16T20:35:42.456-07:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"ESP32"}],"title":{"type":"text","$t":"Demo 9: How to use mDNS to resolve host names to Arduino ESP32 IP addresses"},"summary":{"type":"text","$t":"\n1. Introduction\n\n- Just imagine the situation, there is a network and your ESP32 is in that network. Now you want to communicate with ESP32, so you need to know the IP address of ESP32. There are 3 ways (or more) to know the IP address of it:\n + Print or show the IP address of ESP32 on to Terminal, LCD, …\n + Use a Network Scanner application (Fing -  on Android and iOS) to detect the IP address "},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/www.iotsharing.com\/feeds\/8423476916561747242\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/www.blogger.com\/comment.g?blogID=7549705215513488945\u0026postID=8423476916561747242","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7549705215513488945\/posts\/default\/8423476916561747242"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/7549705215513488945\/posts\/default\/8423476916561747242"},{"rel":"alternate","type":"text/html","href":"http:\/\/www.iotsharing.com\/2017\/05\/how-to-use-mdns-to-resolve-hostname-esp32-ipaddress.html","title":"Demo 9: How to use mDNS to resolve host names to Arduino ESP32 IP addresses"}],"author":[{"name":{"$t":"iotsharing dotcom"},"uri":{"$t":"https:\/\/plus.google.com\/100068993027571899198"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh3.googleusercontent.com\/-k4dCJVaugDI\/AAAAAAAAAAI\/AAAAAAAAEAk\/Lvv-YTR2jgM\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"https:\/\/1.bp.blogspot.com\/-HzbgW7jJtBk\/WSAlp6VGrzI\/AAAAAAAAD4k\/ue-tjxqDzu8GU23JF8VKzJ0XYRF8CwZ4ACLcB\/s72-c\/internet15.png","height":"72","width":"72"},"thr$total":{"$t":"0"}}]}});